<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627319-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627319</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12285045</doc-number>
<date>20080929</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1307</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>46</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>718102</main-classification>
<further-classification>718100</further-classification>
</classification-national>
<invention-title id="d2e53">Method for scheduling executions of real-time processes with various timing constraints</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5640563</doc-number>
<kind>A</kind>
<name>Carmon</name>
<date>19970600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5742847</doc-number>
<kind>A</kind>
<name>Knoll et al.</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6438573</doc-number>
<kind>B1</kind>
<name>Nilsen</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718100</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>Miller, Gary, &#x201c;Riemann's Hypothesis and Tests for Primality&#x201d;, 1976, Journal of Computer and System Sciences, pp. 300-317.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>N.C. Audsley, et al, &#x201c;The end of the line for static cyclic scheduling?&#x201d; Proc. Fifth Euromicro Workshop on Real-Time Systems, 36-41, 1993.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>N.C. Audsley, et al, &#x201c;Putting fixed priority scheduling theory into engineering practice for safety critical applications&#x201d;, 2nd IEEE RTAS'96, Boston, Jun. 1996.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>N.C. Audsley et al, &#x201c;On fixed priority scheduling, offsets and co-prime task periods&#x201d;, Information processing letters, 67, 1998, p. 65-69.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>T. P.Baker, et al, &#x201c;The cyclic executive model and Ada,&#x201d; Journal of Real-Time Systems, vol. 1, p. 7-25, Jun. 1989.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>A. Burns, et al, &#x201c;Generating Feasible Cyclic Schedules&#x201d;, Control Engineering Practice, vol. 3, No. 2, 1995, p. 151-162.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>A. Burns, &#x201c;Preemptive priority-based scheduling: an appropriate engineering approach&#x201d;, in Advances in Real-Time Systems, Ed. By S. H. Son, Prentice Hall, 1995, p. 225-248.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>A. Burns, et al,&#x201c;Effective analysis for engineering real-time fixed priority schedulers,&#x201d; IEEE Trans. Software Eng., 21, 475-480, 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>R. Devillers, et al, &#x201c;General response time computation for the deadline driven scheduling of periodic tasks&#x201d;, Fundamenta Informaticae 34, 1999, p. 1-21.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>G. Fohler, &#x201c;Flexibility in Statically Scheduled Hard Real-Time Systems&#x201d;, Ph.D. thesis, Institute fur Technische Informatik, TUW, Austria, Apr. 1994, p. 1-101.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>G. Fohler, et al, &#x201c;Heuristic Scheduling for Distributed Hard Real-Time Systems&#x201d;, Research Report Dec. 1990, Institute fur Technische Informatik, TUW, Austria, 1990, p. 1-19.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>G. Fohler, &#x201c;Joint scheduling of distributed complex periodic and hard aperiodic tasks in statically scheduled systems&#x201d;, 16th IEEE RTSS'95, Dec. 1995, p. 152-161.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>R. Gerber, et al, &#x201c;Guaranteeing real-time requirements with resource-based calibration of periodic processes&#x201d;, IEEE Trans. on Software Eng. 21, 7, Jul. 1995, p. 579-592.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>J. Goossens, et al, &#x201c;The non-optimality of the monotonic priority assignments for hard real-time offset free systems&#x201d;, Real-Time Systems, vol. 13, 1997, p. 107-126.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>M. Iwasaki, et al, &#x201c;Isochronous Scheduling and its Application to Traffic Control&#x201d;, 19th IEEE Real-Time Systems Symposium, Dec. 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>K. Jeffay, et al, &#x201c;On non-preemptive scheduling of periodic and sporadic tasks&#x201d;, Proc. 12th IEEE Real-Time Systems Symposium (RTSS'91), 1991, p. 129-139.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>H. Kopetz, et al., &#x201c;Distributed fault tolerant real-time systems: the MARS approach&#x201d;, IEEE Micro, Feb. 1989, p. 25-40.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>E.L. Lawler, et al, &#x201c;Scheduling periodically occurring tasks on multiple processors&#x201d;, Information Processing Letters, 12, 1, 1981, p. 9-12.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>D. W. Leinbaugh, &#x201c;Guaranteed response time in a hard real-time environment,&#x201d; IEEE Trans. Software Eng., vol. SE-6, Jan. 1980, p. 85-91.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>J. Y.-T. Leung, et al, &#x201c;A note on preemptive scheduling of periodic, real-time tasks,&#x201d; Information Processing Letters, vol. 11, Nov. 1980.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>J. Y.-T Leung, et al, &#x201c;On the complexity of fixed-priority scheduling of periodic, real-time tasks&#x201d;, Performance Evaluation, 2, 1982, p. 115-118.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>M. A. Livani, et al, &#x201c;EDF consensus on CAN bus access for dynamic real-time applications&#x201d;, 19th IEEE RTSS'98, Dec. 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>C. D. Locke, &#x201c;Software architecture for hard real-time applications: cyclic executives vs. fixed priority executives,&#x201d; Real-Time Systems, 4, 37-53, 1992.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>G. Manimaran, et al, &#x201c;A new approach for scheduling of parallelizable tasks in real-time multiprocessor systems&#x201d;, Real-Time Systems, 15, 1998, p. 39-60.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>A. K. Mok, &#x201c;Fundamental Design Problems of Distributed Systems for the Hard-Real-Time Environment&#x201d;, Ph.D Thesis, MIT, Cambridge, Massachusetts, May 1983, p. 1-183.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>S. Poledna, et al, &#x201c;ERCOS: an operating system for automotive applications&#x201d;, SAE International Congress, Detroit, SAE Press, 1996, p. 1-11.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>J.A. Stankovic, et al, &#x201c;Deadline Scheduling for Real-Time Systems: EDF and Related Algorithms&#x201d;, Ch. 5, &#x201c;Planning-Based Scheduling&#x201d;, Kluwer, 1998, p. 87-120.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>A.D. Stoyenko, et al, &#x201c;Analyzing hard-real-time programs for guaranteed schedulability&#x201d;, IEEE Trans. On Software Eng., 17, 8, Aug. 1991, p. 737-750.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>J. K. Strosnider, et al, &#x201c;The deferrable server algorithm for enhanced aperiodic responsiveness in hard real-time environments,&#x201d; IEEE Trans. Computers, 44,1995, p. 73-91.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>A.J. Wellings, et al, &#x201c;Real-Time Scheduling in a Generic Fault-Tolerant Architecture&#x201d;, Proc. IEEE Real-Time Systems Symposium (RTSS'98), Dec. 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>W. Zhao, et al, &#x201c;Scheduling tasks with resource requirements in hard real-time systems,&#x201d; IEEE Trans. on Software Engineering, vol. SE-13, May 1987.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>2</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>30</number-of-drawing-sheets>
<number-of-figures>37</number-of-figures>
</figures>
<us-related-documents>
<division>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11341713</doc-number>
<date>20060130</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7444638</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12285045</doc-number>
</document-id>
</child-doc>
</relation>
</division>
<division>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09336990</doc-number>
<date>19990621</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7165252</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>11341713</doc-number>
</document-id>
</child-doc>
</relation>
</division>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Xu</last-name>
<first-name>Jia</first-name>
<address>
<city>Toronto</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Xu</last-name>
<first-name>Jia</first-name>
<address>
<city>Toronto</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<examiners>
<primary-examiner>
<last-name>Tang</last-name>
<first-name>Kenneth</first-name>
<department>2199</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system and methods for scheduling executions of real-time processes, including periodic processes and asynchronous processes to guarantee satisfaction of various timing constraints. The system schedules their executions in two phases: a pre-run-time (off-line) phase performed by a pre-run-time scheduler, and a run-time (on-line) phase performed by a run-time scheduler.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="139.95mm" wi="211.92mm" file="US08627319-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="246.80mm" wi="120.31mm" orientation="landscape" file="US08627319-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="245.11mm" wi="152.99mm" orientation="landscape" file="US08627319-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="238.25mm" wi="101.18mm" orientation="landscape" file="US08627319-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="236.73mm" wi="134.11mm" orientation="landscape" file="US08627319-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="249.43mm" wi="150.11mm" orientation="landscape" file="US08627319-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="238.34mm" wi="134.11mm" orientation="landscape" file="US08627319-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="246.55mm" wi="152.99mm" orientation="landscape" file="US08627319-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.09mm" wi="103.97mm" orientation="landscape" file="US08627319-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="237.57mm" wi="143.76mm" orientation="landscape" file="US08627319-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="235.63mm" wi="159.60mm" orientation="landscape" file="US08627319-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="236.73mm" wi="103.12mm" orientation="landscape" file="US08627319-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="245.96mm" wi="104.65mm" orientation="landscape" file="US08627319-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="248.16mm" wi="153.92mm" orientation="landscape" file="US08627319-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="258.23mm" wi="167.64mm" orientation="landscape" file="US08627319-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="223.52mm" wi="106.51mm" orientation="landscape" file="US08627319-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="214.21mm" wi="105.83mm" orientation="landscape" file="US08627319-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="210.99mm" wi="88.65mm" orientation="landscape" file="US08627319-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="277.20mm" wi="218.02mm" orientation="landscape" file="US08627319-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="239.35mm" wi="104.82mm" orientation="landscape" file="US08627319-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="254.51mm" wi="174.16mm" file="US08627319-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="258.74mm" wi="180.42mm" orientation="landscape" file="US08627319-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="247.57mm" wi="115.23mm" orientation="landscape" file="US08627319-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="242.40mm" wi="106.17mm" orientation="landscape" file="US08627319-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="217.34mm" wi="161.46mm" orientation="landscape" file="US08627319-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="244.26mm" wi="183.39mm" file="US08627319-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="232.41mm" wi="163.49mm" file="US08627319-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="219.37mm" wi="131.57mm" file="US08627319-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="239.86mm" wi="176.02mm" file="US08627319-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="227.41mm" wi="162.14mm" file="US08627319-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="242.23mm" wi="191.09mm" file="US08627319-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a division of prior application Ser. No. 11/341,713, filed Jan. 30, 2006 now U.S. Pat. No. 7,444,638, which is a division of prior application Ser. No. 09/336,990, filed Jun. 21, 1999, now U.S. Pat. No. 7,165,252 B1.</p>
<p id="p-0003" num="0002">Prior application Ser. No. 11/341,713, filed Jan. 30, 2006, and prior application Ser. No. 09/336,990, filed Jun. 21, 1999, now U.S. Pat. No. 7,165,252 B1, are hereby incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FEDERALLY SPONSORED RESEARCH</heading>
<p id="p-0004" num="0003">Not Applicable</p>
<heading id="h-0003" level="1">NAMES OF PARTIES TO A JOINT RESEARCH AGREEMENT</heading>
<p id="p-0005" num="0004">Not Applicable</p>
<heading id="h-0004" level="1">SEQUENCE LISTING OR PROGRAM</heading>
<p id="p-0006" num="0005">Not Applicable</p>
<heading id="h-0005" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0007" num="0006">This invention relates to the field of scheduling methods such as scheduling of processes carried out by computer or other systems, and in particular to improved methods of scheduling execution of various types of processes with various types of timing properties and constraints.</p>
<heading id="h-0006" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0008" num="0007">In operation of a computer system, executions of certain periodically or asynchronously occurring real-time processes must be guaranteed to be completed before specified deadlines, and in addition satisfying various constraints and dependencies, such as release times, offsets, precedence relations, and exclusion relations.</p>
<p id="p-0009" num="0008">Embedded, real-time systems with high assurance requirements often must execute many different types of processes with complex timing and other constraints. Some of the processes may be periodic and some of them may be asynchronous. Some of the processes may have hard deadlines and some of them may have soft deadlines. For some of the processes, especially the hard real-time processes, complete knowledge about their characteristics can and must be acquired before run-time. For other processes, a prior knowledge of their worst case computation time and their data requirements may not be known.</p>
<p id="p-0010" num="0009">Some processes may have complex constraints and dependencies between them. For example, a process may need to input data that are produced by other processes. In this case, a process may not be able to start before those other processes are completed. Such constraints are referred to herein as precedence relations.</p>
<p id="p-0011" num="0010">Exclusion relations may exist between processes when some processes must prevent simultaneous access to shared resources such as data and I/O devices by other processes. For some periodic processes, they may not be able to start immediately at the beginning of their periods. In this case, those processes have release time constraints. For some periodic processes, the beginning of their first period may not start immediately from time zero, that is, the system start time. In this case, those processes have offset constraints.</p>
<p id="p-0012" num="0011">Examples of such systems include plant control systems, aviation control systems, air traffic control systems, satellite control systems, communication systems, multimedia systems, on-line financial service systems, various embedded systems such as for automotive applications, etc.</p>
<p id="p-0013" num="0012">Previous systems and methods related to scheduling executions of real-time processes can be broadly divided into two categories:</p>
<p id="p-0014" num="0013">(a) systems and methods in which determination of the execution schedule of all the processes is done entirely at run-time (on-line); and</p>
<p id="p-0015" num="0014">(b) systems and methods in which determination of the execution schedule of the majority of the processes is done before run-time (off-line).</p>
<p id="p-0016" num="0015">The vast majority of systems and methods related to scheduling executions of real-time processes belong to the first category above. The article &#x201c;Scheduling Algorithms For Multiprogramming in a Hard-Real-Time Environment&#x201d;, by C. L. Liu, and J. W. Layland, J. ACM, 20, 46-61, 1973 is the best known representative of the priority scheduling approach. It assumes that all processes are periodic, and that the major characteristics of the processes are known before run-time, that is, the worst case execution times and period are known in advance. Fixed priorities are assigned to processes according to their periods; the shorter the period, the higher the priority. At any time, the process with the highest priority among all processes ready to run, is assigned the processor.</p>
<p id="p-0017" num="0016">A schedulability analysis is performed before run-time based on the known process characteristics. If certain equations are satisfied, the actual scheduling is performed during run-time, and it can be assumed that all the deadlines will be met at run-time.</p>
<p id="p-0018" num="0017">The article &#x201c;Priority Ceiling Protocols: An Approach to Real-Time Synchronization&#x201d;, by L. Sha, R. Rajkumar, and J. P. Lehoczky IEEE Trans. On Computers&#x201d;, 39, 1175-1185, 1990, makes the same assumptions as the Liu et al article, except that in addition, processes may have critical sections guarded by semaphores, and a protocol is provided for handling them. Similar to Rate Monotonic Scheduling, a schedulability analysis is performed before run-time based on the known process characteristics; if certain equations are satisfied, the actual scheduling is performed during run-time, and it can be assumed that all the deadlines will be met at run-time.</p>
<p id="p-0019" num="0018">Variations on the above basic scheme have been proposed, as surveyed by C. J. Fidge in the article &#x201c;Real-Time Schedulability Tests For Preemptive Multitasking&#x201d;, published in Real-Time Systems, vol 14, pp. 61-93, January 1998.</p>
<p id="p-0020" num="0019">Commercial real-time operating systems perform all scheduling activities at run-time, during which at each point in time, the process with the highest priority is selected for execution.</p>
<p id="p-0021" num="0020">Systems and methods that perform all scheduling activities at run-time, have the following disadvantages:</p>
<p id="p-0022" num="0021">(a) High run-time overhead due to scheduling and context switching;</p>
<p id="p-0023" num="0022">(b) Difficulty in analyzing and predicting the run-time behavior of the system;</p>
<p id="p-0024" num="0023">(c) Difficulty in handling various application constraints and process dependencies;</p>
<p id="p-0025" num="0024">(d) Low processor utilization.</p>
<p id="p-0026" num="0025">High run-time overhead is partly due to the fact that embedded, real-time applications are becoming more and more complex, with an ever increasing number of processes and additional constraints and dependencies between processes. The amount of run-time resources consumed by the scheduler in order to compute the schedule, grows very rapidly as the number of processes and constraints increase. The scheduler often needs to perform many time consuming process management functions, such as suspending and activating processes, manipulating process queues, etc. In addition, since the priority scheduler does not know the schedule before run-time, it has to assume the worst case and save/restore complete contexts each time a process is preempted by another process.</p>
<p id="p-0027" num="0026">Performing all the scheduling at run-time requires the use of complex run-time mechanisms in order to achieve process synchronization and prevent, simultaneous access to shared resources. The run-time behavior of the scheduler can be very difficult to analyze and predict accurately.</p>
<p id="p-0028" num="0027">For example, in one published study, fixed priority scheduling was implemented using priority queues, where tasks are moved between queues by a scheduler that was released at regular intervals by a timer interrupt. It was observed that because the clock interrupt handler had a priority greater than any application task, even a high priority task could suffer long delays while lower priority tasks are moved from one queue to another. Accurately predicting the scheduler overhead proved to be a very complicated task, and the estimated scheduler overhead was substantial, even though it was assumed that the system had a total of only 20 tasks, tasks did not have critical sections, and priorities are not to change. Such difficulties would be many times greater if there existed additional complex application constraints that would have to be satisfied by the synchronization mechanism at run-time.</p>
<p id="p-0029" num="0028">The original schedulability analysis given in the aforenoted paper describing the PCP protocol by Sha et. al. above, assumed that all tasks are independent tasks, that there are no precedence relations, that their release times are equal to the beginning of their periods, and all periods have a common start time. It is difficult to extend the schedulability analysis for priority scheduling to take into account application constraints that frequently exist in real-time applications, such as precedence constraints, release times that are not equal to the beginning of their periods, offsets, low jitter requirements (limits on the variation in time a computed result is output to the external environment from cycle to cycle), etc. Despite considerable effort spanning more than a decade to extend the original PCP protocol to handle additional constraints, not much has been accomplished to this end, as evidenced by the absence of methods that can satisfactorily deal with such constraints in the survey by Fidge mentioned above.</p>
<p id="p-0030" num="0029">Additional application constraints increase the computational complexity of scheduling problems, which already have high computational complexity whenever processes contain critical sections. When all the scheduling is performed at run-time, the scheduler does not have enough time to find solutions for complex problems. Most systems and methods that perform all scheduling at run-time, schedule processes according to process priorities assigned by the user. However, additional application constraints are most likely to conflict with the user assigned priorities. It is not generally possible to map the many different execution orderings of processes that are required by the different application constraints in a large complex system onto a rigid hierarchy of priorities.</p>
<p id="p-0031" num="0030">It has been suggested that higher priorities be assigned to processes with: shorter periods, higher criticality, lower jitter requirements, precedence constraints, etc. Consequently, the system designer is faced with the impossible task of trying to simultaneously satisfy many different application constraints with one rigid hierarchy of priorities. Because of the inherent constraints built into the fixed priority scheduling model, (e.g. fixed priorities) and because scheduling is performed at run-time, attempts to take into account additional constraints typically result in suggestions that either are only applicable to a few very special cases, or make drastically simplifying assumptions, which significantly reduce schedulability, or are extremely complicated, making the run-time behavior of the system very difficult to analyze and predict.</p>
<p id="p-0032" num="0031">In general, systems and methods that perform all scheduling activities at run-time achieve lower processor utilization than systems and methods that schedule processes before run-time. This is largely due to the fact that when all scheduling activities are performed at run-time, the scheduler does not have enough time to find good solutions to complex scheduling problems, and can only afford to use crude, suboptimal methods that do not take into account all the available information.</p>
<p id="p-0033" num="0032">Systems that use priority scheduling methods have a much smaller chance of satisfying timing constraints, because priority-driven methods are only capable of producing a very limited subset of the possible schedules for a given set of processes. This severely restricts the capability of priority-driven systems and methods to satisfy timing and resource sharing constraints at run-time.</p>
<p id="p-0034" num="0033">In general, the smaller the set of schedules that can be produced by a scheduling system or method, the smaller the chances are of finding a feasible schedule, and, the lower the level of processor utilization that can be achieved. With systems that use optimal methods that compute the schedule off-line, it is possible to achieve higher levels of resource utilization than those achievable by priority-driven systems. Hence, using priority-driven systems may increase the cost of the system to non-competitive levels.</p>
<p id="p-0035" num="0034">When processes are scheduled at run-time, the scheduling strategy must avoid deadlocks. In general, deadlock avoidance at run-time requires that the run-time synchronization mechanism be conservative, resulting in situations where a process is blocked by the run-time synchronization mechanism, even though it could have proceeded without causing deadlock. This reduces further the level of processor utilization.</p>
<p id="p-0036" num="0035">In contrast to conventional approaches where most of the processes are scheduled at run-time, with pre-run-time scheduling the schedule for most of the processes is computed off-line; this approach requires that the major characteristics of the processes in the system be known, or bounded, in advance. It is known that it is possible to use pre-run-time scheduling to schedule periodic processes. One possible technique consists of computing off-line a schedule for the entire set of periodic processes occurring within a time period that is equal to the least common multiple of the periods of the given set of processes, then at run-time executing the periodic processes in accordance with the previously computed schedule.</p>
<p id="p-0037" num="0036">In pre-run-time scheduling, several alternative schedules may be computed off-line for a given time period, each such schedule corresponding to a different &#x201c;mode&#x201d; of operation. A small run-time scheduler can be used to select among the alternative schedules in response to external or internal events. This small run-time scheduler can also be used to allocate resources for asynchronous processes that have not been converted into periodic processes.</p>
<p id="p-0038" num="0037">It is possible to translate an asynchronous process into an equivalent periodic process, if the minimum time between two consecutive requests is known in advance, and the deadline is not too short. Thus it is also possible to schedule such asynchronous processes using pre-run-time scheduling. See &#x201c;The Design of Real-Time Programming Systems Based On Process Models&#x201d;, Proc. 1984 IEEE Real-time systems Symposium, 5-17, 1984.</p>
<p id="p-0039" num="0038">Systems and methods that perform scheduling before run-time, have the following advantages:</p>
<p id="p-0040" num="0039">(a) ability to effectively handle complex constraints and dependencies;</p>
<p id="p-0041" num="0040">(b) lower run-time overhead;</p>
<p id="p-0042" num="0041">(c) higher processor utilization; and</p>
<p id="p-0043" num="0042">(d) ease of predicting the system's behaviour.</p>
<p id="p-0044" num="0043">In the majority of real-time applications, the bulk of the processing is performed by periodic processes for which the major characteristics of the processes, including offsets, release times, worst-case execution times, deadlines, precedence and exclusion relations, and any other constraints, are known before run-time. For asynchronous processes, generally their worst-case computation times, deadlines, and the minimum time between two consecutive requests (interarrival times) are known in advance. Asynchronous processes normally are few in number, and often can be converted into new periodic processes that can be used to service the corresponding asynchronous process requests in a manner similar to polling. Thus it is not only possible, but highly desirable to schedule all the periodic processes, including the new periodic processes that are converted from some of the asynchronous processes, before run-time, rather than scheduling them at run-time.</p>
<p id="p-0045" num="0044">For the processes whose characteristics are known before run-time, such as periodic processes, one may realize important advantages if the schedule is computed before run-time, instead of waiting until run-time to schedule them. This is because when scheduling is done before run-time, there is almost no limit on the running time of the scheduler, optimal scheduling methods can be used to maximize the possibility of finding a feasible schedule for the set of processes to be scheduled and to handle complex constraints and dependencies. In contrast, when processes are scheduled at run-time, the time available to the scheduler is very limited. This limits the ability of the scheduler to find a feasible schedule and to take into account the different types of constraints and knowledge about the system processes. Once the schedule for the periodic processes has been defined before run-time, the run-time scheduler can also use this information to schedule asynchronous processes more efficiently.</p>
<p id="p-0046" num="0045">Other reasons for performing scheduling before run-time include: this greatly reduces the run-time resource requirements needed for scheduling and context switching. With pre-run-time scheduling, it is possible to avoid using sophisticated run-time synchronization mechanisms by directly defining precedence relations and exclusion relations on pairs of process segments to achieve process synchronization and prevent simultaneous access to shared resources. Because the schedule is known in advance, automatic code optimization is possible; one can determine in advance the minimum amount of information that needs to be saved and restored, and one can switch processor execution from one process to another process through very simple mechanisms such as procedure calls, or simply by concatenating code when no context needs to be saved or restored, which greatly reduces the amount of run-time overhead.</p>
<p id="p-0047" num="0046">When the use of sophisticated run-time synchronization mechanisms is avoided, the benefits are multi-fold: not only is the amount of run-time overhead reduced, but it is also much easier to analyze and predict the run-time behavior of the system. Compared with the complex schedulability analysis required when run-time synchronization mechanisms are used, it is much more straightforward to verify that all processes will meet their deadlines and that all the additional application constraints will be satisfied in an off-line computed schedule.</p>
<p id="p-0048" num="0047">In recent years, there has been an increased interest in systems and methods for the purpose of automating the process of pre-run-time scheduling, as described in the article by S. R. Faulk and D. L. Parnas &#x201c;On Synchronization in Hard-Real-time Systems&#x201d;, Commun. ACM vol 31, pp. 274-287, March, 1988. Cyclic executives, a form of pre-run-time scheduling, have been used in safety critical systems, e.g. as described by G. D. Carlow in the article &#x201c;Architecture of the Space Shuttle Primary Avionics Software System&#x201d;, Commun. ACM, September 1984. However, in the past, cyclic executives have mainly been constructed by hand, and are difficult to construct and maintain. In the aforenoted article by A. K. Mok, a technique for transforming an asynchronous process into an equivalent periodic process was introduced. Methods for solving the problem of scheduling processes with release times, deadlines, exclusion and precedence relations are given in the article by J. Xu and D. Parnas in the articles &#x201c;Scheduling Processes with Release Times, Deadlines, Precedence and Exclusion Relations&#x201d;, IEEE Trans. on Software Engineering, vol 16, pp 360-369, March 1990, by J. Xu and D. L. Parnas in &#x201c;Pre-run-time Scheduling of Processes with Exclusion Relations on Nested or Overlapping Critical Sections&#x201d;, Proc. Eleventh Annual IEEE International Phoenix Conference on Computers and Communications, IPCCC-92, Scottsdale, Ariz., Apr. 1-3, 1992, by J. Xu in &#x201c;Multiprocessor Scheduling of Processes with Release Times, deadlines, Precedence and Exclusion Relations&#x201d;, IEEE Trans. on Software Engineering, vol 19, pp 139-154, February 1993, and by J. Xu and D. L. Parnas in &#x201c;On Satisfying Timing Constraints in Hard-Real-Time Systems&#x201d;, IEEE Trans. on Software Engineering, vol 19, pp 1-17, January 1993, which are incorporated herein by reference.</p>
<p id="p-0049" num="0048">However, until now, unsolved problems have been main obstacles to fully automating the process of constructing scheduling systems that combine the pre-run-time scheduling of periodic processes with the run-time scheduling of asynchronous processes, as follows:</p>
<p id="p-0050" num="0049">(1) Previously there did not exist any system or method that integrates the run-time scheduling of asynchronous processes with the pre-run-time scheduling of periodic processes, that could effectively satisfy exclusion relations, precedence relations, offsets and release times constraints between the periodic processes, as well as any exclusion relation between a periodic process and an asynchronous process, and any exclusion relation between two asynchronous processes, while making efficient use of available processor capacity, and maximizing the chances of satisfying all the timing constraints.</p>
<p id="p-0051" num="0050">Previous systems and methods for scheduling periodic processes and asynchronous processes, either perform all the scheduling activities at run-time, or assume that any process can be preempted by any other process at any time (no exclusion relations can be enforced, so one cannot prevent certain data inconsistencies that are caused by more than one process simultaneously accessing shared data), or assume that all aperiodic processes have soft deadlines, or assume that all processes are non-preemptable, which reduces the system's flexibility in meeting deadlines, or use ad hoc schemes that do not make efficient use of available processor capacity, and reduce the chances of satisfying all the timing constraints. Examples of such systems and methods are described in the articles &#x201c;A Reservation-based Algorithm for Scheduling Both Periodic and Aperiodic Real-time Tasks&#x201d;, by K. G. Shin and Y. C. Chang, IEEE Trans. on Computers, vol 44, pp. 1405-1419, December 1995, &#x201c;An Optimal Algorithm For Scheduling Soft Aperiodic Tasks in Dynamic-Priority Preemptive Systems&#x201d;, by I. Ripoli, A. Crespo and A. Garcia-Formes, IEEE Trans. on Software Eng., vol 23, pp. 388-400, June 1997, and &#x201c;The Deferrable Server Algorithm For Enhanced Apriodic Responsiveness in Hard Real-Time Environments&#x201d;, IEEE Trans. on Computers, vol 44, pp. 73-91, January 1995.</p>
<p id="p-0052" num="0051">(2) Previously there did not exist any system or method for systematically adjusting the period lengths of periodic processes, such that the adjusted period lengths are sufficiently close to the original period lengths, to satisfy the processor utilization level required by the application, and maximize the chances of finding a feasible schedule, while at the same time ensuring that the adjusted period lengths are as closely harmonically related to each other (having a smaller LCM value) as possible, in order to reduce the schedule length and the number of instances of new processes, and reduce storage requirements and system overhead.</p>
<p id="p-0053" num="0052">Previous systems and methods use ad hoc methods that do not make the most efficient use of available processor capacity. For example, in cyclic executives, each periodic application task is required to complete within a fixed size frame, which is of the same size for all periodic application tasks. Such arbitrary constraints seriously restrict the system's ability to meet complex timing constraints.</p>
<p id="p-0054" num="0053">(3) Previously there did not exist any system or method for systematically determining which asynchronous processes should be converted into new periodic processes, and which asynchronous processes should remain asynchronous, based on whether the ratio of the processor capacity that needs to be reserved for the new periodic process, to the processor capacity that needs to be reserved for the asynchronous process if unconverted, exceeds a specified threshold.</p>
<p id="p-0055" num="0054">Another embodiment of the present invention provides a system and methods for systematically adjusting the period lengths of periodic processes, such that the adjusted period lengths are sufficiently close to the original period lengths, to satisfy the processor utilization level required by the application, and maximize the chances of finding a feasible schedule, while at the same time ensuring that the adjusted period lengths are as closely harmonically related to each other (having a smaller LCM value) as possible, in order to reduce the schedule length and the number of instances of new processes, and reduce storage requirements and system overhead.</p>
<p id="p-0056" num="0055">There are certain asynchronous processes that cannot be converted into periodic processes at all, or if converted, may take up far too much processor capacity compared with allowing them to remain asynchronous. For example, an asynchronous process with a very short deadline, a short worst-case execution time, and with long interarrival times, could require that a overly high proportion, sometimes even exceeding one hundred percent, of the processor's capacity be reserved for that one single process if that process is converted into a periodic process for which it is guaranteed to meet it's deadline. But that same process, may require far less processor capacity be reserved for it, if it was not converted into a periodic process, and scheduled for execution at run-time as soon as it arrives in the system.</p>
<p id="p-0057" num="0056">Previous systems and methods either indiscriminately schedule every asynchronous process at run-time as soon as it arrives in the system, or indiscriminately try to convert every asynchronous process into a periodic process; or rely on ad hoc rules of thumb.</p>
<p id="p-0058" num="0057">(4) Previously there did not exist any system or method for systematically converting a given set of asynchronous processes into a set of new periodic processes that could make the most efficient use of available processor capacity, and maximize the chances of satisfying all the timing constraints.</p>
<p id="p-0059" num="0058">In the aforenoted article by A. K. Mok, a technique for converting one single asynchronous process into a periodic process was described. However, the technique described in the Mok article did not consider the case of non-zero offsets, that is, non-zero intervals between time 0, that is, the system start time, and the beginning of their first periods. If only zero offsets are allowed, the chances of satisfying all the given timing constraints is decreased considerably. Furthermore, the described technique only deals with one process. When more than one process must be converted into periodic processes, the new periodic processes may have timing conflicts with each other and with the original set of asynchronous and periodic processes. For example, a direct application of the above technique might result in more than one periodic process each having a release time of zero and a deadline equal to the computation time.</p>
<p id="p-0060" num="0059">Previous systems and methods use ad hoc methods that do not make the most efficient use of available processor capacity. For example, in cyclic executives, each periodic application task is required to complete within a fixed size frame, which is of the same size for all periodic application tasks. Such arbitrary constraints seriously restrict the system's ability to meet complex timing constraints.</p>
<heading id="h-0007" level="1">BRIEF SUMMARY OF THE INVENTION</heading>
<p id="p-0061" num="0060">An embodiment of the present invention provides a system and method in which pre-run-time scheduling techniques are combined with run-time scheduling techniques, where pre-run-time scheduling is used for scheduling the executions of periodic processes, including new periodic processes converted from a subset of the asynchronous processes, in order to satisfy complex relations and constraints such as exclusion relations, precedence relations, and offset constraints, release time constraints defined on the periodic processes, and any exclusion relation between a periodic process and an asynchronous process, and any exclusion relation between two asynchronous processes, and deadline constraints of all periodic processes, while run-time scheduling is used to schedule a subset of the asynchronous processes that would have consumed too much processor capacity if converted into periodic processes, so that efficient use is made of available processor capacity, and the chances of satisfying all the timing constraints of all processes is increased as much as possible.</p>
<p id="p-0062" num="0061">In accordance with another embodiment, a pre-run-time scheduler may use existing methods that statically schedules a set of processes (including manual methods to satisfy any special requirements if necessary), to construct a feasible pre-run-time schedule in which processor capacity is reserved in the form of time slots in the pre-run-time schedule for each periodic process. The time slot for each periodic process also includes &#x201c;room&#x201d; for the execution of asynchronous processes that have less latitude than that periodic process in meeting their respective deadlines, to allow such asynchronous processes to preempt the execution of that periodic process at run-time. The pre-run-time scheduler adjusts the lengths of the periods using specified parameters which control the balance between the utilization level and the length of the pre-run-time schedule. The pre-run-time scheduler is able to schedule periodic processes that have offsets, i.e., intervals between the start of a periodic process' first period and time zero, that is, the system's start time, and is able to take advantage of any flexibility in periodic process offsets to increase schedulability. The pre-run-time scheduler thereby is able to guarantee that every periodic process will always be able to meet its deadline, while providing good response times for asynchronous processes, without requiring any change in the methods used in any of the other parts, steps or embodiments of the present invention. The system and methods have the flexibility to employ sophisticated static scheduling methods to satisfy complex relations and constraints, such as exclusion relations, precedence relations, offsets and release times defined on the periodic processes, and also have the flexibility to incorporate and take advantage of any future new static scheduling method for satisfying any additional desired constraints among the most important and numerous type of processes in real-time applications, the periodic processes, while making efficient use of available processor capacity, and increasing as much as possible the chances of satisfying the timing constraints all the processes. Thus the present invention is able to satisfy more complex application constraints and achieve higher chances of satisfying complex application constraints on periodic processes than previous systems and methods.</p>
<p id="p-0063" num="0062">In accordance with an embodiment of the invention, a run-time scheduler uses the information about the beginning times and end times of the time slots reserved for the execution of periodic processes (including those new periodic processes that were converted from asynchronous processes) in the pre-run-time schedule, as well as the a priori knowledge of the processes characteristics, to make more informed decisions and satisfy any exclusion relation between a periodic process and an asynchronous process, and any exclusion relation between two asynchronous processes, while making efficient use of available processor capacity, and achieving higher chances of satisfying all the timing constraints of the periodic processes, when scheduling the execution of asynchronous processes. For example, an embodiment of the present invention makes it possible to completely avoid blocking of a periodic process with a shorter deadline by an asynchronous process with a longer deadline, thus achieving higher schedulability of periodic processes than previous systems and methods that schedule all processes at run-time.</p>
<p id="p-0064" num="0063">In accordance with another embodiment, a run-time scheduler can use the information about the beginning times and end times of the time slots reserved for the execution of periodic processes (including those new periodic processes that were converted from asynchronous processes) in the pre-run-time schedule, as well as the a priori knowledge of the processes characteristics. A significant portion of the parameters used by the asynchronous process scheduler to make scheduling decisions are known before run-time so it is possible to pre-compute major portions of the conditions that are used for decision making. Hence the amount of computation that needs to be performed for scheduling purposes at run-time can be minimized, while making efficient use of available processor capacity, and increasing as much as possible the chances of satisfying all the timing constraints of the asynchronous processes. For example, an embodiment of the present invention makes it possible to create before run-time, a table of &#x201c;safe starting time intervals&#x201d; for each asynchronous process, and achieve lower run-time overhead than previous systems and methods by allowing the asynchronous processes to be scheduled by simple table lookup.</p>
<p id="p-0065" num="0064">In accordance with another embodiment of the invention, bounds on the worst-case response times of asynchronous processes are computed, that are more accurate (tighter) than that achievable with previous systems and methods, by using a simulation procedure that takes into account the beginning times and end times of the time slots reserved for the execution of periodic processes including those new periodic processes that were converted from asynchronous processes) in the pre-run-time schedule, as well as the a priori knowledge of the processes characteristics, when simulating all possible worst-case scenarios of the executions of each asynchronous process.</p>
<p id="p-0066" num="0065">In accordance with another embodiment, a system and methods can schedule the executions of both periodic and asynchronous real-time processes with hard or soft deadlines, with different a priori knowledge of the process characteristics, and with constraints and dependencies, such as offsets, release times, precedence relations, and exclusion relations. This exploits to a maximum extent any knowledge about processes' characteristics that are available to the scheduler both before run-time and during run-time, so that processor capacity is used to satisfy the constraints and dependencies of periodic and asynchronous processes with hard deadline process as a first priority. Then any remaining processor capacity is used to guarantee that processes with soft deadlines and known characteristics will also be completed before pre-determined time limits as a second priority. Then any remaining processor capacity is used to execute any asynchronous process with unknown characteristics on a &#x201c;best-effort&#x201d; basis.</p>
<p id="p-0067" num="0066">In accordance with another embodiment, a system and methods schedule the executions of both periodic and asynchronous real-time processes with hard or soft deadlines, with different a priori knowledge of the process characteristics, and with constraints and dependencies, such as offsets, release times, precedence relations, and exclusion relations. This exploits to a maximum extent any knowledge about processes' characteristics that are available to the scheduler both before run-time and during run-time, in order to:</p>
<p id="p-0068" num="0067">(a) effectively handle complex application constraints and dependencies between the real-time processes;</p>
<p id="p-0069" num="0068">(b) minimize run-time overhead;</p>
<p id="p-0070" num="0069">(c) make the most efficient use of available processor capacity;</p>
<p id="p-0071" num="0070">(d) maximize the chances of satisfying all the timing constraints;</p>
<p id="p-0072" num="0071">(e) provide firm and tight response time guarantees for all the processes whose characteristics are known before run-time; and</p>
<p id="p-0073" num="0072">(f) make it easier to verify that all timing constraints and dependencies will always be satisfied.</p>
<p id="p-0074" num="0073">Thus the present invention is able to schedule a wider variety of processes with a wider variety of constraints compared with previous systems and methods.</p>
<p id="p-0075" num="0074">In accordance with another embodiment, which asynchronous processes should be converted into new periodic processes, and which asynchronous processes should remain asynchronous, is automatically determined. This is based on whether the ratio of the processor capacity that needs to be reserved for the new periodic process, to the processor capacity that needs to be reserved for the asynchronous process if unconverted, exceeds a specified threshold.</p>
<p id="p-0076" num="0075">An embodiment of the invention systematically converts a given set of asynchronous processes into a set of new periodic processes that could make the most efficient use of available processor capacity, and increase as much as possible the chances of satisfying all the timing constraints.</p>
<p id="p-0077" num="0076">All of the above can be achieved while the process of constructing scheduling systems that combine pre-run-time scheduling with run-time scheduling of periodic and asynchronous processes is fully automated, while the most efficient use of available processor capacity is achieved, the chances of satisfying all the timing constraints is increased as much as possible. Thus the present invention can achieve a much higher degree of automation, and substantially reduce the cost of designing the system and of making changes to the systems to meet new requirements, reduce the chances of errors, as compared with previous systems and methods that schedule processes before run-time.</p>
<p id="p-0078" num="0077">An embodiment of the present invention provides a system and methods for scheduling execution of both periodic and asynchronous real-time processes with hard or soft deadlines, with different a priori knowledge of the process characteristics, such that complex relations and constraints, such as exclusion relations, precedence relations, offset constraints and release time constraints defined on the hard deadline periodic processes, and any exclusion relation between a hard deadline periodic process and a hard deadline asynchronous process, and any exclusion relation between two hard deadline asynchronous processes, and deadline constraints of all hard deadline processes, will be satisfied.</p>
<p id="p-0079" num="0078">An embodiment of the present invention integrates pre-run-time scheduling with run-time scheduling to guarantee that the executions of the processes will satisfy all the specified relations and constraints. Whenever a new set of processes arrives in the system, the system schedules their executions in two phases: a pre-run-time (off-line) phase performed by a pre-run-time scheduler, and a run-time (on-line) phase performed by a run-time scheduler.</p>
<p id="p-0080" num="0079">In accordance with an embodiment of the invention, in each pre-run-time phase, the pre-run-time scheduler executes five steps, as follows:</p>
<p id="p-0081" num="0080">In Step 1, the pre-run-time scheduler divides asynchronous processes with hard deadlines and known characteristics, referred to herein as A-h-k processes, into two subsets. One subset of asynchronous processes, referred to herein as A-h-k-p processes, are converted into new periodic processes by the pre-run-time scheduler before run-time. When the pre-run-time scheduler converts an asynchronous process into a new periodic process, it prevents possible timing conflicts with other periodic and asynchronous processes, by reserving enough &#x201c;room&#x201d; (time) prior to each new periodic process's deadline, to accommodate the computation times of all the periodic and asynchronous processes that have less latitude in meeting their deadlines, to allow such processes to preempt that new periodic process if possible at run-time. The processes in the other subset of asynchronous processes, referred to herein as A-h-k-a, remain asynchronous and are scheduled by the run-time scheduler at run-time. The pre-run-time scheduler reserves processor capacity for A-h-k-a processes by adding the computation time of each A-h-k-a process to the computation time of every periodic process that has a greater latitude in meeting its deadline than that A-h-k-a process, to allow each A-h-k-a process to preempt the execution of any such periodic process if possible at run-time.</p>
<p id="p-0082" num="0081">Whether each asynchronous process is converted into a new periodic process or not, is determined based on whether the ratio of the processor capacity that needs to be reserved for the new periodic process, to the processor capacity that needs to be reserved for the asynchronous process if unconverted, exceeds a specified threshold.</p>
<p id="p-0083" num="0082">In Step 2, the pre-run-time scheduler determines the schedulability of the set of all periodic processes with hard deadlines and known characteristics, referred to herein as P-h-k processes, which also include the new periodic processes converted from A-h-k-p processes. The pre-run-time scheduler constructs a pre-run-time schedule in which one or more time slots are reserved for the execution of every P-h-k process, including every new P-h-k process converted from an A-h-k-p process. The time slots reserved for each P-h-k process also include time reserved for the executions of all A-h-k-a processes that have less latitude in meeting their deadlines than that P-h-k process, and which may preempt the execution of that P-h-k process. The pre-run-time scheduler adjusts the lengths of the periods using for example user or otherwise specified parameters which control the balance between the utilization level and the length of the pre-run-time schedule.</p>
<p id="p-0084" num="0083">The pre-run-time scheduler is able to schedule periodic processes that have offsets, i.e., intervals between the start of a periodic process' first period and time zero. The pre-run-time scheduler takes advantage of any flexibility in periodic process offsets to increase schedulability. An embodiment of the present invention preferably allows the pre-run-time scheduler to use existing methods (including manual methods) which statically schedule set of processes, to construct the pre-run-time schedule of periodic processes in Step 2 and in Step 4 (to be described below), without requiring any change in the methods used in any of the other steps of the present invention. This allows the system and methods to have the flexibility to incorporate and take advantage of any future new static scheduling method for satisfying any additionally desired constraints among the most important and numerous type of processes in real-time applications, the periodic processes.</p>
<p id="p-0085" num="0084">The pre-run-time scheduler includes a function &#x201c;adjustperiod&#x201d; which uses a sorted list of reference periods to adjust the length of the period of each periodic process. Each reference period is equal to 2<sup>i</sup>*3<sup>j</sup>*5<sup>k</sup>*7<sup>l</sup>*11<sup>f</sup>, . . . , for some integers i, j, k, l, f, . . . where 0&#x2266;i&#x2266;exp2, 0&#x2266;j&#x2266;exp3, 0&#x2266;k&#x2266;exp5, 0&#x2266;l&#x2266;exp7, 0&#x2266;f&#x2266;exp11, exp2, exp3, exp5, exp7, exp11, . . . , are the</p>
<p id="p-0086" num="0085">upperbounds on the exponents i, j, k, l, f, . . . , that are applied to the prime numbers 2, 3, 5, 7, 11, . . . Application dependent parameters are used to fine tune the exponent upperbounds which control the balance between the utilization level and the length of the pre-run-time schedule.</p>
<p id="p-0087" num="0086">In Step 3, the pre-run-time scheduler uses knowledge about the time slots reserved for the P-h-k processes in the pre-run-time schedule, to determine, before run-time, the worst-case response times of all A-h-k-a processes. The pre-run-time scheduler preferably uses one of two methods, one a formula, the other a simulation procedure, for determining the worst-case response time of each A-h-k-a process. The pre-run-time scheduler verifies the schedulability of each A-h-k-a asynchronous process by checking whether its deadline is greater than or equal to its worst-case response time. Thus, the pre-run-time scheduler provides an a priori guarantee that all periodic and asynchronous processes with hard deadlines and known characteristics will always meet their deadlines.</p>
<p id="p-0088" num="0087">In Step 4, the pre-run-time scheduler determines the schedulability of all the periodic processes with soft deadlines and known characteristics, called P-s-k processes, under the condition that all the P-h-k processes and A-h-k-a processes that are guaranteed to be schedulable in the previous steps are still schedulable. The pre-run-time scheduler reconstructs the pre-run-time schedule in which one or more time slots are reserved for the execution of every P-h-k process (including every new P-h-k process converted from an A-h-k-p process), and for every P-s-k process. The time slots reserved for each P-h-k or P-s-k process also include time reserved for the executions of all A-h-k-a processes that have deadlines that are shorter than that P-h-k or P-s-k process' deadline, and which may preempt the execution of that P-h-k or P-s-k process. The pre-run-time scheduler uses the methods in the previous step that take into account knowledge about the time slots reserved for the P-h-k and P-s-k processes in the pre-run-time schedule to determine again, before run-time, the worst-case response times of every A-h-k-a process.</p>
<p id="p-0089" num="0088">In Step 5, the pre-run-time scheduler preferably uses knowledge about the time slots reserved for the P-h-k and P-s-k processes in the pre-run-time schedule to determine, before run-time, the worst-case response times of asynchronous processes with soft deadlines and known characteristics, i.e., A-s-k processes.</p>
<p id="p-0090" num="0089">At the end of the pre-run-time phase, a feasible pre-run-time schedule for all the periodic processes with known characteristics will have been constructed, while the worst-case response times of all the asynchronous processes with known characteristics will have been determined.</p>
<p id="p-0091" num="0090">During the run-time phase, a run-time scheduler uses knowledge about the time slots reserved for the periodic processes in the pre-run-time schedule to schedule the executions of all the periodic and asynchronous processes, that is, the P-h-k processes (including every new P-h-k process converted from an A-h-k-p process), P-s-k processes, A-h-k-a processes, A-s-k processes, as well as asynchronous processes with soft deadlines and unknown characteristics (referred to herein as A-s-u processes), in a way that guarantees that every periodic process's execution will complete before the end of that periodic process's time slot in the pre-run-time schedule, and all the asynchronous processes with soft deadlines and known characteristics, are guaranteed to be completed within the worst-case response time pre-determined in Step 4 and Step 5 after their arrival, so that all the constraints and dependencies of all processes with known characteristics will always be satisfied. The run-time scheduler, can use the information about the beginning times and end times of the time slots reserved for the execution of periodic processes (including those new periodic processes that were converted from asynchronous processes) in the pre-run-time schedule, as well as the a priori knowledge of the processes characteristics, to pre-compute major portions of the conditions that are used for decision making, hence the amount of computation that needs to be performed for scheduling purposes at run-time can be minimized.</p>
<p id="p-0092" num="0091">For example, the present invention makes it possible to create before run-time, a table of &#x201c;safe starting time intervals&#x201d; for each asynchronous process, and achieve lower run-time overhead than previous systems and methods by allowing the asynchronous processes to be scheduled by simple table lookup.</p>
<p id="p-0093" num="0092">A-s-u processes are scheduled at run-time on a &#x201c;best-effort&#x201d; basis using the remaining processor capacity.</p>
<p id="p-0094" num="0093">The present invention exploits to a maximum extent any knowledge about the characteristics that are available to the system both before run-time and during run-time, in order to:</p>
<p id="p-0095" num="0094">(a) effectively handle complex application constraints and dependencies between the real-time processes;</p>
<p id="p-0096" num="0095">(b) minimize run-time overhead;</p>
<p id="p-0097" num="0096">(c) maximize the chances of being able to guarantee that all the processes with hard deadlines will always meet their deadlines;</p>
<p id="p-0098" num="0097">(d) provide firm and tight response time guarantees for all the processes whose characteristics are known before run-time; and</p>
<p id="p-0099" num="0098">(e) make it easier to verify that all timing constraints and dependencies will always be satisfied.</p>
<p id="p-0100" num="0099">It is believed that as compared with previous systems and methods that perform all scheduling activities at run-time, for most real-time applications, the present invention is better suited to meeting the above for the following reasons:</p>
<p id="p-0101" num="0100">(1) In most real-time applications the bulk of the computation is usually performed by periodic processes for which the characteristics are known a priori. Complex constraints and dependencies are normally defined on the periodic processes. In the present invention, all the periodic processes are scheduled before run-time, there is practically no limit on the time that can be used for scheduling the periodic processes. This allows the use of better methods to handle a great variety of application constraints and dependencies, and thus can achieve higher schedulability for the most important and most numerous type of processes in real-time applications.</p>
<p id="p-0102" num="0101">(2) The run-time overhead required for scheduling and context switching is much smaller than that of the prior art.</p>
<p id="p-0103" num="0102">(3) The number of asynchronous processes that the run-time scheduler needs to schedule should be small, as in most real-time applications. In most real-time applications the number of asynchronous processes with hard deadlines is usually small.</p>
<p id="p-0104" num="0103">(4) A significant portion of asynchronous processes can be transformed into periodic processes, if desired by the user, when using the present invention. For those asynchronous processes that are not transformed into periodic processes, their interarrival times are likely to be long.</p>
<p id="p-0105" num="0104">(5) Most of the important scheduling decisions have already been determined before run-time. In particular, the relative ordering of all the periodic processes was determined before run-time when the pre-run-time schedule was computed.</p>
<p id="p-0106" num="0105">(6) A significant portion of the parameters used by the run-time scheduler to make scheduling decisions for asynchronous processes, are known before run-time, so that major portions of the conditions that are used for decision making can be pre-computed, and the amount of computation that needs to be performed for scheduling asynchronous processes at run-time can be minimized.</p>
<p id="p-0107" num="0106">(7) From the pre-run-time schedule, it becomes known in advance exactly which periodic process may preempt which other periodic process at run-time. Thus one can use this information to minimize the amount of context switching.</p>
<p id="p-0108" num="0107">(8) Once the pre-run-time schedule has been determined for all the periodic processes, the run-time scheduler can use this knowledge to achieve higher schedulability for the small number of asynchronous processes that needs to be scheduled at run-time.</p>
<p id="p-0109" num="0108">(9) The run-time scheduler can use knowledge about the pre-run-time schedule to schedule asynchronous processes more efficiently, e.g., it would be possible to completely avoid blocking of a periodic process with less latitude in meeting its deadline by an asynchronous process with greater latitude.</p>
<p id="p-0110" num="0109">(10) When determining the worst-case response times of asynchronous processes, overly pessimistic assumptions need not be made, e.g., it need not be assumed that for each process, all the periodic processes with less latitude in meeting their deadlines can arrive at the same time to delay that process. Thus tighter worst-case response times for asynchronous processes can be achieved.</p>
<p id="p-0111" num="0110">(11) Using the present invention, verifying that all timing constraints will always be satisfied is much easier.</p>
<p id="p-0112" num="0111">(12) Using the present invention, it becomes straightforward to verify that all the timing constraints and dependencies between the periodic processes are satisfied in a pre-run-time schedule.</p>
<p id="p-0113" num="0112">(13) When using the technique of pre-run-time scheduling, timing constraints and dependencies are directly &#x201c;embedded&#x201d; in the pre-run-time schedule, thus for the majority of the processes, the use of complicated run-time synchronization mechanisms for which it is often extremely difficult to obtain reasonable and accurate execution time bounds, can be avoided.</p>
<p id="p-0114" num="0113">(14) The number of asynchronous processes is reduced, and the ordering of the periodic processes is fixed in the pre-run-time schedule. This significantly reduces the complexity of verifying that the asynchronous processes will meet timing constraints.</p>
<p id="p-0115" num="0114">In accordance with another embodiment of the invention, a method of scheduling executions of both periodic and asynchronous real-time processes having hard or soft deadlines, comprises automatically generating a pre-run-time schedule comprising mapping from a specified set of periodic process executions to a sequence of time slots on a time axis, each of the time slots having a beginning time and an end time, reserving each one of the time slots for execution of one of the periodic processes, a difference between the end time and the beginning time of each of the time slots being sufficiently long that execution of all of the periodic processes, including satisfaction of predetermined constraints and relations comprising at least one of release time, worst-case computation time, period, deadline, deadline nature, offset and permitted range of offset constraints, and precedence and exclusion relations and criticality levels can be completed between the beginning time and end time of respective time slots, and executing the processes in accordance with the schedule during run-time of the processor.</p>
<p id="p-0116" num="0115">In accordance with another embodiment, a method for automatically adjusting lengths of periods of a predetermined set of periodic processes, comprises storing and sorting a list of reference periods, setting the length of the period of each periodic process to the length of the largest reference period that is no larger than an original period of the periodic process to form adjusted periods, and storing the adjusted periods for subsequent use in scheduling executions of the periodic processes.</p>
<p id="p-0117" num="0116">In accordance with another embodiment, a method of processing a plurality of processes, some of which are periodic and some of which are asynchronous, comprises:</p>
<p id="h-0008" num="0000">(i) prior to executing the processes on a processor:</p>
<p id="p-0118" num="0117">(a) determining which asynchronous processes have less flexibility in meeting their deadlines than which of the periodic processes,</p>
<p id="p-0119" num="0118">(b) adding the execution time of each of the less flexible asynchronous processes to the execution time of each of the more flexible periodic processes,</p>
<p id="p-0120" num="0119">(c) scheduling each of the periodic processes into time slots,</p>
<p id="h-0009" num="0000">(ii) and during run-time of the processor:</p>
<p id="p-0121" num="0120">(d) executing the periodic processes according to the schedule, interrupting when possible any of the more flexible periodic processes to execute any of the less flexible asynchronous processes for which a request to execute has been received by the processor,</p>
<p id="p-0122" num="0121">(e) on receiving a request to execute an asynchronous process which has greater or equal flexibility in meeting their deadlines than any of the periodic processes, scheduling the requesting asynchronous process at a time which will not conflict with execution and completion of any of the less flexible periodic processes.</p>
<p id="p-0123" num="0122">In accordance with another embodiment, a method of processing a plurality of processes, some of which are periodic and some of which are asynchronous, comprises:</p>
<p id="h-0010" num="0000">(i) prior to executing the processes:</p>
<p id="p-0124" num="0123">(a) determining which asynchronous processes should be converted into new periodic processes, converting each asynchronous processes that should be converted into a new periodic process,</p>
<p id="p-0125" num="0124">(b) determining which of the remaining asynchronous processes have less flexibility in meeting their deadlines than which of the periodic processes, including new periodic processes converted from asynchronous processes, adding the execution time of each of the less flexible asynchronous processes to the execution time of each of the more flexible periodic processes,</p>
<p id="p-0126" num="0125">(c) scheduling each of the periodic processes into time slots,</p>
<p id="h-0011" num="0000">(ii) and during run-time,</p>
<p id="p-0127" num="0126">(d) executing the periodic and new periodic processes, interrupting any of the more flexible periodic and new periodic processes whenever possible to process any of the less flexible asynchronous processes for which a request to execute may be received at any time.</p>
<p id="p-0128" num="0127">In accordance with another embodiment, a method of scheduling execution of processes by a processor comprises:</p>
<p id="p-0129" num="0128">(a) scheduling periodic time slots for all periodic processes which time slots each include time for each of the periodic processes and time for all asynchronous processes which have less flexibility in meeting their deadlines than do the periodic processes,</p>
<p id="p-0130" num="0129">(b) construct a schedule which includes the periodic time slots and sufficient intervening time to process said all other processes,</p>
<p id="p-0131" num="0130">(c) determining worst case response times of all asynchronous processes, and</p>
<p id="p-0132" num="0131">(d) executing the processes in accordance with the schedule and as said all other processes are required to be processed from time to time.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0012" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING</heading>
<p id="p-0133" num="0132">A better understanding of the invention may be obtained by reading the detailed description of the invention below, in conjunction with the following drawings, in which:</p>
<p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. 1</figref> is a feasible pre-run-time schedule for an embodiment of the invention,</p>
<p id="p-0135" num="0134"><figref idref="DRAWINGS">FIG. 2</figref> is a timing diagram of possible run-time execution of certain asynchronous and periodic processes,</p>
<p id="p-0136" num="0135"><figref idref="DRAWINGS">FIGS. 3 and 8</figref> are feasible pre-run-time schedules for other embodiments of the invention,</p>
<p id="p-0137" num="0136"><figref idref="DRAWINGS">FIGS. 4</figref>, <b>5</b>, <b>6</b>, <b>7</b> and <b>9</b> are timing diagrams of possible run-time execution of other asynchronous and periodic processes,</p>
<p id="p-0138" num="0137"><figref idref="DRAWINGS">FIGS. 10 and 13</figref> are example timing diagrams of possible timing parameters of various new periodic processes resulting from converting asynchronous processes to new periodic processes,</p>
<p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. 14</figref> is another example of a feasible pre-run-time schedule,</p>
<p id="p-0140" num="0139"><figref idref="DRAWINGS">FIGS. 11</figref>, <b>12</b>, <b>15</b>, <b>16</b> and <b>17</b> are example diagrams of timing parameters of possible timing parameters of various periodic processes,</p>
<p id="p-0141" num="0140"><figref idref="DRAWINGS">FIG. 18</figref> is another example of a feasible pre-run-time schedule,</p>
<p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. 19</figref> is another example of a possible run-time execution of other asynchronous and periodic processes,</p>
<p id="p-0143" num="0142"><figref idref="DRAWINGS">FIGS. 20A-20H</figref> are timing diagrams used in the explanation of various example cases, and</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIGS. 21 and 22</figref> are feasible pre-run-time schedules on two processors for other embodiments of the invention,</p>
<p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. 23</figref> is a timing diagram of a possible run-time execution of other asynchronous and periodic processes on two processors, and</p>
<p id="p-0146" num="0145"><figref idref="DRAWINGS">FIGS. 24 and 24A</figref> are block diagrams of systems on which the present invention can be carried out.</p>
<p id="p-0147" num="0146"><figref idref="DRAWINGS">FIGS. 25A and 25B</figref> are flowchart diagrams showing a possible procedure for converting a single asynchronous process into a corresponding new periodic process.</p>
<p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. 26</figref> is a flowchart diagram showing a possible procedure for converting a set of asynchronous processes into a set of corresponding new periodic processes.</p>
<p id="p-0149" num="0148"><figref idref="DRAWINGS">FIGS. 27A and 27B</figref> are flowchart diagrams showing a possible procedure for scheduling process executions during run-time.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0013" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0150" num="0149">Example embodiments will now be given which illustrate operation and advantages of the present invention as compared with systems and methods that perform all scheduling activities at run-time. It should be noted that existing systems and methods that perform all scheduling activities at run-time are not able to guarantee the schedulability of the set of processes given in these examples. Some of the embodiments will be described in pseudocode, which is a shorthand form of English understandable to persons skilled in the field of this invention.</p>
<p id="h-0014" num="0000">Periodic Processes</p>
<p id="p-0151" num="0150">A periodic process consists of a computation that is executed repeatedly, once in each fixed period of time. A typical use of periodic processes is to read sensor data and update the current state of internal variables and outputs.</p>
<p id="p-0152" num="0151">A periodic process p can be described by a quintuple (o<sub>p</sub>, r<sub>p</sub>, c<sub>p</sub>, d<sub>p</sub>, prd<sub>p</sub>), wherein prd<sub>p </sub>is the period. c<sub>p </sub>is the worse case computation time required by process p, d<sub>p </sub>is the deadline, i.e., the duration of the time interval between the beginning of a period and the time by which an execution of process p must be completed in each period, r<sub>p </sub>is the release time, i.e., the duration of the time interval between the beginning of a period and the earliest time that an execution of process p can be started in each period, and o<sub>p </sub>is the offset, i.e., the duration of the time interval between the beginning of the first period and time 0.</p>
<p id="p-0153" num="0152">When there exists flexibility in assigning an offset value for a periodic process, a permitted range of the offset, offsetlowerbound(p)&#x2266;o<sub>p</sub>&#x2266;offsetupperbound(p), instead of one fixed offset, can be specified for that process. A single offset value constraint is a special case of a permitted range of offset constraint.</p>
<p id="p-0154" num="0153">It is assumed that o<sub>p</sub>, r<sub>p</sub>, c<sub>p</sub>, d<sub>p</sub>, prd<sub>p </sub>as well as any other parameters expressed in time have integer values. A periodic process p can have an infinite number of periodic process executions p<sub>0</sub>, p<sub>1</sub>, p<sub>2</sub>, . . . , with one process execution for each period. For the ith process execution p<sub>i </sub>corresponding to the ith period, p<sub>i</sub>'s release time is R<sub>p</sub><sub><sub2>i</sub2></sub>=o<sub>p</sub>+r<sub>p</sub>+prd<sub>p</sub>&#xd7;(i&#x2212;1); and p<sub>i</sub>'s deadline is D<sub>p</sub><sub><sub2>i</sub2></sub>=o<sub>p</sub>+d<sub>p</sub>+prd<sub>p</sub>&#xd7;(i&#x2212;1)</p>
<p id="h-0015" num="0000">The uppercase letters R and D in R<sub>p </sub>and D<sub>p </sub>are used herein to denote the release time and deadline respectively of a periodic process execution of some periodic process p.</p>
<p id="h-0016" num="0000">It is noted that it is of common practice to include the system overhead in the computation time of the processes.</p>
<p id="p-0155" num="0154">Reference is made to <figref idref="DRAWINGS">FIG. 11</figref> and <figref idref="DRAWINGS">FIG. 12</figref> for examples of periodic processes. <figref idref="DRAWINGS">FIG. 11</figref> illustrates the periodic process p<sub>B</sub>=(o<sub>p</sub><sub><sub2>B</sub2></sub>, r<sub>p</sub><sub><sub2>B</sub2></sub>, c<sub>p</sub><sub><sub2>B</sub2></sub>, d<sub>p</sub><sub><sub2>B</sub2></sub>, prd<sub>p</sub><sub><sub2>B</sub2></sub>) where r<sub>p</sub><sub><sub2>B</sub2></sub>=1, c<sub>p</sub><sub><sub2>B</sub2></sub>=3, d<sub>p</sub><sub><sub2>B</sub2></sub>=4, prd<sub>p</sub><sub><sub2>B</sub2></sub>=12, o<sub>p</sub><sub><sub2>D</sub2></sub>, =0. <figref idref="DRAWINGS">FIG. 12</figref> illustrates the periodic process p<sub>D</sub>=(o<sub>p</sub><sub><sub2>C</sub2></sub>, r<sub>p</sub><sub><sub2>C</sub2></sub>, c<sub>p</sub><sub><sub2>C</sub2></sub>, d<sub>p</sub><sub><sub2>C</sub2></sub>, prd<sub>p</sub><sub><sub2>C</sub2></sub>) where r<sub>p</sub><sub><sub2>C</sub2></sub>=0, c<sub>p</sub><sub><sub2>C</sub2></sub>=4, d<sub>p</sub><sub><sub2>C</sub2></sub>=4, prd<sub>p</sub><sub><sub2>C</sub2></sub>=12, o<sub>p</sub><sub><sub2>C</sub2></sub>=7.</p>
<p id="h-0017" num="0000">Asynchronous Processes</p>
<p id="p-0156" num="0155">An example of an asynchronous process is one which consists of a computation that responds to internal or external events. A typical use of an asynchronous process is to respond to operator requests. Although the precise request times for executions of an asynchronous process a are not known in advance, usually the minimum amount of time between two consecutive requests min<sub>a </sub>is known in advance. An asynchronous process a can be described a triple (c<sub>a</sub>, d<sub>a</sub>, min<sub>a</sub>). c<sub>a </sub>is the worse case computation time required by process a. d<sub>a </sub>is the deadline, i.e., the duration of the time interval between the time when a request is made for process a and the time by which an execution of process a must be completed. An asynchronous process a can have an infinite number of asynchronous process executions a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, . . . , with one process execution for each asynchronous request. For the ith asynchronous process execution a<sub>1 </sub>which corresponds to the ith request, if a<sub>i</sub>'s request (arrival) time is R<sub>a</sub><sub><sub2>i</sub2></sub>, then a<sub>i</sub>'s deadline is D<sub>a</sub><sub><sub2>i</sub2></sub>=R<sub>a</sub><sub><sub2>i</sub2></sub>+d<sub>a</sub>.</p>
<p id="p-0157" num="0156">The uppercase letters R and D in R<sub>a </sub>and D<sub>a </sub>will be used herein to denote the request (arrival) time and deadline respectively of an asynchronous process execution of some asynchronous process a.</p>
<p id="h-0018" num="0000">Schedules</p>
<p id="p-0158" num="0157">If a periodic process p or an asynchronous process a has a computation time of c<sub>p </sub>or c<sub>a</sub>, then it is assumed that that process execution p<sub>i </sub>or a<sub>i </sub>is composed of c<sub>p </sub>or c<sub>a </sub>process execution units. Each processor is associated with a processor time axis starting from 0 and is divided into a sequence of processor time units.</p>
<p id="p-0159" num="0158">A schedule is a mapping from a possibly infinite set of process execution units to a possibly infinite set of processor time units on one or more processor time axes. The number of processor time units between 0 and the processor time unit that is mapped to by the first unit in a process execution is called the start time of that process execution. The number of time units between 0 and the time unit subsequent to the processor time unit mapped to by the last unit in a process execution is called the completion time of that process execution. A feasible schedule is a schedule in which the start time of every process execution is greater than or equal to that process execution's release time or request time, and its completion time is less than or equal to that process execution's deadline.</p>
<p id="p-0160" num="0159">Reference is made to <figref idref="DRAWINGS">FIGS. 1-9</figref>, <b>14</b> and <b>18</b> are examples of feasible schedules, wherein the horizontal axis is the time axis, and time period segments are separated by vertical lines which represent release times and deadlines, as will be described below.</p>
<p id="p-0161" num="0160">It should be noted that, in order to avoid use in this specification of an exceedingly large number of repetitions of use of the word &#x201c;executions of process&#x201d;, or &#x201c;executions of process i&#x201d;, these terms have been in many places herein abbreviated to the word &#x201c;process&#x201d;, or to simply&#x201c;i&#x201d;. Thus whenever there is a reference to the term &#x201c;process&#x201d; as related to a schedule, the term &#x201c;process&#x201d;, or &#x201c;process i&#x201d;, or &#x201c;i&#x201d; when i is the name of a process should be understood as meaning &#x201c;process execution&#x201d; or &#x201c;the execution of process i&#x201d;.</p>
<p id="h-0019" num="0000">Process Segments</p>
<p id="p-0162" num="0161">Each process p may consist of a finite sequence of segments p(0), p(1), . . . , p(n(p)), where p(0) is the first segment and p(n(p)) is the last segment in process p. Given the release time r<sub>p</sub>, deadline d<sub>p </sub>of process p and the computation time of each segment p[i] in process p, one can easily compute the release time and deadline for each segment, as described in the aforenoted 1993 article by Xu and Parnas.</p>
<p id="p-0163" num="0162">Parallel computations can be represented by several processes, with various types of relations defined between individual segments belonging to different processes, and processes can be executed concurrently; thus requiring each process to be a sequence of segments does not pose any significant restrictions on the amount of parallelism that can be expressed.</p>
<p id="h-0020" num="0000">Precedence and Exclusion Relations</p>
<p id="p-0164" num="0163">Various types of relations such as precedence relations and exclusion relations may exist between ordered pairs of processes segments. A process segment i is said to precede another process segment j if j can only start execution after i has completed its computation. Precedence relations may exist between process segments when some process segments require information that is produced by other process segments.</p>
<p id="p-0165" num="0164">A process segment i is said to exclude another process segment j if no execution of j can occur between the time that i starts its computation and the time that i completes its computation. Exclusion relations may exist between process segments when some process segments must prevent simultaneous access to shared resources such as data and I/O devices by other process segments.</p>
<p id="h-0021" num="0000">Latitude of a Process</p>
<p id="p-0166" num="0165">The &#x201c;latitude&#x201d; of a process x, denoted by L<sub>x</sub>, is a user defined measure of the latitude in meeting process x's deadline.</p>
<p id="p-0167" num="0166">For exemplary purposes, in all the examples given in the description of the present invention, we will assume that for each process x, L<sub>x </sub>is set to the following value:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0167">for each periodic process p<sub>i</sub>, L<sub>p</sub><sub><sub2>i</sub2></sub>=d<sub>p</sub><sub><sub2>i</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>i</sub2></sub>;</li>
        <li id="ul0002-0002" num="0168">for each asynchronous process a<sub>i</sub>, L<sub>a</sub><sub><sub2>i</sub2></sub>=d<sub>a</sub><sub><sub2>i</sub2></sub>.
<br/>
It should be noted that L<sub>x </sub>can be defined differently according to some other criteria, depending on the application.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0168" num="0169">(For example, for each P-h-k process or P-s-k process p<sub>i</sub>, instead of defining L<sub>p</sub><sub><sub2>i</sub2></sub>=d<sub>p</sub><sub><sub2>i</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>i</sub2></sub>, L<sub>p</sub><sub><sub2>i</sub2></sub>=d<sub>p</sub><sub><sub2>i </sub2></sub>could be defined, or any other criteria for defining L<sub>p</sub><sub><sub2>i </sub2></sub>could be used.)</p>
<p id="h-0022" num="0000">Main Types of Processes</p>
<p id="p-0169" num="0170">The main types of processes that are considered herein are the following:</p>
<p id="p-0170" num="0171">Set P-h-k: Periodic processes with hard deadlines and known characteristics. Each such process may consist of one or more segments, with precedence relations defined on them to enforce the proper ordering of segments belonging to the same process. It is assumed that the following characteristics are known for each such process segment before run-time:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0172">period,</li>
        <li id="ul0004-0002" num="0173">worst-case execution time,</li>
        <li id="ul0004-0003" num="0174">release time,</li>
        <li id="ul0004-0004" num="0175">deadline,</li>
        <li id="ul0004-0005" num="0176">permitted range of the offset,</li>
        <li id="ul0004-0006" num="0177">the set of data that each segment reads and writes,</li>
        <li id="ul0004-0007" num="0178">any exclusion relationships with other process segments,</li>
        <li id="ul0004-0008" num="0179">any precedence relationships with other periodic process segments.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0171" num="0180">Set A-h-k: Asynchronous processes with hard deadlines and known characteristics. It is assumed that each such process consists of a single segment and the following are known for each such process before run-time:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0181">deadline,</li>
        <li id="ul0006-0002" num="0182">worst-case execution time,</li>
        <li id="ul0006-0003" num="0183">minimum time between two consecutive requests,</li>
        <li id="ul0006-0004" num="0184">the set of data that the process reads and writes,</li>
        <li id="ul0006-0005" num="0185">any exclusion relationships with other process segments.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0172" num="0186">Set P-s-k: Periodic processes with soft deadlines and known characteristics. Each such process consists of one or more segments, with precedence relations defined on them to enforce the proper ordering of segments belonging to the same process. It is assumed that the following are known for each such process before run-time:
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0000">
    <ul id="ul0008" list-style="none">
        <li id="ul0008-0001" num="0187">period,</li>
        <li id="ul0008-0002" num="0188">worst-case execution time,</li>
        <li id="ul0008-0003" num="0189">release time,</li>
        <li id="ul0008-0004" num="0190">deadline,</li>
        <li id="ul0008-0005" num="0191">permitted range of the offset,</li>
        <li id="ul0008-0006" num="0192">the set of data that the process reads and writes,</li>
        <li id="ul0008-0007" num="0193">any exclusion relationships with other process segments,</li>
        <li id="ul0008-0008" num="0194">any precedence relationships with other periodic process segments.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0173" num="0195">Set A-s-k: Asynchronous processes with soft deadlines and known characteristics. It is assumed that each such process consists of a single segment and the following are known for each such process before run-time:
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0000">
    <ul id="ul0010" list-style="none">
        <li id="ul0010-0001" num="0196">deadline,</li>
        <li id="ul0010-0002" num="0197">worst-case execution time,</li>
        <li id="ul0010-0003" num="0198">the set of data that the process reads and writes,</li>
        <li id="ul0010-0004" num="0199">any exclusion relationships with other process segments.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0174" num="0200">Set A-s-u: Asynchronous processes with soft deadlines and unknown characteristics. It is assumed that each such process consists of a single segment and nothing else is known about each such process before run-time.</p>
<p id="p-0175" num="0201">In the present invention, as well as in the method described in the 1993 article by Xu and Parnas referred to above, and that can be used in the present invention, it is assumed that the basic scheduling unit is a segment. The terms &#x201c;segment&#x201d; and &#x201c;process will also be considered as having the same meaning.</p>
<p id="p-0176" num="0202">Pre-Run-Time Phase</p>
<p id="p-0177" num="0203">Step 1: Conversion of A-h-k-p Processes</p>
<p id="p-0178" num="0204">In this step asynchronous processes with hard-deadlines and known characteristics are referred to as A-h-k processes. The A-h-k processes are divided into two subsets. Different methods will be used to reserve processor capacity for the execution of the processes in each of the two subsets.</p>
<p id="p-0179" num="0205">The processes in one of subsets, called A-h-k-p processes, should be converted into equivalent new periodic processes with hard deadlines. The remaining A-h-k processes are called A-h-k-a processes and processor capacity should be reserved for their execution before run-time.</p>
<p id="p-0180" num="0206">For each A-h-k-a process, processor capacity in each hard-deadline periodic process should be reserved by the following.</p>
<p id="p-0181" num="0207">Let S<sub>P </sub>be the original set of P-h-k processes;</p>
<p id="h-0023" num="0000">Let S<sub>A </sub>be the original set of A-h-k processes;</p>
<p id="h-0024" num="0000">Let S<sub>a </sub>be the set of A-h-k processes that have not been converted into periodic processes;</p>
<p id="h-0025" num="0000">Let S<sub>p </sub>be the set of new periodic processes that were converted from A-h-k-p processes.</p>
<p id="p-0182" num="0208">For each p<sub>i</sub>&#x2208;(S<sub>P</sub>&#x222a;S<sub>p</sub>) we calculate its &#x201c;adjusted computation time&#x201d; c<sub>p</sub><sub><sub2>i</sub2></sub>&#x2032; as follows.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>c</i><sub>p</sub><sub><sub2>i</sub2></sub><i>&#x2032;=c</i><sub>p</sub><sub><sub2>i</sub2></sub>+adjusted_capacity(<i>p</i><sub>i</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0183" num="0209">The exact adjusted_capacity function that is used, depends on the application characteristics; for example, it may depend on the number of processors that are used, and other factors.</p>
<p id="p-0184" num="0210">In the examples, it is assumed that the following simple formula is used.</p>
<p id="p-0185" num="0211">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>adjusted_capacity</mi>
    <mo>&#x2062;</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>p</mi>
        <mi>i</mi>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <munderover>
      <mo>&#x2211;</mo>
      <mrow>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
          <mo>&#x2208;</mo>
          <msub>
            <mi>S</mi>
            <mi>a</mi>
          </msub>
        </mrow>
        <mo>&#x2a53;</mo>
        <mrow>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>a</mi>
              <mi>j</mi>
            </msub>
          </msub>
          <mo>&#x3c;</mo>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>p</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mrow>
      </mrow>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
    </munderover>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mo>&#x2308;</mo>
        <mfrac>
          <mrow>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>p</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <mo>-</mo>
            <msub>
              <mi>r</mi>
              <msub>
                <mi>p</mi>
                <mi>i</mi>
              </msub>
            </msub>
          </mrow>
          <msub>
            <mi>min</mi>
            <msub>
              <mi>a</mi>
              <mi>j</mi>
            </msub>
          </msub>
        </mfrac>
        <mo>&#x2309;</mo>
      </mrow>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.6em" height="0.6ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0186" num="0212">Above, for each process p<sub>i </sub>in S<sub>P </sub>(the original set of P-h-k processes) or in S<sub>p </sub>(the new periodic processes converted from A-h-k-p processes), for every possible occurrence of any A-h-k-a process a<sub>j </sub>between r<sub>p</sub><sub><sub2>i </sub2></sub>and d<sub>p</sub><sub><sub2>i</sub2></sub>, if L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>i </sub2></sub>then a<sub>j</sub>'s computation time is added to p<sub>i</sub>'s computation time.</p>
<heading id="h-0026" level="1">Example 1</heading>
<p id="p-0187" num="0213">Assume 4 asynchronous processes with hard deadlines and known characteristics (A-h-k processes), and 4 periodic processes with hard deadlines and known characteristics (P-h-k processes) as follows.</p>
<p id="h-0027" num="0000">a<sub>0</sub>: c<sub>a</sub><sub><sub2>0</sub2></sub>=2, d<sub>a</sub><sub><sub2>0</sub2></sub>=2, min<sub>a</sub><sub><sub2>0</sub2></sub>=1,000;</p>
<p id="h-0028" num="0000">a<sub>1</sub>: c<sub>a</sub><sub><sub2>1</sub2></sub>=2, d<sub>a</sub><sub><sub2>1</sub2></sub>=7, min<sub>a</sub><sub><sub2>1</sub2></sub>=1,000;</p>
<p id="h-0029" num="0000">a<sub>2</sub>: c<sub>a</sub><sub><sub2>2</sub2></sub>=2, d<sub>a</sub><sub><sub2>2</sub2></sub>=239, min<sub>a</sub><sub><sub2>2</sub2></sub>=1,000;</p>
<p id="h-0030" num="0000">a<sub>9</sub>: c<sub>a</sub><sub><sub2>9</sub2></sub>=2, d<sub>a</sub><sub><sub2>9</sub2></sub>=259, min<sub>a</sub><sub><sub2>9</sub2></sub>=1,000;</p>
<p id="h-0031" num="0000">p<sub>4</sub>: r<sub>p</sub><sub><sub2>4</sub2></sub>=0, c<sub>p</sub><sub><sub2>4</sub2></sub>=26, d<sub>p</sub>4=200, prd<sub>p</sub>4=200, o<sub>p</sub><sub><sub2>4</sub2></sub>=0;</p>
<p id="h-0032" num="0000">p<sub>5</sub>: r<sub>p</sub><sub><sub2>5</sub2></sub>=30, c<sub>p</sub>5=16, d<sub>5</sub>=50, prd<sub>p</sub><sub><sub2>5</sub2></sub>=200, o<sub>p</sub><sub><sub2>5</sub2></sub>=0;</p>
<p id="h-0033" num="0000">p<sub>6</sub>: r<sub>p</sub><sub><sub2>6</sub2></sub>=0, c<sub>p</sub><sub><sub2>6</sub2></sub>=26, 4<sub>6</sub>=200, prd<sub>p</sub><sub><sub2>6</sub2></sub>=200, o<sub>p</sub><sub><sub2>6</sub2></sub>=0;</p>
<p id="h-0034" num="0000">p<sub>7</sub>: r<sub>p</sub><sub><sub2>7</sub2></sub>=0, c<sub>p</sub><sub><sub2>7</sub2></sub>=16, d<sub>p</sub><sub><sub2>7</sub2></sub>=200, prd<sub>p</sub><sub><sub2>7</sub2></sub>=200, o<sub>p</sub><sub><sub2>7</sub2></sub>=0.</p>
<p id="p-0188" num="0214">The adjusted computation times for p<sub>4</sub>, p<sub>5</sub>, p<sub>6</sub>, p<sub>7 </sub>will respectively be:</p>
<p id="h-0035" num="0000">c<sub>p</sub><sub><sub2>4</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>4</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=26+2+2=30;</p>
<p id="h-0036" num="0000">c<sub>p</sub><sub><sub2>5</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>5</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=16+2+2=20;</p>
<p id="h-0037" num="0000">c<sub>p</sub><sub><sub2>6</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>6</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=26+2+2=30;</p>
<p id="h-0038" num="0000">c<sub>p</sub><sub><sub2>7</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>7</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=16+2+2=20.</p>
<p id="h-0039" num="0000">(end of example)</p>
<p id="p-0189" num="0215">One technique for converting an asynchronous process into an equivalent periodic process is described in the aforenoted 1983 article by Mok in which an asynchronous process (c<sub>a</sub>, d<sub>a</sub>, min<sub>a</sub>) can be converted into a periodic process (o<sub>p</sub>, r<sub>p</sub>, c<sub>p</sub>, d<sub>p</sub>, prd<sub>p</sub>) which satisfies the following conditions: c<sub>p</sub>=c<sub>a</sub>, d<sub>a</sub>&#x2267;d<sub>p</sub>&#x2267;c<sub>a</sub>, prd<sub>p</sub>&#x2266;min(d<sub>a</sub>&#x2212;d<sub>p</sub>+1, min<sub>a</sub>), r<sub>p</sub>=0, o<sub>p</sub>=0.</p>
<p id="p-0190" num="0216">However, as noted earlier, the technique described by Mok did not consider the case of non-zero offsets, that is, non-zero length intervals between time zero and the beginning of periods of the converted periodic processes.</p>
<p id="p-0191" num="0217">As will be described below, the present invention extends this technique to allow non-zero offsets. In particular, when an asynchronous process (c<sub>a</sub>, d<sub>a</sub>, min<sub>a</sub>) converted into a periodic process (o<sub>p</sub>, r<sub>p</sub>, c<sub>p</sub>, d<sub>p</sub>, prd<sub>p</sub>), if it satisfies the following conditions: c<sub>p</sub>=c<sub>a</sub>, d<sub>a</sub>&#x2267;d<sub>p</sub>&#x2267;c<sub>a</sub>, prd<sub>p</sub>&#x2266;min(d<sub>a</sub>&#x2212;d<sub>p</sub>+1, min<sub>a</sub>), r<sub>p</sub>=0, the converted periodic process is allowed to have offsets that range from 0 to prd<sub>p</sub>&#x2212;1: 0&#x2266;o<sub>p</sub>&#x2266;(prd<sub>p</sub>&#x2212;1).</p>
<p id="p-0192" num="0218">By using non-zero offsets, one increases considerably the chances of satisfying all the given timing constraints.</p>
<p id="p-0193" num="0219">Furthermore, the technique described by Mok only deals with one process. When more than one process must be converted into periodic processes, the new periodic processes may have timing conflicts with each other and with the original set of asynchronous and periodic processes. For example, a direct application of Mok's technique could result in more than one periodic process each having a release time of zero and a deadline equal to the computation time.</p>
<p id="p-0194" num="0220">In order to avoid such timing conflicts, in accordance with an embodiment of the present invention a procedure is used for converting a set of asynchronous processes into periodic processes, which also takes into account the possibility of timing conflicts with other existing asynchronous and periodic processes.</p>
<p id="p-0195" num="0221">First, a procedure is introduced that converts a single asynchronous process a<sub>i </sub>into a corresponding new periodic process &#x201c;newp<sub>i</sub>&#x201d;. When determining newp<sub>i</sub>'s deadline d<sub>newp</sub><sub><sub2>i</sub2></sub>, we leave &#x201c;room&#x201d; for all the hard deadline processes that have a shorter or equal deadline than that process's deadline, as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>newp</sub><sub><sub2>i</sub2></sub><i>=c</i><sub>a</sub><sub><sub2>i</sub2></sub>+conversion(<i>a</i><sub>i</sub>);<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0196" num="0222">The exact conversion_room function that is used, depends on the application characteristics. In the following two examples, first assume that the following simple formula is used.</p>
<p id="p-0197" num="0223">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>conversion_room</mi>
    <mo>&#x2062;</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>x</mi>
        <mi>i</mi>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munderover>
        <mo>&#x2211;</mo>
        <mrow>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>j</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <msub>
                  <mi>S</mi>
                  <mi>p</mi>
                </msub>
                <mo>&#x22c3;</mo>
                <msub>
                  <mi>S</mi>
                  <mi>p</mi>
                </msub>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>&#x2a53;</mo>
          <mrow>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
            </msub>
            <mo>&#x2264;</mo>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
            </msub>
          </mrow>
        </mrow>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
      </munderover>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>prd</mi>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.6em" height="0.6ex"/>
        </mstyle>
        <mo>*</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>p</mi>
            <mi>j</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <munderover>
        <mo>&#x2211;</mo>
        <mrow>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>j</mi>
            </msub>
            <mo>&#x2208;</mo>
            <msub>
              <mi>S</mi>
              <mi>a</mi>
            </msub>
          </mrow>
          <mo>&#x2a53;</mo>
          <mrow>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>a</mi>
                <mi>j</mi>
              </msub>
            </msub>
            <mo>&#x2264;</mo>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
            </msub>
          </mrow>
          <mo>&#x2a53;</mo>
          <mrow>
            <mi>i</mi>
            <mo>&#x2260;</mo>
            <mi>j</mi>
          </mrow>
        </mrow>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
      </munderover>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>*</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0198" num="0224">In the above relationship, the deadline of the new periodic process d<sub>newp</sub><sub><sub2>i </sub2></sub>appears on both the left-hand side and right-hand side thereof. The value of d<sub>newp</sub><sub><sub2>i </sub2></sub>as well as all other parameters of the new periodic process can be found with the following procedure for converting a single asynchronous process a<sub>i</sub>=(c<sub>a</sub><sub><sub2>i</sub2></sub>, d<sub>a</sub><sub><sub2>i</sub2></sub>, min<sub>a</sub><sub><sub2>i</sub2></sub>)&#x2208;S<sub>a </sub>into a periodic process newp<sub>i</sub>=(o<sub>newp</sub><sub><sub2>i</sub2></sub>, r<sub>newp</sub><sub><sub2>i</sub2></sub>, c<sub>newp</sub><sub><sub2>i</sub2></sub>, d<sub>newp</sub><sub><sub2>i</sub2></sub>, prd<sub>newp</sub><sub><sub2>i</sub2></sub>)&#x2208;S<sub>p </sub></p>
<p id="h-0040" num="0000">failure:=false;</p>
<p id="h-0041" num="0000">r<sub>newp</sub><sub><sub2>i</sub2></sub>:=0;</p>
<p id="h-0042" num="0000">d<sub>newp</sub><sub><sub2>i</sub2></sub>:=c<sub>a</sub><sub><sub2>i</sub2></sub>;</p>
<p id="h-0043" num="0000">d<sub>newp</sub><sub><sub2>i</sub2></sub>:=c<sub>a</sub><sub><sub2>i </sub2></sub>conversion_room(a<sub>i</sub>);</p>
<p id="h-0044" num="0000">deadlinefound:=false;</p>
<p id="h-0045" num="0000">while not(deadlinefound) and not(failure) do</p>
<p id="h-0046" num="0000">begin</p>
<p id="p-0199" num="0225">d<sub>previous</sub><sub><sub2>i</sub2></sub>:=d<sub>newp</sub><sub><sub2>i</sub2></sub>;</p>
<p id="p-0200" num="0226">d<sub>newp</sub><sub><sub2>i</sub2></sub>=conversion_room(previous<sub>i</sub>);</p>
<p id="p-0201" num="0227">if d<sub>previous</sub><sub><sub2>i</sub2></sub>=d<sub>newp</sub><sub><sub2>i </sub2></sub>then deadlinefound:=true;</p>
<p id="p-0202" num="0228">if (d<sub>a</sub><sub><sub2>i</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>i</sub2></sub>+1)&#x2266;min<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="p-0203" num="0229">then</p>
<p id="p-0204" num="0230">prd<sub>newp</sub><sub><sub2>i</sub2></sub>:=(d<sub>a</sub><sub><sub2>i</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>i</sub2></sub>+1)</p>
<p id="p-0205" num="0231">else
<ul id="ul0011" list-style="none">
    <li id="ul0011-0001" num="0000">
    <ul id="ul0012" list-style="none">
        <li id="ul0012-0001" num="0232">prd<sub>newp</sub><sub><sub2>i</sub2></sub>:=min<sub>a</sub><sub><sub2>i</sub2></sub>;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0206" num="0233">prd<sub>newp</sub><sub><sub2>i</sub2></sub>:=adjustperiod(prd<sub>newp</sub><sub><sub2>i</sub2></sub>);
<ul id="ul0013" list-style="none">
    <li id="ul0013-0001" num="0000">
    <ul id="ul0014" list-style="none">
        <li id="ul0014-0001" num="0234">{perform any necessary adjustments to prd<sub>newp</sub><sub><sub2>i</sub2></sub>}</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0207" num="0235">d<sub>new</sub><sub><sub2>i</sub2></sub>:=d<sub>a</sub><sub><sub2>i</sub2></sub>&#x2212;prd<sub>newp</sub><sub><sub2>i</sub2></sub>+1;</p>
<p id="p-0208" num="0236">if (d<sub>newp</sub><sub><sub2>i</sub2></sub>&#x3e;d<sub>a</sub><sub><sub2>i</sub2></sub>) or (prd<sub>newp</sub><sub><sub2>i</sub2></sub>&#x3c;d<sub>newp</sub><sub><sub2>i</sub2></sub>)</p>
<p id="p-0209" num="0237">then failure:=true</p>
<p id="p-0210" num="0238">else if deadlinefound
<ul id="ul0015" list-style="none">
    <li id="ul0015-0001" num="0000">
    <ul id="ul0016" list-style="none">
        <li id="ul0016-0001" num="0239">then</li>
        <li id="ul0016-0002" num="0240">begin
        <ul id="ul0017" list-style="none">
            <li id="ul0017-0001" num="0241">S<sub>p</sub>:=S<sub>p</sub>&#x222a;{newp<sub>i</sub>};</li>
            <li id="ul0017-0002" num="0242">S<sub>a</sub>:=S<sub>a</sub>&#x2212;{a<sub>i</sub>};</li>
        </ul>
        </li>
        <li id="ul0016-0003" num="0243">end;
<br/>
end
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0211" num="0244">If it is assumed that the earliest time that asynchronous process a<sub>i </sub>can make a request for execution is time t, then the permitted range of the offset o<sub>newp</sub><sub><sub2>i </sub2></sub>is [t, t+prd<sub>newp</sub><sub><sub2>i</sub2></sub>&#x2212;1]).</p>
<p id="p-0212" num="0245">See <figref idref="DRAWINGS">FIGS. 25A and 25B</figref> for flowchart diagrams of the procedure.</p>
<p id="p-0213" num="0246">Reference is made to <figref idref="DRAWINGS">FIGS. 10 and 13</figref> for examples of conversion of an asynchronous process into a periodic process.</p>
<p id="p-0214" num="0247">In <figref idref="DRAWINGS">FIG. 10</figref>, the Periodic process new p<sub>A</sub>=(0<sub>newp</sub><sub><sub2>A</sub2></sub>, r<sub>newp</sub><sub><sub2>A</sub2></sub>, c<sub>newp</sub><sub><sub2>A</sub2></sub>, d<sub>newp</sub><sub><sub2>A</sub2></sub>, prd<sub>newp</sub><sub><sub2>A </sub2></sub>is translated from the asynchronous process a<sub>A</sub>=(c<sub>a</sub><sub><sub2>A</sub2></sub>, d<sub>a</sub><sub><sub2>A</sub2></sub>, min<sub>a</sub><sub><sub2>A</sub2></sub>)=(2, 7, 8), where r<sub>newp</sub><sub><sub2>A</sub2></sub>=0, c<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>a</sub><sub><sub2>A</sub2></sub>=2, d<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>a</sub><sub><sub2>A</sub2></sub>=2, prd<sub>newp</sub><sub><sub2>A</sub2></sub>=min(d<sub>a</sub><sub><sub2>A</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>A</sub2></sub>+1, min<sub>a</sub><sub><sub2>A</sub2></sub>)=min(7&#x2212;2+1, 8)=6, the permitted range of offset is: 0&#x2266;o<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2266;prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1=5. If periodic process newp<sub>A</sub>'s offset is set to 0, i.e., o<sub>newp</sub><sub><sub2>A</sub2></sub>=0, then periodic process executions newp<sub>A</sub><sub><sub2>0</sub2></sub>, newp<sub>A</sub><sub><sub2>1</sub2></sub>, newp<sub>A</sub><sub><sub2>2</sub2></sub>, newp<sub>A</sub><sub><sub2>3</sub2></sub>, newp<sub>A</sub><sub><sub2>4</sub2></sub>, newp<sub>A</sub><sub><sub2>5</sub2></sub>, . . . start at the times 0, 6, 12, 18, 24, 30, . . . respectively, and if the asynchronous request times R<sub>a</sub><sub><sub2>0</sub2></sub>, <img id="CUSTOM-CHARACTER-00001" he="3.89mm" wi="5.25mm" file="US08627319-20140107-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/><img id="CUSTOM-CHARACTER-00002" he="3.89mm" wi="4.91mm" file="US08627319-20140107-P00002.TIF" alt="custom character" img-content="character" img-format="tif"/> are 1, 9, 17, 27, then the asynchronous process executions a<sub>A0</sub>; a<sub>A</sub><sub><sub2>1</sub2></sub>; a<sub>A</sub><sub><sub2>2</sub2></sub>; a<sub>A</sub><sub><sub2>3 </sub2></sub>start at the times 6, 12, 18, 30 respectively. a<sub>A</sub><sub><sub2>0 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>1</sub2></sub>, a<sub>A</sub><sub><sub2>1 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>2</sub2></sub>, a<sub>A</sub><sub><sub2>2 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>3</sub2></sub>, a<sub>A</sub><sub><sub2>3 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>5</sub2></sub>.</p>
<p id="p-0215" num="0248">In <figref idref="DRAWINGS">FIG. 13</figref>, the periodic process newp<sub>A</sub>=(0<sub>newp</sub><sub><sub2>A</sub2></sub>, r<sub>newp</sub><sub><sub2>A</sub2></sub>, c<sub>newp</sub><sub><sub2>A</sub2></sub>, d<sub>newp</sub><sub><sub2>A</sub2></sub>, prd<sub>newp</sub><sub><sub2>A </sub2></sub>translated from the asynchronous process a<sub>A</sub>=(c<sub>a</sub><sub><sub2>A</sub2></sub>, d<sub>a</sub><sub><sub2>A</sub2></sub>, min<sub>a</sub><sub><sub2>A</sub2></sub>)=(2, 7, 8), where r<sub>newp</sub><sub><sub2>A</sub2></sub>=0, c<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>a</sub><sub><sub2>A</sub2></sub>=2, d<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>a</sub><sub><sub2>A</sub2></sub>=2, prd<sub>newp</sub><sub><sub2>A</sub2></sub>=min(d<sub>a</sub><sub><sub2>A</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>A</sub2></sub>+1, min<sub>a</sub><sub><sub2>A</sub2></sub>)=min(7&#x2212;2+1, 8)=6, the permitted range of offset is: 0&#x2266;o<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2266;prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1=5. If periodic process newp<sub>A</sub>'s offset is set to 5, i.e., o<sub>newp</sub><sub><sub2>A</sub2></sub>=5, then periodic process executions newp<sub>A</sub><sub><sub2>0</sub2></sub>, newp<sub>A</sub><sub><sub2>1</sub2></sub>, newp<sub>A</sub><sub><sub2>2</sub2></sub>, newp<sub><sub2>A</sub2></sub><sub><sub2>3</sub2></sub>, newp<sub>A</sub><sub><sub2>4</sub2></sub>, newp<sub>A</sub><sub><sub2>5</sub2></sub>, . . . start at time 5, 11, 17, 23, 29, 35, . . . , and if the asynchronous process always makes requests at the earliest possible time and at the highest possible rate, the first five asynchronous request times R<sub>a</sub><sub><sub2>0</sub2></sub>, <img id="CUSTOM-CHARACTER-00003" he="3.89mm" wi="5.25mm" file="US08627319-20140107-P00003.TIF" alt="custom character" img-content="character" img-format="tif"/><img id="CUSTOM-CHARACTER-00004" he="3.89mm" wi="5.25mm" file="US08627319-20140107-P00004.TIF" alt="custom character" img-content="character" img-format="tif"/><img id="CUSTOM-CHARACTER-00005" he="3.89mm" wi="5.67mm" file="US08627319-20140107-P00005.TIF" alt="custom character" img-content="character" img-format="tif"/><img id="CUSTOM-CHARACTER-00006" he="3.89mm" wi="4.91mm" file="US08627319-20140107-P00006.TIF" alt="custom character" img-content="character" img-format="tif"/> are 0, 8, 16, 24, 32, then the asynchronous process executions a<sub>A</sub><sub><sub2>0</sub2></sub>, a<sub>A</sub><sub><sub2>1</sub2></sub>, a<sub>A</sub><sub><sub2>2</sub2></sub>, a<sub>A</sub><sub><sub2>3</sub2></sub>, a<sub>A</sub><sub><sub2>4 </sub2></sub>start at the times 5, 11, 17, 29, 35 respectively. a<sub>k</sub>, executes in the time slot of newp<sub>A</sub><sub><sub2>0</sub2></sub>, a<sub>A</sub><sub><sub2>1 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>1</sub2></sub>, a<sub>A</sub><sub><sub2>2 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>2</sub2></sub>, a<sub>A</sub><sub><sub2>3 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>4</sub2></sub>, a<sub>A</sub><sub><sub2>4 </sub2></sub>executes in the time slot of newp<sub>A</sub><sub><sub2>5</sub2></sub>, etc.</p>
<p id="p-0216" num="0249">In some cases, when the lengths of periods are relatively prime, the length of the LCM of the periods could become inconveniently long. A function &#x201c;adjustperiod&#x201d; can be used to adjust prd<sub>newp</sub><sub><sub2>i</sub2></sub>, whenever the LCM became inconveniently long.</p>
<p id="p-0217" num="0250">(See Example A below and <figref idref="DRAWINGS">FIGS. 15 and 16</figref> for an example of the use of the adjustperiod function).</p>
<p id="p-0218" num="0251">The adjustperiod function will be described below in the section related to construction of a feasible pre-run-time schedule for the P-h-k processes.</p>
<heading id="h-0047" level="1">Example 2</heading>
<p id="p-0219" num="0252">Assuming that in addition to the processes in Example 1 above, the following A-h-k process:</p>
<p id="h-0048" num="0000">a<sub>3</sub>: c<sub>a</sub><sub><sub2>3</sub2></sub>=10, d<sub>a</sub><sub><sub2>3</sub2></sub>=114, min<sub>a</sub><sub><sub2>3=</sub2></sub>114.</p>
<p id="h-0049" num="0000">If the procedure above is used to convert a<sub>3 </sub>into a periodic process newp<sub>3</sub>, prior to entering the while loop, d<sub>newp</sub><sub><sub2>3</sub2></sub>=c<sub>a</sub><sub><sub2>3</sub2></sub>+c<sub>p</sub><sub><sub2>5</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+16+2+2=30. In the first iteration of the while loop, d<sub>previous</sub>=d<sub>newp</sub><sub><sub2>3</sub2></sub>=30; d<sub>newp</sub><sub><sub2>3</sub2></sub>=c<sub>a</sub><sub><sub2>3</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+2+2=14.</p>
<p id="p-0220" num="0253">Since d<sub>previous</sub>&#x2260;d<sub>newp</sub><sub><sub2>3</sub2></sub>, deadlinefound=false. In the second iteration of the while loop, d<sub>previous</sub>=d<sub>newp</sub><sub><sub2>3</sub2></sub>=14; d<sub>newp</sub><sub><sub2>3</sub2></sub>=c<sub>a</sub><sub><sub2>3</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+2+2=14. Since d<sub>previous</sub>=d<sub>newp</sub><sub><sub2>3</sub2></sub>, deadlinefound=true. prd<sub>newp</sub><sub><sub2>3</sub2></sub>=(d<sub>a</sub><sub><sub2>3</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>3</sub2></sub>+1)=114-14+1=101.</p>
<p id="p-0221" num="0254">If the adjustperiod function and select_exp_upperbounds procedure described herein with reference to constructing a feasible pre-run-time schedule are used to adjust the period prd<sub>newp</sub><sub><sub2>3</sub2></sub>, by using prd<sub>max</sub>=prd<sub>p</sub><sub><sub2>4</sub2></sub>=200, and the following initial exponent upperbound values: exp2<sub>init</sub>=5, exp3<sub>init</sub>=3, exp5<sub>init</sub>=2, exp7<sub>init</sub>=1, exp11<sub>init</sub>=0, and use the value 24 for the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, and C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, and the value 0 for C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>, and the values 0, 1, 2, for C<sub>e57</sub>, C<sub>e35 </sub>C<sub>e23</sub>, respectively, then the select_exp_upperbounds procedure will produce the following values for the exponent upperbounds:</p>
<p id="h-0050" num="0000">exp2=5, exp3=3, exp5=2, exp7=0, exp11=0.</p>
<p id="p-0222" num="0255">After the generate_refprd procedure has used the above exponent upperbounds to compute the sorted list of reference periods in refprd, the adjustperiod function will use the sorted list of reference periods to compute the following adjusted period:</p>
<p id="h-0051" num="0000">prd<sub>newp</sub><sub><sub2>3</sub2></sub>=adjustperiod(prd<sub>newp</sub><sub><sub2>3</sub2></sub>)=adjustperiod(101)=100;</p>
<p id="h-0052" num="0000">d<sub>newp</sub><sub><sub2>3</sub2></sub>=d<sub>a</sub><sub><sub2>3</sub2></sub>&#x2212;prd<sub>newp</sub><sub><sub2>3</sub2></sub>+1=114&#x2212;100+1=15.</p>
<p id="p-0223" num="0256">The permitted range of newp<sub>3</sub>'s offset is 0&#x2266;o<sub>newp</sub><sub><sub2>3&#x2266;0</sub2></sub>+prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2212;1=0+100-1=99. In Examples 1-7, it will be assumed that all the periodic process periods are adjusted using the adjustperiod function with exactly the same parameters as was used for adjusting newp<sub>3</sub>'s period.
<br/>
(end of example)
</p>
<p id="p-0224" num="0257">The criterion for determining whether an A-h-k process should be converted into a periodic process or remain asynchronous, is based whether the ratio of the processor capacity that needs to be reserved for the new periodic process, to the processor capacity that needs to be reserved for the asynchronous process if unconverted, exceeds a specified threshold.</p>
<p id="p-0225" num="0258">For each A-h-k-p process a<sub>j </sub>that is converted into a new periodic process newp<sub>j</sub>, the reserved processor capacity (RPC) in the pre-run-time schedule can be calculated with the following relation:</p>
<p id="p-0226" num="0259">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <msub>
    <mi>RPC</mi>
    <msub>
      <mi>newp</mi>
      <mi>j</mi>
    </msub>
  </msub>
  <mo>=</mo>
  <mfrac>
    <msub>
      <mi>c</mi>
      <msubsup>
        <mi>new</mi>
        <mi>j</mi>
        <mi>&#x2032;</mi>
      </msubsup>
    </msub>
    <msub>
      <mi>prd</mi>
      <mrow>
        <mi>new</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <msub>
          <mi>p</mi>
          <mi>j</mi>
        </msub>
      </mrow>
    </msub>
  </mfrac>
</mrow>
</math>
</maths>
</p>
<p id="p-0227" num="0260">For each A-h-k-a process a<sub>j </sub>that remains asynchronous, the reserved processor capacity (RPC) in the pre-run-time schedule can be calculated with the following formula:</p>
<p id="p-0228" num="0261">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mrow>
  <msub>
    <mi>RPC</mi>
    <msub>
      <mi>a</mi>
      <mi>j</mi>
    </msub>
  </msub>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>(</mo>
      <mrow>
        <munderover>
          <mo>&#x2211;</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>p</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2208;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>S</mi>
                    <mi>p</mi>
                  </msub>
                  <mo>&#x22c3;</mo>
                  <msub>
                    <mi>S</mi>
                    <mi>p</mi>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x2a53;</mo>
            <mrow>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>a</mi>
                  <mi>j</mi>
                </msub>
              </msub>
              <mo>&#x2264;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>p</mi>
                  <mi>i</mi>
                </msub>
              </msub>
            </mrow>
          </mrow>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
        </munderover>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mfrac>
          <mrow>
            <mrow>
              <mo>&#x2308;</mo>
              <mfrac>
                <mrow>
                  <msub>
                    <mi>d</mi>
                    <msub>
                      <mi>p</mi>
                      <mi>i</mi>
                    </msub>
                  </msub>
                  <mo>-</mo>
                  <msub>
                    <mi>r</mi>
                    <msub>
                      <mi>p</mi>
                      <mi>i</mi>
                    </msub>
                  </msub>
                </mrow>
                <mrow>
                  <mi>min</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.3em" height="0.3ex"/>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <msub>
                    <mi>a</mi>
                    <msub>
                      <mstyle>
                        <mspace width="0.3em" height="0.3ex"/>
                      </mstyle>
                      <mi>j</mi>
                    </msub>
                  </msub>
                </mrow>
              </mfrac>
              <mo>&#x2309;</mo>
            </mrow>
            <mo>&#x2062;</mo>
            <msub>
              <mi>c</mi>
              <msub>
                <mi>a</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mrow>
          <msub>
            <mi>prd</mi>
            <msub>
              <mi>p</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mfrac>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>+</mo>
    <mfrac>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
      <msub>
        <msub>
          <mi>min</mi>
          <mi>a</mi>
        </msub>
        <msub>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mi>j</mi>
        </msub>
      </msub>
    </mfrac>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0229" num="0262">In general if an asynchronous process has a long minimum time between consecutive requests, then that asynchronous process is more likely to require less processor capacity to be reserved if it is treated as an A-h-k-a process compared with treating it as an A-h-k-p process.</p>
<p id="p-0230" num="0263">A procedure for converting a set of asynchronous processes {(c<sub>a</sub><sub><sub2>i</sub2></sub>, d<sub>a</sub><sub><sub2>i</sub2></sub>, min<sub>a</sub><sub><sub2>i</sub2></sub>)|i=0, 1, . . . , n}&#x2282;S<sub>A </sub>into a set of periodic processes S<sub>p</sub>={(o<sub>p</sub><sub><sub2>i</sub2></sub>, r<sub>p</sub><sub><sub2>i</sub2></sub>, d<sub>p</sub><sub><sub2>i</sub2></sub>, prd<sub>p</sub><sub><sub2>i</sub2></sub>)|i=0, 1, . . . , n} follows:</p>
<p id="h-0053" num="0000">S<sub>P</sub>:=original_set_of_P-h-k_processes;</p>
<p id="h-0054" num="0000">S<sub>A</sub>:=original_set_of_A-h-k_processes;</p>
<p id="h-0055" num="0000">S<sub>a</sub>:=S<sub>A</sub>;</p>
<p id="h-0056" num="0000">S<sub>p</sub>:=&#x3b8;;</p>
<p id="h-0057" num="0000">numofchanges:=0;</p>
<p id="h-0058" num="0000">changes:=true;</p>
<p id="h-0059" num="0000">while (changes) and (numofchanges&#x3c;someupperlimit) do</p>
<p id="h-0060" num="0000">begin</p>
<p id="p-0231" num="0264">changes:=false;</p>
<p id="p-0232" num="0265">begin
<ul id="ul0018" list-style="none">
    <li id="ul0018-0001" num="0000">
    <ul id="ul0019" list-style="none">
        <li id="ul0019-0001" num="0266">for each a<sub>j</sub>&#x2208;S<sub>A</sub>, in the order of increasing deadlines do</li>
        <li id="ul0019-0002" num="0267">begin
        <ul id="ul0020" list-style="none">
            <li id="ul0020-0001" num="0268">{The procedure described earlier should be used to tentatively convert each A-h-k asynchronous process a<sub>j</sub>&#x2208;S<sub>A </sub>into a new periodic process newp<sub>j</sub>&#x2208;S<sub>p </sub>with the same index. Note that this conversion depends not only on a<sub>j</sub>, but also on the entire set of new periodic processes in S<sub>p</sub>, the original set of P-h-k processes in S<sub>P</sub>, and the set of A-h-k-a processes in S<sub>a</sub>}</li>
            <li id="ul0020-0002" num="0269">newp<sub>j</sub>:=Tentatively_convert_into_new_periodic_process(a<sub>j</sub>, S<sub>p</sub>, S<sub>P</sub>, S<sub>a</sub>) if (d<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2266;d<sub>a</sub><sub><sub2>j</sub2></sub>) and (prd<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2267;d<sub>newp</sub><sub><sub2>j</sub2></sub>)</li>
            <li id="ul0020-0003" num="0270">then</li>
            <li id="ul0020-0004" num="0271">begin
            <ul id="ul0021" list-style="none">
                <li id="ul0021-0001" num="0272">c<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2032;=c<sub>newp</sub><sub><sub2>j</sub2></sub>+adjusted_capacity(newp<sub>j</sub>);</li>
                <li id="ul0021-0002" num="0273">RPC<sub>newp</sub><sub><sub2>j</sub2></sub>: =c<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2032;/prd<sub>newp</sub><sub><sub2>j</sub2></sub>;</li>
            </ul>
            </li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0233" num="0274">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <msub>
        <mi>RPC</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>:</mtext>
      </mstyle>
    </mrow>
    <mo>=</mo>
    <mrow>
      <mrow>
        <mo>(</mo>
        <mrow>
          <munderover>
            <mo>&#x2211;</mo>
            <mrow>
              <mrow>
                <msub>
                  <mi>p</mi>
                  <mi>i</mi>
                </msub>
                <mo>&#x2208;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <msub>
                      <mi>S</mi>
                      <mi>p</mi>
                    </msub>
                    <mo>&#x22c3;</mo>
                    <msub>
                      <mi>S</mi>
                      <mi>p</mi>
                    </msub>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x2a53;</mo>
              <mrow>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>a</mi>
                    <mi>j</mi>
                  </msub>
                </msub>
                <mo>&#x2264;</mo>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>p</mi>
                    <mi>i</mi>
                  </msub>
                </msub>
              </mrow>
            </mrow>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </munderover>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mfrac>
            <mrow>
              <mrow>
                <mo>&#x2308;</mo>
                <mfrac>
                  <mrow>
                    <msub>
                      <mi>d</mi>
                      <msub>
                        <mi>p</mi>
                        <mi>i</mi>
                      </msub>
                    </msub>
                    <mo>-</mo>
                    <msub>
                      <mi>r</mi>
                      <msub>
                        <mi>p</mi>
                        <mi>i</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mrow>
                    <mi>min</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.3em" height="0.3ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <msub>
                      <mi>a</mi>
                      <msub>
                        <mstyle>
                          <mspace width="0.3em" height="0.3ex"/>
                        </mstyle>
                        <mi>j</mi>
                      </msub>
                    </msub>
                  </mrow>
                </mfrac>
                <mo>&#x2309;</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <msub>
                <mi>c</mi>
                <msub>
                  <mi>a</mi>
                  <mi>j</mi>
                </msub>
              </msub>
            </mrow>
            <msub>
              <mi>prd</mi>
              <msub>
                <mi>p</mi>
                <mi>i</mi>
              </msub>
            </msub>
          </mfrac>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>+</mo>
      <mfrac>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
        </msub>
        <msub>
          <msub>
            <mi>min</mi>
            <mi>a</mi>
          </msub>
          <msub>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mi>j</mi>
          </msub>
        </msub>
      </mfrac>
    </mrow>
  </mrow>
  <mo>;</mo>
</mrow>
</math>
</maths>
<ul id="ul0022" list-style="none">
    <li id="ul0022-0001" num="0000">
    <ul id="ul0023" list-style="none">
        <li id="ul0023-0001" num="0000">
        <ul id="ul0024" list-style="none">
            <li id="ul0024-0001" num="0000">
            <ul id="ul0025" list-style="none">
                <li id="ul0025-0001" num="0275">if threshold(a<sub>j</sub>)*RPC<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2266;RPC<sub>a</sub><sub><sub2>j </sub2></sub></li>
                <li id="ul0025-0002" num="0276">then</li>
                <li id="ul0025-0003" num="0277">begin
                <ul id="ul0026" list-style="none">
                    <li id="ul0026-0001" num="0278">if {newp<sub>j</sub>}&#x2209;S<sub>p </sub></li>
                    <li id="ul0026-0002" num="0279">{or if the version of new p<sub>j </sub>in S<sub>p </sub>is different from the newly converted version of new p<sub>j</sub>}</li>
                    <li id="ul0026-0003" num="0280">then</li>
                    <li id="ul0026-0004" num="0281">begin</li>
                    <li id="ul0026-0005" num="0282">&#x2003;changes:=true;</li>
                    <li id="ul0026-0006" num="0283">&#x2003;S<sub>p</sub>:=S<sub>p</sub>&#x222a;{newp<sub>j </sub></li>
                    <li id="ul0026-0007" num="0284">&#x2003;{add new periodic process newp<sub>j </sub>converted from a<sub>j </sub>to the periodic set S<sub>p</sub>, replacing any older version of new p<sub>j </sub>in S<sub>p</sub>}</li>
                    <li id="ul0026-0008" num="0285">end;</li>
                    <li id="ul0026-0009" num="0286">if {a}&#x2208;S<sub>a </sub>then</li>
                    <li id="ul0026-0010" num="0287">&#x2003;S<sub>a</sub>:=S<sub>a</sub>&#x2212;{a<sub>j</sub>};</li>
                    <li id="ul0026-0011" num="0288">&#x2003;{remove a<sub>j </sub>from asynchronous set S<sub>a</sub>}</li>
                </ul>
                </li>
                <li id="ul0025-0004" num="0289">end</li>
                <li id="ul0025-0005" num="0290">else {threshold (a<sub>j</sub>)*RPC<sub>newp</sub><sub><sub2>j</sub2></sub>&#x3e;RPG<sub>a</sub><sub><sub2>j}</sub2></sub></li>
                <li id="ul0025-0006" num="0291">begin
                <ul id="ul0027" list-style="none">
                    <li id="ul0027-0001" num="0292">if {a<sub>j</sub>}&#x2209;S<sub>a </sub>then</li>
                    <li id="ul0027-0002" num="0293">begin</li>
                    <li id="ul0027-0003" num="0294">&#x2003;changes:=true;</li>
                    <li id="ul0027-0004" num="0295">&#x2003;S<sub>a</sub>:=S<sub>a </sub>&#x222a;{a<sub>j</sub>};</li>
                    <li id="ul0027-0005" num="0296">&#x2003;{add a<sub>j </sub>to asynchronous set S<sub>a</sub>}</li>
                    <li id="ul0027-0006" num="0297">end;</li>
                    <li id="ul0027-0007" num="0298">if {newp<sub>j</sub>}&#x2208;S<sub>p </sub>then</li>
                    <li id="ul0027-0008" num="0299">&#x2003;S<sub>p</sub>:=S<sub>p</sub>&#x2212;{newp<sub>j</sub>};</li>
                    <li id="ul0027-0009" num="0300">&#x2003;{remove p<sub>j </sub>from periodic set S<sub>p</sub>}</li>
                </ul>
                </li>
                <li id="ul0025-0007" num="0301">end;</li>
            </ul>
            </li>
            <li id="ul0024-0002" num="0302">end;</li>
        </ul>
        </li>
        <li id="ul0023-0002" num="0303">end;</li>
        <li id="ul0023-0003" num="0304">for each a<sub>j </sub>&#x2208;S<sub>A</sub>, in the order of decreasing deadlines do</li>
        <li id="ul0023-0004" num="0305">begin
        <ul id="ul0028" list-style="none">
            <li id="ul0028-0001" num="0306">(repeat the same procedure that was done in the order of increasing deadlines for each a<sub>j</sub>&#x2208;S<sub>A </sub>above)</li>
        </ul>
        </li>
        <li id="ul0023-0005" num="0307">end;</li>
        <li id="ul0023-0006" num="0308">if changes then
        <ul id="ul0029" list-style="none">
            <li id="ul0029-0001" num="0309">numofchanges:=numofchanges+1;</li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0234" num="0310">end;</p>
<p id="h-0061" num="0000">end;</p>
<p id="h-0062" num="0000">At the end of the procedure, the final set of A-h-k-a processes is S<sub>a </sub>and the final set of new periodic processes converted from A-h-k-p processes is S<sub>p </sub></p>
<p id="p-0235" num="0311">Above, the permitted range of the offset for each new periodic process newp<sub>i</sub>, o<sub>newp</sub><sub><sub2>i </sub2></sub>is [0, prd<sub>newp</sub><sub><sub2>j</sub2></sub>&#x2212;1].</p>
<p id="p-0236" num="0312">See <figref idref="DRAWINGS">FIG. 26</figref> for a flowchart diagram of the procedure.</p>
<p id="p-0237" num="0313">The user can decrease or increase the &#x201c;threshold(a<sub>j</sub>)&#x201d; value for each A-h-k process a<sub>j </sub>in the procedure above, to increase or decrease the likelyhood that a will be converted into a P-h-k process, depending on the application requirements. Setting the threshold value of a certain asynchronous process to a high value so that it is unlikely to be converted into a new periodic process, may in some cases increase the schedulability of that process; in other cases converting an asynchronous process into a new periodic process may increase schedulability; but increasing schedulability may not be the only objective in a particular application. In some cases, one may prefer that a certain A-h-k process be converted into a new periodic process whenever possible, to reduce scheduling overhead and/or simplify the timing analysis and make it easier to predict the system's behavior.</p>
<heading id="h-0063" level="1">Example 3</heading>
<p id="p-0238" num="0314">Assuming that the threshold value for each A-h-k process is set as follows: threshold(a<sub>0</sub>)=10, threshold(a<sub>j</sub>)=10, threshold(a<sub>2</sub>)=1, threshold(a<sub>3</sub>)=2.5, threshold(a<sub>9</sub>)=1, the procedure above will calculate the following for each of the processes in Examples 1-2.</p>
<p id="p-0239" num="0315">a<sub>0</sub>:</p>
<p id="h-0064" num="0000">d<sub>newp</sub><sub><sub2>0</sub2></sub>=2; prd<sub>newp</sub><sub><sub2>0</sub2></sub>&#x2266;min(d<sub>a</sub><sub><sub2>0</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>0</sub2></sub>+1, min<sub>a</sub><sub><sub2>0</sub2></sub>)=2&#x2212;2+1=1&#x3c;c<sub>newp</sub><sub><sub2>0</sub2></sub>=2</p>
<p id="h-0065" num="0000">a<sub>0 </sub>will NOT be converted into a new periodic process and will remain asynchronous and belong to the set A-h-k-a.</p>
<p id="p-0240" num="0316">a<sub>1 </sub></p>
<p id="h-0066" num="0000">d<sub>newp</sub><sub><sub2>1</sub2></sub>=c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>1</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>=2+&#x250c;4/1000&#x2510;2=4</p>
<p id="h-0067" num="0000">prd<sub>newp</sub><sub><sub2>1</sub2></sub>=min(d<sub>a</sub><sub><sub2>1</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>1</sub2></sub>+1, min<sub>a</sub><sub><sub2>1</sub2></sub>)=7&#x2212;4+1=4</p>
<p id="h-0068" num="0000">RPC<sub>newp</sub><sub><sub2>1</sub2></sub>=c<sub>newp</sub><sub><sub2>1</sub2></sub>&#x2032;/prd<sub>newp</sub><sub><sub2>1</sub2></sub>=4/4=1</p>
<p id="h-0069" num="0000">RPC<sub>a</sub><sub><sub2>1</sub2></sub>=&#x250c;(d<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2212;r<sub>newp</sub><sub><sub2>3</sub2></sub>)/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;(d<sub>p</sub><sub><sub2>4</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>4</sub2></sub>)/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;(d<sub>p</sub><sub><sub2>5</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>5</sub2></sub>)/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>+&#x250c;(d<sub>p</sub><sub><sub2>6</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>6</sub2></sub>)/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;(d<sub>p</sub><sub><sub2>7</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>7</sub2></sub>)/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>=2/100+2/200+2/200+2/200+2/200+2/1000=0.062&#x3c;threshold(a<sub>1</sub>)*RPC<sub>newp</sub><sub><sub2>1</sub2></sub>=10*1=10</p>
<p id="h-0070" num="0000">a<sub>1 </sub>will NOT be converted into a periodic process, and will remain asynchronous and belong to the Set A-h-k-a.</p>
<p id="p-0241" num="0317">a<sub>3</sub>:</p>
<p id="h-0071" num="0000">d<sub>newp</sub><sub><sub2>3</sub2></sub>=c<sub>a</sub><sub><sub2>3</sub2></sub>+&#x250c;<sub>newp</sub><sub><sub2>3</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0 </sub2></sub>&#x250c;d<sub>newp</sub><sub><sub2>3</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510; c<sub>a</sub><sub><sub2>1</sub2></sub>=10+&#x250c;30/1000&#x2510;2+&#x250c;30/1000&#x2510;2=14</p>
<p id="h-0072" num="0000">prd<sub>newp</sub><sub><sub2>3</sub2></sub>=min(d<sub>a</sub><sub><sub2>3</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>3</sub2></sub>+1, min<sub>a</sub><sub><sub2>3</sub2></sub>)=114&#x2212;14+1=101</p>
<p id="h-0073" num="0000">After the adjustperiod function is applied (see Example 2):</p>
<p id="h-0074" num="0000">prd<sub>newp</sub><sub><sub2>3</sub2></sub>=ad just period (101)=100;</p>
<p id="h-0075" num="0000">d<sub>newp</sub><sub><sub2>3</sub2></sub>=d<sub>a</sub><sub><sub2>3</sub2></sub>&#x2212;prd<sub>newp</sub><sub><sub2>3</sub2></sub>+1=114&#x2212;100+1=15;</p>
<p id="h-0076" num="0000">RPC<sub>newp</sub><sub><sub2>3</sub2></sub>=c<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2032;/prd<sub>newp</sub>3=14/100=0.14;</p>
<p id="h-0077" num="0000">RPC<sub>a</sub><sub><sub2>3</sub2></sub>=&#x250c;(d<sub>p</sub><sub><sub2>4</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>4</sub2></sub>)/min<sub>a</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>3</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>+i(d<sub>p</sub><sub><sub2>6 </sub2></sub>r<sub>P</sub><sub><sub2>6</sub2></sub>)/min<sub>a</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>3</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;(d<sub>p</sub><sub><sub2>7</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>7</sub2></sub>)/min<sub>a</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>3</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>+c<sub>a</sub><sub><sub2>3</sub2></sub>/min<sub>a</sub><sub><sub2>3</sub2></sub>=20/200+20/200+20/200+10/113=0.388&#x2267;threshold(a<sub>3</sub>)*RPC<sub>newp</sub><sub><sub2>3</sub2></sub>=2.5*0.14=0.35</p>
<p id="h-0078" num="0000">a<sub>3 </sub>will be converted into a new periodic process newp<sub>3</sub>=(r<sub>newp</sub><sub><sub2>3</sub2></sub>, c<sub>newp</sub><sub><sub2>3</sub2></sub>, d<sub>newp</sub><sub><sub2>3</sub2></sub>, prd<sub>newp</sub><sub><sub2>3</sub2></sub>)=(0, 10, 14, 100).</p>
<p id="p-0242" num="0318">a<sub>2</sub>:</p>
<p id="h-0079" num="0000">d<sub>newp</sub><sub><sub2>2</sub2></sub>=c<sub>a</sub><sub><sub2>2</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>2</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>5</sub2></sub>=10+&#x250c;40/1000&#x2510;2+&#x250c;40/1000&#x2510;2+&#x250c;40/100&#x2510;10+&#x250c;40/200&#x2510;16=40</p>
<p id="h-0080" num="0000">prd<sub>newp</sub><sub><sub2>2</sub2></sub>=min(d<sub>a</sub><sub><sub2>2</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>2</sub2></sub>+1, min<sub>a</sub><sub><sub2>2</sub2></sub>)=239&#x2212;40+1=200</p>
<p id="h-0081" num="0000">RPC<sub>newp</sub><sub><sub2>2</sub2></sub>=c<sub>newp</sub><sub><sub2>2</sub2></sub>&#x2032;/prd<sub>newp</sub><sub><sub2>2</sub2></sub>=14/200=0.07</p>
<p id="h-0082" num="0000">RPC<sub>a</sub><sub><sub2>2</sub2></sub>=c<sub>a</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>2</sub2></sub>=10/1000=0.01&#x3c;threshold (a<sub>2</sub>)*RPC<sub>newp</sub><sub><sub2>2=</sub2></sub>1*0.07=0.07</p>
<p id="h-0083" num="0000">a<sub>2 </sub>will NOT be converted into a periodic process, and will remain asynchronous and belong to the set A-h-k-a.</p>
<p id="p-0243" num="0319">a<sub>9</sub>:</p>
<p id="h-0084" num="0000">d<sub>newp</sub><sub><sub2>9</sub2></sub>=c<sub>a</sub><sub><sub2>9</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>+d<sub>newp</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>2</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>2</sub2></sub>+&#x250c;d<sub>newp</sub><sub><sub2>9</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;d<sub>newp</sub>9/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>5</sub2></sub>=10+&#x250c;50/1000&#x2510;2+&#x250c;50/1000&#x2510;2+&#x250c;50/1000&#x2510;10+&#x250c;50/100&#x2510;10+&#x250c;50/200&#x2510;16=50</p>
<p id="h-0085" num="0000">prd<sub>newp</sub><sub><sub2>9</sub2></sub>=min(d<sub>a</sub><sub><sub2>9</sub2></sub>&#x2212;d<sub>newp</sub><sub><sub2>9</sub2></sub>+1, min<sub>a</sub><sub><sub2>9</sub2></sub>)=259&#x2212;50+1=200</p>
<p id="h-0086" num="0000">RPC<sub>newp</sub><sub><sub2>9</sub2></sub>=c<sub>newp</sub><sub><sub2>9</sub2></sub>&#x2032;/prd<sub>newp</sub><sub><sub2>9</sub2></sub>=24/200=0.12</p>
<p id="h-0087" num="0000">RPC<sub>a</sub><sub><sub2>9</sub2></sub>=c<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>9</sub2></sub>=10/1000=0.01&#x3c;threshold (a<sub>9</sub>)*RPC<sub>newp</sub><sub><sub2>2</sub2></sub>=1*0.12=0.</p>
<p id="h-0088" num="0000">a<sub>9 </sub>will NOT be converted into a periodic process, and will remain asynchronous and belong to the set A-h-k-a.</p>
<p id="h-0089" num="0000">Except for prd<sub>newp</sub><sub><sub2>3</sub2></sub>, that was adjusted from 101 to 100, all other periods in this example remain unchanged by the adjustperiod function.</p>
<p id="p-0244" num="0320">An alternative case where threshold(a<sub>3</sub>) is set to an arbitrary large value, ensuring that A-h-k process a<sub>3 </sub>is not converted into a periodic process, is discussed below with respect to Example 13.</p>
<p id="h-0090" num="0000">(end of example)</p>
<p id="p-0245" num="0321">There exists a circular dependency relationship between the calculation of the RPC for each A-h-k-a process and the determination of the set of A-h-k-a processes. The calculation of the RPC for each A-h-k-a process depends on the original set of P-h-k processes S<sub>p</sub>, the set of new periodic processes S<sub>p </sub>converted from A-h-k-p periodic processes, and the set of processes that remain asynchronous S<sub>a</sub>.</p>
<p id="p-0246" num="0322">However determining which A-h-k process should be converted into a new periodic process in turn depends on the calculation of the RPC amount for the corresponding A-h-k-a process. It is for this reason that an iterative procedure is used for this task.</p>
<p id="p-0247" num="0323">Below, all periodic processes with hard-deadlines and known characteristics (including all new periodic processes in S<sub>p </sub>that were converted from A-h-k-p processes, and the original set of P-h-k processes in S<sub>p</sub>), will be referred to as P-h-k processes.</p>
<p id="h-0091" num="0000">Step 2: Construct a Feasible Pre-Run-Time Schedule for the P-h-k Processes</p>
<p id="p-0248" num="0324">In this step, the schedulabiliy of the set of all periodic processes with hard deadlines and known characteristics (P-h-k processes) are determined using their adjusted computation times, and a feasible pre-run-time schedule that satisfies all the specified constraints is constructed.</p>
<p id="p-0249" num="0325">In some cases, when the lengths of periods are relatively prime, the length of the LCM of the periods could become inconveniently long. One may use a function &#x201c;adjustperiod&#x201d; to adjust the period length of each periodic process, whenever the LCM becomes inconveniently long.</p>
<p id="p-0250" num="0326">Preferred function and procedures for adjusting the periods of periodic processes in order to reduce the Least Common Multiple (LCM) of the period lengths, and the pre-run-time schedule length are as follows:</p>
<p id="h-0092" num="0000">function adjustperiod(prd);</p>
<p id="h-0093" num="0000">begin</p>
<p id="p-0251" num="0327">j:=1;</p>
<p id="p-0252" num="0328">while refprd[j]&#x2266;prd do
<ul id="ul0030" list-style="none">
    <li id="ul0030-0001" num="0000">
    <ul id="ul0031" list-style="none">
        <li id="ul0031-0001" num="0329">j:=j+1;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0253" num="0330">adjustperiod:=refprd[j&#x2212;1];</p>
<p id="h-0094" num="0000">end;</p>
<p id="h-0095" num="0000">procedure generate_refprds(exp2, exp3, exp5, exp7, exp11);</p>
<p id="h-0096" num="0000">begin</p>
<p id="p-0254" num="0331">count:=1;</p>
<p id="p-0255" num="0332">for i:=0 to exp2 do</p>
<p id="p-0256" num="0333">begin
<ul id="ul0032" list-style="none">
    <li id="ul0032-0001" num="0000">
    <ul id="ul0033" list-style="none">
        <li id="ul0033-0001" num="0334">for j:=0 to exp3 do</li>
        <li id="ul0033-0002" num="0335">begin
        <ul id="ul0034" list-style="none">
            <li id="ul0034-0001" num="0336">for k:=0 to exp5 do</li>
            <li id="ul0034-0002" num="0337">begin
            <ul id="ul0035" list-style="none">
                <li id="ul0035-0001" num="0338">for 1:=0 to exp7 do</li>
                <li id="ul0035-0002" num="0339">begin
                <ul id="ul0036" list-style="none">
                    <li id="ul0036-0001" num="0340">for f:=0 to exp11 do</li>
                    <li id="ul0036-0002" num="0341">begin</li>
                    <li id="ul0036-0003" num="0342">&#x2003;refprd[count]:=2<sup>i</sup>*3<sup>j</sup>*5<sup>k</sup>*7<sup>l</sup>*11<sup>f</sup>;</li>
                    <li id="ul0036-0004" num="0343">&#x2003;count:=count+1;</li>
                    <li id="ul0036-0005" num="0344">end;</li>
                </ul>
                </li>
                <li id="ul0035-0003" num="0345">end;</li>
            </ul>
            </li>
            <li id="ul0034-0003" num="0346">end;</li>
        </ul>
        </li>
        <li id="ul0033-0003" num="0347">end;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0257" num="0348">end;</p>
<p id="p-0258" num="0349">for i:=1 to count&#x2212;2 do</p>
<p id="p-0259" num="0350">begin
<ul id="ul0037" list-style="none">
    <li id="ul0037-0001" num="0000">
    <ul id="ul0038" list-style="none">
        <li id="ul0038-0001" num="0351">for j:=i+1 to count&#x2212;1 do</li>
        <li id="ul0038-0002" num="0352">begin
        <ul id="ul0039" list-style="none">
            <li id="ul0039-0001" num="0353">if refprd[i]&#x3e;refprd[j]</li>
            <li id="ul0039-0002" num="0354">then</li>
            <li id="ul0039-0003" num="0355">begin
            <ul id="ul0040" list-style="none">
                <li id="ul0040-0001" num="0356">temp:=refprd[i];</li>
                <li id="ul0040-0002" num="0357">refprd[i]:=refprd[j];</li>
                <li id="ul0040-0003" num="0358">refprd[j]:=temp;</li>
            </ul>
            </li>
            <li id="ul0039-0004" num="0359">end;</li>
        </ul>
        </li>
        <li id="ul0038-0003" num="0360">end;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0260" num="0361">end;</p>
<p id="h-0097" num="0000">end;</p>
<p id="p-0261" num="0000">
<ul id="ul0041" list-style="none">
    <li id="ul0041-0001" num="0362">procedure select_exp_upperbounds(prd<sub>max</sub>, exp2<sub>init</sub>, exp3<sub>init</sub>, exp3<sub>init</sub>, exp5<sub>init</sub>, exp7, exp11<sub>init</sub>, C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>, C<sub>e57</sub>, C<sub>e35</sub>, C<sub>e23</sub>);
<br/>
begin
<br/>
exp2:=exp2<sub>init</sub>;
<br/>
exp3:=exp3<sub>init</sub>;
<br/>
exp5:=exp5<sub>init</sub>;
<br/>
exp7:=exp7<sub>init</sub>;
<br/>
exp11:=exp11<sub>init; </sub>
<br/>
n:=2<sup>exp2</sup>*3<sup>exp3</sup>*5<sup>exp5</sup>*7<sup>exp7</sup>*11<sup>exp11</sup>;
<br/>
stop:=false;
<br/>
if (C<sub>m</sub>*prd<sub>max</sub>&#x3e;n) then
<br/>
begin
</li>
</ul>
</p>
<p id="p-0262" num="0363">while ((C<sub>m</sub>*prd<sub>max</sub>)&#x3e;n) and (not(stop))) do</p>
<p id="p-0263" num="0364">begin
<ul id="ul0042" list-style="none">
    <li id="ul0042-0001" num="0000">
    <ul id="ul0043" list-style="none">
        <li id="ul0043-0001" num="0365">if (C<sub>m11</sub>*prd<sub>max</sub>&#x2267;11*n)</li>
        <li id="ul0043-0002" num="0366">then</li>
        <li id="ul0043-0003" num="0367">begin
        <ul id="ul0044" list-style="none">
            <li id="ul0044-0001" num="0368">n:=n*11;</li>
            <li id="ul0044-0002" num="0369">exp11:=exp11+1;</li>
        </ul>
        </li>
        <li id="ul0043-0004" num="0370">end</li>
        <li id="ul0043-0005" num="0371">else if ((C<sub>m7</sub>*prd<sub>max</sub>)&#x2267;(7*n))
        <ul id="ul0045" list-style="none">
            <li id="ul0045-0001" num="0372">then</li>
            <li id="ul0045-0002" num="0373">begin
            <ul id="ul0046" list-style="none">
                <li id="ul0046-0001" num="0374">n:=n*7;</li>
                <li id="ul0046-0002" num="0375">exp7:=exp7+1;</li>
            </ul>
            </li>
            <li id="ul0045-0003" num="0376">end</li>
            <li id="ul0045-0004" num="0377">else if ((C<sub>m5</sub>*prd<sub>max</sub>)&#x2267;(5*n))
            <ul id="ul0047" list-style="none">
                <li id="ul0047-0001" num="0378">then</li>
                <li id="ul0047-0002" num="0379">begin
                <ul id="ul0048" list-style="none">
                    <li id="ul0048-0001" num="0380">n:=n*5;</li>
                    <li id="ul0048-0002" num="0381">exp5:=exp5+1;</li>
                </ul>
                </li>
                <li id="ul0047-0003" num="0382">end</li>
                <li id="ul0047-0004" num="0383">else if ((C<sub>m3</sub>*prd<sub>max</sub>)&#x2267;(3*n))
                <ul id="ul0049" list-style="none">
                    <li id="ul0049-0001" num="0384">then</li>
                    <li id="ul0049-0002" num="0385">begin</li>
                    <li id="ul0049-0003" num="0386">&#x2003;n:=n*3;</li>
                    <li id="ul0049-0004" num="0387">&#x2003;exp3:=exp3+1;</li>
                    <li id="ul0049-0005" num="0388">end</li>
                    <li id="ul0049-0006" num="0389">else if ((C<sub>m2</sub>*prd<sub>max</sub>)&#x2267;(2*n))</li>
                    <li id="ul0049-0007" num="0390">&#x2003;then</li>
                    <li id="ul0049-0008" num="0391">&#x2003;begin</li>
                    <li id="ul0049-0009" num="0392">&#x2003;n:=n*2;</li>
                    <li id="ul0049-0010" num="0393">&#x2003;exp2:=exp2+1;</li>
                    <li id="ul0049-0011" num="0394">&#x2003;end</li>
                    <li id="ul0049-0012" num="0395">&#x2003;else</li>
                    <li id="ul0049-0013" num="0396">&#x2003;begin</li>
                    <li id="ul0049-0014" num="0397">&#x2003;stop:=true;</li>
                    <li id="ul0049-0015" num="0398">&#x2003;end;</li>
                </ul>
                </li>
            </ul>
            </li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0264" num="0399">end;</p>
<p id="h-0098" num="0000">end</p>
<p id="h-0099" num="0000">else</p>
<p id="h-0100" num="0000">begin {C<sub>m</sub>*prd<sub>max</sub>&#x2266;n}</p>
<p id="p-0265" num="0400">while (((C<sub>d</sub>*prd<sub>max</sub>)&#x3c;n) and (not(stop))) do</p>
<p id="p-0266" num="0401">begin
<ul id="ul0050" list-style="none">
    <li id="ul0050-0001" num="0000">
    <ul id="ul0051" list-style="none">
        <li id="ul0051-0001" num="0402">if (((C<sub>d7</sub>*prd<sub>max</sub>)&#x2266;(n div 7)) and (exp7&#x3e;C<sub>e7</sub>) and ((exp5&#x2212;exp7)&#x2266;C<sub>e57</sub>))</li>
        <li id="ul0051-0002" num="0403">then</li>
        <li id="ul0051-0003" num="0404">begin
        <ul id="ul0052" list-style="none">
            <li id="ul0052-0001" num="0405">n:=n div 7;</li>
            <li id="ul0052-0002" num="0406">exp7:=exp7-1;</li>
        </ul>
        </li>
        <li id="ul0051-0004" num="0407">end</li>
        <li id="ul0051-0005" num="0408">else if (((C<sub>d5</sub>*prd<sub>max</sub>&#x2266;(n div 5)) and (exp5&#x3e;C<sub>e5</sub>) and ((exp3&#x2212;exp5)&#x2266;C<sub>e35</sub>))
        <ul id="ul0053" list-style="none">
            <li id="ul0053-0001" num="0409">then</li>
            <li id="ul0053-0002" num="0410">begin
            <ul id="ul0054" list-style="none">
                <li id="ul0054-0001" num="0411">n:=n div 5;</li>
                <li id="ul0054-0002" num="0412">exp5:=exp5-1;</li>
            </ul>
            </li>
            <li id="ul0053-0003" num="0413">end</li>
            <li id="ul0053-0004" num="0414">else if (((C<sub>d3</sub>*prd<sub>max</sub>)&#x2266;(n div 3)) and (exp3&#x3e;C<sub>e3</sub>) and ((exp2&#x2212;exp3) C<sub>e23</sub>))
            <ul id="ul0055" list-style="none">
                <li id="ul0055-0001" num="0415">then</li>
                <li id="ul0055-0002" num="0416">begin
                <ul id="ul0056" list-style="none">
                    <li id="ul0056-0001" num="0417">n:=n div 3;</li>
                    <li id="ul0056-0002" num="0418">exp3:=exp3-1;</li>
                </ul>
                </li>
                <li id="ul0055-0003" num="0419">end</li>
                <li id="ul0055-0004" num="0420">else if (((C<sub>d2</sub>*prd<sub>max</sub>)&#x2266;(n div 2)) and (exp2&#x3e;C<sub>e2</sub>))
                <ul id="ul0057" list-style="none">
                    <li id="ul0057-0001" num="0421">then</li>
                    <li id="ul0057-0002" num="0422">begin</li>
                    <li id="ul0057-0003" num="0423">&#x2003;n:=n div 2;</li>
                    <li id="ul0057-0004" num="0424">&#x2003;exp2:=exp2-1;</li>
                    <li id="ul0057-0005" num="0425">end</li>
                    <li id="ul0057-0006" num="0426">else</li>
                    <li id="ul0057-0007" num="0427">begin</li>
                    <li id="ul0057-0008" num="0428">&#x2003;stop:=true;</li>
                    <li id="ul0057-0009" num="0429">end;</li>
                </ul>
                </li>
            </ul>
            </li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0267" num="0430">end;</p>
<p id="h-0101" num="0000">end;</p>
<p id="p-0268" num="0431">The function adjustperiod uses a sorted list of reference periods &#x201c;refprd&#x201d; to adjust the length of the period of each periodic process. It adjusts the length of the period of each periodic process &#x201c;prd&#x201d; to the largest reference period ref prd[x] that is smaller or equal to prd.</p>
<p id="p-0269" num="0432">The procedure generate_prd creates a sorted list of reference periods &#x201c;ref prd&#x201d;, in which each reference period ref prd[x] is equal to 2<sup>i</sup>*3<sup>j</sup>*5<sup>k</sup>*7<sup>l</sup>*11<sup>f</sup>, . . . , for some integers i, j, k, l, f, . . . where 0&#x2266;i&#x2266;exp2, 0&#x2266;j&#x2266;exp3, 0&#x2266;k&#x2266;exp5, 0&#x2266;1&#x2266;exp7, 0&#x2266;f&#x2266;exp11, . . . exp2, exp3, exp5, exp7, exp11, . . . , are the upperbounds on the exponents i, j, k, l, f, . . . , that are applied to the prime numbers 2, 3, 5, 7, 11, . . . .</p>
<p id="p-0270" num="0433">In order to avoid redundancy, we will illustrate and discuss the methods using only the first five prime numbers 2, 3, 5, 7, 11. It is possible to use more prime numbers, that is, 13, 17, 19, etc., if larger period lengths are needed. One should be able to extend the methods shown here to include any additional prime numbers should the need arise.</p>
<p id="p-0271" num="0434">The procedure select exp_upperbounds selects the exponent upperbound values exp2, exp3, exp5, exp7, exp11, based on the maximum length of the original periods prd<sub>max</sub>, and a set of initial values exp2<sub>init</sub>, exp3<sub>init</sub>, exp5<sub>init</sub>, exp7<sub>init</sub>, exp11<sub>init</sub>, for exp2, exp3, exp5, exp7, exp11, respectively. The Least Common Multiple (LCM) of the adjusted periods will be bounded by 2<sup>exp2</sup>*3<sup>exp3</sup>*5<sup>exp5</sup>*7<sup>exp7</sup>*11<sup>exp11</sup>.</p>
<p id="p-0272" num="0435">In general, larger values of the exponent upperbounds will increase the chances of the adjusted period length being close to the original schedule length, and reduce wasted processor capacity but will increase the LCM of the periods and schedule length. When the exponent upperbound associated with a larger prime number, say exp11, is increased relative to the exponent upperbounds associated with smaller prime numbers, say exp7, exp5, exp3, exp2, while the exponent upperbounds associated with the smaller prime numbers are not smaller than some minimum value, e.g., min{exp7}=1, min{exp5}=2, min{exp3}=3, min{exp2}=5, respectively, it will also have the effect of reducing wasted processor capacity but increasing the LCM and schedule length.</p>
<p id="p-0273" num="0436">The procedure select_exp_upperbounds, allows exp2, exp3, exp5, exp7, exp11, to be fine tuned according to specific application requirements. In this procedure, larger values of the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>; and smaller values for the parameters C<sub>e57</sub>; C<sub>e35</sub>, C<sub>e23</sub>, are more likely to result in greater values for exp11, exp7, exp5, exp3, exp2, and are more likely to result in adjusted period lengths that are closer to the original period lengths and that have less wasted processor capacity, but are also more likely to result in longer LCMs of the periods, longer schedule lengths, and a greater number of instances of new processes.</p>
<p id="p-0274" num="0437">Assuming that the value of the exponent upperbounds associated with smaller prime numbers are kept greater than certain minimum values, increasing the value of the parameters C<sub>mx</sub>, or C<sub>dx </sub>associated with a larger prime number x, say 11, as opposed to increasing the value of the parameters C<sub>my </sub>or C<sub>dy </sub>associated with a smaller prime number y, say 2, is more likely to have a greater effect in reducing wasted processor capacity, but is also more likely to have a greater effect in increasing the LCM of the periods and the schedule length.</p>
<p id="p-0275" num="0438">If the value zero is assigned to all the parameters C<sub>mx </sub>or C<sub>dx </sub>associated with all the prime numbers x except one of the prime numbers x<sub>1</sub>, then the periods will all be set to some exponential value of base x<sub>1</sub>, and will result in very short LCMs of the periods but very significant amounts of wasted processor capacity, unless the original period lengths coincide with those exponential values. The parameters C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>, may be used to ensure that the periods are set to multiples of 7<sup>C</sup><sup><sub2>e7</sub2></sup>*5<sup>C</sup><sup><sub2>e5</sub2></sup>*3<sup>C</sup><sup><sub2>e3</sub2></sup>*2<sup>C</sup><sup><sub2>e2 </sub2></sup>when 0&#x2266;C<sub>e7</sub>&#x2266;exp7<sub>init</sub>, 0&#x2266;C<sub>e5</sub>&#x2266;exp5<sub>init</sub>, 0&#x2266;C<sub>e3</sub>&#x2266;exp3<sub>ink</sub>, 0&#x2266;C<sub>e2</sub>&#x2266;exp2<sub>init</sub>, if required by the application. For example, setting C<sub>e7</sub>=0, C<sub>e5</sub>=2, C<sub>e3</sub>=0, C<sub>e2</sub>=2 in combination with suitable values of the other parameters of the procedure may ensure that the periods are set to multiples of 100. (Obviously, one can also set the reference periods to be multiples of any desired number, simply by multiplying the numbers generated by the procedure generate_refprds by the desired number.)</p>
<p id="p-0276" num="0439">The objective of fine tuning the values of exp2, exp3, exp5, exp7, exp11, is to create a list of reference periods refprd[x], that will have values that are sufficiently close to the original period lengths, so that the adjusted period lengths will also have values that are sufficiently close to the original period lengths, in order to ensure that the processor utilization level resulting from the adjusted period lengths does not exceed the processor utilization level required by the application, to satisfy the processor utilization level required by the application, and maximize the chances of finding a feasible schedule, while at the same time the values should be as closely harmonically related to each other (having a smaller LCM value) as possible, in order to reduce the schedule length and the number of instances of new processes, and reduce storage requirements and system overhead.</p>
<p id="p-0277" num="0440">For example, if the following conditions are satisfied, the difference between the original period length and the adjusted period length will never exceed 10% of the original period length:</p>
<p id="h-0102" num="0000">(1) the exponent upperbounds are not smaller than the following minimum values: min{exp7}=1, min{exp5}=2, min{exp3}=3, min{exp2}=5;</p>
<p id="h-0103" num="0000">(2) the maximum period length is not greater than 2<sup>(exp2-3)</sup>*3<sup>(exp3-1)</sup>*5<sup>exp5</sup>*7<sup>exp7</sup>*11<sup>exp</sup>11</p>
<p id="h-0104" num="0000">(the maximum period length is not greater than the maximum LCM length divided by 24).</p>
<p id="p-0278" num="0441">If the exponent upperbound exp11 is not smaller than the minimum value min{exp11}=1, then the maximum period length can be further increased, while still guaranteeing the same utilization level. For example, under the following conditions, the difference between the original period length and the adjusted period length will never exceed 10% of the original period length:</p>
<p id="h-0105" num="0000">(1) the exponent upperbounds are not smaller than the following minimum values: min{exp11}=1, min{exp7}=1, min{exp5}=2, min{exp3}=3, min{exp2}=5;</p>
<p id="h-0106" num="0000">(2) the maximum period length is not greater than 2<sup>(exp2-1)</sup>*3<sup>(exp3-2)</sup>*5<sup>exp5</sup>*7<sup>exp7</sup>*11<sup>exp</sup>11 (the maximum period length is not greater than the maximum LCM length divided by 18).</p>
<p id="p-0279" num="0442">The described system and methods, have the useful property that, they tend to produce adjusted period lengths that are very close to the original period lengths for processes with shorter original periods, that is, those processes that are likely to constitute the largest proportion of the computation work load; while producing adjusted period lengths that are not so close to the original periods for processes whose original period lengths are large and close to the LCM of the periods, which in many applications represent the smallest work loads. In special cases where processes with periods close to the maximum period represent a significant proportion of the computation work load, one can use larger values for the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2 </sub>to produce adjusted period lengths that are closer to the original schedule lengths for processes with large original period lengths.</p>
<heading id="h-0107" level="1">Example A</heading>
<p id="h-0108" num="0000">Assume that it is required to schedule processes corresponding to the following tasks:</p>
<p id="h-0109" num="0000">(1) CD-Audio tasks, that need to be serviced at a rate of 2.75 KHz, that is, prd<sub>CD-Audio</sub>=364 us;</p>
<p id="h-0110" num="0000">(2) ISDN Channnel tasks that need to be serviced at a rate of 1.5 KHz, that is, prd<sub>ISDN</sub>=667 us;</p>
<p id="h-0111" num="0000">(3) Voice Channnel tasks that need to be serviced at a rate of 1.375 KHz, that is, prd<sub>Voice</sub>=727 us;</p>
<p id="h-0112" num="0000">(4) Keyboard/Mouse tasks that need to be serviced periodically with periods of length prd<sub>Keyboard/Mouse</sub>=100 ms=100,000 us.</p>
<p id="p-0280" num="0443">Assume that the following initial exponent upperbound values are used: exp2<sub>init</sub>=5, exp3<sub>init</sub>=3, exp5<sub>init</sub>=2, exp7<sub>init</sub>=1, exp11<sub>init</sub>=0, and use the value 24 for the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, and C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, the value 0 for C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>, and the values 0, 1, 2, for C<sub>e57</sub>, C<sub>e35</sub>, C<sub>e23</sub>, respectively.</p>
<p id="p-0281" num="0444">The select_exp_upperbounds procedure will produce the following values for the exponent upperbounds:</p>
<p id="h-0113" num="0000">exp2=5, exp3=3, exp5=2, exp7=1, exp11=1.</p>
<p id="p-0282" num="0445">After the generate_refprd procedure has used the above exponent upperbounds to compute the sorted list of reference periods in refprd, the adjustperiod function will use the sorted list of reference periods to compute the following adjusted periods:</p>
<p id="h-0114" num="0000">prd<sub>CD-Audio</sub>=360 (original 364),</p>
<p id="h-0115" num="0000">prd<sub>ISDN</sub>=660 (original 667),</p>
<p id="h-0116" num="0000">prd<sub>Voice</sub>=720 (original 727),</p>
<p id="h-0117" num="0000">prd<sub>Keyboard/Mouse</sub>=92400 (original 100000).</p>
<p id="h-0118" num="0000">The LCM of the periods will be 277200, which is 3 times the length of the maximum adjusted process period length.</p>
<p id="p-0283" num="0446">Assume now that such a high precision is not required when adjusting the periods of the processes with maximum process length, then a smaller value, say 1, may be used for the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, and C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, and still use the value 0 for C<sub>e7</sub>, C<sub>e5</sub>, C<sub>e3</sub>, C<sub>e2</sub>, the values 0, 1, 2, for C<sub>e57</sub>, C<sub>e35</sub>, C<sub>e23</sub>, respectively.</p>
<p id="p-0284" num="0447">Assume that the same initial exponent upperbound values are used: exp2<sub>init</sub>=5, exp3<sub>init</sub>=3, exp5<sub>init</sub>=2, exp7<sub>init</sub>=1, exp11<sub>init</sub>=0.</p>
<p id="h-0119" num="0000">The select_exp_upperbounds procedure will produce the following values for the exponent upperbounds:</p>
<p id="h-0120" num="0000">exp2=5, exp3=3, exp5=2, exp7=1, exp11=0.</p>
<p id="p-0285" num="0448">After the generate_refprd procedure has used the above exponent upperbounds to compute the sorted list of reference periods in ref prd, the adjustperiod function will use the sorted list of reference periods to compute the following adjusted periods:</p>
<p id="h-0121" num="0000">prd<sub>CD-Audio</sub>=360 (original 364),</p>
<p id="h-0122" num="0000">prd<sub>ISDN</sub>=630 (original 667),</p>
<p id="h-0123" num="0000">prd<sub>Voice</sub>=720 (original 727),</p>
<p id="h-0124" num="0000">prd<sub>Keyboard/Mouse</sub>=75600 (original 100000).</p>
<p id="h-0125" num="0000">The LCM of the periods will be 75600, which is 1 times the length of the maximum adjusted process period length.</p>
<p id="p-0286" num="0449">Note that in the second case, a smaller value for the parameters C<sub>m</sub>, C<sub>m11</sub>, C<sub>m7</sub>, C<sub>m5</sub>, C<sub>m3</sub>, C<sub>m2</sub>, and C<sub>d</sub>, C<sub>d7</sub>, C<sub>d5</sub>, C<sub>d3</sub>, C<sub>d2</sub>, resulted in smaller values for the exponent upperbounds (exp11 was reduced from 1 to 0), and consequently, resulted in shorter adjusted periods, where the difference is greatest for the processes with the largest periods (prd<sub>Keyboard/Mouse </sub>was reduced from 92400 to 75600), and the LCM was also noticeably reduced from 3 times the maximum adjusted period length to 1 times the maximum adjusted period length. Because the adjusted period lengths in the second case are shorter compared with the first case, the processor utilization level resulting from the shorter adjusted period lengths in the second case will be greater than the processor utilization level in the first case. If the processor utilization level in the second case does not exceed the processor utilization level required by the application, then one may use the adjusted period lengths obtained in the second case to obtain a shorter LCM, to further reduce the schedule length and the number of instances of new processes, and further reduce storage requirements and system overhead. (end of example)</p>
<p id="p-0287" num="0450">The following description includes a procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets.</p>
<p id="p-0288" num="0451">Procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets S<sub>p</sub>={(o<sub>p</sub><sub><sub2>i</sub2></sub>, r<sub>p</sub><sub><sub2>i</sub2></sub>, c<sub>p</sub><sub><sub2>i</sub2></sub>, d<sub>p</sub><sub><sub2>i</sub2></sub>, prd<sub>p</sub><sub><sub2>i</sub2></sub>)|i=0, 1, . . . , n}:</p>
<p id="h-0126" num="0000">begin {procedure}</p>
<p id="h-0127" num="0000">success:=false;</p>
<p id="h-0128" num="0000">for all p<sub>i </sub>let prd<sub>p</sub><sub><sub2>i</sub2></sub>:=adjustperiod(prd<sub>p</sub><sub><sub2>i</sub2></sub>);</p>
<p id="h-0129" num="0000">prd<sub>LCM</sub>:=LCM(prd<sub>p</sub><sub><sub2>0</sub2></sub>, prd<sub>p</sub><sub><sub2>1</sub2></sub>, . . . , prd<sub>p</sub><sub><sub2>n</sub2></sub>);</p>
<p id="h-0130" num="0000">begin {for loops}</p>
<p id="h-0131" num="0000">for o<sub>p</sub><sub><sub2>0</sub2></sub>:=offsetlowerbound(p<sub>0</sub>) to offsetupperbound(p<sub>o</sub>) do</p>
<p id="p-0289" num="0452">for o<sub>p</sub>:=offsetlowerbound(p<sub>1</sub>) to offsetupperbound(p<sub>1</sub>) do
<ul id="ul0058" list-style="none">
    <li id="ul0058-0001" num="0000">
    <ul id="ul0059" list-style="none">
        <li id="ul0059-0001" num="0453">. . .
        <ul id="ul0060" list-style="none">
            <li id="ul0060-0001" num="0454">for o<sub>p</sub><sub><sub2>i</sub2></sub>:=offsetlowerbound(p<sub>i</sub>) to offsetupperbound(p<sub>i</sub>) do
            <ul id="ul0061" list-style="none">
                <li id="ul0061-0001" num="0455">. . .
                <ul id="ul0062" list-style="none">
                    <li id="ul0062-0001" num="0456">for o<sub>p</sub><sub><sub2>n</sub2></sub>:=offsetlowerbound(p<sub>n</sub>) to offsetupperbound(p<sub>n</sub>) do</li>
                    <li id="ul0062-0002" num="0457">begin {loop body}</li>
                    <li id="ul0062-0003" num="0458">&#x2003;Construct a schedule for all occurrences of all the processes in S<sub>p </sub>within the interval [0, max{o<sub>p</sub><sub><sub2>i</sub2></sub>|&#x2200;p<sub>i</sub>}+3*prd<sub>LCM</sub>];</li>
                    <li id="ul0062-0004" num="0459">&#x2003;If the following conditions are satisfied, then set success:=true; and exit from the procedure:</li>
                    <li id="ul0062-0005" num="0460">&#x2003;There must exist a point t in the schedule, such that:</li>
                    <li id="ul0062-0006" num="0461">&#x2003;(1) The subschedule in the interval [t, t+prd<sub>LCM</sub>] is equal to the subschedule in the interval [t+prd<sub>LCM</sub>, t+2*prd<sub>LCM</sub>];</li>
                    <li id="ul0062-0007" num="0462">&#x2003;(2) All the occurrences of all processes in S<sub>p </sub>within the interval [t, t prd<sub>LCM</sub>] must be included in the subschedule in [t, t+prd<sub>LCM</sub>];</li>
                    <li id="ul0062-0008" num="0463">&#x2003;(3) All the occurrences of all processes in S<sub>p </sub>within the interval [0, t+prd<sub>LCM</sub>] must satisfy all their respective timing constraints.</li>
                    <li id="ul0062-0009" num="0464">end; {loop body}
<br/>
end; {for loops}
<br/>
if success is true then set the &#x201c;initial part of the pre-run-time schedule&#x201d; S<sub>0</sub>(t) to be the subschedule in the interval [0, t], and set the repeating part of the pre-run-time schedule&#x201d; S<sub>LCM </sub>(prd<sub>LCM</sub>) to be the subschedule in the interval [t, t+prd<sub>LCM</sub>];
<br/>
end. {procedure}
</li>
                </ul>
                </li>
            </ul>
            </li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0290" num="0465">The optimal scheduling method in the aforenoted 1990 article by Xu and Parnas that constructs a feasible schedule for a set of processes with release times, deadlines, precedence and exclusion relations, can be used for this purpose. If the processes are to be scheduled on more than one processor, the optimal scheduling method described in the 1993 article by J. Xu &#x201c;Multiprocessor Scheduling of Processes With Release Times, Deadlines, Precedence and Exclusion Relations&#x201d;, IEEE Transactions on Software Engineering vol. 19, pp. 139-154, February, 1993, that constructs a non-preemptive feasible schedule for a set of processes with release times, deadlines, precedence and exclusion relations on multiple processors, can be used for this purpose. Note that, it is not strictly necessary to use the scheduling method of the 1990 or the 1993 article. One may use any method for this step, the only requirements being that the method should be capable of constructing a feasible schedule for a set of periodic processes, in which all the specified constraints and dependencies between the processes are satisfied.</p>
<heading id="h-0132" level="1">Example 4</heading>
<p id="p-0291" num="0466">Assume that the following precedence relations and exclusion relations must be satisfied for the processes in Examples 1-3 above:</p>
<p id="h-0133" num="0000">p<sub>6 </sub>precedes p<sub>7</sub>; a<sub>2 </sub>excludes a<sub>3</sub>, a<sub>9</sub>; a<sub>3 </sub>excludes a<sub>2</sub>, p<sub>4</sub>, p<sub>6</sub>; a<sub>9 </sub>excludes a<sub>2</sub>; p<sub>4 </sub>excludes a<sub>3</sub>, p<sub>5</sub>, p<sub>6</sub>; p<sub>5</sub>, p<sub>6 </sub>excludes p<sub>4</sub>; p<sub>5 </sub>excludes p<sub>6</sub>; p<sub>6 </sub>excludes a<sub>3</sub>, p<sub>5</sub>.</p>
<p id="p-0292" num="0467">If the method in the aforenoted 1990 Xu and Parnas article is used to schedule all the P-h-k processes newp<sub>3</sub>, p<sub>4</sub>, p<sub>5</sub>, p<sub>6</sub>, p<sub>7 </sub>using their adjusted computation times, the feasible schedule will be found in <figref idref="DRAWINGS">FIG. 1</figref>. This guarantees that all the P-h-k processes are schedulable.</p>
<p id="h-0134" num="0000">(end of example)</p>
<p id="p-0293" num="0468">In Example 4 above, a feasible schedule for the case where the offsets of all the periodic processes are zero was shown. Below is another example to show how the procedure given above can use existing methods to schedule a set of periodic processes together with a set of new periodic processes that were converted from asynchronous processes, where the original periodic processes and the new periodic processes may have non-zero offsets.</p>
<heading id="h-0135" level="1">Example B</heading>
<p id="p-0294" num="0469">Assume the following A-h-k process a<sub>A </sub>(see <figref idref="DRAWINGS">FIG. 10</figref>):</p>
<p id="h-0136" num="0000">a<sub>A</sub>: c<sub>a</sub><sub><sub2>A</sub2></sub>=2; d<sub>a</sub><sub><sub2>A</sub2></sub>=7; min<sub>a</sub><sub><sub2>A</sub2></sub>=8.</p>
<p id="h-0137" num="0000">Assume also the following two periodic processes p<sub>B </sub>and p<sub>C </sub>(see <figref idref="DRAWINGS">FIG. 11</figref> and <figref idref="DRAWINGS">FIG. 12</figref>):</p>
<p id="h-0138" num="0000">p<sub>B</sub>: o<sub>p</sub><sub><sub2>B</sub2></sub>=0; r<sub>p</sub><sub><sub2>B</sub2></sub>=1; c<sub>p</sub><sub><sub2>B</sub2></sub>=3; d<sub>p</sub><sub><sub2>b</sub2></sub>=4; prd<sub>p</sub><sub><sub2>B</sub2></sub>=12.</p>
<p id="h-0139" num="0000">p<sub>C</sub>: o<sub>p</sub><sub><sub2>C</sub2></sub>=7; r<sub>p</sub><sub><sub2>C</sub2></sub>=0; c<sub>p</sub><sub><sub2>B</sub2></sub>=4; d<sub>p</sub><sub><sub2>b</sub2></sub>=4; prd<sub>p</sub><sub><sub2>B</sub2></sub>=12.</p>
<p id="h-0140" num="0000">Assume that the application requires p<sub>B</sub>, p<sub>C </sub>to have fixed offset values of 0 and 7 respectively.</p>
<p id="p-0295" num="0470">Assuming that asynchronous process a<sub>A </sub>may make its first request at time 0, the procedure for converting a set of asynchronous processes into a set of periodic processes given earlier, could convert a<sub>A </sub>into the following new periodic process:</p>
<p id="h-0141" num="0000">newp<sub>A</sub>: r<sub>newp</sub><sub><sub2>A</sub2></sub>=0; c<sub>newp</sub><sub><sub2>A</sub2></sub>=2; d<sub>newp</sub><sub><sub2>A</sub2></sub>=2; prd<sub>newp</sub><sub><sub2>A</sub2></sub>=6; and 0&#x2266;o<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2266;prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1=5. The lowerbound of the offset of newp<sub>A </sub>is 0, and the upperbound of the offset of newp<sub>A </sub>is 5 (see <figref idref="DRAWINGS">FIG. 10</figref> and <figref idref="DRAWINGS">FIG. 13</figref>).</p>
<p id="p-0296" num="0471">The procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets given above will try each offset value of o<sub>newp</sub><sub><sub2>A </sub2></sub>within the permitted range of [0, prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1]=[0,5], when trying to find a feasible schedule for newp<sub>A</sub>, p<sub>B</sub>, and p<sub>C</sub>. When the last value in that permitted range, o<sub>newp</sub><sub><sub2>A</sub2></sub>=5 is used, the method in the 1990 article by Xu and Parnas would find the feasible schedule illustrated in <figref idref="DRAWINGS">FIG. 14</figref>. A feasible schedule is found for newp<sub>A</sub>, p<sub>B </sub>and p<sub>C</sub>, when o<sub>newp</sub><sub><sub2>A</sub2></sub>=5 and o<sub>p</sub><sub><sub2>D</sub2></sub>=2. It is assumed that the application requires that o<sub>p</sub><sub><sub2>C</sub2></sub>=7, o<sub>p</sub><sub><sub2>B</sub2></sub>=0 and since asynchronous process a<sub>A </sub>may make its first request at time 0, the permitted range of offset is 0&#x2266;o<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2266;prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1=5. The feasible schedule consists of a non-repeating initial schedule S<sub>0</sub>(1) for the interval [0,1], and a repeating schedule S<sub>LCM</sub>(12) that is of length equal to the Least Common Multiple of the periods of newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, which is LCM(6, 12, 12, 12)=12.</p>
<p id="p-0297" num="0472">Assume that in addition to the periodic processes newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, the following periodic process p<sub>D </sub>exists (as shown in <figref idref="DRAWINGS">FIG. 15</figref>):</p>
<p id="h-0142" num="0000">p<sub>D</sub>: r<sub>p</sub><sub><sub2>D</sub2></sub>=2, c<sub>p</sub><sub><sub2>D</sub2></sub>=1, d<sub>p</sub><sub><sub2>D</sub2></sub>=4, prd<sub>p</sub><sub><sub2>D</sub2></sub>=13, 0&#x2266;o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4.</p>
<p id="p-0298" num="0473">If the &#x201c;adjustperiod&#x201d; function is applied to the periods of newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, then p<sub>D</sub>'s period prd<sub>p</sub><sub><sub2>d </sub2></sub>will be shortened from length 13 to length 12, resulting in the modified periodic process p<sub>D</sub>=(o<sub>p</sub><sub><sub2>D</sub2></sub>, r<sub>p</sub><sub><sub2>D</sub2></sub>, c<sub>p</sub><sub><sub2>D</sub2></sub>, d<sub>p</sub><sub><sub2>D</sub2></sub>, prd<sub>p</sub><sub><sub2>D </sub2></sub>where r<sub>p</sub><sub><sub2>D</sub2></sub>=2, c<sub>p</sub><sub><sub2>D</sub2></sub>=1, d<sub>p</sub><sub><sub2>D</sub2></sub>=4, prd<sub>p</sub><sub><sub2>D</sub2></sub>=12, 0&#x2266;o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4, as shown in <figref idref="DRAWINGS">FIG. 16</figref>.</p>
<p id="p-0299" num="0474">The other periods prd<sub>newp</sub><sub><sub2>A</sub2></sub>, prd<sub>p</sub><sub><sub2>B</sub2></sub>, and prd<sub>p</sub><sub><sub2>C </sub2></sub>remain unchanged after the adjustperiod procedure is applied.</p>
<p id="p-0300" num="0475">Assuming that the application allows the offset of p<sub>D </sub>to be in the permitted range of [0, 4], the procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets given above will try each offset value of o<sub>newp</sub><sub><sub2>A </sub2></sub>within the permitted range of [0, prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1]=[0,5], and try each offset value of o<sub>p</sub><sub><sub2>D</sub2></sub>, within the specified permitted range of [0,4], when trying to find a feasible schedule for newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>. When the offset values o<sub>newp</sub><sub><sub2>A</sub2></sub>=5, and o<sub>p</sub><sub><sub2>D</sub2></sub>=2 as shown in <figref idref="DRAWINGS">FIG. 17</figref> are used, the method described in the 1990 Xu and Parnas article would find the feasible schedule illustrated in <figref idref="DRAWINGS">FIG. 18</figref>.</p>
<p id="p-0301" num="0476">As shown in <figref idref="DRAWINGS">FIG. 17</figref>, the periodic process p<sub>D</sub>=(o<sub>p</sub><sub><sub2>D</sub2></sub>, T<sub>p</sub><sub><sub2>D</sub2></sub>, c<sub>p</sub><sub><sub2>D</sub2></sub>, d<sub>p</sub><sub><sub2>D</sub2></sub>, prd<sub>p</sub><sub><sub2>D</sub2></sub>) where r<sub>p</sub><sub><sub2>D</sub2></sub>=2, c<sub>p</sub><sub><sub2>D</sub2></sub>=1, d<sub>p</sub><sub><sub2>D</sub2></sub>=4, prd<sub>p</sub><sub><sub2>D</sub2></sub>=12, 0&#x2266;o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4, where the offset of p<sub>D </sub>is set to a fixed value o<sub>p</sub><sub><sub2>D</sub2></sub>=2 by the procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets when it attempts to construct a feasible pre-run-time schedule for newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, p<sub>D</sub>.</p>
<p id="p-0302" num="0477">As shown in <figref idref="DRAWINGS">FIG. 18</figref>, a feasible schedule is found for newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, when o<sub>newp</sub><sub><sub2>A</sub2></sub>=5, and o<sub>p</sub><sub><sub2>D</sub2></sub>=2. It is assumed that the application requires that o<sub>p</sub><sub><sub2>C</sub2></sub>=7, o<sub>p</sub><sub><sub2>B</sub2></sub>=0, and 0&#x2266;o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4, and asynchronous process a<sub>A </sub>may make its first request at time 0. The feasible schedule consists of a non-repeating initial schedule S<sub>0</sub>(1) for the interval [0,1], and a repeating schedule S<sub>LCM</sub>(12) that is of length equal to the Least Common Multiple of the periods of newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, which is LCM(6, 12, 12, 12)=12.</p>
<p id="h-0143" num="0000">(end of example)</p>
<p id="p-0303" num="0478">The following notation is used below to denote the beginning and end of the time slot of each process in a pre-run-time schedule, the actual start time and actual completion time of each process, and the most recent actual arrival time of an asynchronous process at run-time. This notation will be used extensively below.</p>
<p id="p-0304" num="0479">s(p): s(p) is the time of the beginning of the time slot that was reserved for periodic process p in the pre-run-time schedule.</p>
<p id="p-0305" num="0480">s&#x2032;(x): s&#x2032;(x) is the actual time that periodic process or asynchronous process x was/will be put into execution at run-time. At any time t, if periodic or asynchronous process x has been put into execution after or at time t, then t&#x2266;s&#x2032;(x) is true, otherwise <img id="CUSTOM-CHARACTER-00007" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00007.TIF" alt="custom character" img-content="character" img-format="tif"/>(t&#x2266;s&#x2032;(x)) is true.</p>
<p id="p-0306" num="0481">s&#x2032; (p) depends on the arrival times of asynchronous processes a<sub>j </sub>and whether and at what time they preempt periodic processes. s&#x2032; (p) also depends on the actual execution times of other processes that are executed prior to p's execution at run-time.</p>
<p id="p-0307" num="0482">e(p): e(p) is the time of the end of the time slot that was reserved for periodic process p in the pre-run-time schedule.</p>
<p id="p-0308" num="0483">e&#x2032;(x): e&#x2032;(x) is the actual time at which asynchronous or periodic process x's execution ends at run-time. At any time t, if periodic or asynchronous process x's execution has ended after or at time t, then t&#x2266;e&#x2032;(x) is true, otherwise if x's execution has not ended before or at time t, then <img id="CUSTOM-CHARACTER-00008" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00008.TIF" alt="custom character" img-content="character" img-format="tif"/>(t&#x2266;e&#x2032;(x)) is true.</p>
<p id="p-0309" num="0484">R&#x2032;(a): R&#x2032;(a) is the most recent actual arrival time of asynchronous process a at run-time. At any time t, if asynchronous process a has arrived before or at time t, then R&#x2032;(a)&#x2266;t is true, otherwise <img id="CUSTOM-CHARACTER-00009" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00009.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a)&#x2266;t) is true. At any time t, if asynchronous process a has arrived at least once before time t and after or at time 0, then 0&#x2266;R&#x2032;(a) is true, otherwise if a has never arrived before or at time t, then <img id="CUSTOM-CHARACTER-00010" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00010.TIF" alt="custom character" img-content="character" img-format="tif"/>(0&#x2266;R&#x2032;(a)) is true.</p>
<heading id="h-0144" level="1">Example 5</heading>
<p id="p-0310" num="0485">In <figref idref="DRAWINGS">FIG. 1</figref>, the time slot that is assigned to the P-h-k process<sub>p</sub><sub><sub2>6 </sub2></sub>in the feasible pre-run-time schedule begins at time 114, and ends at time 144, so s(p<sub>6</sub>)=114, e(p<sub>5</sub>)=144. The length of the time slot assigned to<sub>p</sub><sub><sub2>6 </sub2></sub>in the pre-run-time schedule is equal to the adjusted computation time of p<sub>6</sub>, i.e., c&#x2032;<sub>p</sub><sub><sub2>6</sub2></sub>, which includes the time reserved in case p<sub>6 </sub>is preempted by A-h-k-a processes with less latitude in an actual execution.</p>
<p id="p-0311" num="0486"><figref idref="DRAWINGS">FIG. 2</figref> shows a possible actual execution of the P-h-k processes when they are scheduled at run-time together with the A-h-k-a processes a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>9</sub>, (the details are explained in Example 7 below, see particularly step 3).</p>
<p id="p-0312" num="0487">Note that in <figref idref="DRAWINGS">FIG. 2</figref> the relative order in which P-h-k processes are executed at run-time, is kept the same as the relative order of the time slots that are assigned to those periodic processes in the feasible pre-run-time schedule in <figref idref="DRAWINGS">FIG. 1</figref>. Note also that the length of the computation time indicated for each P-h-k process is its original computation time, not its adjusted computation time. For example, in <figref idref="DRAWINGS">FIG. 2</figref>, s&#x2032; (p<sub>6</sub>)=114, e&#x2032; (p<sub>6</sub>)=140.</p>
<p id="h-0145" num="0000">(end of example)</p>
<p id="h-0146" num="0000">Step 3: Determine the Worst-Case Response Times of the A-h-k-a Processes</p>
<p id="p-0313" num="0488">A-h-k-a processes are scheduled at run-time by the A-h-k-a Scheduler Subroutine (see the description later which describes scheduling A-h-k-a processes), but their worst-case response times are determined before run-time in this step. Verification that each A-h-k-a process a<sub>i </sub>is schedulable is performed by checking the condition that a<sub>i</sub>'s latitude must be greater than or equal to its response time.</p>
<p id="p-0314" num="0489">Two different methods of determining the response time of an A-h-k-a process will now be described. The first method uses a mathematical formula to calculate the worst-case response time. The second method uses simulation to determine the worst-case response time. The second method gives tighter response times that can guarantee the schedulability of a larger number of cases, but requires a longer computation time. The first method, while not as accurate as the second method, is faster. In practice time can be saved by applying the first method first, and only applying the second method if the worst-case response time of some A-h-k-a process calculated by the first method exceeds the latitude of that process.</p>
<p id="p-0315" num="0490">&#x201c;P-g&#x201d; is the set of guaranteed periodic processes. In this step, P-g includes all the P-h-k processes, including those A-h-k-p processes that were translated into periodic processes. Later on, in Step 4, P-g is expanded to include all P-h-k and P-s-k processes.</p>
<p id="p-0316" num="0491">The worst-case response time of an A-h-k-a process a<sub>i </sub>can be determined in accordance with the following method:</p>
<p id="h-0147" num="0000">For all a<sub>i</sub>&#x2208;A-h-k-a:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>RE</i><sub>a</sub><sub><sub2>i</sub2></sub><i>=c</i><sub>a</sub><sub><sub2>i</sub2></sub>+Delay<i>A</i>(<i>a</i><sub>i</sub><i>,RE</i><sub>a</sub><sub><sub2>i</sub2></sub>)+Delay<i>P</i>(<i>a</i><sub>i</sub><i>,RE</i><sub>a</sub><sub><sub2>i</sub2></sub>)+<i>B</i>(<i>a</i><sub>i</sub>)+<i>GT</i>(<i>a</i><sub>i</sub><i>,RE</i><sub>a</sub><sub><sub2>i</sub2></sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0317" num="0492">where</p>
<p id="p-0318" num="0493">
<maths id="MATH-US-00006" num="00006">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>Delay</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mi>A</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
          <mo>,</mo>
          <msub>
            <mi>RE</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
  </mrow>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.3em" height="0.3ex"/>
  </mstyle>
  <mo>=</mo>
  <mrow>
    <munderover>
      <mo>&#x2211;</mo>
      <mrow>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>A</mi>
            <mo>-</mo>
            <mi>h</mi>
            <mo>-</mo>
            <mi>k</mi>
            <mo>-</mo>
            <mi>a</mi>
          </mrow>
        </mrow>
        <mo>&#x2a53;</mo>
        <mrow>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>a</mi>
              <mi>j</mi>
            </msub>
          </msub>
          <mo>&#x2264;</mo>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mrow>
        <mo>&#x2a53;</mo>
        <mrow>
          <mi>j</mi>
          <mo>&#x2260;</mo>
          <mi>i</mi>
        </mrow>
      </mrow>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
    </munderover>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.6em" height="0.6ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mo>&#x2308;</mo>
        <mfrac>
          <msub>
            <mi>RE</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
          <msub>
            <mi>min</mi>
            <msub>
              <mi>a</mi>
              <mi>j</mi>
            </msub>
          </msub>
        </mfrac>
        <mo>&#x2309;</mo>
      </mrow>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#xb7;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0319" num="0494">and</p>
<p id="p-0320" num="0495">
<maths id="MATH-US-00007" num="00007">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <mi>Delay</mi>
      <mo>&#x2062;</mo>
      <mi>P</mi>
    </mrow>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
        <mo>,</mo>
        <msub>
          <mi>RE</mi>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
        </msub>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.3em" height="0.3ex"/>
  </mstyle>
  <mo>=</mo>
  <mrow>
    <munderover>
      <mo>&#x2211;</mo>
      <mrow>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>j</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>P</mi>
            <mo>-</mo>
            <mi>g</mi>
          </mrow>
        </mrow>
        <mo>&#x2a53;</mo>
        <mrow>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>p</mi>
              <mi>j</mi>
            </msub>
          </msub>
          <mo>&#x2264;</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <msub>
            <mi>L</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mrow>
      </mrow>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
    </munderover>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.6em" height="0.6ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mo>&#x2308;</mo>
        <mfrac>
          <msub>
            <mi>RE</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
          <msub>
            <mi>prd</mi>
            <msub>
              <mi>p</mi>
              <mi>j</mi>
            </msub>
          </msub>
        </mfrac>
        <mo>&#x2309;</mo>
      </mrow>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#xb7;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>p</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0321" num="0496">and
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>B</i>(<i>a</i><sub>i</sub>)=max{<i>c</i><sub>a</sub><sub><sub2>j</sub2></sub><i>,e</i>(<i>p</i><sub>l</sub>)&#x2212;<i>s</i>(<i>p</i><sub>l</sub>)|(<i>a</i><sub>j</sub><i>&#x2208;A</i>-<i>h</i>-<i>k</i>-<i>a&#x39b;L</i><sub>a</sub><sub><sub2>i</sub2></sub><i>&#x3e;L</i><sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;x<sub>k</sub><i>,x</i><sub>k</sub><i>&#x2208;A</i>-<i>h</i>-<i>k</i>-<i>a</i><img id="CUSTOM-CHARACTER-00011" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00011.TIF" alt="custom character" img-content="character" img-format="tif"/><i>x</i><sub>k</sub><i>&#x2208;P</i>-<i>g: a</i><sub>j </sub>excludes <i>x</i><sub>k</sub><i>&#x39b;L</i><sub>x</sub><sub><sub2>k</sub2></sub><i>&#x2266;L</i><sub>a</sub><sub><sub2>i</sub2></sub>)<img id="CUSTOM-CHARACTER-00012" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00011.TIF" alt="custom character" img-content="character" img-format="tif"/>(<i>p</i><sub>l</sub><i>&#x2208;P</i>-<i>g&#x39b;L</i><sub>p</sub><sub><sub2>l</sub2></sub><i>&#x3e;L</i><sub>a</sub><sub><sub2>i</sub2></sub><i>&#x39b;&#x2203;x</i><sub>k</sub><i>,x</i><sub>k</sub><i>&#x2208;A</i>-<i>h</i>-<i>k</i>-<i>a</i><img id="CUSTOM-CHARACTER-00013" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00012.TIF" alt="custom character" img-content="character" img-format="tif"/><i>x</i><sub>k</sub><i>&#x2208;P</i>-<i>g: p</i><sub>l </sub>excludes <i>x</i><sub>k</sub><i>&#x39b;L</i><sub>x</sub><sub><sub2>k</sub2></sub><i>&#x2266;L</i><sub>a</sub><sub><sub2>i</sub2></sub>)}<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
and
</p>
<p id="p-0322" num="0497">
<maths id="MATH-US-00008" num="00008">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>GT</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
        <mo>,</mo>
        <msub>
          <mi>RE</mi>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
        </msub>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>SG</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>1</mn>
            <mo>&#x2062;</mo>
            <mrow>
              <mo>(</mo>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>RE</mi>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>prd</mi>
              <msub>
                <mi>p</mi>
                <mi>l</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>SG</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>2</mn>
            <mo>&#x2062;</mo>
            <mrow>
              <mo>(</mo>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>RE</mi>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>prd</mi>
              <msub>
                <mi>p</mi>
                <mi>l</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0323" num="0498">where SG1(a<sub>i</sub>)={p<sub>l</sub>|p<sub>l</sub>&#x2208;P-g &#x39b;L<sub>p</sub><sub><sub2>l</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;(a<sub>i </sub>excludes p<sub>l</sub>)};</p>
<p id="h-0148" num="0000">and SG2(a<sub>i</sub>)={p<sub>l</sub>|p<sub>l</sub>&#x2208;P-g &#x39b;L<sub>p</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;(&#x2203;a<sub>j</sub>&#x2208;A-h-k-a: a<sub>i </sub>excludes a<sub>j</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>i</sub2></sub>)};</p>
<p id="p-0324" num="0499">It should be noted that in the above method, the value of c<sub>p</sub><sub><sub2>j </sub2></sub>is the original computation time of p<sub>j </sub>(it does not include the time reserved for A-h-k-a processes with less latitude).</p>
<p id="p-0325" num="0500">In a first assumption, for each A-h-k-a process a<sub>i</sub>, for each RE<sub>a</sub><sub><sub2>i </sub2></sub>computed by the above formula, if RE<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>, a<sub>i </sub>will always meet its deadline at run-time.</p>
<p id="p-0326" num="0501">The following procedure can be used to compute the worst-case response time of each A-h-k-a process:</p>
<p id="h-0149" num="0000">i:=0;</p>
<p id="h-0150" num="0000">failure:=false;</p>
<p id="h-0151" num="0000">while i&#x2266;number-of-A-h-k-a-processes and not(failure) do</p>
<p id="h-0152" num="0000">begin</p>
<p id="p-0327" num="0502">if a<sub>i</sub>&#x2208;A-h-k-a</p>
<p id="p-0328" num="0503">then</p>
<p id="p-0329" num="0504">begin
<ul id="ul0063" list-style="none">
    <li id="ul0063-0001" num="0000">
    <ul id="ul0064" list-style="none">
        <li id="ul0064-0001" num="0505">RE<sub>new</sub><sub><sub2>i</sub2></sub>:=c<sub>a</sub><sub><sub2>i</sub2></sub>;</li>
        <li id="ul0064-0002" num="0506">responsetimefound:=false;</li>
        <li id="ul0064-0003" num="0507">while not(responsetimefound) and not(failure) do</li>
        <li id="ul0064-0004" num="0508">begin
        <ul id="ul0065" list-style="none">
            <li id="ul0065-0001" num="0509">RE<sub>previous</sub><sub><sub2>i</sub2></sub>:=RE<sub>new</sub><sub><sub2>i</sub2></sub>;</li>
            <li id="ul0065-0002" num="0510">RE<sub>new</sub><sub><sub2>i</sub2></sub>=c<sub>a</sub><sub><sub2>i</sub2></sub>+DelayA(a<sub>i</sub>, RE<sub>previous</sub><sub><sub2>i</sub2></sub>)+DelayP(a<sub>i</sub>, RE<sub>previous</sub><sub><sub2>i</sub2></sub>)+B(a<sub>i</sub>)+GT(a<sub>i</sub>, RE<sub>previous</sub><sub><sub2>i</sub2></sub>);</li>
            <li id="ul0065-0003" num="0511">if RE<sub>previous</sub><sub><sub2>i</sub2></sub>=RE<sub>new</sub><sub><sub2>i </sub2></sub></li>
            <li id="ul0065-0004" num="0512">then</li>
            <li id="ul0065-0005" num="0513">begin
            <ul id="ul0066" list-style="none">
                <li id="ul0066-0001" num="0514">RE<sub>a</sub><sub><sub2>i</sub2></sub>:=RE<sub>new</sub><sub><sub2>i</sub2></sub>;</li>
                <li id="ul0066-0002" num="0515">responsetimefound:=true;</li>
            </ul>
            </li>
            <li id="ul0065-0006" num="0516">end</li>
            <li id="ul0065-0007" num="0517">if (RE<sub>new</sub><sub><sub2>i</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i</sub2></sub>)</li>
            <li id="ul0065-0008" num="0518">then failure:=true;</li>
        </ul>
        </li>
        <li id="ul0064-0005" num="0519">end;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0330" num="0520">end;</p>
<p id="p-0331" num="0521">i:=i+1;</p>
<p id="h-0153" num="0000">end.</p>
<heading id="h-0154" level="1">Example 6</heading>
<p id="p-0332" num="0522">If the procedure and formula described in this specification is used to calculate the worst-case response times of the A-h-k-a processes in Examples 1-5 above, the following should be computed:</p>
<p id="h-0155" num="0000">RE<sub>a</sub><sub><sub2>0</sub2></sub>=c<sub>a</sub><sub><sub2>0</sub2></sub>=2&#x2266;L<sub>a</sub><sub><sub2>0</sub2></sub>=2</p>
<p id="h-0156" num="0000">RE<sub>a</sub><sub><sub2>1</sub2></sub>=c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>1</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>=2+&#x250c;7/1000&#x2510;2=4&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>=7</p>
<p id="h-0157" num="0000">DelayA(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>=2+2=4</p>
<p id="h-0158" num="0000">DelayP(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>5</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>7</sub2></sub>=20+26+16+26+16=104</p>
<p id="h-0159" num="0000">B(a<sub>2</sub>)=c<sub>a</sub><sub><sub2>9</sub2></sub>=10</p>
<p id="h-0160" num="0000">GT(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>2</sub2></sub>=20</p>
<p id="h-0161" num="0000">RE<sub>a</sub><sub><sub2>2</sub2></sub>=c<sub>a</sub><sub><sub2>2</sub2></sub>+DelayA(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)+DelayP(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)+B(a<sub>2</sub>)+GT(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=10+4+104+10+20=148&#x2266;L<sub>a</sub><sub><sub2>2</sub2></sub>=239</p>
<p id="h-0162" num="0000">DelayA(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>9</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>9</sub2></sub>=2+2+10=14</p>
<p id="h-0163" num="0000">DelayP(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p5</sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>7</sub2></sub>=20+26+16+26+16=104</p>
<p id="h-0164" num="0000">B(a<sub>9</sub>)=0</p>
<p id="h-0165" num="0000">GT(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=0</p>
<p id="h-0166" num="0000">RE<sub>a</sub><sub><sub2>9</sub2></sub>=c<sub>a</sub><sub><sub2>9</sub2></sub>+DelayA(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)+DelayP(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)+B(a<sub>9</sub>)+GT(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=10+14+104=128&#x2266;L<sub>a</sub><sub><sub2>9</sub2></sub>=259</p>
<p id="p-0333" num="0523">Since the worst-case response time of every A-h-k-a process is less than or equal to its deadline, it is thus guaranteed that they are all schedulable.</p>
<p id="h-0167" num="0000">(end of example)</p>
<p id="p-0334" num="0524">Below, the second method which uses simulation will be described to determine the worst-case response time of an A-h-k-a process in a feasible pre-run-time schedule of guaranteed periodic processes, which consists of an initial part of the pre-run-time schedule S<sub>0</sub>(t<sub>0</sub>), which is a subschedule in the interval [0, t<sub>0</sub>]; and a repeating part of the pre-run-time schedule S<sub>LCM</sub>(prd<sub>LCM</sub>), which is a subschedule in the interval [t<sub>0</sub>, t<sub>0</sub>+prd<sub>LCM</sub>].</p>
<p id="p-0335" num="0525">This method uses the functions of the A-h-k-a Scheduler and the Main Run-Time Scheduler, which are described below in the section related to the run-time phase.</p>
<p id="p-0336" num="0526">A method for computing the worst-case response time of an A-h-k-a process a<sub>1 </sub>corresponding to a feasible pre-run-time schedule of guaranteed periodic processes consisting of an initial part of the pre-run-time schedule S<sub>0</sub>(t<sub>0</sub>), in the interval [0, t<sub>0</sub>]; and a repeating part of the pre-run-time schedule S<sub>LCM</sub>(prd<sub>LCM</sub>), in the interval [t<sub>0</sub>, t<sub>0</sub>+prd<sub>LCM</sub>] follows.</p>
<p id="h-0168" num="0000">fail:=false;</p>
<p id="h-0169" num="0000">for t<sub>s</sub>:=0 to t<sub>0</sub>+prd<sub>LCM</sub>-1 do</p>
<p id="h-0170" num="0000">begin</p>
<p id="p-0337" num="0000">
<ul id="ul0067" list-style="none">
    <li id="ul0067-0001" num="0000">
    <ul id="ul0068" list-style="none">
        <li id="ul0068-0001" num="0527">For each A-h-k-a process a<sub>b</sub>, such that a<sub>b </sub>&#x2208;A-h-k-a &#x39b;L<sub>a</sub><sub><sub2>b</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>k</sub2></sub>, x<sub>k</sub>&#x2208;A-h-k-a <img id="CUSTOM-CHARACTER-00014" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00013.TIF" alt="custom character" img-content="character" img-format="tif"/>x<sub>k</sub>&#x2208;P-g: a<sub>b </sub>excludes x<sub>k</sub>&#x39b;L<sub>x</sub><sub><sub2>k</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>0 </sub2></sub>do the following:</li>
        <li id="ul0068-0002" num="0528">let a<sub>b </sub>arrive at time t<sub>s</sub>&#x2212;1, and use the A-h-k-a Scheduler and Main Run-Time Scheduler to schedule a<sub>b </sub>and a<sub>i </sub>to obtain a response time of a<sub>i</sub>, called RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), corresponding to each a<sub>b </sub>according to the assumptions (1)-(6) below, with the additional assumption</li>
        <li id="ul0068-0003" num="0529">that a<sub>b </sub>can always start its execution at time t<sub>s</sub>&#x2212;1 (including when t<sub>s</sub>=0) except if at time t<sub>s</sub>&#x2212;1 there exists some periodic process p, such that t<sub>s</sub>&#x3c;s(p) and (a<sub>b </sub>cannot_be_preempted_by p)&#x39b;L<sub>a</sub><sub><sub2>b</sub2></sub>&#x2267;L<sub>p</sub>,</li>
        <li id="ul0068-0004" num="0530">and executing a<sub>b </sub>at time t<sub>s</sub>&#x2212;1 may cause p to miss its deadline, that is, a<sub>b </sub>is delayed by the conditions in either Case 1 or Case 5 of the A-h-k-a Scheduler. At time t=t<sub>s</sub>&#x2212;1, assume that the condition &#x201c;s&#x2032; (p)&#x2267;t&#x201d; is true for every periodic process p such that t<sub>s</sub>&#x3c;s(p) when checking whether a<sub>b </sub>should be delayed by the conditions of Case 1 or Case 5 of the A-h-k-a Scheduler. When computing RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), if &#x2203;p<sub>l</sub>; p<sub>l </sub>&#x2208;P-g &#x39b;s(p<sub>l</sub>)&#x2266;t<sub>s</sub>&#x3c;e(p<sub>l</sub>), then assume that p<sub>1 </sub>has already completed at time t<sub>s</sub>&#x2212;1, that is, this instance of p<sub>l </sub>will not have any effect on a<sub>b</sub>, a<sub>i</sub>, or any other process in the system.</li>
        <li id="ul0068-0005" num="0531">{Let each A-h-k-a process a<sub>b </sub>that can possibly block a<sub>i</sub>, arrive at time t<sub>s</sub>&#x2212;1 and determine which one among them will block a<sub>i </sub>for the greatest amount of time.}</li>
        <li id="ul0068-0006" num="0532">After obtaining RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) for every such a<sub>b</sub>, use the A-h-k-a Scheduler and Main Run-Time Scheduler to schedule a<sub>i </sub>to obtain another response time of a<sub>i</sub>, called RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>), according to the assumptions (1)-(6) below, with the additional assumption that no A-h-k-a process a<sub>b</sub>, such that a<sub>b </sub>&#x2208;A-h-k-a &#x39b;L<sub>a</sub><sub><sub2>b</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i</sub2></sub>, &#x39b;&#x2203;x<sub>k</sub>, x<sub>k</sub>&#x2208;A-h-k-a <img id="CUSTOM-CHARACTER-00015" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00013.TIF" alt="custom character" img-content="character" img-format="tif"/>x<sub>k</sub>&#x2208;P-g: a<sub>b </sub>excludes x<sub>k</sub>&#x39b;L<sub>x</sub><sub><sub2>k</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>had ever arrived. When computing RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), if &#x2203;p<sub>l</sub>, p<sub>l</sub>&#x2208;P-g &#x39b;s(p<sub>l</sub>)&#x2266;t<sub>s</sub>&#x2266;e(p<sub>l</sub>), then assume that s&#x2032; (p<sub>l</sub>)=s(p<sub>l</sub>)&#x39b;e&#x2032; (p<sub>l</sub>)=e(p<sub>l</sub>); {i.e., p<sub>1 </sub>started at the beginning of its time slot and will complete its computation at the end of its time slot in the pre-run-time schedule that was computed using adjusted computation times.</li>
        <li id="ul0068-0007" num="0533">(1) a<sub>i </sub>arrives in the system at time t<sub>s</sub>.</li>
        <li id="ul0068-0008" num="0534">(2) Unless a<sub>i </sub>is delayed because of the conditions in Case 1 or Case 5 of the A-h-k-a Scheduler, (see (3) below), let every other A-h-k-a process a<sub>j</sub>, such that L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>arrive at the following instants in time:</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0338" num="0535">
<maths id="MATH-US-00009" num="00009">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <msub>
        <mi>R</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>k</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <msub>
        <mi>t</mi>
        <mi>s</mi>
      </msub>
      <mo>+</mo>
      <mrow>
        <mi>k</mi>
        <mo>*</mo>
        <msub>
          <mi>min</mi>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mi>k</mi>
    <mo>=</mo>
    <mn>0</mn>
  </mrow>
  <mo>,</mo>
  <mn>1</mn>
  <mo>,</mo>
  <mn>2</mn>
  <mo>,</mo>
  <mi>&#x2026;</mi>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.8em" height="0.8ex"/>
  </mstyle>
  <mo>,</mo>
  <mrow>
    <mo>&#x230a;</mo>
    <mfrac>
      <msub>
        <mi>d</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <msub>
        <mi>min</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mfrac>
    <mo>&#x230b;</mo>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<ul id="ul0069" list-style="none">
    <li id="ul0069-0001" num="0000">
    <ul id="ul0070" list-style="none">
        <li id="ul0070-0001" num="0536">and be scheduled before a<sub>i </sub>whenever a<sub>i </sub>and a<sub>j </sub>have both arrived and a<sub>i </sub>has not yet started. If a<sub>j </sub>is delayed by any of the conditions in Cases 1-7 of the A-h-k-a Scheduler, then let a<sub>i </sub>be delayed by the same amount of time.</li>
        <li id="ul0070-0002" num="0537">{all other A-h-k-a processes whose deadlines are shorter or equal to a<sub>i</sub>'s deadline arrive at the same time as a<sub>i </sub>at time t<sub>s</sub>, and are put into execution before a<sub>i</sub>.}</li>
        <li id="ul0070-0003" num="0538">(3) Whenever the conditions in Case 1 or Case 5 of the A-h-k-a Scheduler become true for a<sub>i </sub>and some P-h-k process p at some time t, i.e.: if &#x2203;p, p&#x2208;P-g:</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0339" num="0539">
<maths id="MATH-US-00010" num="00010">
<math overflow="scroll">
<mrow>
  <mrow>
    <msup>
      <mi>s</mi>
      <mi>&#x2032;</mi>
    </msup>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mi>p</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <mi>t</mi>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>cannot_be</mi>
        <mo>&#x2062;</mo>
        <mi>_preempted</mi>
        <mo>&#x2062;</mo>
        <mi>_by</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>p</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <msub>
      <mi>L</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <msub>
      <mi>L</mi>
      <mi>p</mi>
    </msub>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
                    <mo>&#x2062;</mo>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>:</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>s</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>l</mi>
                    </msub>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mi>s</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <mi>p</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mi>e</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <mi>p</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>p</mi>
                  <mi>l</mi>
                </msub>
              </msub>
            </mrow>
            <mo>&#x2264;</mo>
            <msub>
              <mi>L</mi>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
            </msub>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
                    <mo>&#x2062;</mo>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>:</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>s</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mi>s</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>p</mi>
                  <mi>l</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mi>e</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>p</mi>
                  <mi>l</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>a</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mi>cannot_be</mi>
                  <mo>&#x2062;</mo>
                  <mi>_preempted</mi>
                  <mo>&#x2062;</mo>
                  <mi>_by</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
                    <mo>&#x2062;</mo>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>:</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mi>t</mi>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mrow>
                <msup>
                  <mi>s</mi>
                  <mi>&#x2032;</mi>
                </msup>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
            <mo>&#x2264;</mo>
            <mrow>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
              </msub>
            </mrow>
            <mo>&#x3c;</mo>
            <msub>
              <mi>L</mi>
              <msub>
                <mi>p</mi>
                <mi>m</mi>
              </msub>
            </msub>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
          <mi>e</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mi>p</mi>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>-</mo>
        <mi>t</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x3c;</mo>
  <mrow>
    <msub>
      <mi>c</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x22c0;</mo>
                <mi>t</mi>
              </mrow>
            </mrow>
            <mo>&#x2264;</mo>
            <mrow>
              <mi>s</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>p</mi>
                  <mi>l</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <mrow>
                <mo>&#x2aec;</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mrow>
                          <msup>
                            <mi>e</mi>
                            <mi>&#x2032;</mi>
                          </msup>
                          <mo>&#x2061;</mo>
                          <mrow>
                            <mo>(</mo>
                            <msub>
                              <mi>p</mi>
                              <mi>l</mi>
                            </msub>
                            <mo>)</mo>
                          </mrow>
                        </mrow>
                        <mo>&#x2264;</mo>
                        <mi>t</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                    <mo>&#x22c0;</mo>
                    <msub>
                      <mi>L</mi>
                      <msub>
                        <mi>p</mi>
                        <mi>l</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mo>&#x2264;</mo>
                  <msub>
                    <mi>L</mi>
                    <msub>
                      <mi>a</mi>
                      <mi>i</mi>
                    </msub>
                  </msub>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>p</mi>
          <mi>l</mi>
        </msub>
      </msub>
    </mrow>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <munder>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>A</mi>
                <mo>-</mo>
                <mi>h</mi>
                <mo>-</mo>
                <mi>k</mi>
                <mo>-</mo>
                <mrow>
                  <mi>a</mi>
                  <mo>&#x22c0;</mo>
                  <msub>
                    <mi>d</mi>
                    <msub>
                      <mi>a</mi>
                      <mi>k</mi>
                    </msub>
                  </msub>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <msub>
                  <mi>d</mi>
                  <mi>p</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mn>0</mn>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c1;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <mi>t</mi>
                            <mo>&#x22c0;</mo>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>e</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>&#x2264;</mo>
                      <mi>t</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x22c1;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <msup>
                        <mi>R</mi>
                        <mi>&#x2032;</mi>
                      </msup>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>+</mo>
                    <msub>
                      <mi>min</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mo>&#x3c;</mo>
                  <mrow>
                    <mi>e</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </munder>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <mrow>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>-</mo>
              <mi>t</mi>
            </mrow>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>k</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<ul id="ul0071" list-style="none">
    <li id="ul0071-0001" num="0000">
    <ul id="ul0072" list-style="none">
        <li id="ul0072-0001" num="0540">or</li>
        <li id="ul0072-0002" num="0541">if &#x2203;p, p<sub>1</sub>,p,p<sub>1</sub>&#x2208;P-g:</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0340" num="0542">
<maths id="MATH-US-00011" num="00011">
<math overflow="scroll">
<mrow>
  <mrow>
    <msup>
      <mi>s</mi>
      <mi>&#x2032;</mi>
    </msup>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mi>p</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <mi>t</mi>
    <mo>&#x22c0;</mo>
    <mrow>
      <mi>s</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
  </mrow>
  <mo>&#x3c;</mo>
  <mrow>
    <mi>s</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>p</mi>
        <mn>1</mn>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x3c;</mo>
  <mrow>
    <mi>e</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>p</mi>
        <mn>1</mn>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x3c;</mo>
  <mrow>
    <mrow>
      <mi>e</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>cannot_be</mi>
        <mo>&#x2062;</mo>
        <mi>_preempted</mi>
        <mo>&#x2062;</mo>
        <mi>_by</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <msub>
          <mi>p</mi>
          <mn>1</mn>
        </msub>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <msub>
      <mi>L</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <msub>
      <mi>L</mi>
      <mi>p</mi>
    </msub>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
                    <mo>&#x2062;</mo>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>:</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mi>t</mi>
              </mrow>
            </mrow>
            <mo>&#x3c;</mo>
            <mrow>
              <mrow>
                <msup>
                  <mi>s</mi>
                  <mi>&#x2032;</mi>
                </msup>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
            <mo>&#x2264;</mo>
            <mrow>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x22c0;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
              </msub>
            </mrow>
            <mo>&#x3c;</mo>
            <msub>
              <mi>L</mi>
              <msub>
                <mi>p</mi>
                <mi>m</mi>
              </msub>
            </msub>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
          <mi>s</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mi>p</mi>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>-</mo>
        <mi>t</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x3c;</mo>
  <mrow>
    <msub>
      <mi>c</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>P</mi>
            <mo>-</mo>
            <mrow>
              <mi>g</mi>
              <mo>&#x22c0;</mo>
              <mrow>
                <mo>&#x2aec;</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mrow>
                          <msup>
                            <mi>e</mi>
                            <mi>&#x2032;</mi>
                          </msup>
                          <mo>&#x2061;</mo>
                          <mrow>
                            <mo>(</mo>
                            <msub>
                              <mi>p</mi>
                              <mi>l</mi>
                            </msub>
                            <mo>)</mo>
                          </mrow>
                        </mrow>
                        <mo>&#x2264;</mo>
                        <mi>t</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                    <mo>&#x22c0;</mo>
                    <mi>t</mi>
                  </mrow>
                  <mo>&#x2264;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <msub>
                        <mi>p</mi>
                        <mi>l</mi>
                      </msub>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>&#x3c;</mo>
                  <mrow>
                    <mi>e</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <msub>
                        <mi>p</mi>
                        <mi>l</mi>
                      </msub>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>&#x2264;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>p</mi>
          <mi>l</mi>
        </msub>
      </msub>
    </mrow>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <munder>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>A</mi>
                <mo>-</mo>
                <mi>h</mi>
                <mo>-</mo>
                <mi>k</mi>
                <mo>-</mo>
                <mrow>
                  <mi>a</mi>
                  <mo>&#x22c0;</mo>
                  <msub>
                    <mi>L</mi>
                    <msub>
                      <mi>a</mi>
                      <mi>k</mi>
                    </msub>
                  </msub>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <msub>
                  <mi>L</mi>
                  <mi>p</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mn>0</mn>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c1;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <mi>t</mi>
                            <mo>&#x22c0;</mo>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>e</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>&#x2264;</mo>
                      <mi>t</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x22c1;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <msup>
                        <mi>R</mi>
                        <mi>&#x2032;</mi>
                      </msup>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>+</mo>
                    <msub>
                      <mi>min</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mo>&#x3c;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </munder>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <mrow>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>-</mo>
              <mi>t</mi>
            </mrow>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>k</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<ul id="ul0073" list-style="none">
    <li id="ul0073-0001" num="0000">
    <ul id="ul0074" list-style="none">
        <li id="ul0074-0001" num="0543">let t also be the earliest time that the conditions in Case 1 or Case 5 become true for that instance of p and a<sub>i</sub>,</li>
        <li id="ul0074-0002" num="0544">then for every other A-h-k-a process a<sub>i </sub>that belongs to the following set:</li>
        <li id="ul0074-0003" num="0545">{a<sub>j</sub>|a<sub>j</sub>&#x2208;A-h-k-a &#x39b;j&#x2260;i&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;((<img id="CUSTOM-CHARACTER-00016" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00014.TIF" alt="custom character" img-content="character" img-format="tif"/>(0&#x2266;R&#x2032;(a<sub>j</sub>))<img id="CUSTOM-CHARACTER-00017" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00015.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00018" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00016.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>j</sub>)&#x2266;t))<img id="CUSTOM-CHARACTER-00019" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00017.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)+min<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;e(P))) <img id="CUSTOM-CHARACTER-00020" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00018.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>b</sub>)&#x2266;t<sub>s</sub>&#x39b;t&#x2212;1&#x2266;e&#x2032;(a<sub>b</sub>)&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t))}</li>
        <li id="ul0074-0004" num="0546">(a<sub>j </sub>has a deadline that is shorter than or equal to a<sub>i</sub>'s deadline and, either a<sub>j </sub>has never arrived; or a<sub>j </sub>has arrived but has not completed its computation; or a<sub>j </sub>may arrive again before time s(p); or at time t&#x2212;1 a<sub>i </sub>was blocked by a<sub>b </sub>and a<sub>j </sub>started its execution before t),
        <ul id="ul0075" list-style="none">
            <li id="ul0075-0001" num="0547">&#x201c;delay&#x201d; a<sub>j</sub>'s arrival time to occur at time s(p); if at time s(p) the conditions in Case 1 or Case 5 of the A-h-k-a Scheduler continue to be true for some other periodic process p&#x2032;, then a<sub>i </sub>should be delayed again, and the A-h-k processes a<sub>j</sub>&#x2032; that satisfy the conditions of the formula for p&#x2032; should also be delayed again until s(p&#x2032;); otherwise assume that a arrives at s(p), and is scheduled before a<sub>1</sub>; and assume that p starts executing at time s(p)+&#x3a3;<sub>a</sub><sup><sup2>k</sup2></sup>c<sub>a</sub><sub><sub2>k</sub2></sub>.</li>
        </ul>
        </li>
        <li id="ul0074-0005" num="0548">For each such a<sub>j</sub>, let only a single instance of a<sub>i </sub>arrive at time s(p), even if originally there could be several instances of a same process a<sub>j </sub>that satisfy the conditions above.</li>
        <li id="ul0074-0006" num="0549">For each such a<sub>j</sub>'s subsequent arrival times after s(p), use the same arrival times that were determined in (2), i.e., a<sub>j</sub>'s subsequent arrival times after s(p) will be: R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j </sub2></sub>such that R<sub>a</sub><sub><sub2>j</sub2></sub>(k)&#x3e;s(p).</li>
        <li id="ul0074-0007" num="0550">(If at time t there exists more than one process p for which the conditions of either Case 1 or Case 5 are true for p and a<sub>i</sub>, then let the above apply to the process p among them that has the latest s(p) time in the pre-run-time schedule.)</li>
        <li id="ul0074-0008" num="0551">{if a<sub>i </sub>is delayed due to the conditions in Case 1 or Case 5, then an A-h-k-a process a<sub>j </sub>could delay a<sub>i </sub>by a maximum amount by arriving at s(p).}</li>
        <li id="ul0074-0009" num="0552">(4) If the end of the current instance of the repeating part of the pre-run-time schedule is reached, continue at the beginning of the next instance of the repeating part of the pre-run-time schedule.</li>
        <li id="ul0074-0010" num="0553">(5) If a<sub>i</sub>'s deadline d<sub>a</sub><sub><sub2>i</sub2></sub>, is reached but a<sub>i </sub>has not yet completed its computation, then set fail:=true and exit from the procedure.</li>
        <li id="ul0074-0011" num="0554">(6) If a<sub>i</sub>'s computation is completed before its deadline d<sub>a</sub><sub><sub2>i </sub2></sub>then record the completion time of a<sub>i </sub>as the response time of a<sub>i </sub>(either RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) for the current a<sub>b</sub>, or RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>) when no such a<sub>b </sub>is assumed to have arrived at time t<sub>s</sub>&#x2212;1).</li>
        <li id="ul0074-0012" num="0555">After the response time RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) corresponding to every a<sub>b </sub>that may block a<sub>i </sub>has been computed, and the response time RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>) that assumed that no such a<sub>b </sub>had arrived and blocked a<sub>i </sub>has also been computed, set the response time of a<sub>i </sub>with arrival time t<sub>s</sub>, RE(a<sub>i</sub>, t<sub>s</sub>) to be equal to the greatest among them, i.e., RE (a<sub>i</sub>, t<sub>s</sub>)=max{RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>)}, and exit from the current iteration of the loop for this value of t<sub>s</sub>, and start the next iteration for t<sub>s</sub>:=t<sub>s</sub>+1.
<br/>
end;
<br/>
if not fail then
<br/>
RE<sub>a</sub><sub><sub2>i</sub2></sub>:=max{RE(a<sub>i</sub>, t<sub>s</sub>)|t<sub>s</sub>=0, 1, . . . , LCM&#x2212;1};
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0341" num="0556">(A description will be found below of scheduling of the A-h-k-a processes, of the A-h-k-a Scheduler and of definitions of the terms used above.)</p>
<p id="p-0342" num="0557">it is assumed in a second assumption that for each A-h-k-a process a<sub>i</sub>, for each RE<sub>a</sub><sub><sub2>i </sub2></sub>determined in the above procedure, if RE<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>1</sub2></sub>, a<sub>i </sub>will always meet its deadline at run-time.</p>
<heading id="h-0171" level="1">Example 7</heading>
<p id="p-0343" num="0558">If the second method is used, that is, the simulation procedure above, to determine the worst-case response times of the A-h-k-a processes in Examples 1-6 above, the procedure will find the following.</p>
<p id="p-0344" num="0559">RE<sub>a</sub><sub><sub2>0</sub2></sub>: The maximum value of RE (a<sub>0</sub>, t<sub>s</sub>) will happen when a<sub>0 </sub>arrives at time t<sub>s</sub>=0. Since no process excludes a<sub>0</sub>, and a<sub>0 </sub>has the minimum latitude among all processes, a<sub>0 </sub>will always be put into execution immediately after it arrives, thus a<sub>0</sub>'s response time RE<sub>a</sub><sub><sub2>0</sub2></sub>=RE(a<sub>0</sub>, 0)=max{RE(a<sub>0</sub>, t<sub>s</sub>)}=c<sub>a</sub><sub><sub2>0</sub2></sub>=2&#x2266;L<sub>a</sub><sub><sub2>0</sub2></sub>=2.</p>
<p id="p-0345" num="0560">RE<sub>a</sub><sub><sub2>1</sub2></sub>: The maximum value of RE (a<sub>1</sub>, t<sub>s</sub>) will happen when a<sub>1 </sub>arrives at time t<sub>s</sub>=0. Since no process excludes a<sub>1</sub>, and only one process a<sub>0 </sub>has less latitude compared with a<sub>1</sub>'s latitude, when a<sub>1 </sub>arrives at time t<sub>s</sub>=0, assuming that a<sub>0 </sub>will also arrive at time t<sub>s</sub>=0, a<sub>1 </sub>will only be delayed by a<sub>0</sub>'s execution time, thus a<sub>1</sub>'s response time RE<sub>a</sub><sub><sub2>1</sub2></sub>=max{RE(a<sub>1</sub>, t<sub>s</sub>)}=RE(a<sub>1</sub>, 0)=c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=2+2=4&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>=7.</p>
<p id="p-0346" num="0561">RE<sub>a</sub><sub><sub2>2</sub2></sub>: The maximum value of RE(a<sub>2</sub>, t<sub>s</sub>) will happen when a<sub>2 </sub>arrives at time t<sub>s</sub>=82 but a<sub>9 </sub>arrived one time unit earlier at t<sub>s</sub>&#x2212;1=81, so a<sub>9 </sub>blocks a<sub>2 </sub>at time 82. According to rule (2) in the simulation procedure, it is first assumed that a<sub>0 </sub>and a<sub>1 </sub>will also arrive at time t<sub>s</sub>=82, and will be put into execution from time 82 to 86, preempting a<sub>9</sub>. After a<sub>0 </sub>and a<sub>1</sub>'s completion, a<sub>9 </sub>will resume at time 86 and complete its computation at time 95. At time 95, a<sub>2 </sub>will be delayed by the conditions of Case 1 of the A-h-k-a Scheduler, because e(newp<sub>3</sub><sub><sub2>1</sub2></sub>)&#x2212;t)=114&#x2212;95=19&#x3c;c<sub>a</sub><sub><sub2>2</sub2></sub>+c<sub>newp</sub><sub><sub2>3</sub2></sub>=10+10=20. According to rule (3) in the simulation procedure, since at time 95 a<sub>0 </sub>and a<sub>1 </sub>belong to the set:</p>
<p id="h-0172" num="0000">a<sub>j</sub>|a<sub>j</sub>&#x2208;A-h-k-a A &#x39b;j&#x2260;i &#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;((<img id="CUSTOM-CHARACTER-00021" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00019.TIF" alt="custom character" img-content="character" img-format="tif"/>(0&#x2266;R&#x2032;(a<sub>j</sub>))<img id="CUSTOM-CHARACTER-00022" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00020.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00023" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00021.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>j</sub>)&#x2266;t))<img id="CUSTOM-CHARACTER-00024" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00022.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)+min<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;e(p)))<img id="CUSTOM-CHARACTER-00025" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00023.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>b</sub>)&#x2266;t<sub>s</sub>&#x39b;t&#x2212;1&#x2266;e&#x2032;(a<sub>b</sub>)&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t))}</p>
<p id="h-0173" num="0000">because a<sub>0</sub>&#x2208;A-h-k-a &#x39b;a<sub>0</sub>&#x2260;a<sub>2</sub>&#x39b;d<sub>a</sub><sub><sub2>0</sub2></sub>&#x2266;d<sub>a</sub><sub><sub2>2</sub2></sub>&#x39b;(s&#x2032;(a<sub>9</sub>)&#x2266;t<sub>s</sub>=82&#x39b;t&#x2212;1=95&#x2212;1=94&#x2266;e&#x2032;(a<sub>9</sub>)=95&#x39b;s&#x2032;(a<sub>0</sub>)=82&#x2266;t=95.</p>
<p id="p-0347" num="0562">(at time t&#x2212;1=95&#x2212;1=94 a<sub>2 </sub>was blocked by a<sub>9 </sub>(&#x201c;a<sub>b</sub>&#x201d;), and a<sub>0 </sub>(&#x201c;a<sub>j</sub>&#x201d;) started its execution before t=95). a<sub>1 </sub>also meets the above conditions similar to a<sub>0</sub>. According to rule (3) in the simulation procedure, a<sub>0 </sub>and a<sub>1</sub>'s arrival times are &#x201c;delayed&#x201d; to occur at time s(newp<sub>3</sub><sub><sub2>1</sub2></sub>)=100 and are scheduled before a<sub>2 </sub>to execute from time 100 to 104; newp<sub>3 </sub>starts executing at time s(newp<sub>3</sub><sub><sub2>1</sub2></sub>)+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=100+2+2=104, and completes its execution at time 114. As L<sub>p</sub><sub><sub2>6</sub2></sub>=200&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239 and L<sub>p</sub><sub><sub2>7</sub2></sub>=200&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239, p<sub>6 </sub>will execute from 114 to 140; p<sub>7 </sub>will execute from 140 to 156; a<sub>2 </sub>will execute from 156 to 166. Thus a<sub>2</sub>'s response time RE<sub>a</sub><sub><sub2>2</sub2></sub>=max{RE(a<sub>2</sub>, t<sub>s</sub>)}=RE(a<sub>2</sub>, 82)=e&#x2032;(a<sub>2</sub>)&#x2212;R<sub>a</sub><sub><sub2>2</sub2></sub>=166&#x2212;82=84&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239.
<br/>
In effect, the simulation procedure computes a response time of a<sub>2 </sub>that is equal to a<sub>2</sub>'s response time in the case that is illustrated in <figref idref="DRAWINGS">FIG. 2</figref> in Appendix 1, where a<sub>9 </sub>arrives at time 81, a<sub>2 </sub>arrives at time 82 and is blocked by a<sub>9 </sub>until time 91; at time 91 a<sub>2 </sub>is delayed by the conditions of Case 1 of the A-h-k-a Scheduler, because e(newp<sub>3</sub><sub><sub2>1</sub2></sub>)&#x2212;=114-91=23&#x3c;c<sub>a</sub><sub><sub2>2</sub2></sub>+c<sub>newp</sub><sub><sub2>3 </sub2></sub>c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+10+2+2=24. a<sub>0 </sub>and a<sub>1 </sub>arrive at time s(newp<sub>3</sub><sub><sub2>1</sub2></sub>)=100.
</p>
<p id="p-0348" num="0563">RE<sub>a</sub><sub><sub2>9</sub2></sub>: The maximum value of RE(a<sub>9</sub>, t<sub>s</sub>) will happen when a<sub>9 </sub>arrives at time t<sub>s</sub>=100; a<sub>0 </sub>and a<sub>1 </sub>also arrive at time 100 and execute from time 100 to 104; newp<sub>3 </sub>executes from time 104 to 114; As L<sub>p</sub><sub><sub2>6</sub2></sub>=200&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239 and L<sub>p</sub><sub><sub2>7</sub2></sub>=200&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239, p<sub>6 </sub>will execute from 114 to 140; p<sub>7 </sub>will execute from 140 to 156; a<sub>2 </sub>will execute from 156 to 166. Finally a<sub>9 </sub>will execute from time 166 to 176. Thus a<sub>9</sub>'s response time RE<sub>a</sub><sub><sub2>9</sub2></sub>=max{RE(a<sub>9</sub>, t<sub>s</sub>)}=RE(a<sub>9</sub>, 100)=e&#x2032;(a<sub>9</sub>)&#x2212;R<sub>a</sub><sub><sub2>9</sub2></sub>=176-100=76&#x3c;L<sub>a</sub><sub><sub2>9</sub2></sub>=259.</p>
<p id="p-0349" num="0564">Since the worst-case response time of every A-h-k-a process is less than or equal to its deadline, it is possible to guarantee that they are all schedulable. Note that the worst-case response time of a<sub>2 </sub>determined by the simulation procedure is 84 and is tighter than the worst-case response time of 148 determined by the formula in the first method. The worst-case response time of a<sub>9 </sub>determined by the simulation procedure is 76 and is also tighter than the worst-case response time of 128 determined by the formula in the first method.</p>
<p id="h-0174" num="0000">(end of example)</p>
<p id="p-0350" num="0565">In Example 1, none of the processes had offsets; consequently the length of the initial part of the pre-run-time schedule was 0. Below, another example is described in which the periodic processes have offsets, and the initial part of the pre-run-time schedule is of non-zero length.</p>
<heading id="h-0175" level="1">Example C</heading>
<p id="p-0351" num="0566">Assume it is desired to schedule the same set of processes a<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, p<sub>D </sub>given in Example B. The user can control the probability of each asynchronous process being converted into a periodic process or remaining asynchronous, by setting the threshold values in the procedure for converting a set of asynchronous processes into periodic processes given earlier.</p>
<p id="p-0352" num="0567">Assume that the value chosen for the threshold for a<sub>A </sub>was large and asynchronous process a<sub>A </sub>was not converted into a new periodic process. The procedure for scheduling a set of periodic processes with offsets will construct the pre-run-time schedule for the processes p<sub>B</sub>, p<sub>C</sub>, p<sub>D </sub>illustrated in <figref idref="DRAWINGS">FIG. 19</figref>. Assuming a<sub>A </sub>is to be scheduled by the A-h-k-a Scheduler using the information in the pre-run-time schedule, the simulation procedure will determine that a<sub>A </sub>'s worst-case response time will happen when a<sub>A </sub>makes a request at time 6. At time 6, a<sub>A </sub>will be delayed by the conditions in Case 1 of the A-h-k-a Scheduler. a<sub>A </sub>will be executed from time 11 to time 13 after p<sub>C </sub>has completed. a<sub>A</sub>'s response time is RE(a<sub>A</sub>, t<sub>s</sub>)=RE(a<sub>A</sub>, 6)=e&#x2032;(a<sub>A</sub>)&#x2212;s&#x2032;(a<sub>A</sub>)=13&#x2212;6=7&#x2266;d<sub>a</sub><sub><sub2>A</sub2></sub>=7. In this case a<sub>A </sub>is also guaranteed to always meet its deadline.</p>
<p id="h-0176" num="0000">(end of example)</p>
<p id="p-0353" num="0568">The simulation procedure above, is more accurate than the formula given earlier for determining the worst case response times of A-h-k-a processes, because the simulation procedure takes into account knowledge about the positions of the periodic processes in the pre-run-time schedule. In contrast, the earlier formula does not take into account such knowledge, and assumes that in the worst case, all periodic processes may arrive at the same time. Note that currently, none of the algorithms and protocols in the prior art that perform all scheduling activities at run-time, can avoid making the latter overly pessimistic assumption in their schedulability tests.</p>
<p id="p-0354" num="0569">If it is determined that the deadline of some hard deadline process cannot be met, that is, if a feasible pre-run-time schedule does not exist for the given set of P-h-k processes, or if the worst-case response time of some A-h-k-a process exceeds its deadline, then one may have to modify the characteristics of or remove one or more P-h-k or A-h-k-a processes.</p>
<p id="p-0355" num="0570">In the first case, the pre-run-time scheduling algorithm [24] will identify the critical set, that is, the subset of P-h-k processes for which either modifying the characteristics of one or more processes in that set, or removing one or more processes from that set is necessary to meet the deadlines of all the P-h-k processes.</p>
<p id="p-0356" num="0571">In the second case, the formula or simulation procedure for calculating the worst-case response time of each A-h-k-a process can be used to identify which processes should be modified or removed, in order to meet the deadlines of all the A-h-k-a processes.</p>
<p id="p-0357" num="0572">After the user has modified the characteristics of, or removed one or more P-h-k or A-h-k-a processes, the method will be applied again. The initial determination and any subsequent modification of process characteristics by the user depends on the specific user application requirements and is outside the scope of this specification. This process must be repeated until there exists a feasible schedule for all the hard-deadline processes.</p>
<p id="h-0177" num="0000">Step 4: A Feasible Pre-Run-Time Schedule for the P-s-k and P-h-k Processes is Constructed.</p>
<p id="p-0358" num="0573">After guaranteeing the schedulability of all the processes with hard deadlines, the set of periodic processes with soft deadlines and known characteristics (P-s-k processes) is scheduled together with the set of all periodic processes with hard deadlines and known characteristics (P-h-k processes), and a feasible pre-run-time schedule for these processes is constructed.</p>
<p id="p-0359" num="0574">Each P-s-k process is assigned an integer, called its &#x201c;criticality level.&#x201d; Each P-s-k process is also assigned, in addition to its normal deadline, a &#x201c;deadline upper-limit.&#x201d;</p>
<p id="p-0360" num="0575">The computation times of the soft-deadline periodic P-s-k processes are modified in the same way as for the hard-deadline periodic P-h-k processes.</p>
<p id="p-0361" num="0576">If it is determined that a feasible schedule does not exist, then the method will identify the soft critical set, that is, the subset of soft-deadline processes for which either modifying the characteristics of one or more processes in that set, or removing one or more processes from that set, is necessary to meet the deadlines of all hard-deadline processes. The method will select one process that has the lowest criticality level among the processes in the soft-critical set and increase the deadline of that process by an amount that does not exceed the deadline upper-limit of that process and attempt to find a feasible schedule again. The deadline of the process with the lowest criticality level will be incremented until one of the following happens: either a) a feasible schedule is found; or b) the previously selected process does not belong to the newly computed critical set; or c) the revised deadline of that process cannot be further increased without exceeding the deadline upper-limit. In the latter two cases, the method will select another process that has the lowest criticality level among all processes in the soft critical set and for which the deadline has not yet been revised, increment its deadline, and attempt to find a feasible schedule again.</p>
<p id="p-0362" num="0577">If it is determined that a feasible schedule still does not exist after the deadlines of all the processes in the soft critical set have been revised and their deadline upper-limits have been reached, the method will provide the user with the list of soft-deadline processes in the soft critical set for which modifying the characteristics of one or more processes in that set or removing one or more processes in that set is necessary to meet the deadlines of all hard-deadline processes. After the user has modified the characteristics of one or more processes in the soft critical set, or removed one or more processes in that set, the method will be applied again. The procedure will be repeated until there exists a feasible schedule for all the P-h-k and P-s-k processes. Again, the initial determination and any subsequent modification of process characteristics by the user depends on the specific user application requirements and is outside the scope of this specification.</p>
<p id="p-0363" num="0578">After a feasible schedule has been found for all the P-h-k and P-s-k processes, the worst-case response times for all the A-h-k-a processes are recomputed with the set of P-s-k processes included in the set of guaranteed periodic processes P-g. If the worst-case response time of any A-h-k-a process a<sub>i </sub>exceeds its deadline, the method will select one process that has the lowest criticality level among all P-s-k processes that contribute to a<sub>i</sub>'s worst-case response time and increase the deadline of that P-s-k process by an amount that does not exceed its deadline upper-limit and recompute the worst-case response time. The deadline of the process with the lowest criticality level will be incremented until one of the following happens: either a) the worst-case response time of every A-h-k-a process is less than or equal to its deadline; or b) the previously selected process does not belong to the newly computed set of P-s-k processes that contribute to a<sub>i</sub>'s worst-case response time; or c) the revised deadline of that process cannot be further increased without exceeding the deadline upper-limit. In the latter two cases, the method will select another process that has the lowest criticality level among all P-s-k processes that contribute to a<sub>i</sub>'s worst-case response time and for which the deadline has not yet been revised, increment its deadline, and compute the worst-case response time again for each A-h-k-a process.</p>
<p id="p-0364" num="0579">If it is determined that the worst-case response time of some A-h-k-a process still exceeds its deadline after the deadlines of all the processes that contribute to a<sub>i</sub>'s worst-case response time</p>
<p id="p-0365" num="0580">have been revised and their deadline upper-limits have been reached, the method will provide the user with the list of soft-deadline processes in the set that contribute to a<sub>i</sub>'s worst-case response time for which modifying the characteristics of one or more processes in that set or removing one or more processes in that set is necessary to meet the deadlines of all the A-h-k-a processes. After the user has modified the characteristics of one or more processes that contribute to a<sub>i</sub>'s worst-case response time, or removed one or more processes in that set, the method will be applied again. The procedure will be repeated until the worst-case response time of every A-h-k-a process is less than or equal to its deadline.</p>
<p id="p-0366" num="0581">At the end of Step 4 the method will generate a feasible pre-run-time schedule for all the P-h-k, and P-s-k processes, while guaranteeing that the worst-case response times of all the A-h-k-a processes will be less than or equal to their deadlines. The set of P-h-k and P-s-k processes will be referred to as the set of guaranteed periodic processes (P-g). A simplified procedure for implementing Step 4 will be described later.</p>
<heading id="h-0178" level="1">Example 8</heading>
<p id="p-0367" num="0582">Assume that in addition to the hard deadline processes described in Examples 1-7 above, the following periodic process has a soft deadline and known characteristics (P-s-k process).</p>
<p id="h-0179" num="0000">p<sub>8</sub>: R<sub>p</sub><sub><sub2>8=20</sub2></sub>, c<sub>p</sub><sub><sub2>8=16</sub2></sub>, d<sub>p</sub><sub><sub2>8=55</sub2></sub>, prd<sub>p</sub><sub><sub2>8=200</sub2></sub>, o<sub>p</sub><sub><sub2>8=0</sub2></sub>;</p>
<p id="h-0180" num="0000">Assume further that p<sub>8</sub>'s criticality is 3, its deadline upperlimit is 100.</p>
<p id="p-0368" num="0583">p<sub>8</sub>'s adjusted computation time is:</p>
<p id="h-0181" num="0000">c<sub>p</sub><sub><sub2>8</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>8</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=16+2+2=20.</p>
<p id="p-0369" num="0584">Firstly it will be determined that no feasible schedule exists for the given set of process parameters. The optimal schedule for the given set of parameters is the same as the schedule shown in <figref idref="DRAWINGS">FIG. 3</figref>, except that d<sub>p</sub><sub><sub2>8=55 </sub2></sub>and p<sub>8 </sub>is late by 5 time units. The soft critical set contains one process p<sub>8</sub>. The simplified procedure for Step 4 referred to above will increase the deadline of p<sub>8 </sub>until d<sub>p</sub><sub><sub2>8</sub2></sub>&#x2032;=60, at which point the feasible schedule is obtained, as shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0370" num="0585">If the formula in the first method is used to calculate the worst-case response times of the A-h-k-a processes the following is obtained:</p>
<p id="h-0182" num="0000">RE<sub>a</sub><sub><sub2>0</sub2></sub>, RE<sub>a</sub><sub><sub2>1 </sub2></sub>remain the same as in Step 3, and are less than L<sub>a</sub><sub><sub2>0 </sub2></sub>and L<sub>a</sub><sub><sub2>i </sub2></sub>respectively.</p>
<p id="h-0183" num="0000">DelayA(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>=2+2=4</p>
<p id="h-0184" num="0000">DelayP(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>5</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>7</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>p</sub><sub><sub2>8</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>8</sub2></sub>=20+26+16+26+16+16=120</p>
<p id="h-0185" num="0000">B(a<sub>2</sub>)=c<sub>a</sub><sub><sub2>9</sub2></sub>=10</p>
<p id="h-0186" num="0000">GT(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>2</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>2</sub2></sub>=20</p>
<p id="h-0187" num="0000">RE<sub>a</sub><sub><sub2>2</sub2></sub>=c<sub>a</sub><sub><sub2>2</sub2></sub>+DelayA(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)+DelayP(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)+B(a<sub>2</sub>)+GT(a<sub>2</sub>, RE<sub>a</sub><sub><sub2>2</sub2></sub>)=10+4+120+10+20=164&#x2266;L<sub>a</sub><sub><sub2>2</sub2></sub>=239</p>
<p id="h-0188" num="0000">DelayA(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/min<sub>a</sub><sub><sub2>9</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>9</sub2></sub>=2+2+10=14</p>
<p id="h-0189" num="0000">DelayP(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p5</sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>7</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>9</sub2></sub>/prd<sub>p</sub><sub><sub2>8</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>8</sub2></sub>=20+26+16+26+16+16=120</p>
<p id="h-0190" num="0000">B(a<sub>9</sub>)=0</p>
<p id="h-0191" num="0000">GT(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=0</p>
<p id="h-0192" num="0000">RE<sub>a</sub><sub><sub2>9</sub2></sub>=c<sub>a</sub><sub><sub2>9</sub2></sub>+DelayA(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)+DelayP(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)+B(a<sub>9</sub>)+GT(a<sub>9</sub>, RE<sub>a</sub><sub><sub2>9</sub2></sub>)=10+14+120=144&#x2266;L<sub>a</sub><sub><sub2>9</sub2></sub>=239</p>
<p id="p-0371" num="0586">if the second method is used, that is, the simulation procedure above to calculate the worst-case response times of the A-h-k-a processes in the examples above, the procedure will find the following.</p>
<p id="h-0193" num="0000">a<sub>0</sub>'s response time RE<sub>a</sub><sub><sub2>0 </sub2></sub>and a<sub>1</sub>'s response time</p>
<p id="p-0372" num="0587">RE<sub>a</sub><sub><sub2>i </sub2></sub>will remain the same as in Example 6, that is:</p>
<p id="h-0194" num="0000">RE<sub>a</sub><sub><sub2>0</sub2></sub>=RE(a<sub>0</sub>, 0)=max {RE (a<sub>0</sub>, t<sub>s</sub>)}=c<sub>a</sub><sub><sub2>0</sub2></sub>=2&#x2266;d<sub>a</sub><sub><sub2>0</sub2></sub>=2.</p>
<p id="h-0195" num="0000">RE<sub>a</sub><sub><sub2>i</sub2></sub>=max{RE(a<sub>1</sub>, t<sub>s</sub>)}=RE(a<sub>1</sub>, 0)=c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=2+2=4&#x2266;d<sub>a</sub>, =7.</p>
<p id="p-0373" num="0588">RE<sub>a</sub><sub><sub2>2</sub2></sub>: The maximum value of RE(a<sub>2</sub>, t<sub>s</sub>) will happen when a<sub>2 </sub>arrives at time t<sub>s</sub>=182 but a<sub>9 </sub>arrived one time unit earlier at t<sub>s</sub>&#x2212;1=181, so a<sub>9 </sub>blocks a<sub>2 </sub>at time 182. According to rule (2) in the simulation procedure, it is first assumed that a<sub>0 </sub>and a<sub>1 </sub>will also arrive at time t<sub>s</sub>=182, and will be put into execution from time 182 to 186, preempting a<sub>9</sub>. After a<sub>0 </sub>and a<sub>1</sub>'s completion, a<sub>9 </sub>will resume at time 186 and complete its computation at time 195. At time 195, a<sub>2 </sub>will be delayed by the conditions of Case 1 of the A-h-k-a Scheduler, because e(newp<sub>30</sub>)&#x2212;t)=214&#x2212;195=19&#x3c;c<sub>a</sub><sub><sub2>2</sub2></sub>+c<sub>newp</sub><sub><sub2>3</sub2></sub>=10+10=20. According to rule (3) in the simulation procedure, since at time 195 a<sub>0 </sub>and a<sub>1 </sub>belong to the set:
<br/>
{a<sub>j</sub>|a<sub>j</sub>&#x2208;A-h-k-a &#x39b;j&#x2260;i&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;((<img id="CUSTOM-CHARACTER-00026" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00024.TIF" alt="custom character" img-content="character" img-format="tif"/>(0&#x2266;R&#x2032;(a<sub>j</sub>))<img id="CUSTOM-CHARACTER-00027" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00025.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00028" he="2.12mm" wi="1.44mm" file="US08627319-20140107-P00026.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>j</sub>)&#x2266;t))<img id="CUSTOM-CHARACTER-00029" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00027.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)+min<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;e(p)))<img id="CUSTOM-CHARACTER-00030" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00028.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>b</sub>)&#x2266;t<sub>s</sub>&#x39b;t&#x2212;1&#x2266;e&#x2032;(a<sub>b</sub>)&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t))}
<br/>
because a<sub>0</sub>&#x2208;A-h-k-a &#x39b;a<sub>0</sub>&#x2260;a<sub>2</sub>&#x39b;L<sub>a</sub><sub><sub2>0</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>2</sub2></sub>&#x39b;(s&#x2032;(a<sub>9</sub>)&#x2266;t<sub>s</sub>=182&#x39b;t&#x2212;1=195&#x2212;1=194&#x2266;e&#x2032;(a<sub>9</sub>)=195&#x39b;s&#x2032; (a<sub>0</sub>)=182&#x3c;t=195.
<br/>
(at time t&#x2212;1=195&#x2212;1=194 a<sub>2 </sub>was blocked by a<sub>9 </sub>(&#x201c;a<sub>b</sub>&#x201d;) and a<sub>0 </sub>(&#x201c;a<sub>j</sub>&#x201d;) started its execution before t=195). a<sub>1 </sub>also meets the above conditions similar to a<sub>0</sub>. According to rule (3) in the simulation procedure, a<sub>0 </sub>and a<sub>1</sub>'s arrival times are &#x201c;delayed&#x201d; to occur at time s(newp<sub>30</sub>)=200 and are scheduled before a<sub>2 </sub>to execute from time 200 to 204; newp<sub>3 </sub>starts executing at time s(newp<sub>30</sub>)+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=200+2+2=204, and completes its execution at time 214; a<sub>2 </sub>starts at time 214 and executes until time 220. As L<sub>p</sub><sub><sub2>8</sub2></sub>=d<sub>p</sub><sub><sub2>8</sub2></sub>&#x2032;&#x2212;r<sub>p</sub><sub><sub2>8=260</sub2></sub>&#x2212;220=40&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=d<sub>a</sub><sub><sub2>2</sub2></sub>=239, L<sub>p</sub><sub><sub2>5</sub2></sub>=d<sub>p</sub><sub><sub2>5</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>5</sub2></sub>=250&#x2212;230=20&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=d<sub>a</sub><sub><sub2>2</sub2></sub>=239, and L<sub>p</sub><sub><sub2>4</sub2></sub>=r<sub>p</sub><sub><sub2>4</sub2></sub>=200&#x2212;0=200&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=d<sub>a</sub><sub><sub2>2</sub2></sub>=239; p<sub>8 </sub>will preempt a<sub>2 </sub>at time 220; p<sub>8</sub>, p<sub>5</sub>, p<sub>4 </sub>will execute from time 220 to 278; a<sub>2 </sub>will resume execution from time 278 to 282; Thus a<sub>2</sub>'s response time RE<sub>a</sub><sub><sub2>2</sub2></sub>=max{RE(a<sub>2</sub>, t<sub>s</sub>)}=RE(a<sub>2</sub>, 182)=e&#x2032;(a<sub>2</sub>) R<sub>a</sub><sub><sub2>2</sub2></sub>=282&#x2212;182=100&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>=239.
</p>
<p id="p-0374" num="0589"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a possible run-time execution of the A-h-k-a processes a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>9</sub>, together with the P-h-k and P-s-k processes of <figref idref="DRAWINGS">FIG. 3</figref>. The worst-case response time of A-h-k-a process a<sub>2 </sub>is RE<sub>a</sub><sub><sub2>2</sub2></sub>=max{RE(a<sub>2</sub>, t<sub>s</sub>)}=RE(a<sub>2</sub>, 182)=e&#x2032;(a<sub>2</sub>)&#x2212;R<sub>a</sub><sub><sub2>2</sub2></sub>=282&#x2212;182=100, as computed in Step 4.</p>
<p id="p-0375" num="0590">In effect, the simulation procedure computes a worst-case response time of a<sub>2 </sub>that is equal to the response time of a<sub>2 </sub>in the case that is illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, where a<sub>9 </sub>arrives at time 181, a<sub>2 </sub>arrives at time 182 and is blocked by a<sub>9 </sub>until time 191; at time 191 a<sub>2 </sub>is delayed by the conditions of Case 1 of the A-h-k-a Scheduler, because e(newp<sub>30</sub>)&#x2212;t)=214&#x2212;191=23&#x3c;c<sub>a</sub><sub><sub2>2</sub2></sub>+c<sub>newp</sub><sub><sub2>3</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+10+2+2=24. a<sub>0 </sub>and a<sub>1 </sub>arrive at time s(newp<sub>30</sub>)=200.</p>
<p id="p-0376" num="0591">RE<sub>a</sub><sub><sub2>9</sub2></sub>: The maximum value of RE(a<sub>9</sub>, t<sub>s</sub>) will happen when a<sub>9 </sub>arrives at time t<sub>s</sub>=200; a<sub>0 </sub>and a<sub>1 </sub>also arrive at time 200 and execute from time 200 to 204; newp<sub>3 </sub>executes from time 204 to 214; a<sub>2 </sub>starts at time 214 and executes until time 220. As L<sub>p</sub><sub><sub2>8</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>, L<sub>p</sub><sub><sub2>5</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>, and L<sub>p</sub><sub><sub2>4</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>; p<sub>8 </sub>will preempt a<sub>2 </sub>at time 220; p<sub>8</sub>, p<sub>5</sub>, p<sub>4 </sub>will execute from time 220 to 278; a<sub>2 </sub>will resume execution from time 278 to 282; Finally a<sub>9 </sub>will execute from time 282 to 292. Thus a<sub>9</sub>'s response time RE<sub>a</sub><sub><sub2>9</sub2></sub>=max{RE(a<sub>9</sub>, t<sub>s</sub>)}=RE(a<sub>9</sub>, 100)=e&#x2032;(a<sub>9</sub>)&#x2212;R<sub>a</sub><sub><sub2>9</sub2></sub>=292&#x2212;200=92&#x3c;L<sub>a</sub><sub><sub2>9</sub2></sub>=259.</p>
<p id="p-0377" num="0592">Since the worst-case response time of every A-h-k-a process is less than or equal to its deadline, it thus can be guaranteed that they are all schedulable. Note again that the worst-case response time of a<sub>2 </sub>determined by the simulation procedure is 100 and is tighter than the worst-case response time of 164 determined by the formula in the first method. The worst-case response time of a<sub>9 </sub>determined by the simulation procedure is 92 and also is tighter than the worst-case response time of 144 determined by the formula in the first method.</p>
<p id="p-0378" num="0593"><figref idref="DRAWINGS">FIG. 3</figref> illustrates the feasible pre-run-time schedule in which each guaranteed periodic process reserves a time frame that includes reserved processor capacity for any A-h-k-a process that has a shorter deadline than that guaranteed periodic process's deadline.</p>
<p id="h-0196" num="0000">(end of example)</p>
<p id="h-0197" num="0000">Step 5: Determine the Worst-Case Response Times of the A-s-k Processes</p>
<p id="p-0379" num="0594">A-s-k processes are scheduled at run-time by the Main Run-Time Scheduler, but their worst-case response times are determined before run-time in this step. A-s-k processes are scheduled at a lower priority than the A-h-k-a, P-h-k, P-s-k processes. That is, A-s-k processes are executed only when there does not exist any A-h-k-a, P-h-k, or P-s-k process that is ready for execution. If more than one A-s-k process are competing for execution, the process with the shortest deadline will be chosen for execution. An A-s-k process is not allowed to have any precedence relation with any other process. An A-s-k process a<sub>i </sub>is also not allowed to have any exclusion relation of the form a<sub>i </sub>excludes x where x is an A-h-k-a, P-h-k, or P-s-k process. These restrictions are imposed in order to prevent A-s-k processes from causing any delay to A-h-k-a, P-h-k, or P-s-k processes, so that one can guarantee that all the hard deadlines will be satisfied, and also provide firm response time guarantees for all the processes with known characteristics.</p>
<p id="p-0380" num="0595">Two different methods of determining the worst-case response time of an A-s-k process will now be described. The first method uses a mathematical formula to calculate the worst-case response time, and is very similar to the formula described in Step 3 for determining the worst-case response time of an A-h-k-a process, except that:</p>
<p id="p-0381" num="0596">(a) all A-h-k-a, P-h-k and P-s-k processes have higher priority than any A-s-k process a<sub>1</sub>, so their execution times are included together with the execution times of A-s-k processes that have shorter deadlines than a<sub>i </sub>in the terms Delay(a<sub>i</sub>, RE<sub>a</sub><sub><sub2>i</sub2></sub>) and Delay(a<sub>i</sub>, RE<sub>a</sub><sub><sub2>i</sub2></sub>);
<br/>
(b) because an A-s-k process cannot exclude a P-h-k, P-s-k, or A-h-k-a process, the term GT(a<sub>i</sub>, RE<sub>a</sub><sub><sub2>i</sub2></sub>) is not required in the formula; and
<br/>
(c) the term B(a<sub>1</sub>) only needs to consider the blocking time due to A-s-k processes that have greater deadlines than a<sub>1</sub>. Because the rest of the formula in Step 3 is basically the same as the formula used here, to avoid repetition, the complete definition of the formula used here is provided later in this specification.
</p>
<heading id="h-0198" level="1">Example 9</heading>
<p id="p-0382" num="0597">Assume the following asynchronous process with a soft deadline and known characteristics (A-s-k process):</p>
<p id="h-0199" num="0000">a<sub>10</sub>: c<sub>a</sub><sub><sub2>10</sub2></sub>=10, d<sub>a</sub><sub><sub2>10</sub2></sub>=300, min<sub>a</sub><sub><sub2>10</sub2></sub>=300.</p>
<p id="p-0383" num="0598">The procedure to be described below for determining the response time of the A-s-k processes is used to determine the worst-case response time of the A-s-k process a<sub>10</sub>:</p>
<p id="h-0200" num="0000">DelayA(a<sub>10</sub>,RE<sub>a</sub><sub><sub2>10</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/min<sub>a</sub><sub><sub2>0</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>0</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/min<sub>a</sub><sub><sub2>1</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>1</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/min<sub>a</sub><sub><sub2>2</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>2</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/min<sub>a</sub><sub><sub2>9</sub2></sub>&#x2510;c<sub>a</sub><sub><sub2>9</sub2></sub>=2+2+10+10=24</p>
<p id="h-0201" num="0000">DelayP(a<sub>10</sub>,RE<sub>a</sub><sub><sub2>10</sub2></sub>)=&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2510;c<sub>newp</sub><sub><sub2>3</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>p</sub><sub><sub2>4</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>4</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>p</sub><sub><sub2>5</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>5</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>p</sub><sub><sub2>6</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>6</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>p</sub><sub><sub2>7</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>7</sub2></sub>+&#x250c;RE<sub>a</sub><sub><sub2>10</sub2></sub>/prd<sub>p</sub><sub><sub2>8</sub2></sub>&#x2510;c<sub>p</sub><sub><sub2>8</sub2></sub>=20+26+16+26+16+16=120</p>
<p id="h-0202" num="0000">B(a<sub>10</sub>)=0</p>
<p id="h-0203" num="0000">RE<sub>a</sub><sub><sub2>10</sub2></sub>=c<sub>a</sub><sub><sub2>10</sub2></sub>+DelayA(a<sub>10</sub>,RE<sub>a</sub><sub><sub2>10</sub2></sub>)+DelayP(a<sub>10</sub>,RE<sub>a</sub><sub><sub2>10</sub2></sub>)=10+24+120=154&#x2266;L<sub>a</sub><sub><sub2>10</sub2></sub>=300</p>
<p id="h-0204" num="0000">(end of example)</p>
<p id="p-0384" num="0599">The second method uses a simulation procedure to determine the worst-case response time of each A-s-k process. The simulation procedure used here is also very similar to the simulation procedure described in Step 3 for determining the worst-case response time of an A-h-k-a process, except that, (a) because all A-h-k-a processes have higher priority than any A-s-k process a<sub>i</sub>, they are all assumed to arrive at the same time as a<sub>i</sub>, together with all A-s-k processes that have shorter deadlines compared with a<sub>i</sub>; (b) because an A-s-k process cannot exclude a P-h-k, P-s-k or A-h-k-a process, there is no need for an A-s-k process to avoid blocking a P-h-k, P-s-k or A-h-k-a process such as in Case 1 and Case 5 of the A-h-k-a Scheduler; consequently there is no need for a rule in the simulation procedure for A-s-k processes that is similar to the rule (5) in the simulation procedure in Step 3. Because the rest of the simulation procedure in Step 3 is basically the same as the simulation procedure used here, to avoid repetition, the complete definition of the simulation procedure used here is given later in this specification.</p>
<p id="p-0385" num="0600">Similar to the case in Step 3, compared with the formula, the simulation procedure gives tighter response times that can guarantee the schedulability of a larger number of cases, but requires a longer computation time.</p>
<p id="p-0386" num="0601">The simulation procedure used here also uses the functions of the A-h-k-a Scheduler and the Main Run-Time Scheduler, which are described later.</p>
<heading id="h-0205" level="1">Example 10</heading>
<p id="p-0387" num="0602">This example is a description of the use of this simulation procedure. Assume that the second method, that is, the simulation procedure described</p>
<p id="p-0388" num="0603">later, is used to calculate the worst-case response time of the A-s-k process a<sub>10 </sub>in Example 9 above, the procedure will find the following.</p>
<p id="p-0389" num="0604">The maximum value of RE (a<sub>10</sub>, t<sub>s</sub>) will happen when a<sub>10 </sub>arrives at time t<sub>s</sub>=196. <figref idref="DRAWINGS">FIG. 5</figref> is an illustration of this case, showing a possible run-time execution of the A-s-k process a<sub>10</sub>, together with the A-h-k-a processes a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>9</sub>, and the P-h-k and P-s-k processes in <figref idref="DRAWINGS">FIG. 3</figref>. The simulation procedure will simulate this execution in which a<sub>10</sub>'s worst-case response time RE<sub>a</sub><sub><sub2>10</sub2></sub>=max{RE(a<sub>10</sub>, t<sub>s</sub>)}=RE(a<sub>10</sub>, 196)=e&#x2032;(a<sub>10</sub>)&#x2212;R<sub>a</sub><sub><sub2>10</sub2></sub>=298&#x2212;196=102 as determined in Step 5.</p>
<p id="p-0390" num="0605">At time 196, the simulation procedure assumes that a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>9 </sub>will arrive at the same time as a<sub>10</sub>, so a<sub>0 </sub>will execute from time 196 to 198, and a<sub>1 </sub>will execute from time 198 to 200. newp<sub>3 </sub>will execute from time 200 to 210. a<sub>2 </sub>will execute from time 210 to 220. p<sub>8</sub>, p<sub>5</sub>, p<sub>4 </sub>will execute from time 220 to time 278. a<sub>9 </sub>will execute from time 278 to 288. a<sub>10 </sub>will execute from time 288 to 298. Thus a<sub>10</sub>'s worst-case response time will be RE<sub>a</sub><sub><sub2>10</sub2></sub>=max{RE(a<sub>10</sub>, t<sub>s</sub>)}=RE(a<sub>10</sub>, 196)=e&#x2032;(a<sub>10</sub>)&#x2212;R<sub>a</sub><sub><sub2>10</sub2></sub>=298&#x2212;196=102&#x3c;L<sub>a</sub><sub><sub2>10</sub2></sub>=300.</p>
<p id="h-0206" num="0000">(end of example)</p>
<p id="h-0207" num="0000">Run-Time Phase</p>
<p id="p-0391" num="0606">During run-time, the processor capacity that is left unused by guaranteed periodic processes (the set of P-h-k and P-s-k processes P-g) in the pre-run-time schedule generated in Step 4 will be used to schedule the processes that are asynchronous and for which the characteristics are either known before run-time</p>
<p id="p-0392" num="0607">(A-s-k and A-h-k-a processes) or unknown before run-time but known as soon as the process arrives in the system (A-s-u processes).</p>
<p id="p-0393" num="0608">In the previous step, a time slot in the feasible pre-run-time schedule was reserved for each guaranteed periodic process. However, at run-time each periodic process may not necessarily execute within its time slot in a pre-run-time schedule, because provided that it can be guaranteed that all the constraints will be satisfied, it is preferred that each process should execute as early as possible at run-time, in order to minimize the worst-case response times. Nevertheless, the beginning and end times of the time slots are important parameters that will be used by the run-time scheduler to determine, at each point in time, whether each asynchronous or periodic process can be safely put into execution while guaranteeing that all the constraints will be satisfied. In particular, the run-time scheduler will always guarantee that,</p>
<p id="h-0208" num="0000">(1) the actual execution order of each pair of &#x201c;guaranteed&#x201d; periodic processes p<sub>1 </sub>and p<sub>2 </sub>will be the same as the relative ordering of their time slots in the pre-run-time schedule, that is, if e(p<sub>1</sub>)&#x2266;s(p<sub>2</sub>), then e&#x2032;(p<sub>1</sub>)&#x2266;s&#x2032;(p<sub>2</sub>); and</p>
<p id="h-0209" num="0000">(2) the actual completion time e&#x2032;(p) of each &#x201c;guaranteed&#x201d; periodic process p will never exceed the end of p's time slot e(p) in the pre-run-time schedule.</p>
<p id="h-0210" num="0000">Scheduling A-h-k-a Processes</p>
<p id="p-0394" num="0609">Each time the Run-Time Scheduler is executed, it will first try to schedule A-h-k-a processes according to the procedure below.</p>
<p id="p-0395" num="0610">For any A-h-k-a process a<sub>i </sub>and any P-g process p<sub>i</sub>, the following should hold:</p>
<p id="h-0211" num="0000">&#x201c;a<sub>i </sub>cannot_be_preempted_by p<sub>l</sub>&#x201d;, if the following conditions hold:</p>
<p id="h-0212" num="0000">(a<sub>i </sub>excludes p<sub>l</sub>)<img id="CUSTOM-CHARACTER-00031" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00029.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>, a<sub>j</sub>&#x2208;A-h-k-a: L<sub>a</sub><sub><sub2>i</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>l</sub2></sub>&#x39b;a<sub>i </sub>excludes a<sub>j</sub>)</p>
<p id="h-0213" num="0000">A-h-k-a Scheduler Method</p>
<p id="p-0396" num="0611">The A-h-k-a Scheduler Method functions as part of the Main-Run-Time Scheduler to be described below.</p>
<p id="h-0214" num="0000">At any time t:</p>
<p id="h-0215" num="0000">if some A-h-k-a process a<sub>i </sub>has arrived at time t,</p>
<p id="h-0216" num="0000">or if some process x<sub>i </sub>completes its computation at time t</p>
<p id="h-0217" num="0000">or if t is both the release time and start time in the pre-run-time schedule</p>
<p id="h-0218" num="0000">for some P-g process p, i.e., t=R<sub>p</sub>=s(p)</p>
<p id="h-0219" num="0000">then</p>
<p id="h-0220" num="0000">begin</p>
<p id="p-0397" num="0000">
<ul id="ul0076" list-style="none">
    <li id="ul0076-0001" num="0000">
    <ul id="ul0077" list-style="none">
        <li id="ul0077-0001" num="0612">for each A-h-k-a process a<sub>i </sub>that has already arrived and not yet completed, i.e., R&#x2032;(a<sub>i</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00032" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00030.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (a<sub>i</sub>)&#x2266;t), if a<sub>i </sub>satisfies any of the following conditions, then Delay a<sub>i</sub>:</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0398" num="0613">
<maths id="MATH-US-00012" num="00012">
<math overflow="scroll">
  <mrow>
    <mstyle>
      <mspace width="1.1em" height="1.1ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mrow>
          <mi>Case</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mn>1</mn>
        </mrow>
        <mo>:</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="1.1em" height="1.1ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>if</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mrow>
            <mo>&#x2203;</mo>
            <mi>p</mi>
          </mrow>
        </mrow>
      </mrow>
      <mo>,</mo>
      <mrow>
        <mi>p</mi>
        <mo>&#x2208;</mo>
        <mrow>
          <mi>P</mi>
          <mo>-</mo>
          <mrow>
            <mi>g</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>:</mtext>
            </mstyle>
          </mrow>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00012-2" num="00012.2">
<math overflow="scroll">
  <mrow>
    <mrow>
      <msup>
        <mi>s</mi>
        <mi>&#x2032;</mi>
      </msup>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x2265;</mo>
    <mrow>
      <mi>t</mi>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>cannot_be</mi>
          <mo>&#x2062;</mo>
          <mi>_preempted</mi>
          <mo>&#x2062;</mo>
          <mi>_by</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>p</mi>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <msub>
        <mi>L</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
    </mrow>
    <mo>&#x2265;</mo>
    <mrow>
      <msub>
        <mi>L</mi>
        <mi>p</mi>
      </msub>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
                        <mo>&#x2062;</mo>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
          </mrow>
          <mo>,</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mtext>:</mtext>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <msub>
                        <mi>p</mi>
                        <mi>l</mi>
                      </msub>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>l</mi>
                    </msub>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                </msub>
              </mrow>
              <mo>&#x2264;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
              </msub>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
                        <mo>&#x2062;</mo>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
          </mrow>
          <mo>,</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mtext>:</mtext>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <msub>
                      <mi>a</mi>
                      <mi>i</mi>
                    </msub>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>cannot_be</mi>
                    <mo>&#x2062;</mo>
                    <mi>_preempted</mi>
                    <mo>&#x2062;</mo>
                    <mi>_by</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>l</mi>
                    </msub>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
                        <mo>&#x2062;</mo>
            <msub>
              <mi>p</mi>
              <mi>m</mi>
            </msub>
          </mrow>
          <mo>,</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>m</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mtext>:</mtext>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mi>t</mi>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mrow>
                  <msup>
                    <mi>s</mi>
                    <mi>&#x2032;</mi>
                  </msup>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>m</mi>
                    </msub>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>m</mi>
                    </msub>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mo>&#x2264;</mo>
              <mrow>
                <mrow>
                  <mi>s</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>a</mi>
                    <mi>i</mi>
                  </msub>
                </msub>
              </mrow>
              <mo>&#x3c;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>p</mi>
                  <mi>m</mi>
                </msub>
              </msub>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
            <mi>e</mi>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>(</mo>
              <mi>p</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>-</mo>
          <mi>t</mi>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x3c;</mo>
    <mrow>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <mo>+</mo>
      <mrow>
        <munder>
          <mo>&#x2211;</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x22c0;</mo>
                  <mi>t</mi>
                </mrow>
              </mrow>
              <mo>&#x2264;</mo>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>e</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>p</mi>
                                <mi>l</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mi>t</mi>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c0;</mo>
                      <msub>
                        <mi>L</mi>
                        <msub>
                          <mi>p</mi>
                          <mi>l</mi>
                        </msub>
                      </msub>
                    </mrow>
                    <mo>&#x2264;</mo>
                    <msub>
                      <mi>L</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>i</mi>
                      </msub>
                    </msub>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </munder>
        <mo>&#x2062;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
        </msub>
      </mrow>
      <mo>+</mo>
      <mrow>
        <munder>
          <mo>&#x2211;</mo>
          <munder>
            <mrow>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
              <mo>&#x2208;</mo>
              <mrow>
                <mrow>
                  <mi>A</mi>
                  <mo>-</mo>
                  <mi>h</mi>
                  <mo>-</mo>
                  <mi>k</mi>
                  <mo>-</mo>
                  <mrow>
                    <mi>a</mi>
                    <mo>&#x22c0;</mo>
                    <msub>
                      <mi>d</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                </mrow>
                <mo>&#x3c;</mo>
                <mrow>
                  <msub>
                    <mi>d</mi>
                    <mi>p</mi>
                  </msub>
                  <mo>&#x22c0;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mo>&#x2aec;</mo>
                      <mrow>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mn>0</mn>
                            <mo>&#x2264;</mo>
                            <mrow>
                              <msup>
                                <mi>R</mi>
                                <mi>&#x2032;</mi>
                              </msup>
                              <mo>&#x2061;</mo>
                              <mrow>
                                <mo>(</mo>
                                <msub>
                                  <mi>a</mi>
                                  <mi>k</mi>
                                </msub>
                                <mo>)</mo>
                              </mrow>
                            </mrow>
                          </mrow>
                          <mo>)</mo>
                        </mrow>
                        <mo>&#x22c1;</mo>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mrow>
                              <msup>
                                <mi>R</mi>
                                <mi>&#x2032;</mi>
                              </msup>
                              <mo>&#x2061;</mo>
                              <mrow>
                                <mo>(</mo>
                                <msub>
                                  <mi>a</mi>
                                  <mi>k</mi>
                                </msub>
                                <mo>)</mo>
                              </mrow>
                            </mrow>
                            <mo>&#x2264;</mo>
                            <mrow>
                              <mi>t</mi>
                              <mo>&#x22c0;</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mrow>
                          <msup>
                            <mi>e</mi>
                            <mi>&#x2032;</mi>
                          </msup>
                          <mo>&#x2061;</mo>
                          <mrow>
                            <mo>(</mo>
                            <msub>
                              <mi>a</mi>
                              <mi>k</mi>
                            </msub>
                            <mo>)</mo>
                          </mrow>
                        </mrow>
                        <mo>&#x2264;</mo>
                        <mi>t</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>&#x22c1;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>R</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>+</mo>
                      <msub>
                        <mi>min</mi>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                      </msub>
                    </mrow>
                    <mo>&#x3c;</mo>
                    <mrow>
                      <mi>e</mi>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>p</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>)</mo>
            </mrow>
          </munder>
        </munder>
        <mo>&#x2062;</mo>
        <mrow>
          <mrow>
            <mo>&#x2308;</mo>
            <mfrac>
              <mrow>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>-</mo>
                <mi>t</mi>
              </mrow>
              <msub>
                <mi>min</mi>
                <msub>
                  <mi>a</mi>
                  <mi>k</mi>
                </msub>
              </msub>
            </mfrac>
            <mo>&#x2309;</mo>
          </mrow>
          <mo>&#xb7;</mo>
          <msub>
            <mi>c</mi>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
          </msub>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<br/>
then Delay a<sub>i</sub>;
</p>
<p id="p-0399" num="0614">{&#x2014;in Case 1: a<sub>i </sub>is delayed either if there exists the possibility that the immediate execution of a<sub>i </sub>may cause a P-g process p with less latitude to be delayed (an example is shown in <figref idref="DRAWINGS">FIG. 20A</figref>); or, if there exists the possibility that it may cause some A-h-k-a process a<sub>j </sub>to be blocked for the duration of two processes a<sub>1 </sub>and p which both have greater latitude compared with a<sub>j</sub>'s latitude. An example of this case is shown in FIG. <b>20</b>B.}</p>
<p id="h-0221" num="0000">Case 2:</p>
<p id="h-0222" num="0000">if &#x2203;x, x&#x2208;P-g<img id="CUSTOM-CHARACTER-00033" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00031.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;A-h-k-a:</p>
<p id="h-0223" num="0000">s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00034" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00032.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;x excludes a<sub>i </sub></p>
<p id="h-0224" num="0000">then Delay a<sub>i</sub>;</p>
<p id="p-0400" num="0615">{&#x2014;in Case 2: a<sub>i </sub>is delayed because it is not allowed to preempt any process x that excludes a<sub>i</sub>. An example of this case is shown in FIG. <b>20</b>C.}</p>
<p id="h-0225" num="0000">Case 3:</p>
<p id="h-0226" num="0000">if &#x2203;x, x&#x2208;P-g<img id="CUSTOM-CHARACTER-00035" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00033.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;A-h-k-a:</p>
<p id="h-0227" num="0000">s&#x2032;(x)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00036" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00034.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;L<sub>x</sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>,</p>
<p id="h-0228" num="0000">then Delay a<sub>i</sub>;</p>
<p id="p-0401" num="0616">{&#x2014;in Case 3: a<sub>i </sub>is delayed because it is not allowed to preempt any process x that has less or the same latitude as a<sub>i</sub>. An example of this case is shown in FIG. <b>20</b>D.}</p>
<p id="h-0229" num="0000">Case 4:</p>
<p id="h-0230" num="0000">if &#x2203;a<sub>j</sub>, p, a<sub>j</sub>&#x2208;A-h-k-a, p&#x2208;P-g:</p>
<p id="h-0231" num="0000">s&#x2032;(p)&#x2267;t&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00037" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00035.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>j</sub>)&#x2266;t)</p>
<p id="h-0232" num="0000">&#x39b;a<sub>j </sub>excludes p&#x39b;L<sub>p</sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0233" num="0000">then Delay a<sub>i </sub></p>
<p id="p-0402" num="0617">{&#x2014;in Case 4: a<sub>i </sub>is delayed because it is not allowed to preempt any A-h-k-a process a<sub>j </sub>which excludes a P-g process p with less or equal latitude compared with a<sub>i</sub>'s latitude. An example of this case is shown in FIG. <b>20</b>E.}</p>
<p id="p-0403" num="0618">
<maths id="MATH-US-00013" num="00013">
<math overflow="scroll">
  <mrow>
    <mstyle>
      <mspace width="1.1em" height="1.1ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mrow>
          <mi>Case</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mn>5</mn>
        </mrow>
        <mo>:</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="1.1em" height="1.1ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>if</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mrow>
            <mo>&#x2203;</mo>
            <mi>p</mi>
          </mrow>
        </mrow>
      </mrow>
      <mo>,</mo>
      <msub>
        <mi>p</mi>
        <mn>1</mn>
      </msub>
      <mo>,</mo>
      <mrow>
        <msub>
          <mi>p</mi>
          <mn>1</mn>
        </msub>
        <mo>&#x2208;</mo>
        <mrow>
          <mi>P</mi>
          <mo>-</mo>
          <mrow>
            <mi>g</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>:</mtext>
            </mstyle>
          </mrow>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00013-2" num="00013.2">
<math overflow="scroll">
  <mrow>
    <mrow>
      <msup>
        <mi>s</mi>
        <mi>&#x2032;</mi>
      </msup>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x2265;</mo>
    <mrow>
      <mi>t</mi>
      <mo>&#x22c0;</mo>
      <mrow>
        <mi>s</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>p</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>&#x3c;</mo>
    <mrow>
      <mi>s</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <msub>
          <mi>p</mi>
          <mn>1</mn>
        </msub>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x3c;</mo>
    <mrow>
      <mi>e</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <msub>
          <mi>p</mi>
          <mn>1</mn>
        </msub>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x3c;</mo>
    <mrow>
      <mrow>
        <mi>e</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>p</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>cannot_be</mi>
          <mo>&#x2062;</mo>
          <mi>_preempted</mi>
          <mo>&#x2062;</mo>
          <mi>_by</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <msub>
            <mi>p</mi>
            <mn>1</mn>
          </msub>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <msub>
        <mi>L</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
    </mrow>
    <mo>&#x2265;</mo>
    <mrow>
      <msub>
        <mi>L</mi>
        <mi>p</mi>
      </msub>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
                        <mo>&#x2062;</mo>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
          </mrow>
          <mo>,</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mtext>:</mtext>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <msub>
                        <mi>p</mi>
                        <mi>l</mi>
                      </msub>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>s</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>p</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mrow>
                  <mi>e</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <msub>
                      <mi>p</mi>
                      <mi>l</mi>
                    </msub>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>p</mi>
                    <mi>l</mi>
                  </msub>
                </msub>
              </mrow>
              <mo>&#x2264;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
              </msub>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
                        <mo>&#x2062;</mo>
            <msub>
              <mi>p</mi>
              <mi>m</mi>
            </msub>
          </mrow>
          <mo>,</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>m</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>P</mi>
                <mo>-</mo>
                <mrow>
                  <mi>g</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mtext>:</mtext>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mi>t</mi>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <msup>
                  <mi>s</mi>
                  <mi>&#x2032;</mi>
                </msup>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <mi>e</mi>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>(</mo>
                  <msub>
                    <mi>p</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>&#x2264;</mo>
              <mrow>
                <mrow>
                  <mi>s</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>&#x22c0;</mo>
                <msub>
                  <mi>L</mi>
                  <msub>
                    <mi>a</mi>
                    <mi>i</mi>
                  </msub>
                </msub>
              </mrow>
              <mo>&#x3c;</mo>
              <msub>
                <mi>L</mi>
                <msub>
                  <mi>p</mi>
                  <mi>m</mi>
                </msub>
              </msub>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x22c0;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mrow>
            <mi>s</mi>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>(</mo>
              <mi>p</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>-</mo>
          <mi>t</mi>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x3c;</mo>
    <mrow>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <mo>+</mo>
      <mrow>
        <munder>
          <mo>&#x2211;</mo>
          <mrow>
            <msub>
              <mi>p</mi>
              <mi>l</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mi>P</mi>
              <mo>-</mo>
              <mrow>
                <mi>g</mi>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>e</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>p</mi>
                                <mi>l</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mi>t</mi>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c0;</mo>
                      <mi>t</mi>
                    </mrow>
                    <mo>&#x2264;</mo>
                    <mrow>
                      <mi>s</mi>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>p</mi>
                          <mi>l</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>&#x3c;</mo>
                    <mrow>
                      <mi>e</mi>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>p</mi>
                          <mi>l</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>&#x2264;</mo>
                    <mrow>
                      <mi>s</mi>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>p</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </munder>
        <mo>&#x2062;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
        </msub>
      </mrow>
      <mo>+</mo>
      <mrow>
        <munder>
          <mo>&#x2211;</mo>
          <munder>
            <mrow>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
              <mo>&#x2208;</mo>
              <mrow>
                <mrow>
                  <mi>A</mi>
                  <mo>-</mo>
                  <mi>h</mi>
                  <mo>-</mo>
                  <mi>k</mi>
                  <mo>-</mo>
                  <mrow>
                    <mi>a</mi>
                    <mo>&#x22c0;</mo>
                    <msub>
                      <mi>L</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                </mrow>
                <mo>&#x3c;</mo>
                <mrow>
                  <msub>
                    <mi>L</mi>
                    <mi>p</mi>
                  </msub>
                  <mo>&#x22c0;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mo>&#x2aec;</mo>
                      <mrow>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mn>0</mn>
                            <mo>&#x2264;</mo>
                            <mrow>
                              <msup>
                                <mi>R</mi>
                                <mi>&#x2032;</mi>
                              </msup>
                              <mo>&#x2061;</mo>
                              <mrow>
                                <mo>(</mo>
                                <msub>
                                  <mi>a</mi>
                                  <mi>k</mi>
                                </msub>
                                <mo>)</mo>
                              </mrow>
                            </mrow>
                          </mrow>
                          <mo>)</mo>
                        </mrow>
                        <mo>&#x22c1;</mo>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mrow>
                              <msup>
                                <mi>R</mi>
                                <mi>&#x2032;</mi>
                              </msup>
                              <mo>&#x2061;</mo>
                              <mrow>
                                <mo>(</mo>
                                <msub>
                                  <mi>a</mi>
                                  <mi>k</mi>
                                </msub>
                                <mo>)</mo>
                              </mrow>
                            </mrow>
                            <mo>&#x2264;</mo>
                            <mrow>
                              <mi>t</mi>
                              <mo>&#x22c0;</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mrow>
                          <msup>
                            <mi>e</mi>
                            <mi>&#x2032;</mi>
                          </msup>
                          <mo>&#x2061;</mo>
                          <mrow>
                            <mo>(</mo>
                            <msub>
                              <mi>a</mi>
                              <mi>k</mi>
                            </msub>
                            <mo>)</mo>
                          </mrow>
                        </mrow>
                        <mo>&#x2264;</mo>
                        <mi>t</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>&#x22c1;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>R</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>+</mo>
                      <msub>
                        <mi>min</mi>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                      </msub>
                    </mrow>
                    <mo>&#x3c;</mo>
                    <mrow>
                      <mi>s</mi>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>p</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
              <mo>)</mo>
            </mrow>
          </munder>
        </munder>
        <mo>&#x2062;</mo>
        <mrow>
          <mrow>
            <mo>&#x2308;</mo>
            <mfrac>
              <mrow>
                <mrow>
                  <mi>s</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>p</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>-</mo>
                <mi>t</mi>
              </mrow>
              <msub>
                <mi>min</mi>
                <msub>
                  <mi>a</mi>
                  <mi>k</mi>
                </msub>
              </msub>
            </mfrac>
            <mo>&#x2309;</mo>
          </mrow>
          <mo>&#xb7;</mo>
          <msub>
            <mi>c</mi>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
          </msub>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
</p>
<p id="p-0404" num="0619">{&#x2014;in Case 5: a<sub>i </sub>is delayed if there exists the possibility that the immediate execution of a<sub>i </sub>may cause a P-g process p with less or equal latitude to be delayed, when p may be preempted by some other periodic process p<sub>1</sub>, and a<sub>i </sub>cannot be preempted by p<sub>1</sub>. An example of this case is shown in FIG. <b>20</b>F.}</p>
<p id="h-0234" num="0000">Case 6:</p>
<p id="h-0235" num="0000">if &#x2203;x, a<sub>j</sub>, x&#x2208;A-h-k-a <img id="CUSTOM-CHARACTER-00038" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00036.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;P-g,</p>
<p id="h-0236" num="0000">a<sub>j</sub>&#x2208;A-h-k-a:</p>
<p id="h-0237" num="0000">s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00039" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00037.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (x)&#x2266;t)</p>
<p id="h-0238" num="0000">&#x39b;x excludes a<sub>j </sub></p>
<p id="h-0239" num="0000">&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0240" num="0000">then Delay a<sub>i</sub>.</p>
<p id="p-0405" num="0620">{&#x2014;in Case 6: a<sub>i </sub>is delayed because it is not allowed to preempt any process x that excludes some other A-h-k-a process a<sub>j </sub>which has a latitude that is less than both x and a<sub>i</sub>'s latitude, because that may cause a<sub>j </sub>to be blocked by the duration of more than one process with greater latitude. An example of this case is shown in FIG. <b>20</b>G.}</p>
<p id="h-0241" num="0000">Case 7:</p>
<p id="h-0242" num="0000">if &#x2203;p, p&#x2208;P-g:</p>
<p id="h-0243" num="0000">R<sub>p</sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00040" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00038.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p)&#x2266;t)&#x39b;L<sub>p</sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0244" num="0000">&#x39b;<img id="CUSTOM-CHARACTER-00041" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00039.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>i</sub>)&#x3c;t&#x39b;(a<sub>i </sub>cannot_be_preempted_by p))</p>
<p id="h-0245" num="0000">&#x39b;<img id="CUSTOM-CHARACTER-00042" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00040.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>i</sub>, p<sub>i</sub>&#x2208;P-g: s(p<sub>i</sub>)&#x2266;s(p)&#x39b;<img id="CUSTOM-CHARACTER-00043" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00041.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (p<sub>i</sub>)&#x2266;t)</p>
<p id="p-0406" num="0000">
<ul id="ul0078" list-style="none">
    <li id="ul0078-0001" num="0000">
    <ul id="ul0079" list-style="none">
        <li id="ul0079-0001" num="0621">&#x39b;<img id="CUSTOM-CHARACTER-00044" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00042.TIF" alt="custom character" img-content="character" img-format="tif"/>(s(p<sub>i</sub>)&#x2266;s(p)&#x39b;e(p)&#x2266;e(p<sub>i</sub>))
<br/>
then Delay a<sub>i</sub>;
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0407" num="0622">{&#x2014;in Case 7: a<sub>i </sub>is delayed so that it can be preempted by a P-g process p that has a latitude that is less than or equal to a<sub>i</sub>'s latitude, when a<sub>i </sub>does not exclude p and does not exclude any A-h-k-a process with a latitude that is shorter than p's latitude, and there does not exist any P-g process p<sub>i </sub>that has not completed such that p<sub>i </sub>is ordered before p and p does not preempt p<sub>i </sub>in the pre-run-time schedule. An example of this case is shown in FIG. <b>20</b>H.}</p>
<p id="h-0246" num="0000">end{if}</p>
<p id="p-0408" num="0623">Select, among all processes a<sub>i</sub>&#x2208;A-h-k-a, such that a<sub>i </sub>has already arrived and not yet completed, and a<sub>i </sub>is NOT Delayed, the process which has the shortest deadline. If more than one process is thus selected, select among them the process that has the smallest index.</p>
<p id="h-0247" num="0000">end;</p>
<p id="h-0248" num="0000">return to Main Run-Time Scheduler;</p>
<p id="p-0409" num="0624">The A-h-k-a Scheduler has the following properties:</p>
<p id="p-0410" num="0625">Property 1. Each P-g process p's execution can only be delayed by A-h-k-a processes that have less latitude than p's latitude. A P-g process will never be delayed by any A-h-k-a process that has a greater or equal latitude.</p>
<p id="p-0411" num="0626">Property 2. Any A-h-k-a process a<sub>i </sub>cannot be blocked by more than one critical section belonging to A-h-k-a processes that have deadlines greater than a<sub>i</sub>'s deadline.</p>
<p id="p-0412" num="0627">Property 3. No deadlocks can ever occur.</p>
<p id="p-0413" num="0628">Property 4. Each P-g process p will always be completed on or before e(p), that is, the end of the time slot allocated to p in the pre-run-time schedule.</p>
<heading id="h-0249" level="1">Example 11</heading>
<p id="p-0414" num="0629">Continuing with the set of processes in Examples 1-10 above, suppose that A-h-k-a process a<sub>2 </sub>makes a request at time 99. <figref idref="DRAWINGS">FIG. 6</figref> is an illustration of this case, showing a possible run-time execution of the A-h-k-a processes a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>9</sub>, scheduled by the A-h-k-a Scheduler Subroutine together with the P-h-k and P-s-k processes described in <figref idref="DRAWINGS">FIG. 3</figref>, during the run-time phase.</p>
<p id="p-0415" num="0630">Because s(newp<sub>3</sub><sub><sub2>1</sub2></sub>)=100&#x2267;t=99&#x39b;a<sub>2 </sub>excludes newp<sub>3</sub>&#x39b;L<sub>a</sub><sub><sub2>2</sub2></sub>=d<sub>a</sub><sub><sub2>2</sub2></sub>=239&#x2267;L<sub>newp</sub><sub><sub2>3</sub2></sub>=d<sub>newp</sub><sub><sub2>3</sub2></sub>&#x2212;r<sub>newp</sub><sub><sub2>3</sub2></sub>=115&#x2212;100=15&#x39b;e(p<sub>3</sub>)&#x2212;t=114&#x2212;99=15&#x3c;c<sub>a</sub><sub><sub2>2</sub2></sub>+c<sub>p</sub><sub><sub2>3</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>=10+10+2+2=24, the conditions in Case 1 of the A-h-k-a Scheduler Subroutine are true, so a<sub>2 </sub>is delayed.</p>
<p id="p-0416" num="0631">(If a<sub>2 </sub>is allowed to start at time 99, then newp<sub>3 </sub>would miss its deadline. This is because a<sub>2 </sub>excludes newp<sub>3</sub>, once it starts, it cannot be preempted by newp<sub>3</sub>, thus its execution will occupy a portion of the time frame reserved by newp<sub>3 </sub>in the pre-run-time schedule which only includes reserved processor capacity for itself and A-h-k-a processes with shorter deadlines, which are a<sub>0 </sub>and a<sub>1</sub>.)</p>
<p id="p-0417" num="0632">Suppose that both a<sub>0 </sub>and a<sub>1 </sub>make requests at time 130, then a<sub>0 </sub>will execute from time 130 to 132, and a<sub>1 </sub>will execute from time 132 to 134, both using processor capacity that was reserved for them in p<sub>6</sub>'s reserved time frame.</p>
<p id="p-0418" num="0633">a<sub>2 </sub>will be executed after newp<sub>3</sub>, p<sub>6</sub>, p<sub>7</sub>, as it's latitude L<sub>a</sub><sub><sub2>2</sub2></sub>=d<sub>a</sub><sub><sub2>2</sub2></sub>=239 is greater than the latitudes of newp<sub>3</sub>, p<sub>6</sub>, p<sub>7</sub>.</p>
<p id="h-0250" num="0000">(end of example)</p>
<p id="p-0419" num="0634">Note that an A-h-k-a process a<sub>1 </sub>may be blocked from</p>
<p id="p-0420" num="0635">the start time to the end time of some critical section of a P-g process in the pre-run-time schedule.</p>
<p id="p-0421" num="0636">One can easily determine the maximum time that any A-h-k-a process can be delayed by any P-g process with a simple inspection of the pre-run-time schedule. One can also easily make changes to a pre-run-time schedule in order to avoid any excessive delay of an A-h-k-a process a<sub>i </sub>that may be caused by preemptions of a P-g process's critical section by other P-g processes.</p>
<p id="p-0422" num="0637">Above, a P-g process p<sub>1 </sub>has been allowed to be preempted by some other P-g process p<sub>2</sub>, even if this may cause some A-h-k-a process a to be blocked by the duration of two critical sections belonging to two P-g processes p<sub>1 </sub>and p<sub>2 </sub>which both have latitudes that are greater than a's latitude. This provides greater flexibility to the scheduling of P-g processes.</p>
<p id="p-0423" num="0638">However, it is easy to guarantee that any A-h-k-a process a cannot be blocked by the duration of two critical sections belonging to two P-g processes p<sub>1 </sub>and p<sub>2 </sub>which both have latitudes that are greater than a's latitude. To guarantee this, all one needs to do is the following, for all pairs of P-g processes p<sub>1 </sub>and p<sub>2</sub>, if p<sub>1 </sub>excludes some A-h-k-a process a, and L<sub>p</sub><sub><sub2>2</sub2></sub>&#x2267;L<sub>a</sub>, then add the exclusion relation p<sub>1 </sub>excludes p<sub>2</sub>.</p>
<p id="p-0424" num="0639">If the potential run-time overhead of the A-h-k-a Scheduler in the integration approach is compared with the overhead of methods that schedule all the tasks at run-time, the following may be noticed:</p>
<p id="p-0425" num="0640">(a) With the integration approach, the number of processes that the A-h-k-a Scheduler needs to handle, should be very small. This is because, in most real-time systems, the bulk of the computation is performed by periodic processes, while the number of asynchronous processes with hard deadlines is usually very small. In addition a significant portion of the asynchronous processes will be transformed into periodic processes when using this approach.
<br/>
(b) The interarrival times of A-h-k-a processes that are not converted into new P-h-k processes are likely to be long.
<br/>
(c) A significant portion of the parameters used by the A-h-k-a Scheduler to make scheduling decisions, are known before run-time, so one can pre-compute major portions of the conditions
</p>
<p id="p-0426" num="0641">that are used for decision making, hence the amount of computation that needs to be performed for scheduling purposes at run-time can be minimized.</p>
<p id="h-0251" num="0000">Thus the run-time overhead of the A-h-k-a Scheduler is believed to be by far smaller than the overhead of methods that schedule all the tasks at run-time.</p>
<p id="h-0252" num="0000">The Main Run-Time Scheduler</p>
<p id="p-0427" num="0642">At run-time, the order of the execution of any pair of guaranteed periodic processes, i.e., P-h-k or P-s-k processes is kept consistent with the order of that pair of processes in the pre-run-time schedule.</p>
<p id="p-0428" num="0643">A-s-u processes are scheduled at a lower priority than the A-h-k-a, P-h-k, P-s-k, and A-s-k processes. That is, A-s-u processes are executed only when there does not exist any process with known characteristics, i.e., A-h-k-a, P-h-k, P-s-k, or A-s-k process, that is ready for execution. If more than one A-s-u process are competing for execution, the process with the shortest deadline will be chosen for execution. An A-s-u process is not allowed to have any precedence relation with any other process. An A-s-u process a<sub>i </sub>is not allowed to have any exclusion relation of the form a<sub>i </sub>excludes x where x is an A-h-k-a, P-h-k, P-s-k or A-s-k process. These restrictions are imposed in order to prevent A-s-u processes from causing any delay to processes with known characteristics; so that one can guarantee that all the hard deadlines will be satisfied, and also provide firm response time guarantees for all the processes with known characteristics.</p>
<p id="p-0429" num="0644">For any P-g process p<sub>1 </sub>and any P-g process p<sub>2</sub>, if s(p<sub>1</sub>)&#x3c;s(p<sub>2</sub>)&#x3c;e(p<sub>2</sub>)&#x3c;e(p<sub>1</sub>), then p<sub>2</sub>'s time slot is nested within p<sub>1</sub>'s time slot in the pre-run-time schedule.</p>
<p id="p-0430" num="0645">Main-Run-Time-Scheduler Method:</p>
<p id="h-0253" num="0000">At any time t:</p>
<p id="h-0254" num="0000">if some process x has arrived at time t, or has completed at time t,</p>
<p id="h-0255" num="0000">or if t is both the release time and start time in the pre-run-time schedule</p>
<p id="h-0256" num="0000">for some P-g process p, i.e., t=R<sub>p</sub>=s(p)</p>
<p id="h-0257" num="0000">then execute the Main-Run-Time-Scheduler as follows:</p>
<p id="h-0258" num="0000">execute the A-h-k-a-Scheduler-Subroutine;</p>
<p id="p-0431" num="0000">
<ul id="ul0080" list-style="none">
    <li id="ul0080-0001" num="0000">
    <ul id="ul0081" list-style="none">
        <li id="ul0081-0001" num="0646">{the A-h-k-a Scheduler-Subroutine was defined earlier}
<br/>
if some A-h-k-a process a<sub>i </sub>is selected for execution at time t by the A-h-k-a Scheduler then execute a<sub>i </sub>
<br/>
else
<br/>
begin
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0432" num="0647">if &#x2203;p, p&#x2208;P-g: s&#x2032;(p)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00045" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00043.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00046" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00040.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>i</sub>, p<sub>1</sub>&#x2208;P-g: R<sub>p</sub><sub><sub2>i</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00047" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00044.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p<sub>i</sub>)&#x2266;t)&#x39b;s(p)&#x2266;s(p<sub>i</sub>)&#x39b;e(p<sub>i</sub>)&#x3c;e(p)
<ul id="ul0082" list-style="none">
    <li id="ul0082-0001" num="0000">
    <ul id="ul0083" list-style="none">
        <li id="ul0083-0001" num="0648">{there exists p that has started and has not completed, and there does not exist any other p<sub>i </sub>that is ready and has not completed, such that p<sub>i</sub>'s time slot is nested within p's time slot in the pre-run-time schedule}</li>
        <li id="ul0083-0002" num="0649">then continue to execute p.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0433" num="0650">else</p>
<p id="p-0434" num="0651">if &#x2203;p, p&#x2208;P-g: R<sub>p</sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00048" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00045.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00049" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00040.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>i</sub>, p<sub>j</sub>&#x2208;P-g: <img id="CUSTOM-CHARACTER-00050" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00046.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p<sub>i</sub>)&#x2266;t)&#x39b;s(p<sub>i</sub>)&#x2266;s(p<sub>i</sub>)&#x39b;<img id="CUSTOM-CHARACTER-00051" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00047.TIF" alt="custom character" img-content="character" img-format="tif"/>(s(p<sub>i</sub>)&#x2266;s(p)&#x39b;e(p)&#x3c;e(p<sub>i</sub>))&#x39b;<img id="CUSTOM-CHARACTER-00052" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00040.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>j</sub>, p<sub>j</sub>&#x2208;P-g: R<sub>p</sub><sub><sub2>j</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00053" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00048.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p<sub>j</sub>)&#x2266;t)&#x39b;s(p)&#x2266;s(p<sub>j</sub>) &#x39b;e(p<sub>j</sub>)&#x3c;e(p)
<ul id="ul0084" list-style="none">
    <li id="ul0084-0001" num="0000">
    <ul id="ul0085" list-style="none">
        <li id="ul0085-0001" num="0652">{there exists p that is ready and has not completed, and there does not exist any other p<sub>i </sub>that has not yet completed, such that p<sub>i </sub>is ordered before p in the pre-run-time schedule, and p's time slot is not nested within p<sub>i</sub>'s time slot in the pre-run-time schedule, and there does not exist any other p<sub>j </sub>that is ready and has not completed, such that p<sub>j</sub>'s time slot is nested within p's time slot in the pre-run-time schedule}</li>
        <li id="ul0085-0002" num="0653">then execute p</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0435" num="0654">else</p>
<p id="p-0436" num="0655">if &#x2203;a<sub>i</sub>, a<sub>i</sub>&#x2208;A-s-k: R<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00054" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00049.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>i</sub>)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00055" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00040.TIF" alt="custom character" img-content="character" img-format="tif"/>x: (s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00056" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00050.TIF" alt="custom character" img-content="character" img-format="tif"/>(<i>x</i>)&#x2266;t)&#x39b;((x excludes a<sub>i</sub>)<img id="CUSTOM-CHARACTER-00057" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00051.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>&#x2208;A-s-k: s&#x2032;(x)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00058" he="2.46mm" wi="2.79mm" file="US08627319-20140107-P00052.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;x excludes a<sub>j</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>1</sub2></sub>)
<ul id="ul0086" list-style="none">
    <li id="ul0086-0001" num="0000">
    <ul id="ul0087" list-style="none">
        <li id="ul0087-0001" num="0656">{there exists A-s-k process a<sub>i </sub>that is ready and has not completed, and there does not exist any other process x such that x excludes a<sub>i </sub>or x excludes some process a<sub>j </sub>such that a<sub>j </sub>has a latitude that is less than both x's and a<sub>i</sub>'s latitude, and x has started but not completed}</li>
        <li id="ul0087-0002" num="0657">then select among them, a process a<sub>i </sub>that has the shortest deadline;</li>
        <li id="ul0087-0003" num="0658">if among such processes there are some that have already started, then choose a process that has already started; and execute a<sub>i</sub>;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0437" num="0659">else</p>
<p id="p-0438" num="0660">if &#x2203;a<sub>i</sub>, a<sub>i</sub>&#x2208;A-s-u: R<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00059" he="2.46mm" wi="2.79mm" file="US08627319-20140107-P00053.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>i</sub>)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00060" he="3.56mm" wi="2.12mm" file="US08627319-20140107-P00054.TIF" alt="custom character" img-content="character" img-format="tif"/>x: (s&#x2032;(x)&#x3c;t &#x39b;<img id="CUSTOM-CHARACTER-00061" he="2.46mm" wi="2.79mm" file="US08627319-20140107-P00055.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;((x excludes a<sub>i</sub>)<img id="CUSTOM-CHARACTER-00062" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00056.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>, a<sub>j</sub>&#x2208;A-s-u: s&#x2032;(x)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00063" he="2.46mm" wi="2.79mm" file="US08627319-20140107-P00057.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (x)&#x2266;t)&#x39b;x excludes a<sub>j</sub>&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i</sub2></sub>))
<ul id="ul0088" list-style="none">
    <li id="ul0088-0001" num="0000">
    <ul id="ul0089" list-style="none">
        <li id="ul0089-0001" num="0661">{there exists A-s-u process a<sub>i </sub>that is ready and has not completed, and there does not exist any other process x such that x excludes a<sub>i </sub>or x excludes some process a<sub>j </sub>such that a<sub>j </sub>has a latitude that is less than both x's and a<sub>i</sub>'s latitude, and x has started but not completed}</li>
        <li id="ul0089-0002" num="0662">then select among them, a process a<sub>i </sub>that has the shortest deadline;</li>
        <li id="ul0089-0003" num="0663">if among such processes there are some that have already started, then choose a process that has already started; and execute a<sub>i</sub>;
<br/>
end;
</li>
    </ul>
    </li>
</ul>
</p>
<heading id="h-0259" level="1">Example 12</heading>
<p id="p-0439" num="0664">Continuing with the set of processes in Examples 1-11 above, assume the following asynchronous process a<sub>11 </sub>with a soft deadline and unknown characteristics (A-s-u process). (a<sub>11</sub>'s characteristics are only known after its arrival.)</p>
<p id="h-0260" num="0000">a<sub>11</sub>: c<sub>a</sub><sub><sub2>11</sub2></sub>=10, d<sub>a</sub><sub><sub2>11</sub2></sub>=300.</p>
<p id="p-0440" num="0665">Assume also that A-s-u process a<sub>11 </sub>makes a request at time 190; A-h-k-a process a<sub>2 </sub>makes a request at time 191; A-s-k process a<sub>10 </sub>makes a request at time 196; and A-h-k-a processes a<sub>0 </sub>and a<sub>1 </sub>make requests at time 200 <figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of this case, in particular a possible run-time execution of the A-s-u process a<sub>11</sub>, and the A-s-k process a<sub>10</sub>, scheduled by the Main Run-Time Scheduler together with the A-h-k-a processes a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, and the P-h-k and P-s-k processes described with regard to <figref idref="DRAWINGS">FIG. 3</figref>, during the run-time phase.</p>
<p id="p-0441" num="0666">At time 190 a<sub>11 </sub>will be put into execution as there are no other processes that are ready for execution. At time 191 a<sub>2 </sub>will be delayed because the conditions of Case 1 of the A-h-k-a Scheduler will be true. Note that a<sub>2 </sub>excludes newp<sub>3</sub>, and L<sub>newp</sub><sub><sub2>3</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>; if a<sub>2 </sub>is allowed to execute at time 191, it will cause newp<sub>3 </sub>to miss its deadline if a<sub>0 </sub>and a<sub>1 </sub>also preempt newp<sub>3</sub>. At time 196 a<sub>10 </sub>will preempt a<sub>11 </sub>as A-s-k processes are scheduled before A-s-u processes. At time 200 a<sub>0 </sub>will preempt a<sub>10 </sub>as A-h-k-a processes are scheduled before A-s-k processes. a<sub>11 </sub>will execute from time 190 to 196; a<sub>10 </sub>will execute from time 196 to 200; a<sub>0 </sub>will execute from time 200 to 202; a<sub>1 </sub>will execute from time 202 to 204; newp<sub>3 </sub>will execute from time 204 to 214. As L<sub>p</sub><sub><sub2>8</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>, L<sub>p</sub><sub><sub2>5</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>, and L<sub>p</sub><sub><sub2>4</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>2</sub2></sub>; p<sub>8 </sub>will preempt a<sub>2 </sub>at time 220; p<sub>8</sub>, p<sub>5</sub>, p<sub>4 </sub>will execute from time 220 to 278; a<sub>2 </sub>will resume execution from time 278 to 282; a<sub>10 </sub>will resume execution from time 282 to 288; a<sub>11 </sub>will resume execution from time 288 to 292.</p>
<p id="h-0261" num="0000">(end of example)</p>
<p id="p-0442" num="0667">Note that each process may be completed earlier than the time indicated in the pre-run-time schedule, since the time that is reserved for each asynchronous process with a shorter deadline in a guaranteed periodic process's time frame in the pre-run-time schedule will not be used by that asynchronous process if it does not arrive during that time frame.</p>
<heading id="h-0262" level="1">Example 13</heading>
<p id="p-0443" num="0668">In Example 3, when using the procedure for converting a set of asynchronous processes into a set of new periodic processes, threshold(a<sub>3</sub>) was set to 2.5, resulting in the A-h-k process a<sub>3 </sub>being converted into a new periodic process newp<sub>3</sub>.</p>
<p id="p-0444" num="0669">Now assume that threshold(a<sub>3</sub>) is set to an arbitrary large value, say 50, that would guarantee that a<sub>3 </sub>will not be converted</p>
<p id="p-0445" num="0670">into a periodic process.</p>
<p id="p-0446" num="0671">In the case that A-h-k process a<sub>3 </sub>remains asynchronous, because the latitude of a<sub>3</sub>, L<sub>a</sub><sub><sub2>3</sub2></sub>=d<sub>a</sub><sub><sub2>3</sub2></sub>=114, as well as the latitudes of a<sub>0 </sub>and a<sub>1 </sub>are greater than the latitudes of the periodic processes p<sub>4</sub>; p<sub>6</sub>; p<sub>7 </sub>in meeting their respective deadlines, the worst-case computation times of p<sub>4</sub>; p<sub>6</sub>; p<sub>7 </sub>should be adjusted to leave &#x201c;room&#x201d; for a<sub>0</sub>, a<sub>1 </sub>and a<sub>3</sub>'s worst-case computation time as follows:</p>
<p id="h-0263" num="0000">c<sub>p</sub><sub><sub2>4</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>4</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>+c<sub>a</sub><sub><sub2>3</sub2></sub>=26+2+2+10=40</p>
<p id="h-0264" num="0000">c<sub>p</sub><sub><sub2>6</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>6</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>+c<sub>a</sub><sub><sub2>3</sub2></sub>=26+2+2+10=40</p>
<p id="h-0265" num="0000">c<sub>p</sub><sub><sub2>7</sub2></sub>&#x2032;=c<sub>p</sub><sub><sub2>7</sub2></sub>+c<sub>a</sub><sub><sub2>0</sub2></sub>+c<sub>a</sub><sub><sub2>1</sub2></sub>+c<sub>a</sub><sub><sub2>3</sub2></sub>=16+2+2+10=30</p>
<p id="p-0447" num="0672">The pre-run-time scheduler will first construct the feasible pre-run-time schedule illustrated in <figref idref="DRAWINGS">FIG. 8</figref> for the set of P-g processes p<sub>4</sub>, p<sub>5</sub>, p<sub>6</sub>, p<sub>7</sub>. Then the simulation procedure for determining the worst-case response time of an A-h-k-a process can be used to determine a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, a<sub>9</sub>'s worst-case response time. A-h-k-a process a<sub>3</sub>'s worst-case response time happens when a<sub>3 </sub>arrives at time 7, while a<sub>2 </sub>which excludes a<sub>3 </sub>arrived one time unit before a<sub>3 </sub>at time 6. If a<sub>0</sub>, a<sub>1 </sub>which have less latitude than a<sub>3 </sub>in meeting their respective deadlines, arrive at the same time as a<sub>3</sub>, that is, at time 7, a<sub>0 </sub>will preempt a<sub>2 </sub>and execute from time 7 to time 9, a<sub>1 </sub>will execute from time 9 to time 11, a<sub>2 </sub>will continue its execution from time 11 to time 20, p<sub>8 </sub>will first execute from time 20 to time 30; at time 30 p<sub>8 </sub>will be preempted by p<sub>5 </sub>which executes from time 30 to time 46; at time 46 p<sub>8 </sub>will continue its execution from time 46 to time 52. At time 52, because L<sub>a</sub><sub><sub2>3</sub2></sub>=d<sub>a</sub><sub><sub2>3</sub2></sub>=114&#x3c;L<sub>p</sub><sub><sub2>4</sub2></sub>=d<sub>p</sub><sub><sub2>4</sub2></sub>&#x2212;r<sub>p</sub><sub><sub2>4</sub2></sub>=200&#x2212;0=200, a<sub>3 </sub>will execute from time 52 to time 62. A-h-k-a process a<sub>3</sub>'s worst-case response time RE<sub>a</sub><sub><sub2>3</sub2></sub>={RE(a<sub>3</sub>, t<sub>s</sub>)}=RE(a<sub>3</sub>, 7)=e&#x2032;(a<sub>3</sub>)&#x2212;R<sub>a</sub><sub><sub2>3</sub2></sub>=62&#x2212;7=45&#x2266;d<sub>a</sub><sub><sub2>3</sub2></sub>=114. Similarly, one can verify that the worst-case response times of all the other asynchronous processes are all less than or equal to their respective deadlines, as shown in <figref idref="DRAWINGS">FIG. 9</figref>.
<br/>
(end of example)
</p>
<p id="p-0448" num="0673">The embodiments described herein are advantageous methods of the integration approach compared with methods that perform all scheduling activities at run-time. It should be noted that existing methods or protocols that perform all scheduling activities at run-time are not able to guarantee the schedulability of the set of processes given in these examples. There are many reasons for this, including:</p>
<p id="p-0449" num="0674">1. Prior art run-time scheduling methods are not capable of finding optimal schedules involving critical sections, except for the simplest problem instances, because not enough time is available to the scheduler at run-time.</p>
<p id="p-0450" num="0675">2. Prior art run-time scheduling methods cannot handle precedence constraints, release time and exclusion constraints simultaneously in an efficient way.</p>
<p id="p-0451" num="0676">3. Prior art run-time scheduling methods are unable to take full advantage of the knowledge about processes characteristics that is available before run-time. For example, no prior art run-time scheduling method can completely avoid blocking of a periodic process with less latitude by a asynchronous process with greater latitude, which the integration approach is capable of doing, as shown in the examples above. As another example, when determining the worst-case response times of asynchronous processes, no prior art run-time scheduling method can completely avoid making the overly pessimistic assumption that, for each process, all the periodic processes with shorter deadlines can arrive at the same time to delay that process. In contrast, the integration method in accordance with the present invention can avoid making such an overly pessimistic assumption, as shown in the examples where a simulation procedure can obtain tighter worst-case response times for asynchronous processes, by taking advantage of the knowledge of the positions of the periodic processes in the pre-run-time schedule.</p>
<p id="p-0452" num="0677">If the potential run-time overhead of the Main Run-Time Scheduler in the integration method is compared with the overhead of methods that schedule all the tasks at run-time, the following will be noticed:</p>
<p id="p-0453" num="0678">(a) The Main Run-Time Scheduler is much simpler, and the amount of computation needed for scheduling purposes is much smaller, compared with most methods that schedule all the tasks at run-time. This is because most of the important scheduling decisions have already been made before run-time. In particular, the relative ordering of P-h-k and P-s-k processes that usually form the bulk of the computation in most real-time applications, was determined before run-time when the pre-run-time schedule was computed.
<br/>
(b) Since at run-time, the execution order of P-h-k and P-s-k processes is the same as the relative ordering of those processes in the pre-run-time schedule, one would know exactly which guaranteed periodic process may preempt which other guaranteed periodic process at run-time. Thus one can use this information to minimize the amount of context switching. Thus it is believed that the run-time overhead of the Main Run-Time Scheduler should be by far smaller than the overhead of methods that schedule all the tasks at run-time.
<br/>
Using the Present Invention with Multiple Processors
</p>
<p id="p-0454" num="0679">The methods described above can be used for scheduling processes with exclusion relations, precedence relations, and offset constraints, release time, worst-case computation time, deadline constraints, on more than one processor.</p>
<p id="p-0455" num="0680">There are many possible ways that would allow one to use the methods with more than one processor. The following is just one possible set of changes to the procedures described earlier that would allow one to use the methods for scheduling processes on more than one processor. The use of the methods with multiple processors is illustrated in Example 14.</p>
<p id="p-0456" num="0681">As stated earlier, instead of using a single processor method such as the method in the aforenoted 1990 article by Xu and Parnas in the procedure for constructing a feasible pre-run-time schedule for a given set of periodic processes with offsets, one should use a multiple processor scheduling method, such as the method in the aforenoted 1993 article by Xu in that procedure.</p>
<p id="p-0457" num="0682">One simple strategy, that will be used in the embodiment described below, is to set the release time r<sub>p</sub><sub><sub2>i </sub2></sub>of every periodic process p<sub>i </sub>to be equal to the beginning time of its time slot in the pre-run-time schedule, i.e., r<sub>p</sub><sub><sub2>i</sub2></sub>=s(p<sub>i</sub>). This ensures that every periodic process' actual execution will not start earlier than the beginning time of its time slot, i.e., r<sub>p</sub><sub><sub2>i</sub2></sub>&#x2266;s&#x2032;(p<sub>i</sub>). This could prevent multiple processor anomalies that could be caused by the following situation. Some processes end earlier, and a first process that excludes a second process with a relatively short deadline is executed earlier, resulting in the first process' execution combining with the execution of a third process on another processor that also excludes the second process to increase the time interval in which the second process is blocked from execution. It is not difficult to design alternative methods that would allow each periodic process to start execution at a time earlier than the beginning of its time slot, while preventing such anomalies. Likewise, in the design of the Multiple Processor A-h-k-a Scheduler described below, there are many possible alternative strategies that would allow some more flexibility in scheduling the processes, however, this disclosure would be of too great length if every possible improvement is described.</p>
<p id="p-0458" num="0683">The Multiple Processor A-h-k-a Scheduler and Multiple Processor Main-Run-Time Scheduler can be designed as follows.</p>
<p id="p-0459" num="0684">Each time the Multiple Processor Run-Time Scheduler is executed, it will first try to schedule A-h-k-a processes according to the procedure below.</p>
<p id="p-0460" num="0685">For any A-h-k-a process a<sub>i </sub>and any P-g process p<sub>l</sub>, it will be said that</p>
<p id="h-0266" num="0000">&#x201c;a<sub>i </sub>cannot be preempted by p<sub>l</sub>&#x201d;, if the following conditions should hold:</p>
<p id="h-0267" num="0000">(a<sub>i </sub>excludes p<sub>l</sub>)<img id="CUSTOM-CHARACTER-00064" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00058.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>, a<sub>j</sub>&#x2208;A-h-k-a: L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>l</sub2></sub>&#x39b;a<sub>j </sub>excludes a<sub>j</sub>)</p>
<p id="p-0461" num="0686">For any pair of P-g processes p<sub>1 </sub>and p<sub>2</sub>, it will be said that</p>
<p id="h-0268" num="0000">&#x201c;the time slot of p<sub>1 </sub>overlaps with the time slot of p<sub>2</sub>&#x201d;, if the following conditions should hold:</p>
<p id="h-0269" num="0000">(s(p<sub>1</sub>)&#x2266;s(p<sub>2</sub>)&#x3c;e(p<sub>1</sub>))<img id="CUSTOM-CHARACTER-00065" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00059.TIF" alt="custom character" img-content="character" img-format="tif"/>(s(p<sub>2</sub>)&#x2266;s(p<sub>1</sub>)&#x3c;e(p<sub>2</sub>))</p>
<p id="p-0462" num="0687">The Multiple Processor A-h-k-a Scheduler Method functions as part of the Multiple Processor Main-Run-Time Scheduler to be described below.</p>
<p id="p-0463" num="0688">Multiple Processor A-h-k-a-Scheduler Method:</p>
<p id="h-0270" num="0000">At any time t:</p>
<p id="h-0271" num="0000">if some A-h-k-a process a<sub>i </sub>has arrived at time t,</p>
<p id="h-0272" num="0000">or if some process x<sub>i </sub>completes its computation at time t</p>
<p id="h-0273" num="0000">or if t is both the release time and start time in the pre-run-time schedule</p>
<p id="h-0274" num="0000">for some P-g process p, i.e., t=R<sub>p</sub>=s(p)</p>
<p id="h-0275" num="0000">then</p>
<p id="h-0276" num="0000">for every processor k:</p>
<p id="h-0277" num="0000">begin</p>
<p id="p-0464" num="0689">for each A-h-k-a process a<sub>i </sub>that has already arrived and not yet completed,</p>
<p id="p-0465" num="0690">i.e., R&#x2032; (a<sub>i</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00066" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00060.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (a<sub>i</sub>)&#x2266;t), check if a<sub>i </sub></p>
<p id="p-0466" num="0691">satisfies the following conditions,</p>
<p id="h-0278" num="0000">Case 1: if on any processor k,</p>
<p id="h-0279" num="0000">&#x2203;p, p&#x2208;P-g:</p>
<p id="h-0280" num="0000">s&#x2032;(p)&#x2267;t&#x39b;(a<sub>i </sub>cannot_be_preempted_by p)&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2267;L<sub>p </sub></p>
<p id="h-0281" num="0000">&#x39b;(<img id="CUSTOM-CHARACTER-00067" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00061.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>m</sub>, p<sub>m</sub>&#x2208;P-g: t&#x3c;s&#x2032;(p<sub>m</sub>)&#x39b;e(p<sub>m</sub>)&#x2266;s(p)&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>m</sub2></sub>&#x39b;(<img id="CUSTOM-CHARACTER-00068" he="3.13mm" wi="2.12mm" file="US08627319-20140107-P00062.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>1</sub>&#x2208;P-g:</p>
<p id="p-0467" num="0692">p<sub>1 </sub>excludes a<sub>i</sub>&#x39b;(p<sub>1</sub>'s time slot overlaps with p<sub>m</sub>'s time slot))</p>
<p id="h-0282" num="0000">&#x39b;(there does not exists any interval [t, t<sub>2</sub>] on processor k, such that:</p>
<p id="p-0468" num="0693">
<maths id="MATH-US-00014" num="00014">
<math overflow="scroll">
<mrow>
  <mi>t</mi>
  <mo>&#x3c;</mo>
  <msub>
    <mi>t</mi>
    <mn>2</mn>
  </msub>
  <mo>&#x2264;</mo>
  <mrow>
    <mrow>
      <mi>s</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
          <mo>&#x2204;</mo>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>l</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>P</mi>
            <mo>-</mo>
            <mrow>
              <mi>g</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>:</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>any</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>portion</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>of</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mrow>
                <msub>
                  <mi>p</mi>
                  <mi>l</mi>
                </msub>
                <mo>'</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mi>s</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>time</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>slot</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>is</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>mapped</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>to</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>any</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>portion</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>of</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>the</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mrow>
                <mi>interval</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>[</mo>
                <mrow>
                  <mi>t</mi>
                  <mo>,</mo>
                  <msub>
                    <mi>t</mi>
                    <mn>2</mn>
                  </msub>
                </mrow>
                <mo>]</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>on</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>the</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>time</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>axis</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>corresponding</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>to</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>processor</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>k</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>in</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>the</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>pre</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>-</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>run</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>-</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>time</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>schedule</mi>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
          <mo>&#x2204;</mo>
          <msub>
            <mi>p</mi>
            <mi>j</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>P</mi>
            <mo>-</mo>
            <mrow>
              <mi>g</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>:</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>excludes</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mrow>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>p</mi>
                        <mi>j</mi>
                      </msub>
                      <mo>'</mo>
                    </mrow>
                    <mo>&#x2062;</mo>
                    <mi>s</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>time</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>slot</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>overlaps</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mrow>
                      <mi>with</mi>
                      <mo>&#x2062;</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>[</mo>
                      <mrow>
                        <mi>t</mi>
                        <mo>,</mo>
                        <msub>
                          <mi>t</mi>
                          <mn>2</mn>
                        </msub>
                      </mrow>
                      <mo>]</mo>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>t</mi>
          <mn>2</mn>
        </msub>
        <mo>-</mo>
        <mi>t</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <msub>
      <mi>c</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <munder>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>A</mi>
                <mo>-</mo>
                <mi>h</mi>
                <mo>-</mo>
                <mi>k</mi>
                <mo>-</mo>
                <mrow>
                  <mi>a</mi>
                  <mo>&#x22c0;</mo>
                  <msub>
                    <mi>L</mi>
                    <msub>
                      <mi>a</mi>
                      <mi>k</mi>
                    </msub>
                  </msub>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <msub>
                  <mi>L</mi>
                  <mi>p</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mn>0</mn>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c1;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <mi>t</mi>
                            <mo>&#x22c0;</mo>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>e</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>&#x2264;</mo>
                      <mi>t</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x22c1;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <msup>
                        <mi>R</mi>
                        <mi>&#x2032;</mi>
                      </msup>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>+</mo>
                    <msub>
                      <mi>min</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mo>&#x3c;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </munder>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <mrow>
              <msub>
                <mi>t</mi>
                <mn>2</mn>
              </msub>
              <mo>-</mo>
              <mi>t</mi>
            </mrow>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>k</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<br/>
then Delay a<sub>i</sub>;
</p>
<p id="p-0469" num="0694">In Case 1: a<sub>i </sub>is delayed either if there exists the possibility that the immediate execution of a<sub>1 </sub>may cause a P-g process p with less latitude to be delayed (as shown in <figref idref="DRAWINGS">FIG. 20A</figref>); or, if there exists the possibility that it may cause some A-h-k-a process a<sub>i </sub>to be blocked for the duration of two processes a<sub>i </sub>and p which both have greater latitude compared with a<sub>j</sub>'s latitude (as shown in <figref idref="DRAWINGS">FIG. 20B</figref>).</p>
<p id="h-0283" num="0000">Case 2: if on any processor k,</p>
<p id="h-0284" num="0000">&#x2203;x, x&#x2208;P-g<img id="CUSTOM-CHARACTER-00069" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00063.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;A-h-k-a:</p>
<p id="h-0285" num="0000">s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00070" he="2.79mm" wi="2.12mm" file="US08627319-20140107-P00064.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;x excludes a<sub>i </sub></p>
<p id="h-0286" num="0000">then Delay a<sub>i</sub>;</p>
<p id="p-0470" num="0695">In Case 2: a<sub>i </sub>is delayed because it is not allowed to start its execution if there exists any process x that excludes a<sub>i </sub>that has started but not yet completed (as shown in <figref idref="DRAWINGS">FIG. 20C</figref>).</p>
<p id="h-0287" num="0000">Case 3: if on processor k</p>
<p id="h-0288" num="0000">&#x2203;x, x&#x2208;P-g<img id="CUSTOM-CHARACTER-00071" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00065.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;A-h-k-a:</p>
<p id="h-0289" num="0000">s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00072" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00066.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;L<sub>x</sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0290" num="0000">then a<sub>i </sub>is ineligible to execute at time t on processor k;</p>
<p id="p-0471" num="0696">In Case 3: a<sub>i </sub>is ineligible to execute at time t on processor k because it is not allowed to preempt any process x that has less or the same latitude as a<sub>i </sub>(as shown in <figref idref="DRAWINGS">FIG. 20D</figref>).</p>
<p id="h-0291" num="0000">Case 4: if on processor k,</p>
<p id="h-0292" num="0000">&#x2203;a<sub>j</sub>, p, a<sub>j</sub>&#x2208;A-h-k-a, p&#x2208;P-g:</p>
<p id="h-0293" num="0000">s&#x2032;(p)&#x2267;t&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00073" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00067.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (a<sub>j</sub>)&#x2266;t)</p>
<p id="h-0294" num="0000">&#x39b;a<sub>j </sub>excludes p&#x39b;L<sub>p</sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0295" num="0000">then a<sub>i </sub>is ineligible to execute at time t on processor k</p>
<p id="p-0472" num="0697">In Case 4: a<sub>i </sub>is ineligible to execute at time t on processor k because it is not allowed to preempt any A-h-k-a process a<sub>j </sub>which excludes a P-g process p with less or equal latitude compared with a<sub>i</sub>'s latitude. (as shown in <figref idref="DRAWINGS">FIG. 20E</figref>)</p>
<p id="h-0296" num="0000">Case 5: on processor k,</p>
<p id="h-0297" num="0000">if &#x2203;x, a<sub>j</sub>, x&#x2208;A-h-k-a<img id="CUSTOM-CHARACTER-00074" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00068.TIF" alt="custom character" img-content="character" img-format="tif"/>x&#x2208;P-g,</p>
<p id="h-0298" num="0000">a<sub>j</sub>&#x2208;A-h-k-a:</p>
<p id="h-0299" num="0000">s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00075" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00069.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)</p>
<p id="h-0300" num="0000">&#x39b;x excludes a<sub>j </sub></p>
<p id="h-0301" num="0000">&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0302" num="0000">then a<sub>i </sub>is ineligible to execute at time t on processor k.</p>
<p id="p-0473" num="0698">In Case 5: a<sub>i </sub>is ineligible to execute at time t on processor k because it is not allowed to preempt any process x that excludes some other A-h-k-a process a<sub>j </sub>which has a latitude that is less than both x and a<sub>i</sub>'s latitude, because that may cause a<sub>i </sub>to be blocked by the duration of more than one process with greater latitude (as shown in <figref idref="DRAWINGS">FIG. 20G</figref>).</p>
<p id="h-0303" num="0000">Case 6: if on processor k</p>
<p id="h-0304" num="0000">&#x2203;p, p&#x2208;P-g:</p>
<p id="h-0305" num="0000">R<sub>p</sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00076" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00070.TIF" alt="custom character" img-content="character" img-format="tif"/>(p)&#x2266;t)&#x39b;L<sub>p</sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub></p>
<p id="h-0306" num="0000">&#x39b;<img id="CUSTOM-CHARACTER-00077" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00071.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>i</sub>)&#x2266;t&#x39b;(a<sub>i </sub>cannot_be_preempted_by p))</p>
<p id="h-0307" num="0000">&#x39b;<img id="CUSTOM-CHARACTER-00078" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00072.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>i</sub>, p<sub>i</sub>&#x2208;P-g: s(p<sub>i</sub>)&#x2266;s(p)&#x39b;<img id="CUSTOM-CHARACTER-00079" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00073.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (p<sub>i</sub>)&#x2266;t)</p>
<p id="p-0474" num="0000">
<ul id="ul0090" list-style="none">
    <li id="ul0090-0001" num="0000">
    <ul id="ul0091" list-style="none">
        <li id="ul0091-0001" num="0699">&#x39b;<img id="CUSTOM-CHARACTER-00080" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00074.TIF" alt="custom character" img-content="character" img-format="tif"/>(s(p<sub>i</sub>)&#x2266;s(p)&#x39b;e(p)&#x3c;e(p<sub>i</sub>))
<br/>
then a<sub>i </sub>is ineligible to execute at time t on processor k;
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0475" num="0700">In Case 6: a<sub>1 </sub>is ineligible to execute at time t on processor k so that it can be preempted by a P-g process p that has a latitude that is less than or equal to a<sub>i</sub>'s latitude, when a<sub>i </sub>does not exclude p and does not exclude any A-h-k-a process with a latitude that is shorter than p's latitude (as shown in <figref idref="DRAWINGS">FIG. 20H</figref>).</p>
<p id="h-0308" num="0000">end;</p>
<p id="p-0476" num="0701">For each processor k, select, among all processes a<sub>i</sub>&#x2208;A-h-k-a, such that a<sub>i </sub>has already arrived and not yet completed, and a<sub>i </sub>is NOT Delayed, and a<sub>i </sub>is NOT ineligible to execute at time t on processor k, the process which has the shortest deadline and execute that process on processor k. If more than one process is thus selected, select among them the process that has the smallest index.</p>
<p id="h-0309" num="0000">end;</p>
<p id="h-0310" num="0000">return to Multiple Processor Main Run-Time Scheduler;</p>
<p id="p-0477" num="0702">Multiple Processor Main-Run-Time-Scheduler Method:</p>
<p id="h-0311" num="0000">At any time t:</p>
<p id="h-0312" num="0000">if some process x has arrived at time t, or has completed at time t,</p>
<p id="h-0313" num="0000">or if t is both the release time and start time in the pre-run-time schedule</p>
<p id="h-0314" num="0000">for some P-g process p, i.e., t=R<sub>p</sub>=s(p)</p>
<p id="h-0315" num="0000">then execute the Multiple Processor Main-Run-Time-Scheduler as follows:</p>
<p id="h-0316" num="0000">execute the Multiple Processor A-h-k-a-Scheduler;</p>
<p id="h-0317" num="0000">For each processor k, if some A-h-k-a process a<sub>1 </sub>was selected for</p>
<p id="h-0318" num="0000">execution at time t on processor k by the A-h-k-a Scheduler</p>
<p id="h-0319" num="0000">then execute a<sub>i </sub></p>
<p id="h-0320" num="0000">else begin</p>
<p id="p-0478" num="0703">if on processor k,</p>
<p id="p-0479" num="0704">&#x2203;p, p&#x2208;P-g: s&#x2032;(p)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00081" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00075.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (p)&#x2266;t)
<ul id="ul0092" list-style="none">
    <li id="ul0092-0001" num="0000">
    <ul id="ul0093" list-style="none">
        <li id="ul0093-0001" num="0705">(there exists p that has started and has not completed)</li>
        <li id="ul0093-0002" num="0706">then continue to execute p.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0480" num="0707">else</p>
<p id="p-0481" num="0708">if on processor k,</p>
<p id="p-0482" num="0709">&#x2203;p, p&#x2208;P-g: R<sub>p</sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00082" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00076.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(p)&#x2266;t)
<ul id="ul0094" list-style="none">
    <li id="ul0094-0001" num="0000">
    <ul id="ul0095" list-style="none">
        <li id="ul0095-0001" num="0710">(there exists p that is ready and has not completed)</li>
        <li id="ul0095-0002" num="0711">then execute p</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0483" num="0712">else</p>
<p id="p-0484" num="0713">if &#x2203;a<sub>i</sub>, a<sub>i</sub>&#x2208;A-s-k: R<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00083" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00077.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>i</sub>)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00084" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00078.TIF" alt="custom character" img-content="character" img-format="tif"/>x: (s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00085" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00079.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;((x excludes a<sub>i</sub>)<img id="CUSTOM-CHARACTER-00086" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00080.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>, a<sub>j</sub>&#x2208;A-s-k: s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00087" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00081.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (x)&#x2266;t)&#x39b;x excludes a<sub>j</sub>L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i</sub2></sub>))
<ul id="ul0096" list-style="none">
    <li id="ul0096-0001" num="0000">
    <ul id="ul0097" list-style="none">
        <li id="ul0097-0001" num="0714">(there exists A-s-k process a<sub>i </sub>that is ready and has not completed, and there does not exist any other process x such that x excludes a<sub>i </sub>or x excludes some process a<sub>j </sub>such that a<sub>j </sub>has a latitude that is less than both x's and a<sub>i</sub>'s latitude, and x has started but not completed) then select among them, a process a<sub>i </sub>that has the shortest deadline; if among such processes there are some that have already started, then choose a process that has already started; and execute a<sub>i</sub>;)</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0485" num="0715">else</p>
<p id="p-0486" num="0716">if &#x2203;a<sub>i</sub>, a<sub>i</sub>&#x2208;A-s-u: R<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00088" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00082.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>i</sub>)&#x2266;t)&#x39b;<img id="CUSTOM-CHARACTER-00089" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00083.TIF" alt="custom character" img-content="character" img-format="tif"/>x: (s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00090" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00084.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032; (x)&#x2266;t)&#x39b;((x excludes a<sub>i</sub>)<img id="CUSTOM-CHARACTER-00091" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00085.TIF" alt="custom character" img-content="character" img-format="tif"/>(&#x2203;a<sub>j</sub>, a<sub>j</sub>&#x2208;A-s-u: s&#x2032;(x)&#x3c;t&#x39b;<img id="CUSTOM-CHARACTER-00092" he="2.12mm" wi="2.12mm" file="US08627319-20140107-P00086.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(x)&#x2266;t)&#x39b;x excludes a<sub>j</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>x</sub>&#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i</sub2></sub>))
<ul id="ul0098" list-style="none">
    <li id="ul0098-0001" num="0000">
    <ul id="ul0099" list-style="none">
        <li id="ul0099-0001" num="0717">(there exists A-s-u process a<sub>i </sub>that is ready and has not completed, and there does not exist any other process x such that x excludes a<sub>i </sub>or x excludes some process a<sub>j </sub>such that a<sub>j </sub>has a latitude that is less than both x's and a<sub>i</sub>'s latitude, and x has started but not completed)</li>
        <li id="ul0099-0002" num="0718">then select among them, a process a<sub>i </sub>that has the shortest deadline;</li>
        <li id="ul0099-0003" num="0719">if among such processes there are some that have already started, then</li>
        <li id="ul0099-0004" num="0720">choose a process that has already started; and execute a<sub>i</sub>;
<br/>
end;
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0487" num="0721">The multiple processor simulation method for determining the worst-case response time of A-h-k-a processes can be designed as follows:</p>
<p id="p-0488" num="0722">Multiple processor method for computing the worst-case response time of an A-h-k-a process a<sub>i </sub>corresponding to a feasible pre-run-time schedule of guaranteed periodic processes consisting of an initial part of the pre-run-time schedule S<sub>0</sub>(t<sub>0</sub>), in the interval [0, t<sub>0</sub>]; and a repeating part of the pre-run-time schedule S<sub>LCM </sub>(prd<sub>LCM</sub>), in the interval [t<sub>0</sub>, t<sub>0</sub>+prd<sub>LCM</sub>]:</p>
<p id="h-0321" num="0000">fail:=false;</p>
<p id="h-0322" num="0000">for t<sub>s</sub>:=0 to t<sub>0</sub>+prd<sub>LCM</sub>&#x2212;1 do</p>
<p id="h-0323" num="0000">begin</p>
<p id="p-0489" num="0000">
<ul id="ul0100" list-style="none">
    <li id="ul0100-0001" num="0000">
    <ul id="ul0101" list-style="none">
        <li id="ul0101-0001" num="0723">For each A-h-k-a process a<sub>b</sub>, such that a<sub>b</sub>&#x2208;A-h-k-a A L<sub>a</sub><sub><sub2>b</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;&#x2203;x<sub>k</sub>, x<sub>k</sub>&#x2208;A-h-k-a</li>
        <li id="ul0101-0002" num="0724"><img id="CUSTOM-CHARACTER-00093" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00087.TIF" alt="custom character" img-content="character" img-format="tif"/>x<sub>k</sub>&#x2208;P-g: a<sub>b </sub>excludes x<sub>k</sub>&#x39b;L<sub>x</sub><sub><sub2>k</sub2></sub>&#x3c;L<sub>a</sub><sub><sub2>i</sub2></sub>, do the following:</li>
        <li id="ul0101-0003" num="0725">let a<sub>b </sub>arrive at time t<sub>s</sub>&#x2212;1, and use the Multiple Processor A-h-k-a Scheduler and Multiple Processor Main Run-Time Scheduler to schedule a<sub>b </sub>and a<sub>i </sub>to obtain a response time of a<sub>i</sub>, called RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), corresponding to each a<sub>b </sub>according to the assumptions (1)-(6) below, with the additional assumption that a<sub>b </sub>can always start its execution at time t<sub>s</sub>&#x2212;1 (including when t<sub>s</sub>=0) except if at time t<sub>s</sub>&#x2212;1 there exists some periodic process p, such that t<sub>s</sub>&#x3c;s(p) and (a<sub>b </sub>cannot_be_preempted_by p)&#x39b;L<sub>a</sub><sub><sub2>b</sub2></sub>&#x2267;L<sub>p</sub>, and executing a<sub>b </sub>at time t<sub>s</sub>&#x2212;1 may cause p to miss its deadline, that is, a<sub>b </sub>is delayed by the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler. At time t=t<sub>s</sub>&#x2212;1, assume that the condition &#x201c;s&#x2032; (p)&#x2267;t&#x201d; is true for every periodic process p such that t<sub>s</sub>&#x3c;s(p) when checking whether a<sub>b </sub>should be delayed by the conditions of Case 1 of the Multiple Processor A-h-k-a Scheduler. When computing RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), if &#x2203;p<sub>l</sub>, p<sub>l</sub>&#x2208;P-g &#x39b;s(p<sub>l</sub>)&#x2266;t<sub>s</sub>&#x2266;e(p<sub>l</sub>), then assume that p<sub>l </sub>has already completed at time t<sub>s</sub>&#x2212;1, that is, this instance of p<sub>l </sub>will not have any effect on a<sub>b</sub>, a<sub>i</sub>, or any other process in the system.</li>
        <li id="ul0101-0004" num="0726">(Let each A-h-k-a process a<sub>b </sub>that can possibly block a<sub>i </sub>arrive at time t<sub>s</sub>&#x2212;1 and determine which one among them will block a<sub>i </sub>for the greatest amount of time.)</li>
        <li id="ul0101-0005" num="0727">After obtaining RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) for every such a<sub>b</sub>, use the Multiple Processor A-h-k-a Scheduler and Multiple Processor Main Run-Time Scheduler to schedule a<sub>i </sub>to obtain another response time of a<sub>i </sub>called RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>), according to the assumptions (1)-(6) below, with the additional assumption that no A-h-k-a process a<sub>b</sub>, such that a<sub>b</sub>&#x2208;A-h-k-a &#x39b;L<sub>a</sub><sub><sub2>b</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;&#x2203;x<sub>k</sub>, x<sub>k</sub>&#x2208;A-h-k-a <img id="CUSTOM-CHARACTER-00094" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00088.TIF" alt="custom character" img-content="character" img-format="tif"/>x<sub>k</sub>&#x2208;P-g: a<sub>b </sub>excludes x<sub>k</sub>&#x39b;L<sub>x</sub><sub><sub2>k</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>had ever arrived. When computing RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>), if &#x2203;p<sub>l</sub>, p<sub>l</sub>&#x2208;P-g &#x39b;s(p<sub>l</sub>)&#x2266;t<sub>s</sub>&#x3c;e(p<sub>l</sub>), then assume that s&#x2032;(p<sub>l</sub>)=s(p<sub>l</sub>)&#x39b;e&#x2032; (p<sub>l</sub>)=e(p<sub>l</sub>); {i.e., p<sub>1 </sub>started at the beginning of its time slot and will complete its computation at the end of its time slot in the pre-run-time schedule that was computed using adjusted computation times.</li>
        <li id="ul0101-0006" num="0728">(1) a<sub>i </sub>arrives in the system at time t<sub>s</sub>.</li>
        <li id="ul0101-0007" num="0729">(2) Unless a<sub>i </sub>is delayed because of the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler, (see (3) below), let the A-h-k-a processes a<sub>j </sub>in the set {a<sub>j</sub>|&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;a<sub>j </sub>excludes a<sub>i</sub>} arrive one by one in a serial sequence such that each process in the set arrives exactly at the same instant that the process before it in the sequence has just completed, with the first process in the sequence arriving at the time that a<sub>b </sub>has just completed if a<sub>b </sub>is able to block a<sub>i </sub>and at the earliest time t, t<sub>s</sub>&#x2266;t that it can be executed, if a<sub>b </sub>does not block a<sub>i</sub>; let every other A-h-k-a process a<sub>j</sub>, such that L<sub>a</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>arrive at the time that the last process in the above serial sequence has completed; or at the following instants in time: R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j</sub2></sub>, k=0, 1, 2, . . . ,</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0490" num="0730">
<maths id="MATH-US-00015" num="00015">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>&#x230a;</mo>
    <mfrac>
      <msub>
        <mi>d</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <msub>
        <mi>min</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mfrac>
    <mo>&#x230b;</mo>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<ul id="ul0102" list-style="none">
    <li id="ul0102-0001" num="0000">
    <ul id="ul0103" list-style="none">
        <li id="ul0103-0001" num="0731">if no such processes in we above set exist, and be scheduled before a<sub>i </sub>whenever a<sub>i </sub>and a<sub>j </sub>have both arrived and a<sub>i </sub>has not yet started. If a<sub>j </sub>is delayed by any of the conditions in Cases 1-6 of the Multiple Processor A-h-k-a Scheduler then let a<sub>i </sub>be delayed by the same amount of time.</li>
        <li id="ul0103-0002" num="0732">For each such a<sub>j</sub>'s subsequent arrival times, use the arrival times: R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j</sub2></sub>, and whenever there is more than one such process arriving at a time that any such process is executing or has arrived but not completed, modify their arrival times as described above.</li>
        <li id="ul0103-0003" num="0733">(All A-h-k-a processes that have shorter deadlines and that exclude a<sub>i </sub>arrive in a serial sequence that maximizes the time that a<sub>i </sub>is excluded, all other A-h-k-a processes whose deadlines are shorter or equal to a<sub>i</sub>'s deadline arrive at the end of that sequence if any, and are put into execution before a<sub>i</sub>.</li>
        <li id="ul0103-0004" num="0734">(3) Whenever the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler become true for a<sub>i </sub>and some P-h-k process p at some time t, i.e.: if on any processor</li>
        <li id="ul0103-0005" num="0735">k, &#x2203;p, p&#x2208;P-g:</li>
        <li id="ul0103-0006" num="0736">s&#x2032;(p)&#x2267;t&#x39b;(a<sub>i </sub>cannot_be_preempted_by p)&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2267;L<sub>p</sub>&#x39b;(<img id="CUSTOM-CHARACTER-00095" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00089.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>m</sub>, p<sub>m</sub>&#x2208;P-g: t&#x3c;s&#x2032;(p<sub>m</sub>)&#x39b;e(p<sub>m</sub>)&#x2266;s(p)&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x3c;L<sub>p</sub><sub><sub2>m</sub2></sub>&#x39b;(<img id="CUSTOM-CHARACTER-00096" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00090.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>1</sub>&#x2208;P-g:
        <ul id="ul0104" list-style="none">
            <li id="ul0104-0001" num="0737">p<sub>1 </sub>excludes a<sub>i</sub>&#x39b;(p<sub>1</sub>'s time slot overlaps with p<sub>m</sub>'s time slot))</li>
        </ul>
        </li>
        <li id="ul0103-0007" num="0738">&#x39b; (there does not exists any idle interval [t, t<sub>2</sub>] on some processor k, such that:</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0491" num="0739">
<maths id="MATH-US-00016" num="00016">
<math overflow="scroll">
<mrow>
  <mi>t</mi>
  <mo>&#x3c;</mo>
  <msub>
    <mi>t</mi>
    <mn>2</mn>
  </msub>
  <mo>&#x2264;</mo>
  <mrow>
    <mrow>
      <mi>s</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mi>p</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mrow>
          <mo>&#x2204;</mo>
          <msub>
            <mi>p</mi>
            <mi>j</mi>
          </msub>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>p</mi>
            <mi>m</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>P</mi>
            <mo>-</mo>
            <mrow>
              <mi>g</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>:</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>excludes</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mrow>
                <msub>
                  <mi>a</mi>
                  <mi>i</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>p</mi>
                        <mi>j</mi>
                      </msub>
                      <mo>'</mo>
                    </mrow>
                    <mo>&#x2062;</mo>
                    <mi>s</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>time</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>slot</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mi>overlaps</mi>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <mrow>
                      <mi>with</mi>
                      <mo>&#x2062;</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>[</mo>
                      <mrow>
                        <mi>t</mi>
                        <mo>,</mo>
                        <msub>
                          <mi>t</mi>
                          <mn>2</mn>
                        </msub>
                      </mrow>
                      <mo>]</mo>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
      <mo>)</mo>
    </mrow>
    <mo>&#x22c0;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>t</mi>
          <mn>2</mn>
        </msub>
        <mo>-</mo>
        <mi>t</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>&#x2265;</mo>
  <mrow>
    <msub>
      <mi>c</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <munder>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>k</mi>
            </msub>
            <mo>&#x2208;</mo>
            <mrow>
              <mrow>
                <mi>A</mi>
                <mo>-</mo>
                <mi>h</mi>
                <mo>-</mo>
                <mi>k</mi>
                <mo>-</mo>
                <mrow>
                  <mi>a</mi>
                  <mo>&#x22c0;</mo>
                  <msub>
                    <mi>L</mi>
                    <msub>
                      <mi>a</mi>
                      <mi>k</mi>
                    </msub>
                  </msub>
                </mrow>
              </mrow>
              <mo>&#x3c;</mo>
              <mrow>
                <msub>
                  <mi>L</mi>
                  <mi>p</mi>
                </msub>
                <mo>&#x22c0;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mo>&#x2aec;</mo>
                    <mrow>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mn>0</mn>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                      <mo>&#x22c1;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <mrow>
                            <msup>
                              <mi>R</mi>
                              <mi>&#x2032;</mi>
                            </msup>
                            <mo>&#x2061;</mo>
                            <mrow>
                              <mo>(</mo>
                              <msub>
                                <mi>a</mi>
                                <mi>k</mi>
                              </msub>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>&#x2264;</mo>
                          <mrow>
                            <mi>t</mi>
                            <mo>&#x22c0;</mo>
                          </mrow>
                        </mrow>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mo>&#x2aec;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mrow>
                        <msup>
                          <mi>e</mi>
                          <mi>&#x2032;</mi>
                        </msup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>(</mo>
                          <msub>
                            <mi>a</mi>
                            <mi>k</mi>
                          </msub>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mo>&#x2264;</mo>
                      <mi>t</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x22c1;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mrow>
                    <mrow>
                      <msup>
                        <mi>R</mi>
                        <mi>&#x2032;</mi>
                      </msup>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>(</mo>
                        <msub>
                          <mi>a</mi>
                          <mi>k</mi>
                        </msub>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>+</mo>
                    <msub>
                      <mi>min</mi>
                      <msub>
                        <mi>a</mi>
                        <mi>k</mi>
                      </msub>
                    </msub>
                  </mrow>
                  <mo>&#x3c;</mo>
                  <mrow>
                    <mi>s</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>p</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </munder>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <mrow>
              <msub>
                <mi>t</mi>
                <mn>2</mn>
              </msub>
              <mo>-</mo>
              <mi>t</mi>
            </mrow>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>k</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>k</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<ul id="ul0105" list-style="none">
    <li id="ul0105-0001" num="0000">
    <ul id="ul0106" list-style="none">
        <li id="ul0106-0001" num="0740">let t also be the earliest time that the conditions in Case 1 become true for that instance of p and a<sub>i</sub>,</li>
        <li id="ul0106-0002" num="0741">then for every other A-h-k-a process a<sub>j </sub>that belongs to the following set:</li>
        <li id="ul0106-0003" num="0742">{a<sub>j</sub>|a<sub>j</sub>&#x2208;A-h-k-a &#x39b;j&#x2260;i&#x39b;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;((<img id="CUSTOM-CHARACTER-00097" he="2.12mm" wi="3.13mm" file="US08627319-20140107-P00091.TIF" alt="custom character" img-content="character" img-format="tif"/>(0&#x2266;R&#x2032;(a<sub>j</sub>))<img id="CUSTOM-CHARACTER-00098" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00092.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)&#x2266;t&#x39b;<img id="CUSTOM-CHARACTER-00099" he="2.12mm" wi="3.13mm" file="US08627319-20140107-P00093.TIF" alt="custom character" img-content="character" img-format="tif"/>(e&#x2032;(a<sub>j</sub>)&#x2266;t))<img id="CUSTOM-CHARACTER-00100" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00094.TIF" alt="custom character" img-content="character" img-format="tif"/>(R&#x2032;(a<sub>j</sub>)+min<sub>a</sub><sub><sub2>j</sub2></sub>&#x3c;s(p)))<img id="CUSTOM-CHARACTER-00101" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00095.TIF" alt="custom character" img-content="character" img-format="tif"/>(s&#x2032;(a<sub>b</sub>)&#x2266;t<sub>s</sub>&#x39b;t&#x2212;1&#x2266;e&#x2032;(a<sub>b</sub>)&#x39b;s&#x2032;(a<sub>j</sub>)&#x3c;t))}</li>
        <li id="ul0106-0004" num="0743">(a<sub>j </sub>has a deadline that is shorter than or equal to a<sub>i</sub>'s deadline and, either a<sub>j </sub>has never arrived; or a<sub>j </sub>has arrived but has not completed its computation; or a<sub>j </sub>may arrive again before time s(p); or at time t&#x2212;1 a<sub>i </sub>was blocked by a<sub>b </sub>and a<sub>j </sub>started its execution before t),</li>
        <li id="ul0106-0005" num="0744">&#x201c;delay&#x201d; a<sub>j</sub>'s arrival time to occur at the following time: let the A-h-k-a processes a<sub>j </sub>in the set {a<sub>j</sub>|L<sub>a</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;a<sub>j </sub>excludes a<sub>i</sub>} arrive one by one in a serial sequence such that each process in the set arrives exactly at the same instant that the process before it in the sequence has just completed, with the first process in the sequence arriving at the time that p has just completed; let every other A-h-k-a process a<sub>j</sub>, such that L<sub>a</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>arrive at the time that the last process in the above serial sequence has completed; or at the completion time of p, e(p)&#x2032;, if no such processes in the above set exist, and be scheduled before a<sub>i </sub>whenever a<sub>i </sub>and a<sub>j </sub>have both arrived and a<sub>i </sub>has not yet started. If a<sub>j </sub>is delayed by any of the conditions in Cases 1-6 of the Multiple Processor A-h-k-a Scheduler, then let a<sub>i </sub>be delayed by the same amount of time. If at time s(p) the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler continue to be true for some other periodic process p&#x2032;, then a<sub>i </sub>should be delayed again, and the A-h-k processes a<sub>j</sub>&#x2032; that satisfy the conditions of the formula for p&#x2032; should also be delayed again in similar manner. For each such a<sub>j</sub>, let only a single instance of a arrive at the above times, even if originally there could be several instances of a same process a<sub>j </sub>that satisfy the conditions above.
        <ul id="ul0107" list-style="none">
            <li id="ul0107-0001" num="0745">For each such a<sub>j</sub>'s subsequent arrival times after s(p), use the same arrival times that were determined in (2), i.e., a<sub>j</sub>'s subsequent arrival times after s(p) will be:</li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0492" num="0746">R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j </sub2></sub>such that R<sub>a</sub><sub><sub2>j</sub2></sub>(k)&#x3e;s(p), and whenever there is more than one such process arriving at a time that any such process is executing or has arrived but not completed, modify their arrival times as described above.
<ul id="ul0108" list-style="none">
    <li id="ul0108-0001" num="0000">
    <ul id="ul0109" list-style="none">
        <li id="ul0109-0001" num="0747">(If at time t there exists more than one process p for which the conditions of Case 1 are true for p and a<sub>i</sub>, then let the above apply to the process p among them that has the latest s(p) time in the pre-run-time schedule.)</li>
        <li id="ul0109-0002" num="0748">(if a<sub>i </sub>is delayed due to the conditions in Case 1, then an A-h-k-a process a<sub>j </sub>could delay a<sub>i </sub>by a maximum amount by arriving at the above described times.)</li>
        <li id="ul0109-0003" num="0749">(4) If the end of the current instance of the repeating part of the pre-run-time schedule is reached, continue at the beginning of the next instance of the repeating part of the pre-run-time schedule.</li>
        <li id="ul0109-0004" num="0750">(5) If a<sub>i</sub>'s deadline d<sub>a</sub><sub><sub2>i </sub2></sub>is reached but a<sub>i </sub>has not yet completed its computation, then set fail:=true and exit from the procedure.</li>
        <li id="ul0109-0005" num="0751">(6) If a<sub>i</sub>'s computation is completed before its deadline d<sub>a</sub><sub><sub2>i</sub2></sub>, then record the completion time of a<sub>i </sub>as the response time of a<sub>i </sub>(either RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) for the current a<sub>b</sub>, or RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>) when no such a<sub>b </sub>is assumed to have arrived at time t<sub>s</sub>&#x2212;1).</li>
        <li id="ul0109-0006" num="0752">After the response time RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>) corresponding to every a<sub>b </sub>that may block a<sub>i </sub>has been computed, and the response time RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>) that assumed that no such a<sub>b </sub>had arrived and blocked a<sub>i </sub>has also been computed, set the response time of a<sub>i </sub>with arrival time t<sub>s</sub>, RE(a<sub>i</sub>, t<sub>s</sub>) to be equal to the greatest among them, i.e., RE(a<sub>i</sub>, t<sub>s</sub>)=max{RE<sub>1</sub>(a<sub>i</sub>, t<sub>s</sub>, a<sub>b</sub>), RE<sub>2</sub>(a<sub>i</sub>, t<sub>s</sub>)}, and exit from the current iteration of the loop for this value of t<sub>s</sub>, and start the next iteration for t<sub>s</sub>:=t<sub>s</sub>+1.
<br/>
end;
<br/>
if not fail then
<br/>
RE<sub>a</sub><sub><sub2>i</sub2></sub>:=max{RE(a<sub>i</sub>, t<sub>s</sub>)|t<sub>s</sub>=0, 1, . . . , LCM&#x2212;1};
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0493" num="0753">Assuming that the same adjusted_capacity function is used for adjusting the computation times of periodic processes, the Multiple Processor A-h-k-a Scheduler also has the following properties, similar to the properties of the version of the A-h-k-a Scheduler described earlier:</p>
<p id="p-0494" num="0754">Property 1. Each P-g process p's execution can only be delayed by A-h-k-a processes that have less latitude than p's latitude. A P-g process will never be delayed by any A-h-k-a process that has a greater or equal latitude.</p>
<p id="p-0495" num="0755">Property 2. Any A-h-k-a process a<sub>i </sub>cannot be blocked by more than one critical section belonging to A-h-k-a processes that have deadlines greater than a<sub>i</sub>'s deadline.</p>
<p id="p-0496" num="0756">Property 3. No deadlocks can ever occur.</p>
<p id="p-0497" num="0757">Property 4. Each P-g process p will always be completed on or before e(p), that is, the end of the time slot allocated to p in the pre-run-time schedule.</p>
<heading id="h-0324" level="1">Example 14</heading>
<p id="p-0498" num="0758">Suppose that a multiprocessor system consists of two processors, two asynchronous processes with hard deadlines and known characteristics (A-h-k processes): a<sub>A </sub>and a<sub>E</sub>; and 3 periodic processes with hard deadlines and known characteristics (P-h-k processes) p<sub>B</sub>, p<sub>C</sub>, and p<sub>D </sub>as follows.</p>
<p id="h-0325" num="0000">a<sub>A</sub>: c<sub>a</sub><sub><sub2>A</sub2></sub>=2, d<sub>a</sub><sub><sub2>A</sub2></sub>=8, min<sub>a</sub><sub><sub2>A</sub2></sub>=8;</p>
<p id="h-0326" num="0000">a<sub>E</sub>: c<sub>a</sub><sub><sub2>E</sub2></sub>=2, d<sub>a</sub><sub><sub2>1</sub2></sub>=14, min<sub>a</sub><sub><sub2>i</sub2></sub>=1, 000;</p>
<p id="h-0327" num="0000">p<sub>B</sub>: r<sub>p</sub><sub><sub2>B</sub2></sub>=1, c<sub>p</sub><sub><sub2>B</sub2></sub>=3, d<sub>p</sub><sub><sub2>B</sub2></sub>=4, prd<sub>p</sub><sub><sub2>B</sub2></sub>=6, 0&#x2266;o<sub>p</sub><sub><sub2>B</sub2></sub>&#x2266;3;</p>
<p id="h-0328" num="0000">p<sub>C</sub>: r<sub>p</sub><sub><sub2>C</sub2></sub>=0, c<sub>p</sub><sub><sub2>C</sub2></sub>=1, d<sub>p</sub><sub><sub2>C</sub2></sub>=2, prd<sub>p</sub><sub><sub2>C</sub2></sub>=4; o<sub>p</sub><sub><sub2>D</sub2></sub>, =0;</p>
<p id="h-0329" num="0000">p<sub>D</sub>: r<sub>p</sub><sub><sub2>D</sub2></sub>=0, c<sub>p</sub><sub><sub2>D</sub2></sub>=1, d<sub>p</sub><sub><sub2>D</sub2></sub>=prd<sub>p</sub><sub><sub2>D</sub2></sub>=3, 0&#x2266;o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4;</p>
<p id="p-0499" num="0759">It is assumed that the application requires that o<sub>p</sub><sub><sub2>C</sub2></sub>=0, 0&#x2266;o<sub>p</sub><sub><sub2>B</sub2></sub>&#x2266;3, and o<sub>p</sub><sub><sub2>D</sub2></sub>&#x2266;4, and asynchronous process a<sub>A </sub>may make its first request at time 0. It is also assumed that the application requires the following relations be satisfied: a<sub>A </sub>excludes p<sub>D</sub>, p<sub>D </sub>excludes a<sub>A</sub>, a<sub>A </sub>excludes p<sub>B</sub>, p<sub>B </sub>excludes a<sub>A</sub>, p<sub>C </sub>excludes p<sub>D</sub>, p<sub>D </sub>excludes p<sub>C</sub>, a<sub>E </sub>excludes p<sub>B</sub>, p<sub>B </sub>excludes a<sub>E</sub>;</p>
<p id="p-0500" num="0760">Suppose that when converting a<sub>A </sub>to a periodic process, when determining d<sub>newp</sub><sub><sub2>A </sub2></sub>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>newp</sub><sub><sub2>A</sub2></sub><i>=c</i><sub>a</sub><sub><sub2>A</sub2></sub>+conversion_room(<i>a</i><sub>A</sub>);<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
the following formula was used in the conversion_room function:
</p>
<p id="p-0501" num="0761">
<maths id="MATH-US-00017" num="00017">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>converstion_room</mi>
    <mo>&#x2062;</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>a</mi>
        <mi>A</mi>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>&#x2308;</mo>
      <mfrac>
        <mrow>
          <munder>
            <mo>&#x2211;</mo>
            <mrow>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
              <mo>&#x2208;</mo>
              <mrow>
                <mrow>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>S</mi>
                        <mi>P</mi>
                      </msub>
                      <mo>&#x22c3;</mo>
                      <msub>
                        <mi>S</mi>
                        <mi>p</mi>
                      </msub>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                  <mo>&#x22c0;</mo>
                  <msub>
                    <mi>d</mi>
                    <msub>
                      <mi>p</mi>
                      <mi>j</mi>
                    </msub>
                  </msub>
                </mrow>
                <mo>&#x2264;</mo>
                <mrow>
                  <msub>
                    <mi>d</mi>
                    <msub>
                      <mi>x</mi>
                      <mi>i</mi>
                    </msub>
                  </msub>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mo>&#x2308;</mo>
                    <mfrac>
                      <msub>
                        <mi>d</mi>
                        <msub>
                          <mi>x</mi>
                          <mi>i</mi>
                        </msub>
                      </msub>
                      <msub>
                        <mi>prd</mi>
                        <msub>
                          <mi>p</mi>
                          <mi>j</mi>
                        </msub>
                      </msub>
                    </mfrac>
                    <mo>&#x2309;</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </munder>
          <mo>&#x2062;</mo>
          <mrow>
            <mo>*</mo>
            <msub>
              <mi>c</mi>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mrow>
        </mrow>
        <mi>m</mi>
      </mfrac>
      <mo>&#x2309;</mo>
    </mrow>
    <mo>+</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>S</mi>
                <mi>a</mi>
              </msub>
              <mo>&#x22c0;</mo>
              <msub>
                <mi>d</mi>
                <msub>
                  <mi>a</mi>
                  <mi>j</mi>
                </msub>
              </msub>
            </mrow>
            <mo>&#x2264;</mo>
            <mrow>
              <msub>
                <mi>d</mi>
                <msub>
                  <mi>x</mi>
                  <mi>i</mi>
                </msub>
              </msub>
              <mo>&#x22c0;</mo>
              <mi>i</mi>
            </mrow>
            <mo>&#x2260;</mo>
            <mi>j</mi>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>d</mi>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>min</mi>
              <msub>
                <mi>a</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>*</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0502" num="0762">where m is the number of processors.</p>
<p id="p-0503" num="0763">Then in the procedure for converting A-h-k processes into periodic processes, prior to entering the while loop, d<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>A</sub>+(c<sub>B</sub>+c<sub>C</sub>+c<sub>D</sub>)/m=2+&#x250c;(2+1+1)/2&#x2510;=4. After the second iteration of the while loop, d<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>A</sub>&#x250c;(c<sub>C</sub>+c<sub>D</sub>)/m&#x2510;=2+&#x250c;(1+1)/2&#x2510;=3. prd<sub>newp</sub><sub><sub2>A</sub2></sub>=(d<sub>A</sub>&#x2212;d<sub>newp</sub><sub><sub2>A</sub2></sub>+1)=8&#x2212;3+1=6; 0&#x2266;o<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2266;prd<sub>newp</sub><sub><sub2>A</sub2></sub>&#x2212;1=6&#x2212;1=5. Suppose further that the system designer wanted to increase the chances of a<sub>A </sub>being converted into a periodic process, so the threshold(a<sub>A</sub>) was assigned a low value of 0.5.
<br/>
RPC<sub>newp</sub><sub><sub2>A</sub2></sub>=c<sub>newp</sub><sub><sub2>A</sub2></sub>/prd<sub>newp</sub><sub><sub2>A</sub2></sub>=2/6=0.33.
<br/>
RPC<sub>a</sub><sub><sub2>3</sub2></sub>=c<sub>a</sub><sub><sub2>A</sub2></sub>/min<sub>a</sub><sub><sub2>i</sub2></sub>=2/8=0.25.
<br/>
As threshold(a<sub>A</sub>)*RPC<sub>newp</sub><sub><sub2>A</sub2></sub>=0.5*0.33&#x2266;RPC<sub>a</sub><sub><sub2>A</sub2></sub>=0.25, the procedure will convert a<sub>A </sub>into a periodic process newp<sub>A</sub>.
</p>
<p id="p-0504" num="0764">Suppose also that the system designer did not want a<sub>E </sub>to be converted into a periodic process, so threshold(a<sub>E</sub>) was assigned a high value of 50. The procedure will not convert a<sub>E </sub>into a periodic process.</p>
<p id="p-0505" num="0765">If the method in the aforenoted 1993 article by Xu was used by the procedure for constructing a feasible pre-run-time schedule for a given pre-run-time schedule with offsets, it will find the feasible schedule for newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, on two processors illustrated in <figref idref="DRAWINGS">FIG. 21</figref>, when the offsets are set to the following values: o<sub>newp</sub><sub><sub2>A</sub2></sub>=2, o<sub>p</sub><sub><sub2>B</sub2></sub>=3, and o<sub>p</sub><sub><sub2>D</sub2></sub>=1. The feasible schedule consists of a non-repeating initial schedule S<sub>0 </sub>(1) for the interval [0, 1], and a repeating schedule S<sub>LCM </sub>(12) that is of length equal to the Least Common Multiple of the periods of newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, and p<sub>D</sub>, which is LCM(6, 6, 4, 3)=12.</p>
<p id="p-0506" num="0766">If a<sub>E </sub>is scheduled by the Multiple Processor A-h-k-a Scheduler using the information in the pre-run-time schedule including the processes newp<sub>A</sub>, p<sub>B</sub>, p<sub>C</sub>, p<sub>D </sub>constructed by the Pre-run-time Scheduler above, then a<sub>E</sub>'s worst-case response time will happen when a<sub>E </sub>makes a request at time 3, and will be delayed by the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler at time 3. a<sub>E </sub>will be executed from time 13 to time 15 after p<sub>B</sub>, has completed. The multiple processor simulation procedure for determining each A-h-k-a process' worst-case response time will simulate this execution in which a<sub>E</sub>'s worst-case response time is RE(a<sub>E</sub>, t<sub>s</sub>)=RE(a<sub>E</sub>, 3)=e&#x2032;(a<sub>E</sub>)&#x2212;s&#x2032;(a<sub>E</sub>)=15-3=12&#x2266;d<sub>a</sub><sub><sub2>E</sub2></sub>=14. In this case a<sub>E </sub>is guaranteed to always meet its deadline. See <figref idref="DRAWINGS">FIG. 22</figref>.</p>
<p id="p-0507" num="0767">Suppose the value chosen for threshold(a<sub>A</sub>) is greater than 0.75, then A-h-k process a<sub>A </sub>will not be converted into a new periodic process. If a<sub>A </sub>is scheduled by the Multiple Processor A-h-k-a Scheduler using the information in the pre-run-time schedule including the processes, p<sub>B</sub>, p<sub>C</sub>, p<sub>D </sub>constructed by the Pre-run-time Scheduler above, then a<sub>A</sub>'s worst-case response time will happen when a<sub>A </sub>makes a request at time 3, and will be delayed by the conditions in Case 1 of the Multiple Processor A-h-k-a Scheduler at time 3. a<sub>A </sub>will be executed from time 8 to time 10 after p<sub>D</sub><sub><sub2>2 </sub2></sub>has completed. a<sub>E</sub>'s response time is RE(a<sub>A</sub>, t<sub>s</sub>)=RE(a<sub>A</sub>, 3)=e&#x2032;(a<sub>A</sub>)&#x2212;s&#x2032;(a<sub>A</sub>)=10&#x2212;3=7&#x2266;d<sub>a</sub><sub><sub2>A</sub2></sub>=14. In this case a<sub>A </sub>is guaranteed to always meet its deadline. See <figref idref="DRAWINGS">FIG. 23</figref>.</p>
<p id="p-0508" num="0768">However, while it is possible to guarantee that both a<sub>A </sub>and a<sub>E </sub>will always meet their respective deadlines when a<sub>A </sub>is converted into a new periodic process newp<sub>A </sub>as illustrated in <figref idref="DRAWINGS">FIG. 22</figref>; it is interesting to note that, if a<sub>A </sub>is not converted into a new periodic process and remains asynchronous, then it would be impossible to guarantee that a<sub>E </sub>will always meet its deadline, because there exist certain times, e.g., any time between 13 and 16, at which, if a<sub>E </sub>is put into execution, it may be preempted by a<sub>A </sub>and cause p<sub>B </sub>to miss its deadline. Prohibiting a<sub>A </sub>from preempting a<sub>E </sub>by adding the exclusion relation a<sub>E </sub>excludes a<sub>A </sub>is not a solution, because not allowing a<sub>A </sub>to preempt a<sub>E </sub>will increase a<sub>A</sub>'s worst-case response time to exceed a<sub>A</sub>'s deadline. This example illustrates that, in certain cases, it may be advantageous to convert an asynchronous process with a hard deadline and known characteristics into a new periodic process and schedule it before run-time.
<br/>
(end of example)
</p>
<p id="p-0509" num="0769">It should be noted that various other embodiments of the present invention may be designed.</p>
<p id="p-0510" num="0770">For example, tables of safe start time intervals for asynchronous processes may be used.</p>
<p id="p-0511" num="0771">In the methods described prior to the above description of scheduling processes on multiple processors, each periodic process was not restricted to execute within the time slot that was used to reserve processor capacity for that periodic process in the pre-run-time schedule.</p>
<p id="p-0512" num="0772">However, it is possible to enforce the requirement that every periodic process must execute strictly within its reserved time slot in the pre-run-time schedule, simply by changing each periodic process p's release time R<sub>p </sub>to be equal to the beginning of its time slot in the pre-run-time schedule, i.e., set R<sub>p</sub>=s(p) for every p.</p>
<p id="p-0513" num="0773">One advantage of doing this, is that it will make the execution times of periodic processes highly predictable, and thus allow one to construct tables of &#x201c;safe start time intervals&#x201d; for asynchronous processes before run-time. Such tables would allow asynchronous processes to be scheduled at run-time by simple table lookup, and substantially reduce the run-time overhead of scheduling asynchronous processes.</p>
<p id="p-0514" num="0774">The safe start time intervals can be computed by using the A-h-k-a Scheduler (or Multiple Processor A-h-k-a Scheduler) to determine, for each point in time t of the pre-run-time schedule, and for each processor k, whether each asynchronous process a<sub>i </sub>can be put into execution at time t on processor k.</p>
<heading id="h-0330" level="1">Example 15</heading>
<p id="p-0515" num="0775">For the asynchronous processes a<sub>E</sub>, a<sub>A </sub>in the system is Example 14, the following &#x201c;safe start time tables&#x201d; may be constructed.</p>
<p id="p-0516" num="0776">When a<sub>A </sub>is converted into a new periodic process newp<sub>A</sub>, and the pre-run-time schedule is as shown in <figref idref="DRAWINGS">FIG. 21</figref>, the safe start time table for a<sub>E </sub>should preferably contain the following &#x201c;safe start time intervals&#x201d;:</p>
<p id="h-0331" num="0000">on processor 1: empty;</p>
<p id="h-0332" num="0000">on processor 2: [(k*12)+1, (k*12)+2], k=0, 1, 2, . . . .</p>
<p id="p-0517" num="0777">When a<sub>A </sub>is not converted into a new periodic process, and the pre-run-time schedule is as shown in <figref idref="DRAWINGS">FIG. 22</figref>, but without the time slots for newp<sub>A</sub><sub><sub2>0</sub2></sub>, newp<sub>A</sub><sub><sub2>1</sub2></sub>, newp<sub>A</sub><sub><sub2>2</sub2></sub>, . . . , and without the time slot for a<sub>E </sub>in <figref idref="DRAWINGS">FIG. 22</figref>, the safe start time table for a<sub>A </sub>should preferably contain the following &#x201c;safe start time intervals&#x201d;:</p>
<p id="h-0333" num="0000">on processor 1: [(k*6)+2, (k*6)+2], k=0, 1, 2, . . .</p>
<p id="h-0334" num="0000">on processor 2: [(k*12)+2, (k*12)+2], k=0, 1, 2, . . .</p>
<p id="p-0518" num="0778">When a<sub>A </sub>is not converted into a new periodic process, and the pre-run-time schedule is as shown in <figref idref="DRAWINGS">FIG. 22</figref>, but without the time slots for newp<sub>A</sub><sub><sub2>0</sub2></sub>, newp<sub>Ai</sub>, newp<sub>A</sub><sub><sub2>2</sub2></sub>, . . . , and without the time slot for a<sub>E </sub>in <figref idref="DRAWINGS">FIG. 22</figref>, the safe start time table for a<sub>E </sub>should preferably contain the following &#x201c;safe start time intervals&#x201d;:</p>
<p id="h-0335" num="0000">on processor 1: empty;</p>
<p id="h-0336" num="0000">on processor 2: empty;</p>
<p id="p-0519" num="0779">The safe start time intervals define the only times at which an asynchronous process can start its execution on a processor when the processor is idle without the possibility of causing some hard deadline process to miss its deadline.</p>
<p id="h-0337" num="0000">(end of example)</p>
<p id="p-0520" num="0780">Many priority and or criticality levels may be handled. One can easily adapt the present invention to handle any number of priority/criticality levels.</p>
<p id="p-0521" num="0781">If some set of periodic processes is to be treated at the same priority as some set of asynchronous processes, then they could be scheduled in a way similar to the way P-h-k processes and A-h-k processes have been scheduled as described earlier.</p>
<p id="p-0522" num="0782">If some set of periodic processes is to be treated at a higher priority than some set of asynchronous processes, then they could be scheduled in a way similar to the way P-h-k processes and A-s-k processes have been scheduled as described earlier.</p>
<p id="p-0523" num="0783">If some set of periodic processes is to be treated at a lower priority than some set of asynchronous processes, then they could be scheduled in a way similar to the way P-s-k processes and A-h-k processes have been scheduled as described earlier.</p>
<p id="p-0524" num="0784">If some set of periodic processes is to be treated at a lower priority than some other set of periodic processes, then they could be scheduled in a way similar to the way P-s-k processes and P-h-k processes have been scheduled as described earlier.</p>
<p id="p-0525" num="0785">If some set of asynchronous processes is to be treated at lower priority than some other set of asynchronous processes, then they could be scheduled in a way similar to the way A-s-k processes and A-h-k processes have been scheduled as described earlier.</p>
<p id="p-0526" num="0786">For example, although in this specification A-s-k processes are described as having been scheduled at a priority level that is lower than P-s-k processes, a different set of asynchronous processes with soft deadlines and known characteristics, say A-s-k-2, could have been chosen, that is scheduled at the same priority level as the P-s-k processes. Then the relationship between the A-s-k-2 processes and the P-s-k processes could be handled in a way that is similar to the way the relationship between the A-h-k and P-h-k processes was handled.</p>
<p id="p-0527" num="0787">When using the integration method to schedule processes with different priority levels, the following general rules should be observed:</p>
<p id="p-0528" num="0788">(a) Periodic processes with known characteristics should be scheduled before run-time. The worst-case response times of asynchronous processes with known characteristics should also be determined before run-time. At run-time, the asynchronous processes should be scheduled in a way that guarantees that the timing constraints of all processes scheduled in the pre-run-time phase are always satisfied. Processes with unknown characteristics should be scheduled at a priority level that is lower than that of all processes with known characteristics.</p>
<p id="p-0529" num="0789">(b) One should schedule the set of processes that have higher priority first and make sure that all their timing constraints are satisfied, before using the remaining processor capacity to schedule a set of processes that have lower priority.</p>
<p id="p-0530" num="0790">In the present invention, different methods for scheduling each type of processes, while observing the general rules above, may be used.</p>
<p id="p-0531" num="0791">The present invention can also be used in an on-line mode. In such cases, in Step 2, when constructing a feasible pre-run-time schedule, when using a single processor method such as that described in the aforenoted 1990 article by Xu and Parnas, or when using a multiprocessor method such as that described in the aforenoted 1993 article by Xu, instead of constructing a search tree, the method can be used in a way such that it always only constructs one schedule for each set of processes, which should be as fast as any existing method, and still provide better chances of finding a feasible pre-run-time schedule than other methods.</p>
<p id="p-0532" num="0792">As noted earlier, a simplified procedure for Step 4, pre-run-time scheduling of periodic processes with soft deadlines and known characteristics, will now be described.</p>
<p id="h-0338" num="0000">P-s-k Scheduler Method</p>
<p id="p-0533" num="0000">
<ul id="ul0110" list-style="none">
    <li id="ul0110-0001" num="0000">
    <ul id="ul0111" list-style="none">
        <li id="ul0111-0001" num="0793">Try to find a feasible schedule of all soft-deadline periodic processes together with all the guaranteed hard-deadline periodic processes using the optimal method in the aforenoted 1990 article by Xu and Parnas.</li>
        <li id="ul0111-0002" num="0794">If a feasible schedule does not exist, then find an optimal schedule
<br/>
discontinue:=false;
<br/>
nocandidate:=false;
<br/>
while not discontinue do
<br/>
begin{try to construct a feasible schedule}
</li>
        <li id="ul0111-0003" num="0795">if e&#x2032;(p<sub>l</sub>)&#x2212;D<sub>p</sub><sub><sub2>l</sub2></sub>=max{e&#x2032;(p<sub>i</sub>)&#x2212;D<sub>p</sub><sub><sub2>i</sub2></sub>|p<sub>i</sub>&#x2208;P-h-k<img id="CUSTOM-CHARACTER-00102" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00096.TIF" alt="custom character" img-content="character" img-format="tif"/>p<sub>1</sub>&#x2208;P-s-k} and e&#x2032;(p<sub>1</sub>)&#x3e;D<sub>p</sub><sub><sub2>l </sub2></sub>
        <ul id="ul0112" list-style="none">
            <li id="ul0112-0001" num="0796">{p<sub>l </sub>is the latest process and p<sub>l </sub>is late}</li>
        </ul>
        </li>
        <li id="ul0111-0004" num="0797">then</li>
        <li id="ul0111-0005" num="0798">begin{try to reduce the lateness of latest process p<sub>l</sub>}
        <ul id="ul0113" list-style="none">
            <li id="ul0113-0001" num="0799">candidatefound:=false;</li>
            <li id="ul0113-0002" num="0800">CandidateSet:=P-s-k</li>
            <li id="ul0113-0003" num="0801">while not candidatefound and not nocandidate do</li>
            <li id="ul0113-0004" num="0802">begin{search for candidate to revise deadline}
            <ul id="ul0114" list-style="none">
                <li id="ul0114-0001" num="0803">select p<sub>j </sub>such that
                <ul id="ul0115" list-style="none">
                    <li id="ul0115-0001" num="0804">p<sub>j</sub>&#x2208;CandidateSet&#x39b;d<sub>p</sub><sub><sub2>j</sub2></sub>&#x3c;d<sub>upplimit(p</sub><sub><sub2>j</sub2></sub><sub>)</sub>&#x39b;</li>
                    <li id="ul0115-0002" num="0805">criticality(p<sub>j</sub>)=min{criticality(p<sub>i</sub>)|p<sub>i </sub>in critical set Z(p<sub>l</sub>)}</li>
                    <li id="ul0115-0003" num="0806">{Z(p<sub>l</sub>) is a set of processes that includes the latest process p<sub>l </sub>and there is no time during which the processor is idle between their execution.</li>
                    <li id="ul0115-0004" num="0807">(see aforenoted 1990 article by Xu and Parnas)}</li>
                </ul>
                </li>
                <li id="ul0114-0002" num="0808">if no such p<sub>j </sub>exists then
                <ul id="ul0116" list-style="none">
                    <li id="ul0116-0001" num="0809">nocandidate:=true;</li>
                </ul>
                </li>
                <li id="ul0114-0003" num="0810">else</li>
                <li id="ul0114-0004" num="0811">begin
                <ul id="ul0117" list-style="none">
                    <li id="ul0117-0001" num="0812">if e&#x2032;(p<sub>l</sub>)+1&#x2266;d<sub>upplimit(p</sub><sub><sub2>j</sub2></sub><sub>) </sub></li>
                    <li id="ul0117-0002" num="0813">then</li>
                    <li id="ul0117-0003" num="0814">begin</li>
                    <li id="ul0117-0004" num="0815">&#x2003;if j&#x2260;l</li>
                    <li id="ul0117-0005" num="0816">&#x2003;then d<sub>p</sub><sub><sub2>j</sub2></sub>:=e&#x2032;(p<sub>l</sub>)+1</li>
                    <li id="ul0117-0006" num="0817">&#x2003;{this will cause p<sub>j </sub>to be scheduled after p<sub>l </sub>which may help reduce lateness}</li>
                    <li id="ul0117-0007" num="0818">&#x2003;else d<sub>p</sub><sub><sub2>j</sub2></sub>:=e&#x2032;(p<sub>l</sub>);</li>
                    <li id="ul0117-0008" num="0819">&#x2003;{if p<sub>j </sub>itself is latest then set d<sub>p</sub><sub><sub2>j </sub2></sub>such that p<sub>1 </sub>will not be late}</li>
                    <li id="ul0117-0009" num="0820">&#x2003;candidatefound:=true</li>
                    <li id="ul0117-0010" num="0821">end</li>
                    <li id="ul0117-0011" num="0822">else remove p<sub>j </sub>from CandidateSet</li>
                    <li id="ul0117-0012" num="0823">&#x2003;{scheduling p<sub>j </sub>after p<sub>l </sub>is futile}</li>
                </ul>
                </li>
                <li id="ul0114-0005" num="0824">end;</li>
            </ul>
            </li>
            <li id="ul0113-0005" num="0825">end{search for candidate to revise deadline};</li>
            <li id="ul0113-0006" num="0826">if nocandidate</li>
            <li id="ul0113-0007" num="0827">then</li>
            <li id="ul0113-0008" num="0828">begin
            <ul id="ul0118" list-style="none">
                <li id="ul0118-0001" num="0829">output Z(p<sub>l</sub>);</li>
                <li id="ul0118-0002" num="0830">discontinue:=true;
                <ul id="ul0119" list-style="none">
                    <li id="ul0119-0001" num="0831">{the user must modify the characteristics of one or more processes in Z(p<sub>l</sub>) before a feasible schedule can be found}</li>
                </ul>
                </li>
            </ul>
            </li>
            <li id="ul0113-0009" num="0832">end</li>
            <li id="ul0113-0010" num="0833">else</li>
            <li id="ul0113-0011" num="0834">begin
            <ul id="ul0120" list-style="none">
                <li id="ul0120-0001" num="0835">Use the aforenoted algorithm to try to find a feasible schedule again with the revised d<sub>p</sub><sub><sub2>j</sub2></sub>;</li>
                <li id="ul0120-0002" num="0836">if feasible does not exist, then find an optimal schedule;</li>
            </ul>
            </li>
            <li id="ul0113-0012" num="0837">end;</li>
        </ul>
        </li>
        <li id="ul0111-0006" num="0838">end{try to reduce the lateness of latest process p<sub>l</sub>}</li>
        <li id="ul0111-0007" num="0839">else discontinue:=true; {feasible schedule found}
<br/>
end{try to construct a feasible schedule};
<br/>
{Verify the schedulability of all A-h-k-a processes}
<br/>
for each a<sub>i</sub>&#x2208;A-h-k-a do
</li>
        <li id="ul0111-0008" num="0840">if not discontinue</li>
        <li id="ul0111-0009" num="0841">then</li>
        <li id="ul0111-0010" num="0842">begin
        <ul id="ul0121" list-style="none">
            <li id="ul0121-0001" num="0843">while RE<sub>a</sub><sub><sub2>i</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i </sub2></sub>and not discontinue do</li>
            <li id="ul0121-0002" num="0844">begin
            <ul id="ul0122" list-style="none">
                <li id="ul0122-0001" num="0845">let CandidateSet:={p<sub>j</sub>|p<sub>j</sub>&#x2208;P-s-k&#x39b;L<sub>p</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>}</li>
                <li id="ul0122-0002" num="0846">select p<sub>j </sub>such that p<sub>j</sub>&#x2208;CandidateSet and criticality(p<sub>j</sub>)=min{criticality(p<sub>i</sub>)|p<sub>i</sub>&#x2208;CandidateSet&#x39b;d<sub>i</sub>&#x3c;d<sub>upplimit(p</sub><sub><sub2>i</sub2></sub>)}</li>
                <li id="ul0122-0003" num="0847">if no such p<sub>1 </sub>exists then
                <ul id="ul0123" list-style="none">
                    <li id="ul0123-0001" num="0848">discontinue:=true;</li>
                    <li id="ul0123-0002" num="0849">{the user must increase the deadline upper limit of some P-s-k process in CandidateSet}</li>
                </ul>
                </li>
                <li id="ul0122-0004" num="0850">else
                <ul id="ul0124" list-style="none">
                    <li id="ul0124-0001" num="0851">d<sub>p</sub><sub><sub2>j</sub2></sub>:=d<sub>p</sub><sub><sub2>j</sub2></sub>+1;</li>
                </ul>
                </li>
            </ul>
            </li>
            <li id="ul0121-0003" num="0852">end; {while}</li>
        </ul>
        </li>
        <li id="ul0111-0011" num="0853">end; {for}
<br/>
end.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0534" num="0854">A method and a simulation procedure for determining the worst-case response times of the A-s-k processes, for example a<sub>i </sub>follows:</p>
<p id="h-0339" num="0000">For all a<sub>i</sub>&#x2208;A-s-k:</p>
<p id="h-0340" num="0000"><i>RE</i><sub>a</sub><sub><sub2>i</sub2></sub><i>=c</i><sub>a</sub><sub><sub2>i</sub2></sub>+Delay<i>A</i>(<i>a</i><sub>i</sub><i>,RE</i><sub>a</sub><sub><sub2>i</sub2></sub>)+Delay<i>P</i>(<i>a</i><sub>i</sub><i>,RE</i><sub>a</sub><sub><sub2>i</sub2></sub>)+<i>B</i>(<i>a</i><sub>i</sub>)</p>
<p id="p-0535" num="0855">where</p>
<p id="p-0536" num="0856">
<maths id="MATH-US-00018" num="00018">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <mi>DelayA</mi>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
          <mo>,</mo>
          <msub>
            <mi>RE</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <munder>
        <mo>&#x2211;</mo>
        <mrow>
          <msub>
            <mi>a</mi>
            <mi>j</mi>
          </msub>
          <mo>&#x2208;</mo>
          <mrow>
            <mi>A</mi>
            <mo>-</mo>
            <mi>h</mi>
            <mo>-</mo>
            <mrow>
              <mi>k</mi>
              <mo>&#x22c1;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>a</mi>
                    <mi>j</mi>
                  </msub>
                  <mo>&#x2208;</mo>
                  <mrow>
                    <mrow>
                      <mi>A</mi>
                      <mo>-</mo>
                      <mi>s</mi>
                      <mo>-</mo>
                      <mrow>
                        <mi>k</mi>
                        <mo>&#x22c0;</mo>
                        <msub>
                          <mi>L</mi>
                          <msub>
                            <mi>a</mi>
                            <mi>j</mi>
                          </msub>
                        </msub>
                      </mrow>
                    </mrow>
                    <mo>&#x2264;</mo>
                    <mrow>
                      <msub>
                        <mi>L</mi>
                        <msub>
                          <mi>a</mi>
                          <mi>i</mi>
                        </msub>
                      </msub>
                      <mo>&#x22c0;</mo>
                      <mi>j</mi>
                    </mrow>
                    <mo>&#x2260;</mo>
                    <mi>i</mi>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </munder>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mo>&#x2308;</mo>
          <mfrac>
            <msub>
              <mi>RE</mi>
              <msub>
                <mi>a</mi>
                <mi>i</mi>
              </msub>
            </msub>
            <msub>
              <mi>prd</mi>
              <msub>
                <mi>p</mi>
                <mi>j</mi>
              </msub>
            </msub>
          </mfrac>
          <mo>&#x2309;</mo>
        </mrow>
        <mo>&#xb7;</mo>
        <msub>
          <mi>c</mi>
          <msub>
            <mi>p</mi>
            <mi>j</mi>
          </msub>
        </msub>
      </mrow>
    </mrow>
  </mrow>
  <mo>)</mo>
</mrow>
</math>
</maths>
</p>
<p id="p-0537" num="0857">and</p>
<p id="p-0538" num="0858">
<maths id="MATH-US-00019" num="00019">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>DelayB</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
        <mo>,</mo>
        <msub>
          <mi>RE</mi>
          <msub>
            <mi>a</mi>
            <mi>i</mi>
          </msub>
        </msub>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <munder>
      <mo>&#x2211;</mo>
      <mrow>
        <msub>
          <mi>p</mi>
          <mi>j</mi>
        </msub>
        <mo>&#x2208;</mo>
        <mrow>
          <mi>P</mi>
          <mo>-</mo>
          <mi>h</mi>
          <mo>-</mo>
          <mrow>
            <mi>k</mi>
            <mo>&#x22c1;</mo>
            <msub>
              <mi>p</mi>
              <mi>j</mi>
            </msub>
          </mrow>
        </mrow>
        <mo>&#x2208;</mo>
        <mrow>
          <mi>P</mi>
          <mo>-</mo>
          <mi>s</mi>
          <mo>-</mo>
          <mi>k</mi>
        </mrow>
      </mrow>
    </munder>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mo>&#x2308;</mo>
        <mfrac>
          <msub>
            <mi>RE</mi>
            <msub>
              <mi>a</mi>
              <mi>i</mi>
            </msub>
          </msub>
          <msub>
            <mi>prd</mi>
            <msub>
              <mi>p</mi>
              <mi>j</mi>
            </msub>
          </msub>
        </mfrac>
        <mo>&#x2309;</mo>
      </mrow>
      <mo>&#xb7;</mo>
      <msub>
        <mi>c</mi>
        <msub>
          <mi>p</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0539" num="0859">and
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>B</i>(<i>a</i><sub>i</sub>)=max{<i>c</i><sub>a</sub><sub><sub2>j</sub2></sub>|(<i>a</i><sub>j</sub><i>&#x2208;A</i>-<i>s</i>-<i>k&#x39b;L</i><sub>a</sub><sub><sub2>j</sub2></sub><i>&#x3e;L</i><sub>a</sub><sub><sub2>i</sub2></sub><i>&#x39b;&#x2203;x</i><sub>k</sub><i>,x</i><sub>k</sub><i>&#x2208;A</i>-<i>s</i>-<i>k: a</i><sub>j </sub>excludes <i>x</i><sub>k</sub><i>&#x39b;L</i><sub>x</sub><sub><sub2>k</sub2></sub><i>&#x2266;L</i><sub>a</sub><sub><sub2>i</sub2></sub>)}<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
Note: In the above formula, the value of c<sub>p</sub><sub><sub2>j </sub2></sub>is the original computation time of p<sub>j </sub>(it does not include the time reserved for A-h-k-a processes with shorter deadlines).
</p>
<p id="p-0540" num="0860">The following procedure can be used to compute the worst-case response time of each A-s-k process:</p>
<p id="h-0341" num="0000">i:=0;</p>
<p id="h-0342" num="0000">failure:=false;</p>
<p id="h-0343" num="0000">while i&#x2266;number-of-A-s-k-processes and not(failure) do</p>
<p id="h-0344" num="0000">begin</p>
<p id="p-0541" num="0861">if a<sub>i</sub>&#x2208;A-s-k</p>
<p id="p-0542" num="0862">then</p>
<p id="p-0543" num="0863">begin
<ul id="ul0125" list-style="none">
    <li id="ul0125-0001" num="0000">
    <ul id="ul0126" list-style="none">
        <li id="ul0126-0001" num="0864">RE<sub>new</sub><sub><sub2>i</sub2></sub>:=c<sub>a</sub><sub><sub2>i</sub2></sub>;</li>
        <li id="ul0126-0002" num="0865">responsetimefound:=false;</li>
        <li id="ul0126-0003" num="0866">while not(responsetimefound) and not(failure) do</li>
        <li id="ul0126-0004" num="0867">begin
        <ul id="ul0127" list-style="none">
            <li id="ul0127-0001" num="0868">RE<sub>previous</sub><sub><sub2>i</sub2></sub>:=RE<sub>new</sub><sub><sub2>i</sub2></sub>;</li>
            <li id="ul0127-0002" num="0869">RE<sub>new</sub><sub><sub2>i</sub2></sub>=c<sub>a</sub><sub><sub2>i</sub2></sub>+DelayA(a<sub>i</sub>, RE<sub>previous</sub><sub><sub2>i</sub2></sub>)+DelayP(a<sub>i</sub>, RE<sub>previous</sub><sub><sub2>i</sub2></sub>)+B(a<sub>i</sub>);</li>
            <li id="ul0127-0003" num="0870">if RE<sub>previous</sub><sub><sub2>i</sub2></sub>=RE<sub>new</sub><sub><sub2>i </sub2></sub></li>
            <li id="ul0127-0004" num="0871">then</li>
            <li id="ul0127-0005" num="0872">begin
            <ul id="ul0128" list-style="none">
                <li id="ul0128-0001" num="0873">RE<sub>a</sub><sub><sub2>i</sub2></sub>:=RE<sub>new</sub><sub><sub2>i</sub2></sub>;</li>
                <li id="ul0128-0002" num="0874">responsetimefound:=true;</li>
            </ul>
            </li>
            <li id="ul0127-0006" num="0875">end</li>
            <li id="ul0127-0007" num="0876">if (RE<sub>new</sub><sub><sub2>i</sub2></sub>&#x3e;responsetimelimit)</li>
            <li id="ul0127-0008" num="0877">then failure:=true;</li>
        </ul>
        </li>
        <li id="ul0126-0005" num="0878">end;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0544" num="0879">end;</p>
<p id="p-0545" num="0880">i:=i+1;</p>
<p id="h-0345" num="0000">end.</p>
<p id="p-0546" num="0881">See Example 9 concerning use of the above procedure.</p>
<p id="p-0547" num="0882">In the following description, the second method is described, which uses simulation to determine the worst-case response time of an A-s-k process.</p>
<p id="p-0548" num="0883">This method uses the functions of the A-h-k-a Scheduler and the Main Run-Time Scheduler, which are described earlier.</p>
<p id="p-0549" num="0884">A preferred method for computing the worst-case response time of an A-s-k process a<sub>i </sub>corresponding to a feasible pre-run-time schedule of guaranteed periodic processes comprising an initial part of the pre-run-time schedule S<sub>0</sub>(t<sub>0</sub>), in the interval [0, t<sub>0</sub>]; and a repeating part of the pre-run-time schedule S<sub>LCM </sub>(prd<sub>LCM</sub>), in the interval [t<sub>0</sub>, t<sub>0</sub>+prd<sub>LCM</sub>] is as follows:</p>
<p id="h-0346" num="0000">fail:=false;</p>
<p id="h-0347" num="0000">for t<sub>s</sub>:=0 to t<sub>0</sub>+prd<sub>LCM</sub>&#x2212;1 do</p>
<p id="h-0348" num="0000">begin</p>
<p id="p-0550" num="0000">
<ul id="ul0129" list-style="none">
    <li id="ul0129-0001" num="0000">
    <ul id="ul0130" list-style="none">
        <li id="ul0130-0001" num="0885">Use the Main Run-Time Scheduler to schedule a<sub>i </sub>under the following assumptions:</li>
        <li id="ul0130-0002" num="0886">(1) a<sub>i </sub>arrives in the system at time t<sub>s</sub>.</li>
        <li id="ul0130-0003" num="0887">(2) Let every A-h-k-a process a<sub>j </sub>arrive at the following instants in time: R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j</sub2></sub>, k=0, 1, 2, . . . ,</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0551" num="0888">
<maths id="MATH-US-00020" num="00020">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>&#x230a;</mo>
    <mfrac>
      <msub>
        <mi>d</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <msub>
        <mi>min</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mfrac>
    <mo>&#x230b;</mo>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<ul id="ul0131" list-style="none">
    <li id="ul0131-0001" num="0000">
    <ul id="ul0132" list-style="none">
        <li id="ul0132-0001" num="0889">and be scheduled before a<sub>i</sub>.</li>
        <li id="ul0132-0002" num="0890">{all A-h-k-a processes arrive at the same time as a<sub>i </sub>at time t<sub>s</sub>, and are put into execution before a<sub>i</sub>.}</li>
        <li id="ul0132-0003" num="0891">(3) Let every A-s-k process a<sub>j</sub>, such that L<sub>a</sub><sub><sub2>j</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i </sub2></sub>arrive at the following instants in time: R<sub>a</sub><sub><sub2>j</sub2></sub>(k)=t<sub>s</sub>+k*min<sub>a</sub><sub><sub2>j</sub2></sub>, k=0, 1, 2, . . . , ,</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0552" num="0892">
<maths id="MATH-US-00021" num="00021">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>&#x230a;</mo>
    <mfrac>
      <msub>
        <mi>d</mi>
        <msub>
          <mi>a</mi>
          <mi>i</mi>
        </msub>
      </msub>
      <msub>
        <mi>min</mi>
        <msub>
          <mi>a</mi>
          <mi>j</mi>
        </msub>
      </msub>
    </mfrac>
    <mo>&#x230b;</mo>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<ul id="ul0133" list-style="none">
    <li id="ul0133-0001" num="0000">
    <ul id="ul0134" list-style="none">
        <li id="ul0134-0001" num="0893">and be scheduled before a<sub>i </sub>whenever a<sub>i </sub>and a<sub>j </sub>have both arrived and a<sub>i </sub>has not yet started.</li>
        <li id="ul0134-0002" num="0894">{all A-s-k processes whose latitudes are less than or equal to a<sub>i</sub>'s latitude arrive at the same time as a<sub>i </sub>at time t<sub>s</sub>, and are put into execution before a<sub>i</sub>.}</li>
        <li id="ul0134-0003" num="0895">(4) Let A-s-k process a<sub>j</sub><sub><sub2>1</sub2></sub>, such that c<sub>a</sub><sub><sub2>j</sub2></sub><sub><sub2>1</sub2></sub>=max{c<sub>a</sub><sub><sub2>j</sub2></sub>|(a<sub>j</sub>&#x2208;A-s-k &#x39b;L<sub>a</sub><sub><sub2>j</sub2></sub>&#x3e;L<sub>a</sub><sub><sub2>i</sub2></sub>&#x39b;&#x2203;x<sub>k</sub>, x<sub>k</sub>&#x2208;A-s-k <img id="CUSTOM-CHARACTER-00103" he="3.13mm" wi="2.46mm" file="US08627319-20140107-P00015.TIF" alt="custom character" img-content="character" img-format="tif"/>x<sub>k</sub>&#x2208;P-g: a<sub>j </sub>excludes x<sub>k</sub>&#x39b;L<sub>x</sub><sub><sub2>k</sub2></sub>&#x2266;L<sub>a</sub><sub><sub2>i</sub2></sub>)}</li>
        <li id="ul0134-0004" num="0896">arrive at the following instants in time: <img id="CUSTOM-CHARACTER-00104" he="3.89mm" wi="4.57mm" file="US08627319-20140107-P00097.TIF" alt="custom character" img-content="character" img-format="tif"/>(k)=t<sub>s</sub>&#x2212;1+k*<img id="CUSTOM-CHARACTER-00105" he="4.57mm" wi="11.26mm" file="US08627319-20140107-P00098.TIF" alt="custom character" img-content="character" img-format="tif"/>k=0, 1, 2, . . . ,</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0553" num="0897">
<maths id="MATH-US-00022" num="00022">
<math overflow="scroll">
<mrow>
  <mo>&#x230a;</mo>
  <mfrac>
    <msub>
      <mi>d</mi>
      <msub>
        <mi>a</mi>
        <mi>i</mi>
      </msub>
    </msub>
    <msub>
      <mi>min</mi>
      <msub>
        <mi>a</mi>
        <msub>
          <mi>j</mi>
          <mn>1</mn>
        </msub>
      </msub>
    </msub>
  </mfrac>
  <mo>&#x230b;</mo>
</mrow>
</math>
</maths>
<br/>
{a<sub>j</sub><sub><sub2>1 </sub2></sub>arrives 1 time unit before a<sub>i </sub>at time t<sub>s</sub>&#x2212;1, and, if it can be put into execution at that time, it will block a<sub>i</sub>.}
<ul id="ul0135" list-style="none">
    <li id="ul0135-0001" num="0000">
    <ul id="ul0136" list-style="none">
        <li id="ul0136-0001" num="0898">(5) If &#x2203;p<sub>l</sub>, p<sub>l</sub>&#x2208;P-g &#x39b;s(p<sub>l</sub>)&#x2266;t<sub>s</sub>&#x3c;e(p<sub>l</sub>), then assume that s&#x2032;(p<sub>l</sub>)=s(p<sub>l</sub>)&#x39b;e&#x2032;(p<sub>l</sub>)=e(p<sub>l</sub>); {i.e., p<sub>l </sub>started at the beginning of its time slot and will complete its computation at the end of its time slot in the pre-run-time schedule that was computed using adjusted computation times.}</li>
        <li id="ul0136-0002" num="0899">(6) If the end of the current instance of the repeating part of the pre-run-time schedule is reached, continue at the beginning of the next instance of the repeating part of the pre-run-time schedule.</li>
        <li id="ul0136-0003" num="0900">(7) If a<sub>i</sub>'s computation is completed before its response time limit, then record the completion time of a<sub>1 </sub>as its response time RE(a<sub>i</sub>, t<sub>s</sub>), and exit from the current iteration of the loop for this value of t<sub>s</sub>, and start the next iteration for t<sub>s</sub>:=t<sub>s</sub>+1.</li>
        <li id="ul0136-0004" num="0901">(8) If a<sub>i</sub>'s response time limit is reached but a<sub>i </sub>has not yet completed its computation, then set fail:=true and exit from the procedure.
<br/>
end;
<br/>
if not fail then
</li>
        <li id="ul0136-0005" num="0902">RE<sub>a</sub><sub><sub2>i</sub2></sub>:=max{RE(a<sub>i</sub>, t<sub>s</sub>)|t<sub>s</sub>=0, 1, . . . , LCM&#x2212;1};</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0554" num="0903">It should be noted that while the above-described methods can be carried out in a software programmed processor, and have been described with such a processor as an example, they, or one or more steps in the methods, can alternatively be carried out by hardware such as gate arrays or by other fixed or programmable structures, or combinations of these structures.</p>
<p id="p-0555" num="0904">A processor can be any physical or virtual structure which can perform one or more functions. A processor can be a machine, a computer processor, a logic device, an organization, etc. A process can be any task or job that requires a finite amount of time to complete on a certain processor. Computation time is the amount of time that a process requires from start to completion on a certain processor.</p>
<p id="p-0556" num="0905"><figref idref="DRAWINGS">FIG. 24</figref> illustrates an example of a system on which the methods described herein can be carried out. Any of plural peripherals <b>1</b> provide input signals which require processing. For example, peripherals can be a keyboard, a signal from an emergency response telephone system, an alarm clock, a program running in background on a processor, a pipeline, etc. A memory <b>3</b> stores processes, e.g. series of instructions, for carrying out the various processes. The memory can be in the form of any storage structure, and can be, for instance a store for a series of electronic, pneumatic, hydraulic, etc. control signals for operating a plurality of industrial processes that require scheduling in accordance with the demands of the input signals. In one embodiment, the memory can be a hard random access memory and/or a disk drive of a computer, of well known form and the input signals can be electronic. In another embodiment, in the case in which the memory is in the form of industrial process structures, the input signals can be fluids, photons, objects, audio, data or other signals, etc, which are to be scheduled to be processed by the various industrial processes.</p>
<p id="p-0557" num="0906">The input signals and the memory are coupled to a processor <b>4</b> of any form with which the present invention can be operated, such a computer processor. The processor has an output which is coupled to an output device or system <b>5</b>, which receives the output result of the operation of the processes by the processor.</p>
<p id="p-0558" num="0907">The memory preferably also has a portion <b>7</b> for storing a pre-run-time schedule, and a portion <b>9</b> for storing a run-time schedule for execution of the processes stored in the memory <b>3</b>.</p>
<p id="p-0559" num="0908">In operation, the processor receives input signals which demand that processes stored in the memory <b>3</b> (or which are received from other control or interrupt inputs, not shown) are executed. As described earlier in this specification, some of these processes can be periodic and some can be asynchronous. The processor, operating using an operating system stored in the memory <b>3</b>, obtains the characteristics of the various processes from the memory, and creates or simulates a pre-run-time schedule, then creates or simulates a run-time schedule which uses the pre-run-time schedule, as described earlier in this specification. It then executes the run-time schedule as described herein, providing an output to the output device or system.</p>
<p id="p-0560" num="0909"><figref idref="DRAWINGS">FIG. 24A</figref> provides another example of a multiprocessor system on which the methods described herein can be carried out. The real-time system consists of a controlling system having two parts, a pre-run-time scheduling subsystem <b>10</b> and a run-time scheduling subsystem <b>11</b>, and a controlled system <b>12</b>. The controlled system <b>12</b> has data/control buses linking the various components. The controlled system <b>12</b> is comprised of a set of periodic processes p<sub>1</sub>, p<sub>2</sub>, . . . , p<sub>n</sub>, a set of asynchronous processes a<sub>1</sub>, a<sub>2</sub>, . . . , a<sub>j</sub>, and one or more processors <b>13</b><i>a</i>, <b>13</b><i>b</i>, . . . , <b>13</b><i>m</i>. Each processor <b>13</b><i>a</i>-<b>13</b><i>m </i>may have local memory and shared memory. On each processor <b>13</b><i>a</i>-<b>13</b><i>m </i>the processes, either periodic or asynchronous, may be executed. Each process can be a task that requires a finite amount of time to complete on a processor that may have memory resources. Examples of such processes include: a service routine that periodically monitors conditions on a physical system and sends a signal when the conditions meet a certain standard or a task that responds to random user initiated requests. Any of the processes can be a complete subsystem unto itself comprising a processor and a memory that requires the use of some services offered by controlled system <b>12</b> in order to execute other periodic or asynchronous processes.</p>
<p id="p-0561" num="0910">The pre-run-time scheduling subsystem <b>10</b> consists of one or more processors <b>14</b> that are used to perform pre-run-time scheduling. The pre-run-time scheduling subsystem scheduler (not shown) acquires information about the periodic processes such as constraints, release time, deadline, offset, precedence, and exclusion relations. The scheduler then uses this information to determine whether each asynchronous process should be converted into a new periodic process or not. After converting any suitable subset of asynchronous processes into new periodic processes but before run-time of the processes, the pre-run-time scheduler constructs a pre-run-time schedule for all the periodic processes which satisfies all the constraints and relations defined on the periodic processes. The scheduler then makes this schedule available to the run-time scheduling subsystem <b>11</b>.</p>
<p id="p-0562" num="0911">The run-time scheduling subsystem <b>11</b> consists of one or more processors <b>15</b> that are used to perform run-time scheduling of the periodic and asynchronous processes. The run-time scheduling subsystem <b>11</b> uses the information <b>16</b> provided by the pre-run-time scheduler and stored in memory, to schedule the processes for execution on processor(s) <b>15</b>. The processors <b>13</b><i>a</i>-<b>13</b><i>m </i>in the controlled system <b>12</b> on which the periodic or asynchronous processes are executed may share memory and other resources. Consequently, it is important to enforce exclusion relations on the execution of the processes to prevent more than one process from accessing a shared memory resource at the same time. The pre-run time scheduling subsystem <b>10</b> and the run-time scheduling subsystem <b>11</b> work together to control the execution of all the processes in the controlled system <b>12</b>. These two subsystems <b>10</b> and <b>11</b> guarantee that all the processes in the controlled system <b>12</b> are completed before their respective deadlines and that all the constraints and relations among the processes are satisfied.</p>
<p id="p-0563" num="0912">While <figref idref="DRAWINGS">FIG. 24A</figref> shows the run-time scheduling subsystems <b>11</b> as being within the controlled system <b>12</b>, this is not necessary for the proper working of the invention. The run-time scheduling subsystem <b>11</b> can be separate from the controlled system <b>12</b>.</p>
<p id="p-0564" num="0913">Some applications of the present invention can be in aircraft flight control, plant process control, traffic control, communication systems, multimedia, signal control of the internet, electronic commerce, electronic buses, computer operation, etc.</p>
<p id="p-0565" num="0914">A person understanding the above-described invention may now conceive of alternative designs, using the principles described herein. All such designs which fall within the scope of the claims appended hereto are considered to be part of the present invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08627319-20140107-M00001.NB">
<img id="EMI-M00001" he="10.92mm" wi="76.20mm" file="US08627319-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08627319-20140107-M00002.NB">
<img id="EMI-M00002" he="15.49mm" wi="76.20mm" file="US08627319-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08627319-20140107-M00003.NB">
<img id="EMI-M00003" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US08627319-20140107-M00004.NB">
<img id="EMI-M00004" he="14.48mm" wi="76.20mm" file="US08627319-20140107-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US08627319-20140107-M00005.NB">
<img id="EMI-M00005" he="14.48mm" wi="76.20mm" file="US08627319-20140107-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00006" nb-file="US08627319-20140107-M00006.NB">
<img id="EMI-M00006" he="10.92mm" wi="76.20mm" file="US08627319-20140107-M00006.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00007" nb-file="US08627319-20140107-M00007.NB">
<img id="EMI-M00007" he="10.92mm" wi="76.20mm" file="US08627319-20140107-M00007.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00008" nb-file="US08627319-20140107-M00008.NB">
<img id="EMI-M00008" he="9.91mm" wi="76.20mm" file="US08627319-20140107-M00008.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00009" nb-file="US08627319-20140107-M00009.NB">
<img id="EMI-M00009" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00009.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00010" nb-file="US08627319-20140107-M00010.NB">
<img id="EMI-M00010" he="43.43mm" wi="76.20mm" file="US08627319-20140107-M00010.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00011" nb-file="US08627319-20140107-M00011.NB">
<img id="EMI-M00011" he="35.31mm" wi="76.20mm" file="US08627319-20140107-M00011.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00012 MATH-US-00012-2" nb-file="US08627319-20140107-M00012.NB">
<img id="EMI-M00012" he="50.80mm" wi="76.20mm" file="US08627319-20140107-M00012.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00013 MATH-US-00013-2" nb-file="US08627319-20140107-M00013.NB">
<img id="EMI-M00013" he="46.57mm" wi="76.20mm" file="US08627319-20140107-M00013.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00014" nb-file="US08627319-20140107-M00014.NB">
<img id="EMI-M00014" he="33.19mm" wi="76.20mm" file="US08627319-20140107-M00014.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00015" nb-file="US08627319-20140107-M00015.NB">
<img id="EMI-M00015" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00015.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00016" nb-file="US08627319-20140107-M00016.NB">
<img id="EMI-M00016" he="22.27mm" wi="76.20mm" file="US08627319-20140107-M00016.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00017" nb-file="US08627319-20140107-M00017.NB">
<img id="EMI-M00017" he="22.94mm" wi="76.20mm" file="US08627319-20140107-M00017.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00018" nb-file="US08627319-20140107-M00018.NB">
<img id="EMI-M00018" he="10.92mm" wi="76.20mm" file="US08627319-20140107-M00018.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00019" nb-file="US08627319-20140107-M00019.NB">
<img id="EMI-M00019" he="9.91mm" wi="76.20mm" file="US08627319-20140107-M00019.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00020" nb-file="US08627319-20140107-M00020.NB">
<img id="EMI-M00020" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00020.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00021" nb-file="US08627319-20140107-M00021.NB">
<img id="EMI-M00021" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00021.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00022" nb-file="US08627319-20140107-M00022.NB">
<img id="EMI-M00022" he="8.13mm" wi="76.20mm" file="US08627319-20140107-M00022.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>I claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of using a computer processor to schedule on one or more processors, executions of a plurality of periodic processes, comprising:
<claim-text>(A)</claim-text>
<claim-text>automatically adjusting lengths of periods of the periodic processes, by setting the length of each adjusted period to be equal to the length of the largest member of an ordered set that is no larger than an original period of the periodic process, the members of said ordered set being all possible products of n powers wherein the base of each of the n powers is a distinct prime number and the exponent of each of the n powers is less than or equal to an exponent upper bound value, to form adjusted periods,</claim-text>
<claim-text>fine tuning said exponent upper bound values, by changing each said exponent upper bound value to different values, producing different combinations of said exponent upper bound values, to select one appropriate combination of exponent upper bound values,
<claim-text>whereby said one appropriate combination of exponent upper bound values will produce adjusted period lengths such that the difference between the original period length and the adjusted period length is bounded by a percentage of the original period length, so that the processor utilization level resulting from said difference between the original period length and the adjusted period length, satisfies the processor utilization level required by the application and the least common multiple of the adjusted period lengths of all the periodic processes is bounded by a product of n particular powers such that the base of each of the n particular powers is one of the distinct prime numbers and the exponent of each of the n particular powers is equal to the exponent upper bound that is associated with said one of the distinct prime numbers in said one appropriate combination of exponent upper bound values, so that the least common multiple of the adjusted period lengths is reduced compared with the least common multiple of the original period lengths of all the periodic processes to reduce the schedule length and the number of instances of new processes and reduce storage requirements and system overhead,</claim-text>
</claim-text>
<claim-text>(B)</claim-text>
<claim-text>automatically generating a pre-run-time schedule comprising mapping from a set of periodic process executions to a sequence of time slots on one or more processor time axes, each of the time slots having a beginning time and an end time, reserving each one of the time slots within one of the adjusted periods for execution of one of the periodic processes, the positions of the end time and the beginning time of each of the time slots being such that execution of the periodic processes,
<claim-text>including satisfaction of predetermined constraints comprising
<claim-text>(1) worst-case computation times,</claim-text>
<claim-text>(2) period,</claim-text>
<claim-text>(3) deadline,</claim-text>
<claim-text>(4) precedence relations wherein each precedence relation being defined between a selected pair of processes comprising a first process and a second process, both said first process and said second process being periodic processes, said first process precedes said second process, execution of said second process only allowed to start after said first process has completed its execution,</claim-text>
<claim-text>(5) exclusion relations wherein each exclusion relation being defined between a selected pair of processes comprising a first process and a second process, said first process being either a periodic process or an asynchronous process, said first process excludes said second process, no execution of said second process being allowed to occur between the time that said first process starts its execution and the time that said first process completes its computation,</claim-text>
</claim-text>
</claim-text>
<claim-text>can be completed between the beginning time and end time of respective time slots,</claim-text>
<claim-text>(C)</claim-text>
<claim-text>during run-time using the information in the pre-run-time schedule, including the positions of the beginning time and end time of the time slots of the periodic processes, to schedule the process executions such that said predetermined constraints will be satisfied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method of using a computer processor to schedule on one or more processors, executions of a plurality of periodic processes, comprising:
<claim-text>(A)</claim-text>
<claim-text>automatically adjusting lengths of periods of a predetermined set of periodic processes, comprising generating a sorted list of reference periods, said sorted list of reference periods being an ordered set of all possible products of n powers wherein the base of each of the n powers is a distinct prime number and the exponent of each of the n powers is less than or equal to an exponent upper bound value, setting the length of each adjusted period to the length of the largest reference period that is no larger than an original period of the periodic process, to form adjusted periods,</claim-text>
<claim-text>fine tuning said exponent upper bound values, by changing each said exponent upper bound value to different values, producing different combinations of said exponent upper bound values, to select one appropriate combination of exponent upper bound values,
<claim-text>whereby said one appropriate combination of exponent upper bound values will produce adjusted period lengths such that the difference between the original period length and the adjusted period length is bounded by a percentage of the original period length, so that the processor utilization level resulting from said difference between the original period length and the adjusted period length, satisfies the processor utilization level required by the application and the least common multiple of the adjusted period lengths of all the periodic processes is bounded by a product of n particular powers such that the base of each of the n particular powers is one of the distinct prime numbers and the exponent of each of the n particular powers is equal to the exponent upper bound that is associated with said one of the distinct prime numbers in said one appropriate combination of exponent upper bound values, so that the least common multiple of the adjusted period lengths is reduced compared with the least common multiple of the original period lengths of all the periodic processes to reduce the schedule length and the number of instances of new processes and reduce storage requirements and system overhead,</claim-text>
</claim-text>
<claim-text>(B)</claim-text>
<claim-text>automatically generating a pre-run-time schedule comprising mapping from a set of periodic process executions to a sequence of time slots on one or more processor time axes, each of the time slots having a beginning time and an end time, reserving each one of the time slots within one of the adjusted periods for execution of one of the periodic processes, the positions of the end time and the beginning time of each of the time slots being such that execution of the periodic processes,
<claim-text>including satisfaction of predetermined constraints comprising
<claim-text>(1) worst-case computation times,</claim-text>
<claim-text>(2) period,</claim-text>
<claim-text>(3) deadline,</claim-text>
<claim-text>(4) precedence relations wherein each precedence relation being defined between a selected pair of processes comprising a first process and a second process, both said first process and said second process being periodic processes, said first process precedes said second process, execution of said second process only allowed to start after said first process has completed its execution,</claim-text>
<claim-text>(5) exclusion relations wherein each exclusion relation being defined between a selected pair of processes comprising a first process and a second process, said first process being either a periodic process or an asynchronous process, said first process excludes said second process, no execution of said second process being allowed to occur between the time that said first process starts its execution and the time that said first process completes its computation,</claim-text>
</claim-text>
</claim-text>
<claim-text>can be completed between the beginning time and end time of respective time slots,</claim-text>
<claim-text>(C)</claim-text>
<claim-text>during run-time using the information in the pre-run-time schedule, including the positions of the beginning time and end time of the time slots of the periodic processes, to schedule the process executions such that said predetermined constraints will be satisfied.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
