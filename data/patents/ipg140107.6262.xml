<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627407-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627407</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12147642</doc-number>
<date>20080627</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>970</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726  2</main-classification>
<further-classification>726  5</further-classification>
<further-classification>726 28</further-classification>
<further-classification>709229</further-classification>
</classification-national>
<invention-title id="d2e53">Systems and methods for preventing unauthorized modification of network resources</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7197646</doc-number>
<kind>B2</kind>
<name>Fritz et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713182</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7512978</doc-number>
<kind>B1</kind>
<name>Screen et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7603706</doc-number>
<kind>B2</kind>
<name>Donnelly et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7725395</doc-number>
<kind>B2</kind>
<name>Rui et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 50</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7770209</doc-number>
<kind>B2</kind>
<name>Billingsley et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7827265</doc-number>
<kind>B2</kind>
<name>Cheever et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7841940</doc-number>
<kind>B2</kind>
<name>Bronstein</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>463 29</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>8495727</doc-number>
<kind>B2</kind>
<name>Ramanathan et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 14</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2006/0253579</doc-number>
<kind>A1</kind>
<name>Dixon et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709225</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2006/0287963</doc-number>
<kind>A1</kind>
<name>Steeves et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 64</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2007/0143624</doc-number>
<kind>A1</kind>
<name>Steeves</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713182</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2007/0165821</doc-number>
<kind>A1</kind>
<name>Altberg et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37921002</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0250920</doc-number>
<kind>A1</kind>
<name>Lindsay</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2008/0089499</doc-number>
<kind>A1</kind>
<name>Hahn et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3791142</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0127302</doc-number>
<kind>A1</kind>
<name>Qvarfordt et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2008/0133676</doc-number>
<kind>A1</kind>
<name>Choisser et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2008/0134323</doc-number>
<kind>A1</kind>
<name>Pinkas et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 21</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2008/0184346</doc-number>
<kind>A1</kind>
<name>Pinkas et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2008/0314968</doc-number>
<kind>A1</kind>
<name>Maher</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>235375</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2009/0083826</doc-number>
<kind>A1</kind>
<name>Baribault</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>&#x201c;CAPTCHA: Telling Humans and Computers Apart Automatically&#x201d; Published Jun. 21, 2007 as verified by the Internet Archive (3 pages) http://replay.waybackmachine.org/20070621111739/http://www.captcha.net/.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Wikipedia article for &#x201c;CAPTCHA&#x201d; as published on Sep. 16, 2006. (4 pages) http://en.wikipedia.org/w/index.php?title=CAPTCHA&#x26;oldid=76044483.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Luis von Ahn et al. &#x201c;CAPTCHA: Using Hard AI Problems for Security&#x201d; Proceedings of Eurocrypt 2003: Advances in Cryptology [LNCS 2656] (pp. 294-311) http://www.cs.cmu.edu/&#x2dc;biglou/captcha<sub>&#x2014;</sub>crypt.pdf.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>&#x201c;Implementing client side CAPTCHA&#x201d; Published Mar. 7, 2008 (1 page) http://djenya.com/2008/03/07/implementing-client-side-captcha.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>&#x201c;Key Terms: cyber threats and meanings&#x201d; Article dated Jan. 18, 2006 as verified by the Internet Archive (5 pages) http://web.archive.org/web/20060118130747/http://www.lavasoft.de/trackware<sub>&#x2014;</sub>info/terms/.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>&#x201c;Spyware, viruses, &#x26; security forum: Drive-by installer?&#x201d; Various forum posts at cnet.com dated Mar. 31, 2004 (11 pages) http://forums.cnet.com/7723-6132<sub>&#x2014;</sub>102-17884/drive-by-installer/.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>&#x201c;Thomas Brunt's Outfront since 1998: Client side form validation (Jcap)&#x201d;. Forum thread from Jul. 9, 2007-Jul. 12, 2007 (2 pages) http://www.frontpagewebmaster.com/m-369180/tm.htm#369360.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>11</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>726  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  5</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726 28</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709229</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Satish</last-name>
<first-name>Sourabh</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Doshi</last-name>
<first-name>Nishant</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Satish</last-name>
<first-name>Sourabh</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Doshi</last-name>
<first-name>Nishant</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>ALG Intellectual Property, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Symantec Corporation</orgname>
<role>02</role>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Schwartz</last-name>
<first-name>Darren B</first-name>
<department>2435</department>
</primary-examiner>
<assistant-examiner>
<last-name>Gyorfi</last-name>
<first-name>Thomas</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer-implemented method for preventing modification of network resources in the absence of a user's consent is disclosed. The method may comprise: 1) identifying an attempt to modify a network resource, 2) administering a human-verification test, and 3) determining, based on the outcome of the human-verification test, whether to prevent modification of the network resource. In addition, a computer-implemented method for preventing unauthorized communication with network resources may comprise: 1) identifying a communication attempt between a network resource and an untrusted resource, 2) determining whether communication between the network resource and the untrusted resource is authorized, and 3) determining, based on whether communication between the network resource and the untrusted resource is authorized, whether to allow communication between the network resource and the untrusted resource. Corresponding systems and computer-readable media are also disclosed.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="158.67mm" wi="204.81mm" file="US08627407-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="208.70mm" wi="190.25mm" file="US08627407-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="243.08mm" wi="159.17mm" file="US08627407-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="235.12mm" wi="171.70mm" file="US08627407-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="205.74mm" wi="165.78mm" orientation="landscape" file="US08627407-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="251.63mm" wi="187.28mm" orientation="landscape" file="US08627407-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="252.31mm" wi="172.04mm" file="US08627407-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="232.83mm" wi="165.10mm" orientation="landscape" file="US08627407-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="208.70mm" wi="192.19mm" orientation="landscape" file="US08627407-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Malicious programmers are constantly attempting to exploit computing systems by creating malicious software programs (malware) such as viruses, worms, and Trojan horses. In some situations, malicious programmers may attempt to compromise a user's local area network (LAN) router by creating a malicious script embedded in a webpage visited by the user that causes the user's computing device to alter or modify one or more settings of the user's router.</p>
<p id="p-0003" num="0002">For example, a malicious programmer may gain access to a user's LAN router by embedding a script within a webpage visited by the user that causes the user's computing device to: 1) connect to the user's router (a fairly straightforward approach given the finite number of IP addresses commonly allotted to LAN routers), and then 2) attempt to gain administrative access to the router. Because consumer-grade routers often work with their default settings, consumers commonly fail to change the default administrative passwords on such routers. Even when altered, malicious scripts may quickly guess administrative passwords using dictionary attacks since most consumer-grade routers do not introduce timing penalties for incorrect login attempts.</p>
<p id="p-0004" num="0003">Once administrative access is granted, the malicious script may alter or modify many, if not all, of the router's settings. For example, the malicious script may specify a DNS server under the control of a malicious programmer in place of a legitimate DNS server, such as a server suggested by an upstream node (such as an Internet Service Provider). In this example, all subsequent domain-name resolutions will be controlled through the malicious server. Such an attack, sometimes referred to as &#x201c;drive-by pharming,&#x201d; is oftentimes difficult to detect because it occurs outside the home or small office and outside of the Internet.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">As will be described in greater detail below, the instant disclosure generally relates to system and methods for preventing unauthorized modification of network resources, such as local network devices and services. In one example, a security component stored on a user's computing device may prevent the computing device from modifying a local network resource (such as a router) without the user's consent. In an additional embodiment, a security agent stored on a network resource may prevent the network resource from communicating with unauthorized devices and services.</p>
<p id="p-0006" num="0005">For example, a method for preventing modification of local network resources in the absence of a user's consent may comprise: 1) identifying an attempt to modify a network resource (such as an attempt by the user's computer), 2) administering a human-verification test to verify that a human is attempting to modify the network resource, and then 3) determining, based on the outcome of the human-verification test, whether to prevent modification of the network resource.</p>
<p id="p-0007" num="0006">In one example, the system may identify an attempt to modify a network resource by: 1) detecting or identifying content received from a network resource (by, for example, detecting or identifying content received from an intranet zone or an intranet IP address) and then 2) determining whether the content received from the network is a form or otherwise facilitates user input.</p>
<p id="p-0008" num="0007">In one example, the human-verification test (which may, as detailed below, represent a CAPTCHA or any other Turing test) may be administered by embedding the human-verification test within a web browser of the user's computing device. If an incorrect response to the human-verification test is provided (or if no response is provided), then the system may prevent the computing device from transmitting data to the network resource. Alternatively, the system may allow the computing device to transmit data to the network resource if a correct response to the human-verification test is provided.</p>
<p id="p-0009" num="0008">As detailed above, the systems and methods described herein may also utilize an on-host security agent stored on a network resource for preventing unauthorized communication with the network resource. For example, a method for preventing unauthorized communication with network resources may comprise: 1) identifying a communication attempt between a network resource and an untrusted resource (i.e., identifying an attempt by the untrusted resource to transmit data to the network resource and/or identifying an attempt by the network resource to transmit data to the untrusted resource), 2) determining whether communication between the network resource and the untrusted resource is authorized, and then 3) determining, based on whether communication between the network resource and the untrusted resource is authorized, whether to allow communication between the network resource and the untrusted resource.</p>
<p id="p-0010" num="0009">If communication between the untrusted resource and the network resource is not authorized, communication may be prevented by: 1) blocking data from the untrusted resource and/or 2) preventing the network resource from transmitting data to the untrusted resource. In one example, communication with a network resource may be limited to trusted operating-system components, trusted applications, authorized ports, and/or authorized protocols. The method may also comprise determining whether one or more settings of a network resource has been changed or modified and then transmitting a notification that identifies the settings change or modification to a user of the network resource.</p>
<p id="p-0011" num="0010">Systems and computer-readable media corresponding to the above-described methods are also disclosed. Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011">The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an exemplary system for preventing unauthorized modification of network resources.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of an exemplary system for preventing unauthorized modification of network resources.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an exemplary computer-implemented method for preventing modification of network resources in the absence of a user's consent.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an exemplary human-verification test embedded within content received from a network resource.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of an exemplary human-verification test.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of an exemplary computer-implemented method for preventing unauthorized communication with network resources.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of an exemplary computing system capable of implementing one or more of the embodiments described and/or illustrated herein.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> is a block diagram of an exemplary network architecture capable of implementing one or more of the exemplary embodiments described and/or illustrated herein.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0021" num="0020">Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims</p>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS</heading>
<p id="p-0022" num="0021">As will be described in greater detail below, the instant disclosure generally relates to systems and methods for preventing unauthorized modification of network resources. In one example, an in-browser security component on a computing device may prevent the computing device from modifying a local network resource (such as a router) without the consent of a user of the computing device. In an additional example, a security agent stored on a network resource may prevent the network resource from communicating with unauthorized devices and services.</p>
<p id="p-0023" num="0022">As used herein, the phrase &#x201c;network resource&#x201d; generally refers to any type or form of networked device or network service. Examples of networked-connected devices include, without limitation, computing devices (such as routers, gateways, and servers), telecommunication devices (such as VOIP phones), consumer electronic devices, appliances, or any other network-connected device. Similarly, examples of network services include, without limitation, authentication services, directory services, DNS services, e-mail hosting services, web-hosting services, or any other network service.</p>
<p id="p-0024" num="0023">The following will provide, with reference to <figref idref="DRAWINGS">FIGS. 1-2</figref>, detailed descriptions of exemplary systems for preventing unauthorized modification of network resources. A description of corresponding exemplary computer-implemented methods will also be provided in connection with <figref idref="DRAWINGS">FIGS. 3 and 6</figref>. In addition, a description of an exemplary human-verification test for verifying that a human is operating a computing device will be provided in connection with <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an exemplary system <b>100</b> for preventing unauthorized modification of network resources. As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, exemplary system <b>100</b> may comprise one or more modules <b>102</b> for performing one or more tasks. For example, exemplary system <b>100</b> may comprise a modification-identification module <b>104</b> for identifying attempts to communicate with or modify a network resource.</p>
<p id="p-0026" num="0025">Exemplary system <b>100</b> may also comprise a human-verification module <b>106</b> for administering a human-verification test designed to verify that a human is operating a computing device. In addition, exemplary system <b>100</b> may comprise a communication-management module <b>108</b> for managing communication with network resources. Exemplary system <b>100</b> may also comprise a modification-notification module <b>110</b> for creating and transmitting notifications that identify a change or modification to a network resource.</p>
<p id="p-0027" num="0026">As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, exemplary system <b>100</b> may also comprise one or more databases <b>120</b>. For example, exemplary system <b>100</b> may comprise an authentication-information database <b>122</b> for storing authentication information used to access network resources. Although illustrated as a single device, database <b>120</b> in <figref idref="DRAWINGS">FIG. 1</figref> may represent portions of a plurality of databases or computing devices.</p>
<p id="p-0028" num="0027">In certain embodiments, one or more of modules <b>102</b> may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks required to prevent unauthorized modification of network resources. For example, as will be described in greater detail below, one or more of modules <b>102</b> may represent software modules configured to run on one or more computing devices, such as the computing devices illustrated in <figref idref="DRAWINGS">FIG. 2</figref> (e.g., network resource <b>202</b>, computing device <b>206</b>, and trusted third-party resource <b>208</b>), <figref idref="DRAWINGS">FIG. 7</figref> (e.g., computing system <b>710</b>), and <figref idref="DRAWINGS">FIG. 8</figref> (e.g., network architecture <b>800</b>). One or more of modules <b>102</b> may also represent all or a portion of one or more special-purpose computers configured to perform one or more tasked required to prevent unauthorized modification of network resources.</p>
<p id="p-0029" num="0028">In addition, database <b>120</b> in <figref idref="DRAWINGS">FIG. 1</figref> may represent a portion of one or more computing devices. For example, database <b>120</b> may represent a portion of the exemplary computing systems illustrated in <figref idref="DRAWINGS">FIGS. 2</figref>, <b>7</b>, and <b>8</b>. Alternatively, database <b>120</b> may represent one or more physically separate devices capable of being accessed by a computing device, such as the exemplary computing devices illustrated in <figref idref="DRAWINGS">FIGS. 2</figref>, <b>7</b>, and <b>8</b>.</p>
<p id="p-0030" num="0029">Exemplary system <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref> may be deployed in a variety of ways. For example, all or a portion of exemplary system <b>100</b> may represent portions of a network-based system. <figref idref="DRAWINGS">FIG. 2</figref> is an illustration of an exemplary network-based system <b>200</b> for preventing unauthorized modification of network resources. As illustrated in this figure, exemplary system <b>200</b> may comprise a network resource <b>202</b> in communication with a computing device <b>206</b> and a trusted third-party resource <b>208</b> via a network <b>204</b>.</p>
<p id="p-0031" num="0030">Network resource <b>202</b> generally represents any type or form of networked device or network service. As detailed above, examples of network resource <b>202</b> include, without limitation, networked devices (such as routers, gateways, servers, and VOIP phones) and network services (such as directory services, DNS services, and website hosting services).</p>
<p id="p-0032" num="0031">As illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, exemplary system <b>200</b> may also comprise a computing device <b>206</b>. Computing device <b>206</b> generally represents any type or form of client-side computing device, such as a user's computing device, capable of executing computer-readable instructions. Exemplary system <b>200</b> may also comprise a trusted third-party resource <b>208</b>. In one example, trusted third-party resource <b>208</b> may represent a server. As will be described in greater detail below, in certain embodiments network resource <b>202</b> may verify authentication information received from computing device <b>206</b> by communicating with trusted third-party resource <b>208</b>.</p>
<p id="p-0033" num="0032">In at least one embodiment, network resource <b>202</b> may communicate with computing device <b>206</b> and trusted third-party resource <b>208</b> via network <b>204</b>. Network <b>204</b> generally represents any type or form of communication or computing network; including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet.</p>
<p id="p-0034" num="0033">In certain embodiments, one or more of the elements of exemplary system <b>200</b> may comprise one or more portions of exemplary system <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref>. For example, one or more of modules <b>102</b> in <figref idref="DRAWINGS">FIG. 1</figref> may be stored and configured to run on network resource <b>202</b>, computing device <b>206</b>, and/or trusted third-party resource <b>208</b>. For example, in one embodiment, network resource <b>202</b> may comprise a security agent <b>203</b> for preventing unauthorized communication with network resource <b>202</b>. In this example, security agent <b>203</b> may comprise all or portions of modification-identification module <b>104</b>, communication-management module <b>108</b>, and/or modification-notification module <b>110</b> from <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0035" num="0034">Similarly, computing device <b>206</b> may comprise a security component <b>207</b> for preventing modification of network resource <b>202</b> in the absence of a user's consent. In this example, security component <b>207</b> may comprise all or portions of modification-identification module <b>104</b>, human-verification module <b>106</b>, communication-management module <b>108</b>, and/or modification-notification module <b>110</b> from <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an exemplary computer-implemented method <b>300</b> for preventing a user's computing device from modifying a local network resource (such as a router) without the user's consent. As illustrated in this figure, at step <b>302</b> a system (such as exemplary system <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref>) may identify an attempt to modify a network resource. For example, security component <b>207</b> in <figref idref="DRAWINGS">FIG. 2</figref> (which may, as detailed above, represent one or more of modules <b>102</b> in <figref idref="DRAWINGS">FIG. 1</figref>) may identify an attempt by computing device <b>206</b> to modify network resource <b>202</b>.</p>
<p id="p-0037" num="0036">Step <b>302</b> may be performed in a variety of ways. In one embodiment, step <b>302</b> may comprise: 1) identifying content received from a local network device and then 2) determining whether the content received from the network resource may facilitate modification of the network resource. Content received from a local network resource may be detected or identified in a variety of ways. For example, security component <b>207</b> on computing device <b>206</b> in <figref idref="DRAWINGS">FIG. 2</figref> may detect or identify content received from an intranet zone or an intranet IP address, which may indicate that the content originated from a local network resource (such as a local router). Security component <b>207</b> may then determine whether the content received from the local network resource may facilitate modification of the network resource. For example, security component <b>207</b> may determine whether the content received from the network resource facilitates user input via a website or web-based form, such as exemplary webpage <b>400</b> illustrated in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0038" num="0037">At step <b>304</b>, the system may administer a human-verification test. For example, security component <b>207</b> on computing device <b>206</b> in <figref idref="DRAWINGS">FIG. 2</figref> may administer a human-verification test to verify that a user is operating computing device <b>206</b>. As used herein, the phrase &#x201c;human-verification test&#x201d; generally refers to any type or form of test that may be used to verify that a human is operating a computing device. Examples of human-verification tests include, without limitation, Turing tests (such as CAPTCHA tests) or any other suitable human-verification test.</p>
<p id="p-0039" num="0038">Step <b>304</b> may be performed in a variety of ways. In one embodiment, security component <b>207</b> may embed a human-verification test within the content received from network resource <b>202</b>. <figref idref="DRAWINGS">FIG. 4</figref> is an illustration of an exemplary human-verification test <b>402</b> embedded within a webpage <b>400</b> received from network resource <b>202</b> in <figref idref="DRAWINGS">FIG. 2</figref>. In this example, webpage <b>400</b> may represent a form for allowing a user to modify one or more settings of network resource <b>202</b>, which, in this example, may represent a router. As illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, webpage <b>400</b> may comprise a first display area <b>404</b> for displaying one or more settings categories and a second display area <b>406</b> for receiving user input for modifying network resource <b>202</b>. In this example, security component <b>207</b> may embed human-verification test <b>402</b> within webpage <b>400</b>.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5</figref> is an illustration of an exemplary human-verification test <b>502</b>. As illustrated in this figure, human-verification test <b>502</b> may comprise an explanatory text box <b>510</b> for prompting a user to identify a human-readable image <b>514</b> from within non-computer-readable information <b>512</b> and enter the same within a user-input box <b>518</b>. The phrase &#x201c;non-computer-readable information,&#x201d; as used herein, generally refers to information that may not be comprehended or processed by a computing device or software application. In certain examples, non-computer-readable information <b>512</b> may contain images or questions that may not be processed or comprehended by a computer. For example, as illustrated in <figref idref="DRAWINGS">FIG. 5</figref>, non-computer-readable information <b>512</b> may contain a human-readable image <b>514</b> (&#x201c;Wa1m&#x201d;) that is in a format that prevents a computing device or a software application from extracting useful information. Alternatively, non-computer-readable information <b>512</b> may contain a relatively simple question that may be easily answered by a human, such as &#x201c;What color is the sky?&#x201d; or &#x201c;What is 3 times 2?&#x201d;</p>
<p id="p-0041" num="0040">Human-readable image <b>514</b> in <figref idref="DRAWINGS">FIG. 5</figref> generally represents any type or form of image that may be read or comprehended by a human. Examples of human-readable image <b>514</b> include, without limitation, bitmaps, jpegs, tiffs, or any other image format. In certain embodiments, human-readable image <b>514</b> may display information in a human-readable format that is unreadable by a computing device or software application.</p>
<p id="p-0042" num="0041">In certain embodiments, non-computer-readable information <b>512</b> may comprise visual noise <b>516</b>. As used herein, the phrase &#x201c;visual noise&#x201d; generally refers to information added to non-computer-readable information <b>512</b> in order to prevent a computing device or software program from extracting useful information. Examples of visual noise include, without limitation, various shapes and objects (such as lines, dashes, dots, or the like), background colors or patterns, or any other type of visual information that may be used to prevent a computing device or software program from extracting useful information from non-computer-readable information <b>512</b>.</p>
<p id="p-0043" num="0042">In at least one embodiment, human-readable image <b>514</b> may be created by transforming at least a portion of computer-readable text (such as the text &#x201c;Wa1m&#x201d;). Human-readable images may be transformed in a variety of ways. For example, in certain embodiments transforming at least a portion of a human-readable image may comprise rotating at least a portion of the human-readable image, stretching at least a portion of the human-readable image, and/or tilting at least a portion of the human-readable image.</p>
<p id="p-0044" num="0043">In the example illustrated in <figref idref="DRAWINGS">FIG. 5</figref>, a user may complete human-verification test <b>502</b> by identifying human-readable image <b>514</b> from within non-computer-readable information <b>512</b>, entering the same as text within user-input box <b>518</b>, and then selecting user-selectable object <b>520</b>. Security component <b>207</b> may then determine whether the answer supplied is correct.</p>
<p id="p-0045" num="0044">Returning to <figref idref="DRAWINGS">FIG. 3</figref>, at step <b>306</b> the system may determine, based on the outcome of the human-verification test administered in step <b>304</b>, whether to prevent modification of the network resource. For example, security component <b>207</b> on computing device <b>206</b> in <figref idref="DRAWINGS">FIG. 2</figref> may prevent modification of network resource <b>202</b> if a response is not provided to the human-verification test administered in step <b>304</b> or if the response provided is incorrect. Alternatively, security component <b>207</b> may allow modification of network resource <b>202</b> if a correct answer to the human-verification test administered in step <b>304</b> is provided. Upon completion of step <b>306</b>, exemplary method <b>300</b> in <figref idref="DRAWINGS">FIG. 3</figref> may terminate.</p>
<p id="p-0046" num="0045">Security component <b>207</b> on computing device <b>206</b> in <figref idref="DRAWINGS">FIG. 2</figref> may prevent modification of network resource <b>202</b> in a variety of ways. In one example, security component <b>207</b> may prevent modification of network resource <b>202</b> by preventing computing device <b>206</b> from submitting data to or otherwise communicating with network resource <b>202</b>.</p>
<p id="p-0047" num="0046">As detailed above, exemplary method <b>300</b> in <figref idref="DRAWINGS">FIG. 3</figref> may prevent unauthorized modification of a network resource in the absence of a user's consent. For example, security component <b>207</b> may prevent malicious code from causing computing device <b>206</b> to modify network resource <b>202</b> in <figref idref="DRAWINGS">FIG. 2</figref> without the consent of a user of computing device <b>206</b>.</p>
<p id="p-0048" num="0047">As detailed above, the instant disclosure also relates to a security agent stored on a network resource for preventing the network resource from communicating with unauthorized devices and services. <figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of an exemplary method <b>600</b> for preventing a network resource from communicating with unauthorized devices and services. As illustrated in this figure, at step <b>602</b> a system (such as exemplary system <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref>) may identify a communication attempt between a network resource and an untrusted resource. For example, security agent <b>203</b> stored on network resource <b>202</b> in <figref idref="DRAWINGS">FIG. 2</figref> may identify: 1) an attempt by network resource <b>202</b> to transmit data to an untrusted resource (such as computing device <b>206</b>) and/or 2) an attempt by an untrusted resource (such as computing device <b>206</b>) to transmit data to network resource <b>202</b>.</p>
<p id="p-0049" num="0048">The phrase &#x201c;untrusted resource,&#x201d; as used herein, generally refers to an unknown device or service. In certain examples, such an untrusted resource may contain code that may be harmful to a network resource or a user of the network resource. For example, computing device <b>206</b> in <figref idref="DRAWINGS">FIG. 2</figref> may represent an untrusted device that may contain malicious code, such as malware, designed to modify one or more settings of network resource <b>202</b>.</p>
<p id="p-0050" num="0049">Returning to <figref idref="DRAWINGS">FIG. 6</figref>, at step <b>604</b> the system may determine whether communication between the network resource and the untrusted resource is authorized. For example, security agent <b>203</b> stored on network resource <b>202</b> in <figref idref="DRAWINGS">FIG. 2</figref> may determine whether communication between network resource <b>202</b> and computing device <b>206</b> is authorized.</p>
<p id="p-0051" num="0050">Step <b>604</b> may be performed in a variety of ways. For example, security agent <b>203</b> may determine whether the untrusted resource identified in step <b>602</b> represents a trusted operating-system component, a trusted application, an authorized port, an authorized protocol, or the like. In certain embodiments, security agent <b>203</b> may make this determination using remote-discovery techniques. For example, security agent <b>203</b> may communicate with a trusted third-party source, such as trusted third-party resource <b>208</b> in <figref idref="DRAWINGS">FIG. 2</figref>, in order to verify that computing device <b>206</b> represents an authorized device. In an additional embodiment, security agent <b>203</b> may determine whether communication between network resource <b>202</b> and computing device <b>206</b> is authorized by: 1) receiving authentication information from computing device <b>206</b> and then 2) verifying this authentication information by comparing the same with locally stored information or with information stored on trusted third-party resource <b>208</b>.</p>
<p id="p-0052" num="0051">At step <b>606</b>, the system may determine whether to allow communication between the network resource and the untrusted resource. If communication between the network resource and the untrusted resource is not authorized, then the system may prevent communication between the untrusted resource and the network resource. However, if communication between the untrusted resource and the network resource is authorized, then the system may allow communication between the untrusted resource and the network resource.</p>
<p id="p-0053" num="0052">In one example, security agent <b>203</b> may prevent communication between network resource <b>202</b> and computing device <b>206</b> by blocking data from computing device <b>206</b> and/or by preventing network resource <b>202</b> from transmitting data to computing device <b>206</b>. Similarly, security agent <b>203</b> may allow communication between network resource <b>202</b> and computing device <b>206</b> by allowing receipt of data from computing device <b>206</b> and/or allowing network resource <b>202</b> to transmit data to computing device <b>206</b>. Upon completion of step <b>606</b> in <figref idref="DRAWINGS">FIG. 6</figref>, exemplary method <b>600</b> may terminate.</p>
<p id="p-0054" num="0053">Although not illustrated in <figref idref="DRAWINGS">FIG. 6</figref>, in certain embodiments, exemplary method <b>600</b> may also comprise: 1) determining whether the network resource has been modified and then 2) transmitting a notification to a user that indicates that the network resource has been changed or modified. For example, security agent <b>203</b> in <figref idref="DRAWINGS">FIG. 2</figref> may identify a settings change or modification to network resource <b>202</b>. Security agent <b>203</b> may then cause network resource <b>202</b> to transmit a notification to a user of network resource <b>202</b> that identifies the settings change or modification to network resource <b>202</b>. If the change or modification was unauthorized, the user may revert the settings of network resource <b>202</b> to their default by communicating with security agent <b>203</b>.</p>
<p id="p-0055" num="0054">As detailed above, exemplary system <b>600</b> in <figref idref="DRAWINGS">FIG. 6</figref> may prevent an untrusted resource from communicating with a network resource. For example, security agent <b>203</b> in <figref idref="DRAWINGS">FIG. 2</figref> may prevent computing device <b>206</b> from making one or more unauthorized settings changes or modifications to network resource <b>202</b>.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of an exemplary computing system <b>710</b> capable of implementing one or more of the embodiments described and/or illustrated herein. Computing system <b>710</b> broadly represents any single or multi-processor computing device or system capable of executing computer-readable instructions. Examples of computing system <b>710</b> include, without limitation, workstations, laptops, client-side terminals, servers, distributed computing systems, handheld devices, or any other computing system or device. In its most basic configuration, computing system <b>710</b> may comprise at least one processor <b>714</b> and system memory <b>716</b>.</p>
<p id="p-0057" num="0056">Processor <b>714</b> generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor <b>714</b> may receive instructions from a software application or module. These instructions may cause processor <b>714</b> to perform the functions of one or more of the exemplary embodiments described and/or illustrated herein. For example, processor <b>714</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more of the identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps described herein. Processor <b>714</b> may also perform and/or be a means for performing any other steps, methods, or processes described and/or illustrated herein.</p>
<p id="p-0058" num="0057">System memory <b>716</b> generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and/or other computer-readable instructions. Examples of system memory <b>716</b> include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system <b>710</b> may comprise both a volatile memory unit (such as, for example, system memory <b>716</b>) and a non-volatile storage device (such as, for example, primary storage device <b>732</b>, as described in detail below).</p>
<p id="p-0059" num="0058">In certain embodiments, exemplary computing system <b>710</b> may also comprise one or more components or elements in addition to processor <b>714</b> and system memory <b>716</b>. For example, as illustrated in <figref idref="DRAWINGS">FIG. 7</figref>, computing system <b>710</b> may comprise a memory controller <b>718</b>, an Input/Output (I/O) controller <b>720</b>, and a communication interface <b>722</b>, each of which may be interconnected via a communication infrastructure <b>712</b>. Communication infrastructure <b>712</b> generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure <b>712</b> include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.</p>
<p id="p-0060" num="0059">Memory controller <b>718</b> generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system <b>710</b>. For example, in certain embodiments memory controller <b>718</b> may control communication between processor <b>714</b>, system memory <b>716</b>, and I/O controller <b>720</b> via communication infrastructure <b>712</b>. In certain embodiments, memory controller <b>718</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more of the steps or features described and/or illustrated herein, such as identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking.</p>
<p id="p-0061" num="0060">I/O controller <b>720</b> generally represents any type or form of module capable of coordinating and/or controlling the input and output functions of a computing device. For example, in certain embodiments I/O controller <b>720</b> may control or facilitate transfer of data between one or more elements of computing system <b>710</b>, such as processor <b>714</b>, system memory <b>716</b>, communication interface <b>722</b>, display adapter <b>726</b>, input interface <b>730</b>, and storage interface <b>734</b>. I/O controller <b>720</b> may be used, for example, to perform and/or be a means for identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps described herein. I/O controller <b>720</b> may also be used to perform and/or be a means for performing other steps and features set forth in the instant disclosure.</p>
<p id="p-0062" num="0061">Communication interface <b>722</b> broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system <b>710</b> and one or more additional devices. For example, in certain embodiments communication interface <b>722</b> may facilitate communication between computing system <b>710</b> and a private or public network comprising additional computing systems. Examples of communication interface <b>722</b> include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface <b>722</b> may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface <b>722</b> may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network or a wireless IEEE 802.11 network), a personal area network (such as a BLUETOOTH or IEEE Standard 802.15.1-2002 network), a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.</p>
<p id="p-0063" num="0062">In certain embodiments, communication interface <b>722</b> may also represent a host adapter configured to facilitate communication between computing system <b>710</b> and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface <b>722</b> may also allow computing system <b>710</b> to engage in distributed or remote computing. For example, communication interface <b>722</b> may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments, communication interface <b>722</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more of the identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps disclosed herein. Communication interface <b>722</b> may also be used to perform and/or be a means for performing other steps and features set forth in the instant disclosure.</p>
<p id="p-0064" num="0063">As illustrated in <figref idref="DRAWINGS">FIG. 7</figref>, computing system <b>710</b> may also comprise at least one display device <b>724</b> coupled to communication infrastructure <b>712</b> via a display adapter <b>726</b>. Display device <b>724</b> generally represents any type or form of device capable of visually displaying information forwarded by display adapter <b>726</b>. Similarly, display adapter <b>726</b> generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure <b>712</b> (or from a frame buffer, as known in the art) for display on display device <b>724</b>.</p>
<p id="p-0065" num="0064">As illustrated in <figref idref="DRAWINGS">FIG. 7</figref>, exemplary computing system <b>710</b> may also comprise at least one input device <b>728</b> coupled to communication infrastructure <b>712</b> via an input interface <b>730</b>. Input device <b>728</b> generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system <b>710</b>. Examples of input device <b>728</b> include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device. In at least one embodiment, input device <b>728</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more of the identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps disclosed herein. Input device <b>728</b> may also be used to perform and/or be a means for performing other steps and features set forth in the instant disclosure.</p>
<p id="p-0066" num="0065">As illustrated in <figref idref="DRAWINGS">FIG. 7</figref>, exemplary computing system <b>710</b> may also comprise a primary storage device <b>732</b> and a backup storage device <b>733</b> coupled to communication infrastructure <b>712</b> via a storage interface <b>734</b>. Storage devices <b>732</b> and <b>733</b> generally represent any type or form of storage device or medium capable of storing data and/or other computer-readable instructions. For example, storage devices <b>732</b> and <b>733</b> may be a magnetic disk drive (e.g., a so-called hard drive), a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface <b>734</b> generally represents any type or form of interface or device for transferring data between storage devices <b>732</b> and <b>733</b> and other components of computing system <b>710</b>.</p>
<p id="p-0067" num="0066">In certain embodiments, storage devices <b>732</b> and <b>733</b> may be configured to read from and/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory, device, or the like. Storage devices <b>732</b> and <b>733</b> may also comprise other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system <b>710</b>. For example, storage devices <b>732</b> and <b>733</b> may be configured to read and write software, data, or other computer-readable information. Storage devices <b>732</b> and <b>733</b> may also be a part of computing system <b>710</b> or may be a separate device accessed through other interface systems.</p>
<p id="p-0068" num="0067">Storage devices <b>732</b> and <b>733</b> may also be used, for example, to perform and/or be a means for performing, either alone or in combination with other elements, one or more of the identifying, identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps disclosed herein. Storage devices <b>732</b> and <b>733</b> may also be used to perform and/or be a means for performing other steps and features set forth in the instant disclosure.</p>
<p id="p-0069" num="0068">Many other devices or subsystems may be connected to computing system <b>710</b>. Conversely, all of the components and devices illustrated in <figref idref="DRAWINGS">FIG. 7</figref> need not be present to practice the embodiments described and/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in <figref idref="DRAWINGS">FIG. 7</figref>. Computing system <b>710</b> may also employ any number of software, firmware, and/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable medium. The phrase &#x201c;computer-readable medium&#x201d; generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.</p>
<p id="p-0070" num="0069">The computer-readable medium containing the computer program may be loaded into computing system <b>710</b>. All or a portion of the computer program stored on the computer-readable medium may then be stored in system memory <b>716</b> and/or various portions of storage devices <b>732</b> and <b>733</b>. When executed by processor <b>714</b>, a computer program loaded into computing system <b>710</b> may cause processor <b>714</b> to perform and/or be a means for performing the functions of one or more of the exemplary embodiments described and/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and/or illustrated herein may be implemented in firmware and/or hardware. For example, computing system <b>710</b> may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 8</figref> is a block diagram of an exemplary network architecture <b>800</b> in which client systems <b>810</b>, <b>820</b>, and <b>830</b> and servers <b>840</b> and <b>845</b> may be coupled to a network <b>850</b>. Client systems <b>810</b>, <b>820</b>, and <b>830</b> generally represent any type or form of computing device or system, such as exemplary computing system <b>710</b> in <figref idref="DRAWINGS">FIG. 7</figref>. Similarly, servers <b>840</b> and <b>845</b> generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and/or to run certain software applications. Network <b>850</b> generally represents any telecommunication or computer network; including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet.</p>
<p id="p-0072" num="0071">As illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, one or more storage devices <b>860</b>(<b>1</b>)-(N) may be directly attached to server <b>840</b>. Similarly, one or more storage devices <b>870</b>(<b>1</b>)-(N) may be directly attached to server <b>845</b>. Storage devices <b>860</b>(<b>1</b>)-(N) and storage devices <b>870</b>(<b>1</b>)-(N) generally represent any type or form of storage device or medium capable of storing data and/or other computer-readable instructions. In certain embodiments, storage devices <b>860</b>(<b>1</b>)-(N) and storage devices <b>870</b>(<b>1</b>)-(N) may represent network-attached storage (NAS) devices configured to communicate with servers <b>840</b> and <b>845</b> using various protocols, such as NFS, SMB, or CIFS.</p>
<p id="p-0073" num="0072">Servers <b>840</b> and <b>845</b> may also be connected to a storage area network (SAN) fabric <b>880</b>. SAN fabric <b>880</b> generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric <b>880</b> may facilitate communication between servers <b>840</b> and <b>845</b> and a plurality of storage devices <b>890</b>(<b>1</b>)-(N) and/or an intelligent storage array <b>895</b>. SAN fabric <b>880</b> may also facilitate, via network <b>850</b> and servers <b>840</b> and <b>845</b>, communication between client systems <b>810</b>, <b>820</b>, and <b>830</b> and storage devices <b>890</b>(<b>1</b>)-(N) and/or intelligent storage array <b>895</b> in such a manner that devices <b>890</b>(<b>1</b>)-(N) and array <b>895</b> appear as locally attached devices to client systems <b>810</b>, <b>820</b>, and <b>830</b>. As with storage devices <b>860</b>(<b>1</b>)-(N) and storage devices <b>870</b>(<b>1</b>)-(N), storage devices <b>890</b>(<b>1</b>)-(N) and intelligent storage array <b>895</b> generally represent any type or form of storage device or medium capable of storing data and/or other computer-readable instructions.</p>
<p id="p-0074" num="0073">In certain embodiments, and with reference to exemplary computing system <b>710</b> of <figref idref="DRAWINGS">FIG. 7</figref>, a communication interface, such as communication interface <b>722</b> in <figref idref="DRAWINGS">FIG. 7</figref>, may be used to provide connectivity between each client system <b>810</b>, <b>820</b>, and <b>830</b> and network <b>850</b>. Client systems <b>810</b>, <b>820</b>, and <b>830</b> may be able to access information on server <b>840</b> or <b>845</b> using, for example, a web browser or other client software. Such software may allow client systems <b>810</b>, <b>820</b>, and <b>830</b> to access data hosted by server <b>840</b>, server <b>845</b>, storage devices <b>860</b>(<b>1</b>)-(N), storage devices <b>870</b>(<b>1</b>)-(N), storage devices <b>890</b>(<b>1</b>)-(N), or intelligent storage array <b>895</b>. Although <figref idref="DRAWINGS">FIG. 8</figref> depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and/or illustrated herein are not limited to the Internet or any particular network-based environment.</p>
<p id="p-0075" num="0074">In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server <b>840</b>, server <b>845</b>, storage devices <b>860</b>(<b>1</b>)-(N), storage devices <b>870</b>(<b>1</b>)-(N), storage devices <b>890</b>(<b>1</b>)-(N), intelligent storage array <b>895</b>, or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server <b>840</b>, run by server <b>845</b>, and distributed to client systems <b>810</b>, <b>820</b>, and <b>830</b> over network <b>850</b>. Accordingly, network architecture <b>800</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more of the identifying, administering, determining, embedding, preventing, allowing, transmitting, communicating, receiving, verifying, and blocking steps disclosed herein. Network architecture <b>800</b> may also be used to perform and/or be a means for performing other steps and features set forth in the instant disclosure.</p>
<p id="p-0076" num="0075">As detailed above, computing system <b>710</b> and/or one or more of the components of network architecture <b>800</b> may perform and/or be a means for performing, either alone or in combination with other elements, one or more steps of the exemplary methods described and/or illustrated herein. For example, computing system <b>710</b> and/or one or more of the components of network architecture <b>800</b> may perform and/or be a means for performing a computer-implemented method for preventing modification of network resources in the absence of a user's consent that may comprise: 1) identifying an attempt to modify a network resource, 2) administering a human-verification test, and then 3) determining, based on the outcome of the human-verification test, whether to prevent modification of the network resource. The network resource may represent a networked device or a network service.</p>
<p id="p-0077" num="0076">In one example, identifying an attempt to modify a network resource may comprise: 1) identifying content received from a network resource and then 2) determining whether the content received from the network may facilitate modification of the network resource. Content received from a network resource may be detected or identified by identifying content received from an intranet zone and/or an intranet IP address.</p>
<p id="p-0078" num="0077">In one example, the human-verification test may represent a CAPTCHA or other Turing test. This human-verification test may be administered by embedding the same within a web browser of a computing device that is in communication with the network resource. If an incorrect response to the human-verification test is provided, or if no response is provided, then modification of the network resource may be prevented. Alternatively, modification of the network resource may be allowed if a correct response to the human-verification test is provided. In one embodiment, modification of the network resource may be prevented by preventing the submission of data to the network resource. In certain situations, a notification that indicates the outcome of the human-verification test may be transmitted to a user of the network resource.</p>
<p id="p-0079" num="0078">Computing system <b>710</b> and/or one or more of the components of network architecture <b>800</b> may also perform and/or be a means for preventing unauthorized communication with a network resource by: 1) identifying a communication attempt between a network resource and an untrusted resource, 2) determining whether communication between a network resource and the untrusted resource is authorized, and then 3) determining, based on whether communication between the network resource and the untrusted resource is authorized, whether to allow communication between the network resource and the untrusted resource.</p>
<p id="p-0080" num="0079">The communication attempt between the network resource and the untrusted resource may be identified by identifying an attempt by the untrusted resource to transmit data to the network resource or identifying an attempt by the network resource to transmit data to the untrusted resource. In addition, determining whether communication between the network resource and the untrusted resource is authorized may comprise determining whether the untrusted resource represents a trusted operating-system component, a trusted application, an authorized port, and/or an authorized protocol.</p>
<p id="p-0081" num="0080">In one example, the method may further comprise communicating with a trusted third-party resource. Determining whether communication between the network resource and the untrusted resource is authorized may comprise receiving authentication information from the untrusted resource and verifying the authentication information. The method may also comprise preventing communication between the untrusted resource and the network resource if communication between the network resource and the untrusted resource is not authorized or allowing communication between the untrusted resource and the network resource if communication between the network resource and the untrusted resource is authorized.</p>
<p id="p-0082" num="0081">Communication between the untrusted resource and the network resource may be prevented by: 1) blocking data from the untrusted resource and/or 2) preventing the network resource from transmitting data to the untrusted resource. Similarly, allowing communication between the untrusted resource and the network resource may comprise allowing receipt of data from the untrusted resource and/or allowing the network resource to transmit data to the untrusted resource. The method may also comprise determining whether the network resource has been modified and then transmitting a notification that indicates modification of the network resource.</p>
<p id="p-0083" num="0082">While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and/or component described and/or illustrated herein may be implemented, individually and/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.</p>
<p id="p-0084" num="0083">The process parameters and sequence of steps described and/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.</p>
<p id="p-0085" num="0084">Furthermore, while various embodiments have been described and/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.</p>
<p id="p-0086" num="0085">The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.</p>
<p id="p-0087" num="0086">Unless otherwise noted, the terms &#x201c;a&#x201d; or &#x201c;an,&#x201d; as used in the specification and claims, are to be construed as meaning &#x201c;at least one of.&#x201d; In addition, for ease of use, the words &#x201c;including&#x201d; and &#x201c;having,&#x201d; as used in the specification and claims, are interchangeable with and have the same meaning as the word &#x201c;comprising.&#x201d;</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method for preventing modification of network resources in the absence of a user's consent, at least a portion of the method being performed by a client device comprising at least one processor, the method comprising:
<claim-text>identifying an attempt by the client device to modify a local network resource at least in part by:
<claim-text>detecting content received from an intranet indicating that the content originated from the local network resource;</claim-text>
<claim-text>determining, at the client device, that the content received from the local network resource may facilitate modification of at least one setting of the network resource by determining that the content received from the local network resource facilitates user input via a web-based form;</claim-text>
</claim-text>
<claim-text>in response to the determination that the content received from the local network resource may facilitate modification of at least one setting of the local network resource, determining, at the client device, whether the attempt by the client device to modify the local network resource represents an unauthorized attempt to modify the local network resource without the consent of a user of the client device at least in part by:
<claim-text>embedding, at the client device, a human-verification test within the content received from the local network resource;</claim-text>
<claim-text>administering the human-verification test at the client device;</claim-text>
</claim-text>
<claim-text>determining, at the client device based on the outcome of the human-verification test, whether to prevent modification of the local network resource.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the content received from the local network resource comprises at least one of:
<claim-text>identifying content received from an intranet zone;</claim-text>
<claim-text>identifying content received from an intranet IP address.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the local network resource comprises at least one of:
<claim-text>a networked device within a local area network of the client device;</claim-text>
<claim-text>a network service within a local area network of the client device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the networked device comprises a router within a local area network of the client device.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein administering the human-verification test comprises:
<claim-text>administering a Turing test;</claim-text>
<claim-text>administering a CAPTCHA.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein administering the human-verification test at the client device comprises embedding the human-verification test within a web browser of the client device.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining whether to prevent modification of the local network resource comprises:
<claim-text>preventing modification of the local network resource if a response to the human-verification test is not provided;</claim-text>
<claim-text>preventing modification of the local network resource if an incorrect response to the human-verification test is provided;</claim-text>
<claim-text>allowing modification of the local network resource if a correct response to the human-verification test is provided.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein preventing modification of the local network resource comprises preventing submission of data to the local network resource.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising transmitting a notification that indicates the outcome of the human-verification test.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system for preventing unauthorized modification of network resources, the system comprising:
<claim-text>a client device, the client device comprising at least one processor configured to execute at least one module programmed to:</claim-text>
<claim-text>identify an attempt by the client device to modify a local network resource at least in part by:
<claim-text>detecting content received from an intranet indicating that the content originated from the local network resource;</claim-text>
<claim-text>determining, at the client device, that the content received from the local network resource may facilitate modification of at least one setting of the network resource by determining that the content received from the local resource facilitates user input via a web-based form;</claim-text>
</claim-text>
<claim-text>in response to the determination that the content received from the local network resource may facilitate modification of at least one setting of the local network resource, determining, at the client device, whether the attempt by the client device to modify the local network resource represents an unauthorized attempt to modify the local network resource without the consent of a user of the client device at least in part by:
<claim-text>embedding, at the client device, a human-verification test within the content received from the local network resource;</claim-text>
<claim-text>administering the human-verification test at the client device;</claim-text>
</claim-text>
<claim-text>determine, at the client device based on the outcome of the human-verification test, whether to prevent the client device from modifying the local network resource.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the local network resource comprises at least one module programmed to:
<claim-text>identify a communication attempt between the client device and the local network resource;</claim-text>
<claim-text>determine whether communication between the client device and the local network resource is authorized;</claim-text>
<claim-text>determine, based on whether communication between the client device and the local network resource is authorized, whether to allow communication between the client device and the local network resource. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
