<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627076-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627076</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13250008</doc-number>
<date>20110930</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>161</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713168</main-classification>
<further-classification>726  5</further-classification>
</classification-national>
<invention-title id="d2e53">System and method for facilitating communications based on trusted relationships</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6968050</doc-number>
<kind>B1</kind>
<name>Pershan et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7591013</doc-number>
<kind>B2</kind>
<name>Bhargava et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 14</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8156536</doc-number>
<kind>B2</kind>
<name>Polk</name>
<date>20120400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2008/0301788</doc-number>
<kind>A1</kind>
<name>Yoakum</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0077616</doc-number>
<kind>A1</kind>
<name>Lindholm et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0293099</doc-number>
<kind>A1</kind>
<name>Yoakum</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2010/0082977</doc-number>
<kind>A1</kind>
<name>Boyle et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713158</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2011/0235631</doc-number>
<kind>A1</kind>
<name>Krishnaswamy et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Tschofenig et al., &#x201c;Using SAML to Protect the Session Initiation Protocol (SIP)&#x201d;, 2006, IEEE Network, pp. 14-17.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Saint-Andre, Peter, &#x201c;XEP-0154: User Profile&#x201d;, XMPP, Version 0.6, Apr. 18, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Theo et al., &#x201c;XEP-0006: Profiles&#x201d; XMPP, Version 1.1, May 8, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Hollenbeck, S., &#x201c;Number Mapping for the Extensible Provisioning Protocol&#x201d;, Network Working Group, VeriSign, Inc., Dec. 1, 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Rosenberg et al., &#x201c;The Public Switched Telephone Network (PSTN) Validation Protocol (PVP)&#x201d;, dispatch, Cisco, Nov. 9, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Rosenberg et al., &#x201c;Verification Involving PSTN Reachability: Requirements and Architecture Overview&#x201d;, dispatch, Cisco, Nov. 9, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713168</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  5</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130086380</doc-number>
<kind>A1</kind>
<date>20130404</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Krishnaswamy</last-name>
<first-name>Venkatesh</first-name>
<address>
<city>Holmdel</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shim</last-name>
<first-name>Eunsoo</first-name>
<address>
<city>Princeton Junction</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yoakum</last-name>
<first-name>John H.</first-name>
<address>
<city>Cary</city>
<state>NC</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Krishnaswamy</last-name>
<first-name>Venkatesh</first-name>
<address>
<city>Holmdel</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Shim</last-name>
<first-name>Eunsoo</first-name>
<address>
<city>Princeton Junction</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Yoakum</last-name>
<first-name>John H.</first-name>
<address>
<city>Cary</city>
<state>NC</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Avaya Inc.</orgname>
<role>02</role>
<address>
<city>Basking Ridge</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Smithers</last-name>
<first-name>Matthew</first-name>
<department>2437</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Disclosed herein are systems, methods, and non-transitory computer-readable storage media for facilitating communications based on a trusted relationships. A system configured to practice the method first receives a communication request from a second communication device for a specific resource, wherein the communication request is based, at least in part, on trust information generated by a previously established trusted relationship. The system confirms, via an access to a trust database and using the trust information, (1) an identity of a sender of the communication request and (2) access permissions for a requested resource. Then, if the identity and the access permissions are confirmed, the system establishes communications between the first communications device and the second communications device in response to the communication request according to the specific resource. The trust information can include a trust user ID and a trust key.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="152.48mm" wi="140.04mm" file="US08627076-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="196.34mm" wi="153.84mm" orientation="landscape" file="US08627076-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="161.46mm" wi="155.53mm" file="US08627076-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="228.35mm" wi="170.01mm" orientation="landscape" file="US08627076-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="143.00mm" wi="164.42mm" file="US08627076-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="182.20mm" wi="156.21mm" file="US08627076-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="181.19mm" wi="156.46mm" file="US08627076-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Technical Field</p>
<p id="p-0003" num="0002">The present disclosure relates to communication and more specifically to facilitating communications based on trust information generated based on a previously established trusted relationship.</p>
<p id="p-0004" num="0003">2. Introduction</p>
<p id="p-0005" num="0004">Traditionally, the public switched telephone network (PSTN) was utilized for inter-organization communication in the form of two-way calling or conference calling with more than one participant. However, evolving technology such as Voice over IP (VoIP) allows users to communicate over the Internet using a richer feature set than the features provided by the traditional PSTN. A VoIP system enables voice communication over an IP-based network, such as the Internet, and includes advanced features such as video over IP, telephony presence, and multi-modal communications. These advanced features can be used internally in each organization, but due to organization security restrictions they are not generally available for inter-organization communications across organizational boundaries. Telephone numbers are universal and can be used on voice over IP (VoIP) systems as well as on traditional telephony systems. Telephone numbers are distributed as the address of VoIP devices that are interconnected to the public switched telephone network (PSTN).</p>
<p id="p-0006" num="0005">One key technical problem to realize large-scale inter-organization is providing trusted and secure communications without falling prey to malicious or unwanted communications. If an attacker provides a false SIP address, the calls to the phone number are sent to the false SIP address, exposing the call to the attacker for eavesdropping or hijacking. It is critical to ensure the provided SIP address is correct for the target phone number. The infrastructure for collaboration between organizations should prevent attackers from acquiring the SIP addresses and making unrestricted VoIP calls to the SIP addresses. Another concern is the security of communications. Existing communication security solutions are cumbersome and/or rely on some kind of third-party verification service.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">Additional features and advantages of the disclosure will be set forth in the description which follows, and in part will be obvious from the description, or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims, or can be learned by the practice of the principles set forth herein.</p>
<p id="p-0008" num="0007">Disclosed are systems, methods, and non-transitory computer-readable storage media for facilitating communications based on trust information. The trust information can be generated using any of a number of steps, including but not limited to a challenge/response interaction. The trust information can include, for each user in the trust relationship, a trust user ID and a trust key. In one example, output of the trust relationship establishment between Alice at A.com and Bob at B.com can include, a trust user ID for Bob, a trust key for Bob, a different trust user ID for Alice, and a trust key for Alice.</p>
<p id="p-0009" num="0008">In a simple illustrative example, Alice and Bob, who are in different domains (such as companies, schools, or other organizations), first establish a trust relationship. As part of the trust relationship, Alice and Bob establish trust information stored somewhere within their respective domains, such as on a handset, a desktop computer, server, or SIP proxy machine. The trust information of one user includes a trust user ID and a trust key for the other user. The trust user ID can be a username, SIP address, phone number, or other identifying data. The trust key can be a cryptographic key or other data by which the trusted relationship is confirmed.</p>
<p id="p-0010" num="0009">After the trusted relationship is established, Alice can pick up her phone, for example, and dial Bob's SIP number. Alice's SIP proxy picks up that request, fetches information for that request, and can convert the request to a resource access request to Bob's SIP proxy. The resource access request can include a resource type (such as SIP), and local user (meaning Alice) attributes such as Alice's ID, Alice's phone number, Alice's SIP address, and Alice's SIP proxy address. The resource access request can also include an ID of the remote user being dialed (i.e. Bob). The resource access request can further indicate requested resource features, such as a voice call, a video call, presence information, contact data, a shared file, and so forth.</p>
<p id="p-0011" num="0010">Bob's SIP proxy receives the resource access request, and, based on its local trust database information, generates a resource access reply. The resource access reply can include an approved resource type (such as SIP), and local user (meaning Bob) attributes such as Bob's ID, Bob's phone number, Bob's SIP address, and Bob's SIP proxy address. The resource access reply can also include remote user (meaning Alice) attributes such as Alice's ID and access key, which can include a certificate. Further, the resource access reply indicates allowed resource features. For example, Alice's resource access request may have requested voice and video, but Bob's resource access reply may only permit voice. The permissions and decisions regarding what resource features are permitted can be based on user preferences, available resource features, availability data, relationship preferences, time of day, scheduling data, and so forth. In one example, Bob's SIP proxy server can automatically allow voice, but then prompt Bob regarding additional resource features being requested.</p>
<p id="p-0012" num="0011">Then, both Alice's SIP proxy and Bob's SIP proxy can configure their own respective networks to facilitate communications by allowing Alice's phone call to Bob to go through. For example, the SIP routing table can be modified to include updated origination data, dial pattern data, and next hop data for the call. The origination data in this example would be Alice's phone number; the dial pattern data in this example is Bob's phone number; and the next hop data for this example would be Bob's SIP proxy server's address.</p>
<p id="p-0013" num="0012">When handling resource requests for different types of resources, either side can generate a new key for each resource based on its type. For example, the SIP proxy can generate a new session key for a SIP session, and can generate the certificates required by TLS for a TLS-based session. If the resource request is for secure, encrypted video chat via a service that requires a special token, the SIP proxy can generate and manage that special token automatically. Thus, the system can use the trust user ID and the trust key to establish resource-specific requirements to facilitate the communication. Thus, the trust database can be used as a consistent way to handle resource requests for different resource types using a single set of credentials.</p>
<p id="p-0014" num="0013">In an exemplary system for facilitating communications, the system, which can be a first communications device, identifies a second communication device and trust information, such as a trust user ID and a trust key, associated with the first communication device and the second communication device. The trust information trust information can be generated, for example, from an exchange of a challenge query and a response based on a communication context between a first user and a second user, and each of the first communication device and the second communication device has a copy of at least part of the trust information. The trust information can be generated various other ways that do not involve a challenge query or response, for instance. The exchange can occur as part of a previous separate communication. If the exchange of the challenge query and the response is successful, a trusted relationship between the first user and the second user can be established and the trust information can be generated by one or both user.</p>
<p id="p-0015" num="0014">The system generates a communication request, wherein at least a portion of the communication request is encrypted using the trust information. The communication request can be a session initiation protocol (SIP) request. The headers or other portions of the session initiation protocol request can remain unencrypted and payload of session initiation protocol request can be encrypted. The system transmits the communication request to the second communication device. The system can optionally, upon receiving an acknowledgement of the communication request, establish secure communications between the first communication device and the second communication device based on the trust information. The system can establish the secure communications by encrypting streamed voice communications based on user information such as a phone number, a session initiation protocol address and/or a credential. The second communication device can generate the acknowledgement by looking up, based on an identity associated with the first communication device, the trust information in a database of identities and trust information.</p>
<p id="p-0016" num="0015">In an exemplary system for receiving a request to initiate secure communications, the system receives an encrypted communication request from a first device. The system retrieves from a database storing identities and trust information, based on an identity associated with the first device, trust information associated with the first device. The trust information can be generated from an exchange of a challenge query and a response based on a communication context between a first user associated with the first device and a second user associated with a second device, and wherein each of the first communication device and the second communication device has a copy of the trust information. The database can store trusted relationships between users established by successful exchanges of challenge queries and responses.</p>
<p id="p-0017" num="0016">The system applies a decryption algorithm to the encrypted communication request using the trust information to yield a decrypted communication request and establishes secure communications with the first device via the communications interface based on the decrypted communication request and the trust information. The secure communications can include encrypted streamed voice communications based on user information including at least one of a phone number, a session initiation protocol address and a credential.</p>
<p id="p-0018" num="0017">The approaches set forth herein provide a new way of generating or identifying the trust information based on the trusted relationship, and using the trust information in a SIP invite to make sure that the identity of the other user is authentic and secure the communications at the same time.</p>
<p id="p-0019" num="0018">If one server sends an encrypted message, and the other server can decrypt it, then the identity of one and/or the other is implicitly authenticated. This works so long as the trust information, such as the trust user ID and/or the trust key, is kept secure and is not leaked out or compromised. This approach can operate using unmodified or modified SIP messages. Alternatively, this approach can operate on the server side by altering how SIP messages are processed. SIP payload can be encrypted, while leaving SIP non-payload portions unencrypted.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0020" num="0019">In order to describe the manner in which the above-recited and other advantages and features of the disclosure can be obtained, a more particular description of the principles briefly described above will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. Understanding that these drawings depict only exemplary embodiments of the disclosure and are not therefore to be considered to be limiting of its scope, the principles herein are described and explained with additional specificity and detail through the use of the accompanying drawings in which:</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example system embodiment;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of two devices configured to automatically establish a relationship based on a prior association;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example basic system architecture;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 4</figref> illustrates two sides of an example system for establishing secure communications across an organizational boundary using locally stored mapping tables;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary method embodiment for initiating secure communications; and</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary method embodiment for receiving a request to initiate secure communications.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0027" num="0026">Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed, it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.</p>
<p id="p-0028" num="0027">A system, method and non-transitory computer-readable media are disclosed for facilitating communications based on trusted relationships across domain boundaries. A brief introductory description of a basic general purpose system or computing device in <figref idref="DRAWINGS">FIG. 1</figref> which can be employed to practice the concepts is disclosed herein. The devices and systems set forth herein can be computer servers, desktop computers, routers, telecommunications devices, handsets, set-top boxes, smartphones, tablet computing devices, and/or any other communications device, and can include software and hardware components.</p>
<p id="p-0029" num="0028">The approaches disclosed herein take advantage of organization-specific relationships and/or mapping databases in order to establish secure communications between users in different security domains and/or across organizational or other security boundaries based on a previously established trusted relationship between two users. The trusted relationship can involve users such as any one or more of an individual, a device, a phone number, a SIP URI, a group of individuals, an organization, and so forth. Each organization of a first user can include a local database storing information which can be used in order to establish secure communications with a second user at a second organization. The information in the first organization's database corresponds to information in the second organization's database. These variations shall be discussed herein as the various embodiments are set forth. The disclosure now turns to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0030" num="0029">With reference to <figref idref="DRAWINGS">FIG. 1</figref>, an exemplary system <b>100</b> includes a general-purpose computing device <b>100</b>, including a processing unit (CPU or processor) <b>120</b> and a system bus <b>110</b> that couples various system components including the system memory <b>130</b> such as read only memory (ROM) <b>140</b> and random access memory (RAM) <b>150</b> to the processor <b>120</b>. The system <b>100</b> can include a cache <b>122</b> of high speed memory connected directly with, in close proximity to, or integrated as part of the processor <b>120</b>. The system <b>100</b> copies data from the memory <b>130</b> and/or the storage device <b>160</b> to the cache <b>122</b> for quick access by the processor <b>120</b>. In this way, the cache provides a performance boost that avoids processor <b>120</b> delays while waiting for data. These and other modules can control or be configured to control the processor <b>120</b> to perform various actions. Other system memory <b>130</b> may be available for use as well. The memory <b>130</b> can include multiple different types of memory with different performance characteristics. It can be appreciated that the disclosure may operate on a computing device <b>100</b> with more than one processor <b>120</b> or on a group or cluster of computing devices networked together to provide greater processing capability. The processor <b>120</b> can include any general purpose processor and a hardware module or software module, such as module <b>1</b> <b>162</b>, module <b>2</b> <b>164</b>, and module <b>3</b> <b>166</b> stored in storage device <b>160</b>, configured to control the processor <b>120</b> as well as a special-purpose processor where software instructions are incorporated into the actual processor design. The processor <b>120</b> may essentially be a completely self-contained computing system, containing multiple cores or processors, a bus, memory controller, cache, etc. A multi-core processor may be symmetric or asymmetric.</p>
<p id="p-0031" num="0030">The system bus <b>110</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. A basic input/output (BIOS) stored in ROM <b>140</b> or the like, may provide the basic routine that helps to transfer information between elements within the computing device <b>100</b>, such as during start-up. The computing device <b>100</b> further includes storage devices <b>160</b> such as a hard disk drive, a magnetic disk drive, an optical disk drive, tape drive or the like. The storage device <b>160</b> can include software modules <b>162</b>, <b>164</b>, <b>166</b> for controlling the processor <b>120</b>. Other hardware or software modules are contemplated. The storage device <b>160</b> is connected to the system bus <b>110</b> by a drive interface. The drives and the associated computer readable storage media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computing device <b>100</b>. In one aspect, a hardware module that performs a particular function includes the software component stored in a non-transitory computer-readable medium in connection with the necessary hardware components, such as the processor <b>120</b>, bus <b>110</b>, display <b>170</b>, and so forth, to carry out the function. The basic components are known to those of skill in the art and appropriate variations are contemplated depending on the type of device, such as whether the device <b>100</b> is a small, handheld computing device, a desktop computer, or a computer server.</p>
<p id="p-0032" num="0031">Although the exemplary embodiment described herein employs the hard disk <b>160</b>, it should be appreciated by those skilled in the art that other types of computer readable media which can store data that are accessible by a computer, such as magnetic cassettes, flash memory cards, digital versatile disks, cartridges, random access memories (RAMs) <b>150</b>, read only memory (ROM) <b>140</b>, a cable or wireless signal containing a bit stream and the like, may also be used in the exemplary operating environment. Non-transitory computer-readable storage media expressly exclude media such as energy, carrier signals, electromagnetic waves, and signals per se.</p>
<p id="p-0033" num="0032">To enable user interaction with the computing device <b>100</b>, an input device <b>190</b> represents any number of input mechanisms, such as a microphone for speech, a touch-sensitive screen for gesture or graphical input, keyboard, mouse, motion input, speech and so forth. An output device <b>170</b> can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances, multimodal systems enable a user to provide multiple types of input to communicate with the computing device <b>100</b>. The communications interface <b>180</b> generally governs and manages the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.</p>
<p id="p-0034" num="0033">For clarity of explanation, the illustrative system embodiment is presented as including individual functional blocks including functional blocks labeled as a &#x201c;processor&#x201d; or processor <b>120</b>. The functions these blocks represent may be provided through the use of either shared or dedicated hardware, including, but not limited to, hardware capable of executing software and hardware, such as a processor <b>120</b>, that is purpose-built to operate as an equivalent to software executing on a general purpose processor. For example the functions of one or more processors presented in <figref idref="DRAWINGS">FIG. 1</figref> may be provided by a single shared processor or multiple processors. (Use of the term &#x201c;processor&#x201d; should not be construed to refer exclusively to hardware capable of executing software.) Illustrative embodiments may include microprocessor and/or digital signal processor (DSP) hardware, read-only memory (ROM) <b>140</b> for storing software performing the operations discussed below, and random access memory (RAM) <b>150</b> for storing results. Very large scale integration (VLSI) hardware embodiments, as well as custom VLSI circuitry in combination with a general purpose DSP circuit, may also be provided.</p>
<p id="p-0035" num="0034">The logical operations of the various embodiments are implemented as: (1) a sequence of computer implemented steps, operations, or procedures running on a programmable circuit within a general use computer, (2) a sequence of computer implemented steps, operations, or procedures running on a specific-use programmable circuit; and/or (3) interconnected machine modules or program engines within the programmable circuits. The system <b>100</b> shown in <figref idref="DRAWINGS">FIG. 1</figref> can practice all or part of the recited methods, can be a part of the recited systems, and/or can operate according to instructions in the recited non-transitory computer-readable storage media. Such logical operations can be implemented as modules configured to control the processor <b>120</b> to perform particular functions according to the programming of the module. For example, <figref idref="DRAWINGS">FIG. 1</figref> illustrates three modules Mod<b>1</b> <b>162</b>, Mod<b>2</b> <b>164</b> and Mod<b>3</b> <b>166</b> which are modules configured to control the processor <b>120</b>. These modules may be stored on the storage device <b>160</b> and loaded into RAM <b>150</b> or memory <b>130</b> at runtime or may be stored as would be known in the art in other computer-readable memory locations.</p>
<p id="p-0036" num="0035">Having discussed some exemplary computing device components, the disclosure returns to a discussion of secure communications. <figref idref="DRAWINGS">FIG. 2</figref> illustrates an exemplary architecture for establishing a trusted relationship between two or more users. <figref idref="DRAWINGS">FIG. 2</figref> is provided for illustration of one possible way to establish trusted relationships, and does not limit the disclosure. The end result of a trusted relationship, as represented by a set of trust user IDs and trust keys, can be established in other ways. For example, the trusted relationship can be manually initiated, automatically generated based on previous interactions that were not primarily for trust relationship establishment purposes, etc. The details of <figref idref="DRAWINGS">FIG. 2</figref> will be discussed below. The trusted relationship established as shown in <figref idref="DRAWINGS">FIG. 2</figref> and information which is a result thereof can serve as a trust information for the purposes set forth herein, such as allowing users to identify each other, enabling different forms of communications related encryption, establishing secure voice, video, and/or other streaming communications between two users without relying on a third-party certificate authority or other equivalent third-party actor.</p>
<p id="p-0037" num="0036">When the users establish the relationship, the servers on each side generate a key, token, or other trust information to hand to the other to store along with the relationship. Then, one server can incorporate or otherwise use the key, token, or trust information when sending a SIP invite to the other server to initiate a new session at a later time. For example, the server can include the key, token, or trust information as part of the SIP invite, but that risks exposure and leaking of the trust information to packet sniffing. In another variation, the server can encrypt all or part of the SIP invite using the trust information. In this manner, the trust information is not transmitted through the network, and the receiving server can use its own copy of the trust information or corresponding secret to decrypt the SIP invite. For example, the receiving server can examine a SIP header to determine a source of an incoming request, fetch a trust information from a table that maps addresses or identities to trust information, and decrypt the message using the trust information. If the decrypted data is nonsense, the receiving server can ignore or discard the request, but if the decrypted data matches an expected structure, the receiving server can assume that the identity is correct and that the identity is trusted, and respond to the request accordingly.</p>
<p id="p-0038" num="0037">This approach can guarantee that the person or server sending the SIP invite is authentic and trusted. This allows the server to use a trust information established in the process of building the trust and tables. Thus, then one server sends a SIP or other invite to another server for a shared session, the server sends the trust information, instructions on how to generate the trust information based on the commonly available information, and/or a message encrypted using the all or part of a trust information. The trust information can be part of a symmetric or asymmetric encryption scheme.</p>
<p id="p-0039" num="0038">The servers can then use the trust information not only to authenticate the identity of one another, but can also use the trust information to encrypt signals sent between one another, such as voice and video streams. As a byproduct of the process of establishing the trust, each server stores information on each end, examples of which are set forth in the description of <figref idref="DRAWINGS">FIG. 2</figref>, below. For example, <figref idref="DRAWINGS">FIG. 2</figref> illustrates a question prompting and response interaction to establish a trusted relationship between two individuals or servers. As the entities build the relationship, each stores information that can be used to establish secure connections. This stored information can provide for encrypted or otherwise secure communications without relying on a third-party certificate to vouch for other side's identity. Each side has sufficient stored information to use encrypted signaling and know for sure the identity of the other user without going through the establishing process again.</p>
<p id="p-0040" num="0039">The trust information can be used to encrypt signals, such as video streams, but can alternatively be used to encrypt non-streaming media, such as attachments in an email. Thus, this approach can serve as an alternative to transport layer security (TLS) to encrypting signaling. However, this approach does not rely on a certificate authority, as TLS does. The structure and interactions of <figref idref="DRAWINGS">FIG. 2</figref> are illustrative examples of how to establish the trusted relationship, and other approaches can be substituted.</p>
<p id="p-0041" num="0040">The disclosure turns now to <figref idref="DRAWINGS">FIG. 2</figref>, which illustrates an example of two systems each configured to automatically establish a relationship based on a prior association working together <b>200</b>. Here a first user <b>202</b> wishes to establish a relationship with another user <b>204</b>. This second user <b>204</b>, however, belongs to another organization, and one or more security or privacy restriction limits the amount, type, and availability of information relating to communications across this organizational boundary. The first user <b>202</b> then communicates the desire to form a relationship with a server <b>206</b> which belongs to the first user's organization. The server <b>206</b> then searches through the communication logs <b>210</b> for instances of contact or references to the second user <b>204</b>. If no such communications exist, then the server <b>206</b> can reply to the first user <b>202</b> that such a relationship requires contact, or the server <b>206</b> may initiate such contact. In most instances some communication history common to both users <b>202</b>, <b>204</b> will exist. The first server <b>206</b> then creates a challenge query <b>214</b> and transmits this query to another server <b>208</b> belonging to the other organization of the other user <b>204</b>. The challenge query <b>214</b> can be based on the common communication history, other sources common to both users, and/or information which should be known to the second user <b>204</b>. Examples of other information which should be known to the second user <b>204</b> include the second user's birthday or the name of the second user's boss. The first server <b>206</b> can discover the other server <b>208</b> based on the communication history, by looking the server <b>208</b> up in a directory of organization communication servers, or by any other server discovery approach. This server <b>208</b> receives the query <b>214</b> and formulates an answer to the query based on its own communication logs <b>212</b>. If the answer is not found in the communication logs, the server <b>208</b> can prompt the second user <b>204</b> for an answer to the query <b>214</b>. The server <b>208</b> can prompt the second user <b>204</b> via an on-screen popup, an automated voice interface, text message, and/or other ways of communicating with the second user <b>204</b>. The server <b>208</b> can determine how to contact the second user <b>204</b> based on presence information of the second user <b>204</b> and/or based on a relationship importance level between the first user and the second user.</p>
<p id="p-0042" num="0041">The second server <b>208</b> then transmits the answer as a response <b>216</b> back to the first server <b>206</b>. The response <b>216</b> can include or exclude the query, and can be either unencrypted or encrypted. When the response does not include the query, the response can resemble random information, presenting a difficult challenge to interpret for attackers. If encrypted, the response <b>216</b> can be encrypted using the query or the response as a base, key, or password to unlock the encryption, or can use a key common to both users. The sensitivity of the information being transmitted, as well as the trust levels being granted, are factors for determining if the system <b>100</b> encrypts the response. The first server <b>206</b> receives the response <b>216</b> and determines if the response <b>216</b> is sufficient to establish a trusted relationship. If not, then the process of creating queries <b>214</b> and receiving responses <b>216</b> can continue until the system <b>100</b> has sufficient information to determine if a relationship exists. In some instances, this determination is based on the number of attempts to derive a correct response, whereas in other instances this determination can be based on the proximity of a response to the expected response.</p>
<p id="p-0043" num="0042">Upon receiving a response <b>216</b> meeting expectations, the server <b>206</b> creates a trusted relationship between the first user <b>202</b> and the second user <b>204</b>. Creating a trusted relationship can include recording the relationship in a trusted relationship database <b>220</b> as well as sending confirmation <b>218</b> to the other server <b>208</b> that a trusted relationship has been approved. The confirmation <b>218</b> sent to the other server <b>208</b> can be a secret key or token, granting access to first user's <b>202</b> information, server, or data. The confirmation can be a text or binary based message indicating that establishment of the relationship or the rejection of the request to establish a relationship. The second server <b>208</b>, upon receiving this confirmation <b>218</b>, similarly stores the trusted relationship in a unique trusted relationship database <b>222</b> belonging to the second organization. In the trusted relationship databases <b>220</b>, <b>222</b>, information stored can include the individuals in the trusted relationship, the level of trust and access given to the individuals, as well as the basis for establishing the relationship.</p>
<p id="p-0044" num="0043">The trusted relationship database can be contained wholly within a single organization or can be distributed across two or more organizations. A third-party can store and provide access to the trusted relationship database. In some variations, the database is not embodied as a separate store of data but rather is embodied as a set of rules or configurations governing how communication infrastructure of two organizations are allowed to communicate one with another to facilitate user to user contact. Each organization can utilize a single set of server and storage resources or a distributed set of servers cooperate to perform communication and data storage services necessary for each organization.</p>
<p id="p-0045" num="0044">The trusted relationship established before the encrypted voice communication occurs can be based on a prior association between the users. Servers such as a corporate communications server or a user's personal computer can establish all or part of the trusted relationship. A trusted relationship based on user knowledge provides diverse levels of security depending on user knowledge. For example, an attacker may be able to easily discover or guess a zip code or address, whereas the last four digits of a social security number may be more difficult to extract. User knowledge based on dynamic information can provide stronger security than user knowledge based on static information.</p>
<p id="p-0046" num="0045">The prior association that the trusted relationship is based on between the users in different security domains can be a phone call, electronic message exchange such as instant messaging, SMS or email, an in-person meeting or any other prior association. The system <b>100</b> can require that the prior association meets a specific threshold, such as the number of associations, or duration of time spent with the user, for instance. The trusted relationship can be based on a communication history such as message subject, message times and call times. The system <b>100</b> can establish a trusted relationship based on a challenge-response interchange between the users, such that a first server of the first user poses questions to the second server of the second user, to which the second user provides a response. For example, the first server can pose questions based on a prior event shared by the first and second users, such as attending a meeting or conference call together. The first server can ask questions relating to the meeting such as &#x201c;What time did the meeting we attended together start?&#x201d; or &#x201c;What were the first two topics discussed in the meeting?&#x201d; Similarly, the first server can ask questions related to the nature of the users association such as &#x201c;At which conference did the first user and the second user initially meet?&#x201d; or &#x201c;Through which mutual colleague did the first user and the second user meet?&#x201d; For strong security, the system <b>100</b> does not send the answers to the questions over the wire, but can instead send cryptographic hashes of the answers over the wire. The server posing the questions can compare the received hash of the answer with a stored hash of the correct answer. If the hashes match, the server considers the answer correct. Additionally, servers can store different sets of questions depending on their trust requirements or preferences to ask another server when establishing a trusted relationship.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary system architecture. In this example, domain a.com serves Alice <b>330</b> and domain b.com serves Bob <b>340</b>. Each domain has its own mapping table <b>350</b>, <b>360</b> and proxy server <b>370</b>, <b>380</b>. Each domain can also store a local copy of cryptographic keys or trust information used to establish secure communications. The cryptographic keys can be stored in mapping tables <b>350</b>, <b>360</b> so that the cryptographic keys can be looked up by an associated identity. For example, if a particular secure communication protocol requires a pair of keys to establish a connection, a.com can store one of the pair of keys associated with Alice <b>330</b>, and b.com can store one of the pair of keys associated with Bob <b>340</b>. Then, when Alice <b>330</b> wishes to communicate securely with Bob <b>340</b>, their respective systems can provide the cryptographic keys and/or other credentials necessary to establish the connection, rather than going through some kind of third-party server that stores keys. The pair of &#x201c;keys&#x201d; can be two separately stored components that, when combined, form a single key. Alternatively, the pair of keys can be complementary such that one key can decrypt a communications stream generated using the other key, for example as utilized in public key encryption. The keys can be stored in a central organizational location or can be stored locally on a computing device of the respective user.</p>
<p id="p-0048" num="0047">The domains are connected to each other via the Internet or other communications network. The mapping tables store mapping information for trusted users such as phone number, SIP address, and/or credentials or other information related to secure communications such as a certificate or encryption key. A server can integrate single sign on between domains such that a user signs on once and has access to multiple security domains. For example, Alice wishes to access systems and applications outside of her domain a.com <b>310</b> in Bob's domain b.com <b>320</b>. Alice logs into her computer as usual and navigates to Bob's domain to research widgets at http://widgets.b.com and does not need to enter a password because her credentials are passed to b.com using the servers <b>370</b>, <b>380</b>.</p>
<p id="p-0049" num="0048">Once the system <b>100</b> establishes a trusted relationship, the first user stores a cryptographic key associated with a first user and the second user in a mapping table in the first domain. The cryptographic key corresponds to a second cryptographic key stored in a mapping table in the second security domain associated with the second user. For example, Alice and Bob have established a trusted relationship based on a prior association through email. Both Alice and Bob store corresponding cryptographic keys generated by a server in mapping tables in their own security domains. The cryptographic keys can be the same for use in symmetric key encryption, or complementary for use in asymmetric encryption. A server can generate a cryptographic key valid for a predetermined time period and send the key to another user. Alice stores a cryptographic key for Bob generated by Bob's proxy server <b>380</b> in the mapping table <b>350</b> in her domain a.com and Bob stores a cryptographic key for Alice generated by Alice's proxy server <b>370</b> in the mapping table <b>360</b> in his domain b.com. In addition to the cryptographic keys, the mapping tables can store phone numbers, SIP addresses and any other pertinent information. The cryptographic keys can be generated by an issuing authority and stored locally with the mapping tables in the respective organizations. In another variation, the two servers can negotiate and establish the cryptographic keys without reaching out to a third-party entity. In one aspect, each server does not have access to or knowledge of the other server's key, but bi-directional communications can be established using the keys because each is able to decrypt information, generated with a remote key, from the remote server using the locally available key.</p>
<p id="p-0050" num="0049">The security and available uses of the cryptographic keys can depend on a level of security of the trust establishment procedure. The phone number mapping could be incorrect because of a mistake at the remote domain because the remote domain's administrator did not maintain the information up-to-date. This risk is minimal because the mapping information is used only between two users who trust each other. Trust between the users can be established for a specific lifetime and may be reconfirmed by the user or reestablished automatically before expiration. If the trust between the users is broken for whatever reason, the server can disable the cryptographic key and/or any subset of functionality enabled by the cryptographic key. The users no longer are able to establish a secure communication session without valid cryptographic keys.</p>
<p id="p-0051" num="0050">After the system <b>100</b> identifies a trusted relationship between two users and stores cryptographic keys, SIP addresses and phone numbers in mapping tables in separate domains, the system <b>100</b> receives a request to establish a communication session between the first user and the second user. The system establishes SIP peering via a call agent, such that an incoming communication session is authenticated and authorized. The call agent utilizes the servers in this task. The servers retrieve the SIP addresses and the cryptographic keys from the mapping table, and SIP establishes an encrypted voice communication connection between the users. Alternately, the system <b>100</b> establishes an encrypted multimedia communication connection between the users, allowing the users to communicate using voice, video, text messaging or other formats and transmit such information as presence information.</p>
<p id="p-0052" num="0051">Under this approach, no central server is needed to store mapping information and cryptographic keys for a large number of phone numbers and no centralized authority is needed to authenticate user identities. The user's phone number and SIP address may be retrieved from a corporate directory or similar source and stored in the mapping table. The advantages of the disclosed method make a simpler and scalable system for establishing secure communication sessions between users.</p>
<p id="p-0053" num="0052">In one illustrative example, Alice calls Bob by dialing Bob's phone number without specifying a specific SIP address or even that the dialed number corresponds to a SIP address. Alice's client device generates an original message and sends that message to Alice's SIP proxy (i.e. her local proxy). The message initially contains the destination address according to the format for a normal internal call handled by Alice's SIP proxy. Then a process running on Alice's SIP proxy hijacks or intercepts the request, which identifies that the request is addressed to Bob, a remote user outside of the Alice's SIP proxy's control, and that Bob has a previously established trusted relationship with Alice. Then Alice's SIP proxy identifies Bob and verifies that the call is a Voice over IP (VoIP) call, which the trusted relationship indicates is permitted in this relationship. Then, Alice's SIP proxy translates the invite into an address at Bob's domain, B.com. Alice's SIP proxy selects the appropriate key from the database for Bob. This mapping occurs internally at Alice's SIP proxy. Alice's SIP proxy then follows the resource-specific mechanism for connecting the VoIP connection via SIP. Alice's SIP proxy can handle multiple different types of resource-specific mechanisms for different resource types. In some cases, the resource-specific mechanisms can be influenced by the type and capabilities of equipment on Bob's side.</p>
<p id="p-0054" num="0053">Alice's SIP proxy presents a certificate and exchanges a session key with B's SIP proxy, which were created and previously provided by B's SIP proxy. Then B's SIP proxy verifies the key and, from the key, identifies Alice as the remote user and Bob as the target local user, using a trusted information database. From the key, B's SIP proxy can map the local user, Bob, and remote user, Alice. Then B's SIP proxy can verify a trusted relationship, based on the key, between Bob and Alice. Once the key is confirmed, B's SIP proxy and A's SIP proxy exchange a SIP session key, enabling Alice's SIP proxy to send a SIP invite message (which doesn't contain key, but contains Alice's SIP address and Bob's SIP address). Because this relies on the trust establishment, Alice's SIP proxy and Bob's SIP proxy know that Alice and Bob are the right users, and can verify which resources are requested by the relationship and forward the request to B's client device.</p>
<p id="p-0055" num="0054">This approach enables a per-user trust to be established, which is more fine-grained than a per-domain trust. For example, Bob's SIP proxy could blindly trust all communications from Alice's SIP proxy, but that could enable communications between individuals that were not intended or may not be permitted. This approach provides a way to establish trust on a person-to-person basis while retaining security and privacy. The trust information in the trust database can serve as a certificate on a per user basis.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 4</figref> illustrates two sides of an example architecture <b>400</b> for establishing secure communications across an organizational boundary using locally stored mapping tables for mapping trust information, such as trust user IDs and/or trust keys, to one or more specific trusted relationship. In this scenario, Alice <b>402</b> and Bob <b>404</b> have already established a trusted relationship with each other, optionally spanning at least one organizational boundary <b>406</b>. The trusted relationship is at least partially manifested by entries in one or more local relationship databases <b>412</b>, <b>414</b>. In this example, a communication device <b>408</b> associated with Alice <b>402</b> can connect to a database <b>412</b> local to the first organization that indicates trusted relationships of users within the first organization with users external to the first organization. Similarly, a communication device <b>410</b> associated with Bob <b>404</b> can connect to its respective database <b>414</b> of similar relationships. The devices can connect directly or indirectly to their respective databases, for example through a server. The communication devices can be desktop phones, smartphones, and/or computing devices operating as part of a communications infrastructure for the organization.</p>
<p id="p-0057" num="0056">These databases <b>412</b>, <b>414</b> can include individual entries <b>412</b><i>a</i>, <b>412</b><i>b </i>describing at least some portion of a trusted relationship. The databases <b>412</b>, <b>414</b> can optionally describe the entire trusted relationship. The entries <b>412</b><i>a</i>, <b>412</b><i>b </i>describe at least one user internal to the organization and at least one user external to the organization. The entries can describe multiple users within an organization and their relationship to multiple users in a same external organization, and/or can describe multiple users and their relationship to multiple users in different external organizations. The entries <b>412</b><i>a</i>, <b>412</b><i>b </i>can include a mapping to a specific SIP URI, such as a SIP gateway or a directly accessible client SIP address.</p>
<p id="p-0058" num="0057">The databases <b>412</b>, <b>414</b> can also include a cryptographic key for automatically establishing secure connections with users outside of the organization. For instance, if Alice <b>402</b> wants to communicate with Bob <b>404</b>, communication device <b>408</b> can fetch the cryptographic key stored in database <b>412</b> corresponding to the entry <b>412</b><i>a </i>for Alice to user B. The communication device establishes a connection with the address stored in the database for Bob using the cryptographic key. The system can use the cryptographic key to establish the communication session, encrypt the entire communication session or exchange session cryptographic keys that encrypt the entire communication session and are valid only for the duration of the communication session. The two databases <b>412</b>, <b>414</b> can store identical copies of a same key, cryptographic keys which complement each other, two portions of a single key that are only useful when combined, cryptographic keys which can be used to decrypt information encrypted using the complementary key, and/or different keys that can decrypt information encrypted according to a third, pre-shared encryption key. These and various other encryption schemes can be applied to one or both of the respective local cryptographic keys. The cryptographic keys can be on a per-relationship basis, a per-user basis, and/or a per-organization basis. A trusted relationship can include multiple cryptographic keys for different types of communications, different security situations, different users, and so forth.</p>
<p id="p-0059" num="0058">In one example, communication device <b>408</b> encrypts outgoing communication data with a first cryptographic key associated with the trusted relationship, and decrypts incoming communication data with a second cryptographic key associated with the trusted relationship. The corresponding communication device <b>410</b> on the other side of the organization boundary <b>406</b> performs a similar function.</p>
<p id="p-0060" num="0059">While the examples set forth herein use SIP to illustrate the principles disclosed, other communication protocols and resources can be used. For example, similar approaches can be used for non-SIP-based video conferencing, instant messaging, or other communications. In an instant messaging approach, instant messaging servers could replace or perform similar functions to Alice's SIP proxy and Bob's SIP proxy, allowing instant messaging to bridge domains and potentially even bridge instant messaging platform types.</p>
<p id="p-0061" num="0060">In the requests, the system can provide the destination in clear text and encrypt the remaining information. The recipient's device or recipient's proxy can look up which key to use to decrypt the message based on the origination address. If the decrypted message is garbage or unintelligible, then the recipient's device or the recipient's proxy can ignore the request because it was not sent from an authorized sender. If the decrypted message contains useful and readable information, then the recipient's device or the recipient's proxy can determine implicitly that the sender is the right sender or at least has access to the correct encryption key. Thus, the proxies can transmit Alice's or Bob's IDs in the clear, i.e. plaintext, as long as the user keys are not distributed.</p>
<p id="p-0062" num="0061">Having disclosed some basic system components and concepts, the disclosure now turns to the exemplary method embodiment shown in <figref idref="DRAWINGS">FIGS. 5 and 6</figref>. For the sake of clarity, the methods are discussed in terms of an exemplary system <b>100</b> as shown in <figref idref="DRAWINGS">FIG. 1</figref> configured to practice the respective method. The steps outlined herein are exemplary and can be implemented in any combination thereof, including combinations that exclude, add, or modify certain steps.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary method embodiment for facilitating communications based on trusted relationships. The first communications device receives a communication request from a second communication device for a specific resource, wherein the communication request is based, at least in part, on trust information generated by a previously established trusted relationship (<b>502</b>). The trust information can include, for example, a trust user ID and a trust key. The trust information received in the communication request generally corresponds to local trust information existing at the first communications device. Thus, even though the trust information received from the second communications device may not be exactly the same as the trust information stored on the first communications device, the two separate sets of trust information correspond to each other in that they each allow communications between the two devices. The trust information can be generated according to any trust establishment approach. In one example, the trust information is generated from an exchange of a challenge query and a response based on a communication context between a first user and a second user, and wherein each of the first communication device and the second communication device has a copy of the trust information. The communication request is a session initiation protocol request, and wherein headers of the session initiation protocol request are unencrypted and payload of session initiation protocol request is encrypted.</p>
<p id="p-0064" num="0063">Then the first communications device confirms, via an access to a trust database and using the trust information, (1) an identity of a sender of the communication request and (2) access permissions for a requested resource (<b>504</b>). The first communications device can perform a database look up based on the sender identity to determine whether any access permissions have been approved for that sender and, if so, which access permissions are approved.</p>
<p id="p-0065" num="0064">If the identity and the access permissions are confirmed, the first communications device establishes communications between the first communications device and the second communications device in response to the communication request according to the specific resource (<b>506</b>). At least part of the communications between the first communications device and the second communications device can be encrypted according using the trust information, such as using transport layer security (TLS).</p>
<p id="p-0066" num="0065">In one variation, the system can, upon receiving an acknowledgement of the communication request, establish secure communications between the first communication device and the second communication device based on the trust information. The secure communications can encrypt streamed voice communications based on at least one of a phone number, a session initiation protocol address, and a credential. The acknowledgement can be generated by the second communication device by looking up, based on an identity associated with the first communication device, the trust information in a database of identities and trust information.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a second exemplary method embodiment for facilitating communications. The first communications device receives a communication request from a remote communication device for a specific resource, wherein the communication request is based, at least in part, on credential information generated based on a previously established trusted relationship (<b>602</b>). The specific resource can be a voice call, a video call, user presence information, and/or other requests, such as access to contact information or location data. The credential information can be generated from a trust establishment process, an example of which includes an exchange of a challenge query and a response based on a communication context with the remote communication device, and wherein each of the remote communication device and the memory stores a copy of the credential information. This exchange can occur as part of a previous separate communication.</p>
<p id="p-0068" num="0067">The first communications device retrieves data, from a trust database associated with the previously established trusted relationship, based on the credential information (<b>604</b>). The trust database can store information representing trusted relationships between users established by successful exchanges of challenge queries and responses or other trust establishment techniques. Then, if the data corresponds to expected data for the remote communication device, the first communications device establishes communications with the remote communication device in response to the communication request according to the specific resource (<b>606</b>).</p>
<p id="p-0069" num="0068">The approaches set forth herein provide a new way of generating or identifying trust information based on a previously established trusted relationship, and using trust information in a SIP invite to make sure that the identity of the other user is authentic, secure communications, and/or enable different forms of encrypted communication, information exchange, and so forth. If one communication device sends an encrypted message, and the other communication device can decrypt it, then the identity of one and/or the other is implicitly authenticated. This works so long as the trust information is kept secure, both sides' databases having compatible or corresponding trust information, and that trust information is not compromised.</p>
<p id="p-0070" num="0069">This approach can operate using unmodified or modified SIP messages. Alternatively, this approach can operate on the server side by altering how SIP messages are processed. SIP payload can be encrypted, while leaving SIP non-payload portions unencrypted.</p>
<p id="p-0071" num="0070">Embodiments within the scope of the present disclosure may also include tangible and/or non-transitory computer-readable storage media for carrying or having computer-executable instructions or data structures stored thereon. Such non-transitory computer-readable storage media can be any available media that can be accessed by a general purpose or special purpose computer, including the functional design of any special purpose processor as discussed above. By way of example, and not limitation, such non-transitory computer-readable media can include RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to carry or store desired program code means in the form of computer-executable instructions, data structures, or processor chip design. When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or combination thereof) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such connection is properly termed a computer-readable medium. Combinations of the above should also be included within the scope of the computer-readable media.</p>
<p id="p-0072" num="0071">Computer-executable instructions include, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions. Computer-executable instructions also include program modules that are executed by computers in stand-alone or network environments. Generally, program modules include routines, programs, components, data structures, objects, and the functions inherent in the design of special-purpose processors, etc. that perform particular tasks or implement particular abstract data types. Computer-executable instructions, associated data structures, and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.</p>
<p id="p-0073" num="0072">Those of skill in the art will appreciate that other embodiments of the disclosure may be practiced in network computing environments with many types of computer system configurations, including personal computers, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. Embodiments may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked (either by hardwired links, wireless links, or by a combination thereof) through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.</p>
<p id="p-0074" num="0073">The various embodiments described above are provided by way of illustration only and should not be construed to limit the scope of the disclosure. Those skilled in the art will readily recognize various modifications and changes that may be made to the principles described herein without following the example embodiments and applications illustrated and described herein, and without departing from the spirit and scope of the disclosure.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>receiving, at a first communication device, a request to establish a communication between the first communication device and a second communication device, wherein the request comprises trust information generated based on a previously established trusted relationship, the trust information comprising a respective trust identity and a respective trust key associated with each communication device in the communication;</claim-text>
<claim-text>confirming an identity of a sender of the request and access permissions associated with a feature of the communication by comparing the trust information with stored trust information at a trust database, to yield a confirmation; and</claim-text>
<claim-text>based on the confirmation, establishing the communication between the first communications device and the second communications device in response to the request, wherein the communication is established according to the access permissions associated with the feature of the communication.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the trust information is generated from an exchange of a challenge query and a response based on a communication context between a first user and a second user, and wherein each of the first communication device and the second communication device has a copy of the trust information.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request is a session initiation protocol request, and wherein headers of the session initiation protocol request are unencrypted and a payload of the session initiation protocol request is encrypted.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least part of the communication between the first communications device and the second communications device is encrypted using the trust information.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>upon receiving an acknowledgement of the request, establishing secure communications between the first communication device and the second communication device based on the trust information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the secure communications comprise encrypting streamed voice communications, and wherein the feature comprises at least one of a phone number, a session initiation protocol address, and a credential.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the acknowledgement is generated by the second communication device by looking up, based on an identity associated with the first communication device, the trust information in a database of identities and trust information.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a memory having stored therein instructions which, when executed by the processor, cause the processor to perform operations comprising:</claim-text>
<claim-text>receiving a request from a remote communication device for a specific resource, wherein the request is based, at least in part, on credential information generated based on a previously established trusted relationship, the credential information comprising a respective trust identity and a respective trust key associated with each communication device in a communication associated with the request;</claim-text>
<claim-text>based on the credential information, retrieving data from a trust database, the data being associated with the previously established trusted relationship; and</claim-text>
<claim-text>based on a determination that the data corresponds to corresponding data for the remote communication device, establishing communications with the remote communication device in response to the request, wherein the communications are established according to the specific resource.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the specific comprises at least one of a voice call, a video call, and user presence information.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the credential information is generated from a trust establishment process including an exchange of a challenge query and a response based on a communication context with the remote communication device, and wherein each of the remote communication device and the memory stores a copy of the credential information.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the exchange occurs as part of a previous separate communication.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein establishing communications comprises establishing encrypted communications.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the encrypted communications comprises an encrypted portion representing a session initiation protocol request, and an unencrypted portion representing a header of the session initiation protocol request.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the trust database stores credential information representing relationships between users established by successful exchanges of challenge queries and responses.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the request comprises a resource type, a local user attribute, a remote user attribute, and a requested resource feature.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A non-transitory computer-readable storage medium having stored therein instructions which, when executed by a processor, cause the processor to perform operations comprising:
<claim-text>receiving, at a first communication device, a request to establish a communication between the first communication device and a second communication device, wherein the request comprises trust information generated based on a previously established trusted relationship, the trust information comprising a respective trust identity and a respective trust key associated with each communication device in the communication;</claim-text>
<claim-text>confirming an identity of a sender of the request and access permissions associated with a feature of the communication by comparing the trust information with stored trust information at a trust database, to yield a confirmation; and</claim-text>
<claim-text>based on the confirmation, establishing the communication between the first communications device and the second communications device in response to the request, wherein the communication is established according to the access permissions associated with the feature of the communication.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the request comprises a resource type, a local user attribute, a remote user attribute, and a requested resource feature.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein establishing the communication comprises sending a reply to the request, the reply comprising a resource type, a local user attribute, a remote user attribute, an access key, and permitted resource features.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein establishing the communication further comprises transmitting data to a session initiation protocol proxy server, the data comprising at least one of an originating phone number, a dialed phone number, and a next hop address. </claim-text>
</claim>
</claims>
</us-patent-grant>
