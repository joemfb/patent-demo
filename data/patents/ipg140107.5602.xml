<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626703-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626703</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12971483</doc-number>
<date>20101217</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>293</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707600</main-classification>
</classification-national>
<invention-title id="d2e53">Enterprise resource planning (ERP) system change data capture</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7143099</doc-number>
<kind>B2</kind>
<name>Lecheler-Moore et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0010496</doc-number>
<kind>A1</kind>
<name>Behrendt et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2004/0133551</doc-number>
<kind>A1</kind>
<name>Linstedt</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2005/0154742</doc-number>
<kind>A1</kind>
<name>Roth et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2006/0282350</doc-number>
<kind>A1</kind>
<name>Lind et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 29</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0136352</doc-number>
<kind>A1</kind>
<name>Chape et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707102</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2007/0143301</doc-number>
<kind>A1</kind>
<name>Tran</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2007/0156835</doc-number>
<kind>A1</kind>
<name>Pulkowski et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709207</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2008/0120159</doc-number>
<kind>A1</kind>
<name>Cidela et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  8</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707600</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120158642</doc-number>
<kind>A1</kind>
<date>20120621</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ebrahimi</last-name>
<first-name>Fari</first-name>
<address>
<city>Basking Ridge</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Harihara</last-name>
<first-name>Shankar</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hassan</last-name>
<first-name>Walid</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Walker</last-name>
<first-name>Tereasa</first-name>
<address>
<city>Buena Vista</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ponnambalam</last-name>
<first-name>Thillai</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="006" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sreekanth</last-name>
<first-name>Solleti Prakash</first-name>
<address>
<city>Secunderabad</city>
<country>IN</country>
</address>
</addressbook>
<residence>
<country>IN</country>
</residence>
</us-applicant>
<us-applicant sequence="007" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nori</last-name>
<first-name>Indu Mohan Babu</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Ebrahimi</last-name>
<first-name>Fari</first-name>
<address>
<city>Basking Ridge</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Harihara</last-name>
<first-name>Shankar</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Hassan</last-name>
<first-name>Walid</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Walker</last-name>
<first-name>Tereasa</first-name>
<address>
<city>Buena Vista</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Ponnambalam</last-name>
<first-name>Thillai</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Sreekanth</last-name>
<first-name>Solleti Prakash</first-name>
<address>
<city>Secunderabad</city>
<country>IN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="007" designation="us-only">
<addressbook>
<last-name>Nori</last-name>
<first-name>Indu Mohan Babu</first-name>
<address>
<city>Irving</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Verizon Patent and Licensing Inc.</orgname>
<role>02</role>
<address>
<city>Basking Ridge</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hwa</last-name>
<first-name>Shyue Jiunn</first-name>
<department>2163</department>
</primary-examiner>
<assistant-examiner>
<last-name>Gurmu</last-name>
<first-name>Muluemebet</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A device receives, from a data warehouse, a request for incremental data, creates one or more temporary tables based on the request, and extracts incremental data from tracking tables of an enterprise resource planning (ERP) system. The device also stores the extracted incremental data in the one or more temporary tables, and joins the one or more temporary tables with one or more regular tables, where the one or more regular tables include data associated with the incremental data stored in the one or more temporary tables. The device further retrieves data from the joined one or more temporary tables and the one or more regular tables, and stores the retrieved data in the data warehouse.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="140.97mm" wi="226.14mm" file="US08626703-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="225.13mm" wi="139.78mm" orientation="landscape" file="US08626703-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="226.40mm" wi="145.20mm" orientation="landscape" file="US08626703-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="217.17mm" wi="129.29mm" orientation="landscape" file="US08626703-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="243.50mm" wi="125.98mm" orientation="landscape" file="US08626703-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="250.19mm" wi="153.59mm" orientation="landscape" file="US08626703-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="243.92mm" wi="161.12mm" orientation="landscape" file="US08626703-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="234.70mm" wi="184.49mm" orientation="landscape" file="US08626703-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="227.58mm" wi="118.45mm" orientation="landscape" file="US08626703-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="232.66mm" wi="126.32mm" orientation="landscape" file="US08626703-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">An enterprise resource planning (ERP) system is an integrated computer-based system used to manage internal and external resources, such as tangible assets, financial resources, materials, human resources, etc. ERP systems facilitate the flow of information between all business functions inside boundaries of an organization and manage connections to outside stakeholders of the organization. Built on a centralized database (e.g., a data warehouse) and typically utilizing a common computing platform, ERP systems consolidate all business operations into a uniform and enterprise-wide system environment. An ERP system can either reside on a centralized server or be distributed across modular hardware and software units that provide services and communicate on a local area network (LAN). The distributed design allows a business to assemble modules from different vendors without a need for placement of multiple copies of complex and expensive computer systems in areas which will not use their full capacity.</p>
<p id="p-0003" num="0002">One example of an ERP is a &#x201c;SAP system,&#x201d; available from the German software corporation SAP AG. ERP systems, such as SAP, may generate millions of rows of records every day. However, these ERP systems do not enable underlying data (e.g., and data structures) to be exposed to an external data warehouse through a gateway. This makes it difficult to obtain, from the ERP system, newly created data, changed data, or an indication that data has been deleted (e.g., referred to collectively herein as &#x201c;incremental data&#x201d;) when incremental data becomes available. Without such up-to-date information, an organization may not be able to make informed decisions or be quickly alerted to changing conditions in the organization, such as through the use of third party analytic software.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an example network in which systems and/or methods described herein may be implemented;</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of example components of one or more devices of the network depicted in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram of example components of an enterprise resource planning (ERP) system illustrated in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram of example components of a change document service (CDS) system depicted in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of example operations capable of being performed by an example portion of the network illustrated in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram of example functional components of a change data capture (CDC) system depicted in <figref idref="DRAWINGS">FIGS. 1 and 5</figref>; and</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIGS. 7-9</figref> are flow charts of an example process for providing change data capture for ERP systems according to implementations described herein.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0011" num="0010">The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.</p>
<p id="p-0012" num="0011">Systems and/or methods described herein may provide a change (or incremental) data capture system (e.g., for an ERP system) that extracts information (e.g., incremental data) from the ERP system on an as needed basis and populates a data warehouse with the extracted information. The data warehouse may utilize the extracted information to create specific reports and/or analytics that provide up-to-date information to businesses and enables them to make prompt decisions. The ERP system (e.g., a source system) may have data (e.g., incremental data) that has changed from a previous point in time, and the data warehouse (e.g., a target system or reporting system) may need to take action based on the changed data. The systems and/or methods may provide a link between the source system (e.g., the ERP system) and the target system (e.g., the data warehouse) so that the target system may reflect the newest up-to-date data from the source system.</p>
<p id="p-0013" num="0012">In SAP-based ERP systems, the SAP system sends data to an external data warehouse using a &#x201c;push&#x201d; technology. In contrast, the systems and/or methods described herein may use a knowledge module (e.g., an Oracle Data Integrator (ODI)) to &#x201c;pull&#x201d; data from an ERP system and into a data warehouse, which may provide flexibility and control to the data warehouse. This may alleviate having to make changes in the ERP system (or target system) for any data mapping, adding new columns, data transfer times, etc. since all changes may be performed in a target system environment that does not require use of specific programming (e.g., Advanced Business Application Programming (ABAP)) expertise supported by the ERP system. With the systems and/or methods there is no need to utilize ERP system specialists (e.g., SAP specialists) or ABAP programmers to maintain, change, or enhance the reporting system.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an example network <b>100</b> in which systems and/or methods described herein may be implemented. As illustrated, network <b>100</b> may include an enterprise resource planning (ERP) system <b>110</b>, a change document service (CDS) system <b>120</b>, a change data capture (CDC) system <b>130</b>, and a data warehouse <b>140</b> interconnected by a network <b>150</b>. Components of network <b>100</b> may interconnect via wired and/or wireless connections. A single ERP system <b>110</b>, CDS system <b>120</b>, CDC system <b>130</b>, data warehouse <b>140</b>, and network <b>150</b> have been illustrated in <figref idref="DRAWINGS">FIG. 1</figref> for simplicity. In practice, there may be more ERP systems <b>110</b>, CDS systems <b>120</b>, CDC systems <b>130</b>, data warehouses <b>140</b>, and/or networks <b>150</b>. Also, in some instances, one or more of the components of network <b>100</b> may perform one or more functions described as being performed by another one or more of the components of network <b>100</b>.</p>
<p id="p-0015" num="0014">ERP system <b>110</b> may include one or more server devices, or other types of computation or communication devices, that gather, process, search, and/or provide information in a manner described herein. In one example implementation, ERP system <b>110</b> may include one or more devices that manage internal and external resources (e.g., of an organization), such as tangible assets, financial resources, materials, human resources, etc. ERP system <b>110</b> may facilitate the flow of information between all functions (e.g., manufacturing, accounting, business planning, etc.) of an organization, and may manage connections to outside stakeholders of the organization. ERP system <b>110</b> may consolidate an organization's operations into a uniform and enterprise-wide system environment. In one example, ERP system <b>110</b> may include a centralized server device. In another example, ERP system <b>110</b> may be distributed across multiple server devices that provide services and communicate on a LAN. In one implementation, ERP system <b>110</b> may include a SAP-based ERP system.</p>
<p id="p-0016" num="0015">CDS system <b>120</b> may include one or more server devices, or other types of computation or communication devices, that gather, process, search, and/or provide information in a manner described herein. In one example implementation, CDS system <b>120</b> may include one or more devices that determine when data is created, changed, or destroyed (e.g., incremental data is generated) in ERP system <b>110</b> over a particular time period, and insert the incremental data in one or more tables for tracking purposes. For example, in SAP-based systems, CDS system <b>120</b> may insert the incremental data into two tables for tracking, a change document header (CDHDR) table and a change document position (CDPOS) table. Although <figref idref="DRAWINGS">FIG. 1</figref> shows CDS system <b>120</b> as being separate from ERP system <b>110</b>, in other implementations, CDS system <b>120</b> may be incorporated within ERP system <b>110</b>.</p>
<p id="p-0017" num="0016">CDC system <b>130</b> may include one or more server devices, or other types of computation or communication devices, that gather, process, search, and/or provide information in a manner described herein. In one example implementation, CDC system <b>130</b> may include one or more devices that extract information (e.g., incremental data) from ERP system <b>110</b> on an as needed basis, and populate data warehouse <b>140</b> with the extracted information. In one example, CDC system <b>130</b> may extract or pull the incremental data from ERP system <b>110</b> according to a pre-defined schedule (e.g., daily) that may be defined by a user (e.g., a network administrator) of CDC system <b>130</b>. CDC system <b>130</b> may identify changes in ERP system <b>110</b> (e.g., incremental data) via a variety of mechanisms, such as the CDHDR and CDPOS tables, timestamps on rows of data, version numbers on rows of data, status indicators on rows of data, and/or a combination of the aforementioned.</p>
<p id="p-0018" num="0017">In one implementation, CDC system <b>130</b> may receive, from data warehouse <b>140</b>, a request for incremental data, and may create one or more temporary tables for storing incremental data. CDC system <b>130</b> may extract incremental data from ERP system <b>110</b>, and may store the extracted incremental data in the temporary table(s). CDC system <b>130</b> may generate a function call to join the temporary table(s) with one or more regular tables (e.g., that include data relevant to the incremental data provided in the temporary table(s)), and may retrieve data from the joined temporary table(s) and regular table(s). CDC system <b>130</b> may store the retrieved data in data warehouse <b>140</b> (e.g., so that data warehouse <b>140</b> may provide reports based on the retrieved data), and may remove the temporary table(s). In one example, CDC system <b>130</b> may generate notifications (e.g., emails to multiple email addresses, text messages to cell phone numbers, etc.) that provide a status or progress of an incremental data capture from ERP system <b>110</b>.</p>
<p id="p-0019" num="0018">Data warehouse <b>140</b> may include one or more server devices, or other types of computation or communication devices, that gather, process, search, and/or provide information in a manner described herein. In one example implementation, data warehouse <b>140</b> may include one or more databases of information that may be used for reporting (e.g., to an organization). Data warehouse <b>140</b> may maintain functions in a staging layer, an integration layer, and/or an access layer. The functions may be provided in data warehouse <b>140</b> in order to meet an organization's reporting needs. The staging layer may store raw data for use by developers (e.g., for analysis and support). The integration layer may integrate data, and the access layer may enable data to be provided to users (e.g., members of an organization). Data warehouse <b>140</b> may clean data, transform data, catalogue data, and make data available for use by members of an organization (e.g., for data mining, online analytical processing, market research and decision support, etc.). Data warehouse <b>140</b> may include business intelligence tools; tools to extract, transform, and load data into databases; and tools to manage and retrieve metadata.</p>
<p id="p-0020" num="0019">Network <b>150</b> may include a LAN, a wide area network (WAN), a metropolitan area network (MAN), a telephone network, such as the Public Switched Telephone Network (PSTN), a cellular network, a Wi-Fi network, an intranet, the Internet, an optical fiber (or fiber optic)-based network, or a combination of networks.</p>
<p id="p-0021" num="0020">Although <figref idref="DRAWINGS">FIG. 1</figref> shows example components of network <b>100</b>, in other implementations, network <b>100</b> may contain fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 1</figref>. Although systems and/or methods are described herein in connection with SAP-based ERP systems, in other implementations, the systems and/or methods described herein may be applied to other types of ERP systems and/or to systems other than ERP systems (e.g., Financials and Controlling (FICO) systems, Human Resources (HR) systems, Materials Management (MM) systems, Sales &#x26; Distribution (SD) systems, Production Planning (PP) systems, Plant Maintenance (PM) systems, Quality Management (QM) systems, Supplier Relationship Management (SRM) systems, etc.).</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of example components of a device <b>200</b> that may correspond to one or more devices of network <b>100</b>. As illustrated, device <b>200</b> may include a bus <b>210</b>, a processing unit <b>220</b>, a main memory <b>230</b>, a read-only memory (ROM) <b>240</b>, a storage device <b>250</b>, an input device <b>260</b>, an output device <b>270</b>, and a communication interface <b>280</b>. Bus <b>210</b> may include a path that permits communication among the components of device <b>200</b>.</p>
<p id="p-0023" num="0022">Processing unit <b>220</b> may include one or more processors, microprocessors, or other types of processing units that may interpret and execute instructions. Main memory <b>230</b> may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution by processing unit <b>220</b>. ROM <b>240</b> may include a ROM device or another type of static storage device that may store static information and/or instructions for use by processing unit <b>220</b>. Storage device <b>250</b> may include a magnetic and/or optical recording medium and its corresponding drive.</p>
<p id="p-0024" num="0023">Input device <b>260</b> may include a mechanism that permits an operator to input information to device <b>200</b>, such as a keyboard, a mouse, a pen, a microphone, voice recognition and/or biometric mechanisms, a touch screen, etc. Output device <b>270</b> may include a mechanism that outputs information to the operator, including a display, a printer, a speaker, etc. Communication interface <b>280</b> may include any transceiver-like mechanism that enables device <b>200</b> to communicate with other devices and/or systems. For example, communication interface <b>280</b> may include mechanisms for communicating with another device or system via a network.</p>
<p id="p-0025" num="0024">As described herein, device <b>200</b> may perform certain operations in response to processing unit <b>220</b> executing software instructions contained in a computer-readable medium, such as main memory <b>230</b>. A computer-readable medium may be defined as a non-transitory memory device. A memory device may include space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into main memory <b>230</b> from another computer-readable medium, such as storage device <b>250</b>, or from another device via communication interface <b>280</b>. The software instructions contained in main memory <b>230</b> may cause processing unit <b>220</b> to perform processes described herein. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus, implementations described herein are not limited to any specific combination of hardware circuitry and software.</p>
<p id="p-0026" num="0025">Although <figref idref="DRAWINGS">FIG. 2</figref> shows example components of device <b>200</b>, in other implementations, device <b>200</b> may contain fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 2</figref>. Alternatively, or additionally, one or more components of device <b>200</b> may perform one or more other tasks described as being performed by one or more other components of device <b>200</b>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram of example components of ERP system <b>110</b>. In one implementation, the components of ERP system <b>110</b> depicted in <figref idref="DRAWINGS">FIG. 3</figref> may be implemented by one or more components of device <b>200</b> (<figref idref="DRAWINGS">FIG. 2</figref>). As shown in <figref idref="DRAWINGS">FIG. 3</figref>, ERP system <b>110</b> may include master data storage <b>300</b> and application data storage <b>310</b>.</p>
<p id="p-0028" num="0027">Master data storage <b>300</b> may include one or more storage devices (e.g., storage device <b>250</b>) that may consolidate, cleanse, synchronize, and/or store master data. The master data may include reference data, key business information, etc. The key business information may include data about customers, products, employees, materials, suppliers, etc., which may be non-transactional in nature. In this regard, the master data may support transactional processes and operations, but may also support analytics, reporting, etc. The master data may be used by several functional groups, may be stored in different data systems across an organization, and may or may not be referenced centrally. Master data storage <b>300</b> may distribute the master data internally and externally to ERP system <b>110</b>. Master data storage <b>300</b> may receive the master data from an organization (e.g., from client systems), and may store the received master data.</p>
<p id="p-0029" num="0028">Application data storage <b>310</b> may include one or more storage devices (e.g., storage device <b>250</b>) that may receive application data (e.g., master data and transactional data), and may store the application data. The transactional data may include data describing an event (e.g., a change as a result of a transaction). The transactional data may include a time dimension, a numerical value, and may refer to one or more objects (e.g., reference data). For example, transactional data may include financial transactions (e.g., orders, invoices, payments, etc.); work plans; activity records; logistic transactions (e.g., deliveries, storage records, travel records, etc.), etc.</p>
<p id="p-0030" num="0029">Although <figref idref="DRAWINGS">FIG. 3</figref> shows example components of ERP system <b>110</b>, in other implementations, ERP system <b>110</b> may contain fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 3</figref>. Alternatively, or additionally, one or more components of ERP system <b>110</b> may perform one or more other tasks described as being performed by one or more other components of ERP system <b>110</b>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram of example components of CDS system <b>120</b>. In one implementation, the components of CDS system <b>120</b> depicted in <figref idref="DRAWINGS">FIG. 4</figref> may be implemented by one or more components of device <b>200</b> (<figref idref="DRAWINGS">FIG. 2</figref>). As shown in <figref idref="DRAWINGS">FIG. 4</figref>, CDS system <b>120</b> may include incremental data storage <b>400</b> that includes a change document header (CDHDR) table <b>410</b> and a change document position (CDPOS) table <b>420</b>.</p>
<p id="p-0032" num="0031">When incremental data occurs (e.g., new data is created, data is deleted, or data is changed) in ERP system <b>110</b> over a particular time period, CDS system <b>120</b> may retrieve the incremental data and may store the incremental data in incremental data storage <b>400</b>. Incremental data storage <b>400</b> may include one or more storage devices (e.g., storage device <b>250</b>) that may receive incremental data from ERP system <b>110</b>, and may store the incremental data. In one example implementation, incremental data storage <b>400</b> may store the incremental data in CDHDR table <b>410</b>, CDPOS table <b>420</b>, or other types of tables.</p>
<p id="p-0033" num="0032">CDHDR table <b>410</b> may include a header or transparent table that stores incremental data (e.g., changed documents). CDHDR table <b>410</b> may store a large number of entries, and may assign a change identifier (ID) number (e.g., as a key) to each change. In one example, CDHDR table <b>410</b> may archive old incremental data to enable new incremental data to be inserted in CDHDR table <b>410</b>.</p>
<p id="p-0034" num="0033">CDPOS table <b>420</b> may include a cluster table that stores incremental data at an item level. CDPOS table <b>420</b> may store a large number of entries, and may assign a change ID number (e.g., as a key) to each change. In one example, CDPOS table <b>420</b> may archive old incremental data to enable new incremental data to be inserted in CDPOS table <b>420</b>.</p>
<p id="p-0035" num="0034">Although <figref idref="DRAWINGS">FIG. 4</figref> shows example components of CDS system <b>120</b>, in other implementations, CDS system <b>120</b> may contain fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 4</figref>. Alternatively, or additionally, one or more components of CDS system <b>120</b> may perform one or more other tasks described as being performed by one or more other components of CDS system <b>120</b>.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of example operations capable of being performed by an example portion <b>500</b> of network <b>100</b>. As shown, example network portion <b>500</b> may include ERP system <b>110</b>, CDS system <b>120</b>, CDC system <b>130</b>, and data warehouse <b>140</b>. ERP system <b>110</b>, CDS system <b>120</b>, CDC system <b>130</b>, and data warehouse <b>140</b> may include the features described above in connection with, for example, one or more of <figref idref="DRAWINGS">FIGS. 1-4</figref>.</p>
<p id="p-0037" num="0036">As further shown in <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may create one or more temporary tables <b>510</b> and one or more regular tables <b>520</b> provided in a storage device(s) (e.g., storage device <b>250</b>) of CDC system <b>130</b>. In one example, CDC system <b>130</b> may create a generic program (e.g., an ABAP Z program) to create temporary tables <b>510</b> (e.g., a ZTSCM_CONFIG_DT table). Temporary table(s) <b>510</b> may include tables (e.g., ABAP &#x201c;Z configuration tables&#x201d;) that are temporarily created by CDC system <b>130</b> in order to temporarily store incremental data retrieved from CDS system <b>120</b>, configuration entries for upload of incremental data, etc. Regular table(s) <b>520</b> may include tables that store data relevant to the incremental data provided in temporary table(s) <b>510</b>. In one example implementation, temporary table(s) <b>510</b> and regular table(s) <b>520</b> may include Oracle staging tables.</p>
<p id="p-0038" num="0037">In one example implementation, CDC system <b>130</b> may create a generic template to generate ABAP programs. The generic template may be used to input table names (e.g., standard SAP tables that may be used in change document history, such as CDHDR table <b>410</b> and CDPOS table <b>420</b>); to obtain the change document history from the SAP tables; and to output the Z table (e.g., temporary table(s) <b>510</b>) with updated change document data (e.g., incremental data).</p>
<p id="p-0039" num="0038">CDC system <b>130</b> may receive, from data warehouse <b>140</b>, a request <b>530</b> for incremental data. Request <b>530</b> may include a predetermined time period (e.g., a date range) for defining what is to be determined as incremental data. In one example implementation, request <b>530</b> may be provided to CDC system <b>130</b> via an extract, transform, and load (ETL) tool, such as an ODI. An ETL tool may extract data from outside sources, may transform the data to fit operational needs, and may load the data into an end target (e.g., data warehouse <b>140</b>). CDC system <b>130</b> may create (e.g., based on request <b>530</b>) one or more temporary tables <b>510</b> for storing incremental data. As further shown in <figref idref="DRAWINGS">FIG. 5</figref>, based on request <b>530</b> or prior to request <b>530</b> (e.g., when incremental data <b>540</b> occurs in ERP system <b>110</b>), CDS system <b>120</b> may retrieve incremental data <b>540</b> from ERP system <b>110</b>, and may store incremental data <b>540</b> in incremental data storage <b>400</b>. In one example implementation, CDS system <b>120</b> may store incremental data <b>540</b> in CDHDR table <b>410</b>, CDPOS table <b>420</b>, or other types of tables provided in incremental data storage <b>400</b>.</p>
<p id="p-0040" num="0039">After creating temporary table(s) <b>510</b>, CDC system <b>130</b> may extract or &#x201c;pull&#x201d; incremental data <b>540</b> from CDS system <b>120</b> (e.g., from incremental data storage <b>400</b>), as indicated by reference number <b>550</b>, and may store the extracted incremental data <b>540</b> in temporary table(s) <b>510</b>. In one example implementation, CDC system <b>130</b> may create a &#x201c;Z program&#x201d; (e.g., a SAP ABAP program) to extract incremental data <b>540</b> from the SAP tracking tables (e.g., CDHDR table <b>410</b> and CDPOS table <b>420</b>). CDC system <b>130</b> may generate a function call (e.g., a Remote Function Call (RFC), which is a SAP interface) to join temporary table(s) <b>510</b> with regular table(s) <b>520</b>. In one example implementation, the function call (e.g., via SAP standard Function Modules (FMs)) may retrieve incremental data <b>540</b> from temporary table(s) <b>510</b>, and may retrieve, from regular table(s) <b>520</b>, particular data associated with the retrieved incremental data <b>540</b>. The function call may then combine incremental data <b>540</b> with the particular data. For example, the function call may join fact and dimension information in table(s) <b>510</b> and <b>520</b> to obtain not only incremental data <b>540</b>, but also all data associated with incremental data <b>540</b>.</p>
<p id="p-0041" num="0040">As further shown in <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may retrieve or &#x201c;fetch&#x201d; data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b>, as indicated by reference number <b>560</b>. In one example implementation, the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> may be extracted (e.g., by CDC system <b>130</b>) with an ETL tool, such as an ODI. For example, CDC system <b>130</b> may reverse the Z table (e.g., temporary table(s) <b>510</b>) in the ODI (e.g., metadata), may join fields in the Z table with regular SAP table columns, and may utilize the ODI to generate function modules for custom mappings. CDC system <b>130</b> may store (e.g., using Source Independent Loads (SILs)) the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in data warehouse <b>140</b>, and may remove temporary table(s) <b>510</b>.</p>
<p id="p-0042" num="0041">In one example implementation, CDC system <b>130</b> may store the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in target tables provided in data warehouse <b>140</b>. A record in a target table may have multiple columns where update logic may be different as mandated by business rules. CDC system <b>130</b> may permit setting a Slowly Changing Dimension (SCD) type (described below) for each field in the target table of data warehouse <b>140</b>. For example, assume that data warehouse <b>140</b> stores both primary and secondary contact information of a vendor in the target tables. If a change occurs in the secondary contact information of the vendor, CDC system <b>130</b> may not maintain history for that change in the target tables. A user can set a property for the secondary contact information as &#x201c;Overwrite on Change&#x201d; within CDC system <b>130</b>.</p>
<p id="p-0043" num="0042">Data warehouse <b>140</b> may store the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in the target tables in a variety of ways. For example, data may be organized in data warehouse <b>140</b> in objects, such as dimensions and facts. The dimensions object may capture master data information, such as company information, plant/store information, supplier information, customer information, etc. The facts object may capture transactional data, such as purchase orders, stock movements, invoice information, etc. Data warehouse <b>140</b> may capture changes in data using a change data capture mechanism that updates or overwrites fields in the target table records (e.g., with incremental data <b>540</b>), creates a new record (e.g., for incremental data <b>540</b>, which preserves an old record), or uses a combination of the aforementioned techniques.</p>
<p id="p-0044" num="0043">In one example implementation, CDC system <b>130</b> (e.g., via data warehouse <b>140</b>) may insert, change, and delete data selected from CDHDR table <b>410</b> and CDPOS table <b>420</b> (e.g., category 1); may insert data selected from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> and may change and delete data selected from CDHDR table <b>410</b> and CDPOS table <b>420</b> (e.g., category 2); may insert, change, and delete data selected from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> (e.g., category 3); may change document records that include more than one object class (e.g., category 4); may utilize tables involved in hierarchy logic (e.g., category 5); may perform complex updates from the revenue, cost of goods sold (COGS), and bill of materials (BOM) functions (e.g., category 6); etc.</p>
<p id="p-0045" num="0044">Within data warehouse <b>140</b>, the techniques of the change data capture mechanism may also be described as SCD. SCD may include dimensions with data that slowly changes. SCD management methodologies may include a Type 0 method, a Type 1 method, and a Type 2 method. The Type 0 method may be a passive approach to managing dimension value changes, in which no action is taken. The Type 1 method may overwrite old data with new data, and may not track historical data. The Type 1 method may be used when correcting certain types of data errors, such as the spelling of a name. The Type 2 method may track historical data by creating multiple records in dimensional tables with separate keys. The Type 2 method may provide unlimited historical preservation since a new record may be inserted each time a change is made.</p>
<p id="p-0046" num="0045">As further shown in <figref idref="DRAWINGS">FIG. 5</figref>, data warehouse <b>140</b> may generate one or more reports <b>570</b> based on the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b>. Reports <b>570</b> may include, for example, reports used for decision support; trend analysis; financial forecasts; churn prediction for telecommunication subscribers, credit card users etc.; insurance fraud analysis; call record analysis; reports used for logistics and inventory management; etc. Alternatively, or additionally, data warehouse <b>140</b> may be accessed by an external analysis application, which may generate one or more reports <b>570</b>. Although not shown in <figref idref="DRAWINGS">FIG. 5</figref>, in one example implementation, CDC system <b>130</b> may generate notifications (e.g., emails to multiple email addresses, text messages to cell phone numbers, etc.) that provide a status or progress of an incremental data capture from ERP system <b>110</b>.</p>
<p id="p-0047" num="0046">In one example (e.g., when ERP system <b>110</b> corresponds to a SAP system), CDC system <b>130</b> may perform the aforementioned tasks to populate data warehouse <b>140</b> with incremental data generated by the SAP system. For example, CDC system <b>130</b> may create a program that populates a table name and timestamp of data warehouse <b>140</b> into Z configuration table (e.g., ZTSCM_CONFIG_DT). Before pulling the incremental data load for a table of data warehouse <b>140</b>, CDC system <b>130</b> may upload data within a range of dates (e.g., from a last extracted date to a current date of the SAP system) and the corresponding data warehouse <b>140</b> table name in the Z table. The created program may require two input parameters from the ODI open tool (e.g., the timestamp and table name of data warehouse <b>140</b>).</p>
<p id="p-0048" num="0047">CDC system <b>130</b> may populate a custom SAP table (e.g., a ZTSCM_CONFIG_FLD table), which may contain the SAP table and corresponding fields used to populate data warehouse <b>140</b> tables. In one example, fields included in the ZTSCM_CONFIG_FLD table may be tracked (e.g., by CDC system <b>130</b>) as changes for the incremental upload.</p>
<p id="p-0049" num="0048">CDC system <b>130</b> may create a Z program (e.g., ZSCM_INCREMENTAL_LOAD) that extracts the incremental data from CDHDR table <b>410</b> and CDPOS table <b>420</b>. In one example, the Z program may extract the incremental data based on input parameters (e.g., SAP source tables used for populating data warehouse <b>140</b> table, data warehouse <b>140</b> table name, a last run date for the ODI interface to populate data warehouse <b>140</b> table) received from the ODI open tool. Once SAP tables are identified (e.g., based on dates provided in the ZTSCM_CONFIG_DT table), CDC system <b>130</b> may obtain the incremental data (e.g., I, U, D) for the identified SAP tables that are used to populate data warehouse <b>140</b> table from CDHDR table <b>410</b> and CDPOS table <b>420</b>. Based on the ZTSCM_CONFIG_FLD table, CDC system <b>130</b> may identify changes made to specific table fields associated with the corresponding data warehouse <b>140</b> table. CDC system <b>130</b> may populate the incremental records into the respective Z SAP tables with a change indicator flag.</p>
<p id="p-0050" num="0049">CDC system <b>130</b> may create programs for performing the incremental load. For example, CDC system <b>130</b> may create a program for uploading data warehouse <b>140</b> table and timestamp records into a configuration table (e.g., ZSCM_CONFIG_DT table); may create a program for uploading SAP tables and fields associated with each data warehouse <b>140</b> into a configuration table (e.g., ZSCM_CONFIG_FLD table); and may create a program (e.g., ZSCM_INCREMENTAL_LOAD) for extracting incremental data from CDHDR table <b>410</b> and CDPOS table <b>420</b>.</p>
<p id="p-0051" num="0050">ODI mappings may be used by CDC system <b>130</b> to populate the Z tables with the incremental data for all SAP tables used for populating data warehouse <b>140</b> table under the timestamp, and to process the SAP tables to obtain the incremental data for data warehouse <b>140</b> table. CDC system <b>130</b> may identify the SAP tables associated with CDHDR table <b>410</b> and CDPOS table <b>420</b> entries from a functional mapping of each data warehouse <b>140</b> table. For each table present in the change document history (e.g., provided in CDHDR table <b>410</b> and CDPOS <b>420</b>), CDC system <b>130</b> may create a Z table in the SAP database table. These Z tables may be further used (e.g., by CDC system <b>130</b>) in the mapping to extract the incremental load for a given data warehouse <b>140</b> table.</p>
<p id="p-0052" num="0051">In a first example, an interface of CDC system <b>130</b> may be used to remove header records with a flag (e.g., a CHNGIND flag) set to &#x201c;I.&#x201d; To remove header records, CDC system <b>130</b> interface may use a filter (e.g., ZTCONFIG_DATE.INTERFACE=&#x2018;W_PURCH_ORDER_FS&#x2019;); a first join (e.g., (INNER JOIN) ZTCONFIG_DATE.ZDATE=EKKO.AEDAT); a second join (e.g., (LOJ) EKKO.EBELN=EKPO.EBELN); and a third join (e.g., (LOJ) EKPO.EBELN=EKET.EBELN AND EKPO.EBELP=EKET.EBELP).</p>
<p id="p-0053" num="0052">In a second example, an interface of CDC system <b>130</b> may be used to remove header records with a flag (e.g., a CHNGIND flag) set to &#x201c;U&#x201d; or &#x201c;D.&#x201d; To remove header records, CDC system <b>130</b> interface may use a first filter (e.g., ZTCONFIG_DATE.INTERFACE=&#x2018;W_PURCH_ORDER_FS&#x2019;); a second filter (e.g., ZTOBI_CONFIG.SRCTABLE=&#x2018;EKKO&#x2019; AND ZTOBI_CONFIG.TRGTABLE=&#x2018;W_PURCH_ORDER&#x2019;); a first join (e.g., (INNER JOIN) ZTCONFIG_DATE.ZDATE=ZOBI_EKKO.UDATE AND ZTCONFIG_DATE.INTERFACE=ZOBI_EKKO.INTERFACE); a second join (e.g., ZOBI_EKKO.FNAME=ZTOBI_CONFIG.FIELDNAME); a third Join (e.g., (INNER JOIN) ZOBI_EKKO.EBELN=EKKO.EBELN); a fourth join (e.g., (INNER JOIN) EKKO.EBELN=EKPO.EBELN; and a fifth join (e.g., (LOJ) EKPO.EBELN=EKET.EBELN AND EKPO.EBELP=EKET.EBELP).</p>
<p id="p-0054" num="0053">In a third example, an interface of CDC system <b>130</b> may be used to remove first line item records with a flag (e.g., a CHNGIND flag) set to &#x201c;I,&#x201d; &#x201c;U,&#x201d; or &#x201c;D.&#x201d; To remove first line item records, CDC system <b>130</b> interface may use a first filter (e.g., ZTCONFIG_DATE.INTERFACE=&#x2018;W_PURCH_ORDER_FS&#x2019;); a second filter (e.g., ZTOBI_CONFIG.SRCTABLE=&#x2018;EKPO&#x2019; AND ZTOBI_CONFIG.TRGTABLE=&#x2018;W_PURCH_ORDER&#x2019;); a first join (e.g., (INNER JOIN) ZTCONFIG_DATE.ZDATE=ZOBI_EKPO.UDATE AND ZTCONFIG_DATE.INTERFACE=ZOBI_EKPO.INTERFACE); a second join (e.g., (INNER JOIN) ZOBI_EKKO.FNAME=ZTOBI_CONFIG.FIELDNAME); a third join (e.g., (INNER JOIN) ZOBI_EKPO.EBELN=EKPO.EBELN AND ZOBI_EKPO.EBELP=EKPO.EBELP); a fourth join (e.g., (INNER JOIN) EKPO.EBELN=EKKO.EBELN); and a fifth join (e.g., (LOJ) (EKPO.EBELN=EKET.EBELN) AND EKPO.EBELP=EKET.EBELP).</p>
<p id="p-0055" num="0054">In a fourth example, an interface of CDC system <b>130</b> may be used to remove maximum timestamp records based on the following condition:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0055">TO_CHAR(MAX(TO_TIMESTAMP(W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.UDATE|W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.UTIME, &#x2018;YYYYMMDDHH24:MI:SS&#x2019;)), &#x2018;YYYYMMDDHH24:MI:SS&#x2019;).</li>
</ul>
</p>
<p id="p-0056" num="0056">In a fifth example, an interface of CDC system <b>130</b> may be used to join a first temporary table (e.g., a maximum records table) with a second temporary table to obtain full length records. To join the first and second temporary tables, CDC system <b>130</b> interface may use a first join, such as, for example:
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0057">(INNER JOIN) W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.EBELN=W_PURCH_ORDER_FS<sub>&#x2014;</sub>2.EBELN AND</li>
    <li id="ul0002-0002" num="0058">DECODE(W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.EBELP,NULL,&#x2018;NA&#x2019;,W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.EBELP)=DECODE(W_PURCH_ORDER_FS<sub>&#x2014;</sub>2.EBELP,NULL,&#x2018;NA&#x2019;,W_PURCH_ORDER_FS<sub>&#x2014;</sub>2.EBELP) AND TO_TIMESTAMP(W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.UDATE|W_PURCH_ORDER_FS<sub>&#x2014;</sub>1.UTIME,&#x2018;YYYYMMDDHH24:MI:SS&#x2019;)=TO_TIMESTAMP(W_PURCH_ORDER_FS<sub>&#x2014;</sub>2.MAX_TIMESTAMP, &#x2018;YYYYMMDDHH24:MI:SS&#x2019;).</li>
</ul>
</p>
<p id="p-0057" num="0059">In a sixth example, an interface of CDC system <b>130</b> may be used for populating with a record (e.g., W_PURCH_ORDER_FS). To populate with the record, CDC system <b>130</b> interface may use first Join (e.g., (LO) (W_PURCH_ORDER_FS<sub>&#x2014;</sub>3.BANFN=EBAN.BANFN) AND W_PURCH_ORDER_FS<sub>&#x2014;</sub>3.BNFPO=EBAN.BNFPO); a second join (e.g., (LOJ) (W_PURCH_ORDER_FS<sub>&#x2014;</sub>3.MATNR=MBEW.MATNR) AND W_PURCH_ORDER_FS<sub>&#x2014;</sub>3.WERKS=MBEW.BWKEY); and a third join (e.g., (LOJ) W_PURCH_ORDER_FS<sub>&#x2014;</sub>3.BUKRS=T001.BUKRS).</p>
<p id="p-0058" num="0060">CDC system <b>130</b> may enable reuse of the same source Z tables for populating incremental data in multiple target data warehouse <b>140</b> tables, and may not need to create Z tables manually for each target table in data warehouse <b>140</b>. CDC system <b>130</b> may also require less dependency on SAP ABAP skills for modifying/changing mappings since any new target table (e.g., in data warehouse <b>140</b>) may be easily processed for incremental data.</p>
<p id="p-0059" num="0061">To add a new SAP table, CDC system <b>130</b> may identify a category for the SAP table (e.g., one of categories 1-6, described above). For categories 1-3, CDC system <b>130</b> may update fields in a configuration table for the newly added SAP table, such as: a SAP source tables fields (e.g., CDC system <b>130</b> may add the new SAP table name as a comma separated value with existing tables); and fields to be used from new SAP table (e.g., CDC system <b>130</b> may add new fields from the newly added table as a comma separated value in the configuration table). These values may be automatically retrieved by the template program in a subsequent run. CDC system <b>130</b> may also define interfaces for processing the new SAP table and its fields, as described above in the previous examples.</p>
<p id="p-0060" num="0062">For categories 4-6, CDC system <b>130</b> may update an ABAP Z program that is fetching the incremental data. If the newly added SAP table is a simple text table, CDC system <b>130</b> may not update the Z program, but may join the Z table in the ODI interface based on key values provided in the Z table. CDC system <b>130</b> may also update existing interfaces and add the new SAP table in the interfaces for processing incremental data, as shown above in the previous examples. If the new SAP table includes a one-to-one mapping with a target table, CDC system <b>130</b> may pass the fields of the newly added SAP table to the target table (e.g., via a calculation, if any, performed in the ODI interfaces).</p>
<p id="p-0061" num="0063">To add a new field to a SAP table, CDC system <b>130</b> may identify a category for the SAP table (e.g., one of categories 1-6, described above). For categories 1-3, CDC system <b>130</b> may update fields in the configuration table (e.g., for the newly added fields) from an existing table. For example, CDC system <b>130</b> may add the new fields from the existing table (e.g., CDC system <b>130</b> may add the new fields as a comma separated value in the configuration table). These values may be automatically retrieved by the template program in a subsequent run. CDC system <b>130</b> may also modify interfaces for mapping the new fields to the target table. If the new fields include a one-to-one mapping with target fields, CDC system <b>130</b> may map the new fields (e.g., via a calculation, if any, performed in the ODI interfaces).</p>
<p id="p-0062" num="0064">For categories 4-6, CDC system <b>130</b> need not update an ABAP Z program (e.g., since the table for the new entries already exists), may update existing interfaces, and may map the new fields from the source table to the target table. If the new fields include a one-to-one mapping with the target table fields, CDC system <b>130</b> may pass the new fields to the target table (e.g., via a calculation, if any, performed in the ODI interfaces).</p>
<p id="p-0063" num="0065">In today's business environment, decisions by business users may need to be based on information that is refreshed hourly, every minute, or even every second. For example, creation of a new vendor or shipment of an order may reflect important real world events. By capturing data changes related to such business events, CDC system <b>130</b> may serve as a focal point for driving continuous, event-based data integration. CDC system <b>130</b> may provide visibility to critical business events as they occur, may bridge distinct technologies (e.g., SAP and Oracle), and may enable reporting across ERP system <b>110</b> and data warehouse <b>140</b> in a cost effective way (e.g., without use of complex and expensive ERP system tools and techniques).</p>
<p id="p-0064" num="0066">Although <figref idref="DRAWINGS">FIG. 5</figref> shows example components of network portion <b>500</b>, in other implementations, network portion <b>500</b> may contain fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 5</figref>. Alternatively, or additionally, one or more components of network portion <b>500</b> may perform one or more other tasks described as being performed by one or more other components of network portion <b>500</b>.</p>
<p id="p-0065" num="0067"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram of example functional components of CDC system <b>130</b>. In one implementation, the functions described in connection with <figref idref="DRAWINGS">FIG. 6</figref> may be performed by one or more components of device <b>200</b> (<figref idref="DRAWINGS">FIG. 2</figref>). As illustrated in <figref idref="DRAWINGS">FIG. 6</figref>, CDC system <b>130</b> may include temporary table(s) <b>510</b>, regular table(s) <b>520</b>, a temporary table creator <b>600</b>, an incremental data extractor <b>610</b>, and a table joiner <b>620</b>. Temporary table(s) <b>510</b> and regular table(s) <b>520</b> may include the features described above in connection with, for example, <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0066" num="0068">Temporary table creator <b>600</b> may include hardware or a combination of hardware and software that may receive request <b>530</b> for incremental data from data warehouse <b>140</b>, and may create (e.g., based on request <b>530</b>) one or more temporary tables <b>510</b> for storing incremental data, as indicated by reference number <b>630</b>.</p>
<p id="p-0067" num="0069">Incremental data extractor <b>610</b> may include hardware or a combination of hardware and software that may (e.g., after creation of temporary table(s) <b>510</b>) generate a request <b>640</b> for incremental data, and may provide request <b>640</b> to CDS system <b>120</b>. Request <b>640</b> may cause CDC system <b>130</b> to extract or &#x201c;pull&#x201d; incremental data <b>540</b> from CDS system <b>120</b> (e.g., from incremental data storage <b>400</b>), as indicated by reference number <b>550</b>, and to store the extracted incremental data <b>540</b> in temporary table(s) <b>510</b>. In one example implementation, request <b>640</b> may include a &#x201c;Z program&#x201d; (e.g., a SAP ABAP program) that extracts incremental data <b>540</b> from the SAP tracking tables (e.g., CDHDR table <b>410</b> and CDPOS table <b>420</b>).</p>
<p id="p-0068" num="0070">Table joiner <b>620</b> may include hardware or a combination of hardware and software that may generate a function call (e.g., a RFC) that provides a request to join <b>650</b> to temporary table(s) <b>510</b> and another request to join <b>660</b> to regular table(s) <b>520</b>. In one example implementation, requests to join <b>650</b>/<b>660</b> may enable CDC system <b>130</b> to retrieve incremental data <b>540</b> from temporary table(s) <b>510</b>, and retrieve, from regular table(s) <b>520</b>, particular data associated with the retrieved incremental data <b>540</b>. The function call may then combine incremental data <b>540</b> with the particular data. For example, the function call may join fact and dimension information in table(s) <b>510</b> and <b>520</b> to obtain not only incremental data <b>540</b>, but also all relevant data that goes along with incremental data <b>540</b>.</p>
<p id="p-0069" num="0071">As further shown in <figref idref="DRAWINGS">FIG. 6</figref>, CDC system <b>130</b> may retrieve data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b>, as indicated by reference number <b>560</b>. CDC system <b>130</b> may store (e.g., using SILs) the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in data warehouse <b>140</b>, and may remove temporary table(s) <b>510</b>.</p>
<p id="p-0070" num="0072">Although <figref idref="DRAWINGS">FIG. 6</figref> shows example functional components of CDC system <b>130</b>, in other implementations, CDC system <b>130</b> may contain fewer functional components, different functional components, differently arranged functional components, or additional functional components than depicted in <figref idref="DRAWINGS">FIG. 6</figref>. Alternatively, or additionally, one or more functional components of CDC system <b>130</b> may perform one or more other tasks described as being performed by one or more other functional components of CDC system <b>130</b>.</p>
<p id="p-0071" num="0073"><figref idref="DRAWINGS">FIGS. 7-9</figref> are flow charts of an example process <b>700</b> for providing change data capture for ERP systems according to implementations described herein. In one implementation, process <b>700</b> may be performed by CDC system <b>130</b>. In another implementation, some or all of process <b>700</b> may be performed by another device or group of devices, including or excluding CDC system <b>130</b>.</p>
<p id="p-0072" num="0074">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, process <b>700</b> may include receiving, from a data warehouse, a request for incremental data (block <b>710</b>), and creating temporary table(s) for incremental data (block <b>720</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may receive, from data warehouse <b>140</b>, request <b>530</b> for incremental data. Request <b>530</b> may include a predetermined time period (e.g., a date range) for defining what is to be determined as incremental data. In one example, request <b>530</b> may be provided to CDC system <b>130</b> via an ETL tool, such as an ODI. CDC system <b>130</b> may create (e.g., based on request <b>530</b>) one or more temporary tables <b>510</b> for storing incremental data. Temporary table(s) <b>510</b> may include tables (e.g., ABAP &#x201c;Z tables&#x201d;) that are temporarily created by CDC system <b>130</b> in order to temporarily store incremental data retrieved from CDS system <b>120</b>.</p>
<p id="p-0073" num="0075">As further shown in <figref idref="DRAWINGS">FIG. 7</figref>, process <b>700</b> may include extracting incremental data from ERP system tracking tables (block <b>730</b>), and storing the extracted incremental data in the temporary table(s) (block <b>740</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, after creating temporary table(s) <b>510</b>, CDC system <b>130</b> may extract or &#x201c;pull&#x201d; incremental data <b>540</b> from CDS system <b>120</b> (e.g., from incremental data storage <b>400</b>), as indicated by reference number <b>550</b>, and may store the extracted incremental data <b>540</b> in temporary table(s) <b>510</b>. In one example, CDC system <b>130</b> may create a &#x201c;Z program&#x201d; (e.g., a SAP ABAP program) to extract incremental data <b>540</b> from the SAP tracking tables (e.g., CDHDR table <b>410</b> and CDPOS table <b>420</b>).</p>
<p id="p-0074" num="0076">Returning to <figref idref="DRAWINGS">FIG. 7</figref>, process <b>700</b> may include generating a function call to join the temporary table(s) with regular table(s) (block <b>750</b>), and retrieving the data from the joined temporary table(s) and the regular table(s) (block <b>760</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may generate a function call (e.g., a RFC) to join temporary table(s) <b>510</b> with regular table(s) <b>520</b>. CDC system <b>130</b> may retrieve or &#x201c;fetch&#x201d; data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b>, as indicated by reference number <b>560</b>. In one example, the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> may be extracted (e.g., by CDC system <b>130</b>) with an ETL tool, such as an ODI.</p>
<p id="p-0075" num="0077">As further shown in <figref idref="DRAWINGS">FIG. 7</figref>, process <b>700</b> may include storing the retrieved data in the data warehouse for reporting (block <b>770</b>), and removing the temporary table(s) (block <b>780</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may store (e.g., using SILs) the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in data warehouse <b>140</b>, and may remove temporary table(s) <b>510</b>. In one example, CDC system <b>130</b> may store the data from the joined temporary table(s) <b>510</b> and regular table(s) <b>520</b> in target tables provided in data warehouse <b>140</b>.</p>
<p id="p-0076" num="0078">Process block <b>750</b> may include the process blocks depicted in <figref idref="DRAWINGS">FIG. 8</figref>. As shown in <figref idref="DRAWINGS">FIG. 8</figref>, process block <b>750</b> may include retrieving incremental data from the temporary table(s) (block <b>800</b>), retrieving, from the regular table(s) particular data associated with the incremental data (block <b>810</b>), and combining the incremental data with the particular data (block <b>820</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, CDC system <b>130</b> may generate a function call (e.g., a RFC) to join temporary table(s) <b>510</b> with regular table(s) <b>520</b>. In one example, the function call (e.g., via SAP standard FMs) may retrieve incremental data <b>540</b> from temporary table(s) <b>510</b>, and may retrieve, from regular table(s) <b>520</b>, particular data associated with the retrieved incremental data <b>540</b>. The function call may then combine incremental data <b>540</b> with the particular data. For example, the function call may join fact and dimension information in table(s) <b>510</b> and <b>520</b> to obtain not only incremental data <b>540</b>, but also all data associated with incremental data <b>540</b>.</p>
<p id="p-0077" num="0079">Process block <b>770</b> may include the process blocks depicted in <figref idref="DRAWINGS">FIG. 9</figref>. As shown in <figref idref="DRAWINGS">FIG. 9</figref>, process block <b>770</b> may include updating or overwriting old data with the incremental data (block <b>900</b>), creating new records in the data warehouse for the incremental data (block <b>910</b>), or updating/overwriting some data with some of the incremental data and creating new records in the data warehouse for other incremental data (block <b>920</b>). For example, in implementations described above in connection with <figref idref="DRAWINGS">FIG. 5</figref>, data warehouse <b>140</b> may capture changes in data using a change data capture mechanism that updates or overwrites fields in the target table records (e.g., with incremental data <b>540</b>), creates a new record (e.g., for incremental data <b>540</b>, which preserves an old record), or uses a combination of the aforementioned techniques.</p>
<p id="p-0078" num="0080">Systems and/or methods described herein may provide a change (or incremental) data capture system (e.g., for an ERP system) that extracts information (e.g., incremental data) from the ERP system on an as needed basis and populates a data warehouse with the extracted information. The data warehouse may utilize the extracted information to create specific reports and/or analytics that provide up-to-date information to businesses and enables them to make prompt decisions. The ERP system (e.g., a source system) may have data (e.g., incremental data) that has changed from a previous point in time, and the data warehouse (e.g., a target system or reporting system) may need to take action based on the changed data. The systems and/or methods may provide a link between the source system (e.g., the ERP system) and the target system (e.g., the data warehouse) so that the target system may reflect the newest up-to-date data from the source system.</p>
<p id="p-0079" num="0081">The foregoing description of implementations provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.</p>
<p id="p-0080" num="0082">For example, while series of blocks have been described with regard to <figref idref="DRAWINGS">FIGS. 7-9</figref>, the order of the blocks may be modified in other implementations. Further, non-dependent blocks may be performed in parallel.</p>
<p id="p-0081" num="0083">It will be apparent that example aspects, as described above, may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects should not be construed as limiting. Thus, the operation and behavior of the aspects were described without reference to the specific software code&#x2014;it being understood that software and control hardware could be designed to implement the aspects based on the description herein.</p>
<p id="p-0082" num="0084">Further, certain portions of the invention may be implemented as a &#x201c;component&#x201d; or &#x201c;logic&#x201d; that performs one or more functions. These components or logic may include hardware, such as a processor, an application-specific integrated circuit (ASIC), or a field-programmable gate array (FPGA), or a combination of hardware and software.</p>
<p id="p-0083" num="0085">Even though particular combinations of features are recited in the claims and/or disclosed in the specification, these combinations are not intended to limit the disclosure of the invention. In fact, many of these features may be combined in ways not specifically recited in the claims and/or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim, the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.</p>
<p id="p-0084" num="0086">No element, act, or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article &#x201c;a&#x201d; is intended to include one or more items. Where only one item is intended, the term &#x201c;one&#x201d; or similar language is used. Further, the phrase &#x201c;based on&#x201d; is intended to mean &#x201c;based, at least in part, on&#x201d; unless explicitly stated otherwise.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method implemented by a computing device, the method comprising:
<claim-text>receiving, by the computing device and from a data warehouse, a request for incremental data associated with a particular period of time, wherein the incremental data comprises data that is created, changed or deleted in an enterprise resource planning (ERP) system over the particular period of time;</claim-text>
<claim-text>creating, by the computing device, one or more temporary tables based on the request;</claim-text>
<claim-text>extracting, by the computing device, incremental data from tracking tables of the ERP system;</claim-text>
<claim-text>storing, by the computing device, the extracted incremental data in the one or more temporary tables;</claim-text>
<claim-text>generating, by the computing device, a function call to join the one or more temporary tables with one or more regular tables, wherein the one or more regular tables include data associated with the incremental data stored in the one or more temporary tables;</claim-text>
<claim-text>retrieving, by the computing device, data from the joined one or more temporary tables and the one or more regular tables; and</claim-text>
<claim-text>storing, by the computing device, the retrieved data in the data warehouse, wherein, in response to the function call to join the one or more temporary tables with one or more regular tables, the method further comprises:</claim-text>
<claim-text>retrieving the incremental data from the one or more temporary tables;</claim-text>
<claim-text>retrieving, from the one or more regular tables, particular data associated with the incremental data; and</claim-text>
<claim-text>combining the incremental data with the particular data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where extracting incremental data comprises:
<claim-text>extracting the incremental data from the tracking tables of the ERP system according to a predetermined schedule.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein extracting incremental data comprises:
<claim-text>creating an Advanced Business Application Programming (ABAP) program that extracts the incremental data from the tracking tables of the ERP system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the function call includes a Remote Function Call (RFC).</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>generating one or more notifications that provide a status of the extracting the incremental data from the tracking tables of the ERP system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>removing the one or more temporary tables after storing the retrieved data in the data warehouse.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where storing the retrieved data in the data warehouse comprises at least one of:
<claim-text>updating records in the data warehouse with the retrieved data;</claim-text>
<claim-text>creating new records in the data warehouse for the retrieved data; or</claim-text>
<claim-text>updating some records in the data warehouse with a portion of the retrieved data and creating new records in the data warehouse for another portion of the retrieved data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the computing device comprises a change data capture (CDC) system.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computing device, comprising:
<claim-text>a memory to store a plurality of instructions; and</claim-text>
<claim-text>a processor configured to execute instructions in the memory to:
<claim-text>receive, from a data warehouse, a request for incremental data associated with a particular period of time, wherein the incremental data comprises data that is created, changed or deleted in an enterprise resource planning (ERP) system over the particular period of time,</claim-text>
<claim-text>create one or more temporary tables based on the request,</claim-text>
<claim-text>extract incremental data from tracking tables of the ERP system,</claim-text>
<claim-text>store the extracted incremental data in the one or more temporary tables,</claim-text>
<claim-text>join, via a function call, the one or more temporary tables with one or more regular tables, wherein the one or more regular tables include data associated with the incremental data stored in the one or more temporary tables,</claim-text>
<claim-text>retrieve data from the joined one or more temporary tables and the one or more regular tables, and</claim-text>
<claim-text>store the retrieved data in the data warehouse,</claim-text>
</claim-text>
<claim-text>wherein, when joining the one or more temporary tables with one or more regular tables, the processor is configured to:
<claim-text>retrieve the incremental data from the one or more temporary tables,</claim-text>
<claim-text>retrieve, from the one or more regular tables, particular data associated with the incremental data, and</claim-text>
<claim-text>combine the incremental data with the particular data.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, when extracting incremental data, the processor is further configured to execute instructions in the memory to:
<claim-text>extract the incremental data from the tracking tables of the ERP system according to a predetermined schedule.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, when extracting incremental data, the processor is further to execute instructions in the memory to:
<claim-text>create an Advanced Business Application Programming (ABAP) program that extracts the incremental data from the tracking tables of the ERP system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the processor is further configured to execute instructions in the memory to:
<claim-text>generate one or more notifications that provide a status of the extracting the incremental data from the tracking tables of the ERP system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the processor is further configured to execute instructions in the memory to:
<claim-text>remove the one or more temporary tables after storing the retrieved data in the data warehouse.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the instructions further cause the process to generate a function call to join the one or more temporary tables with one or more regular tables.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, when storing the retrieved data in the data warehouse, the processor is further configured to execute instructions in the memory to at least one of:
<claim-text>update records in the data warehouse with the retrieved data,</claim-text>
<claim-text>create new records in the data warehouse for the retrieved data, or</claim-text>
<claim-text>update some records in the data warehouse with a portion of the retrieved data and create new records in the data warehouse for another portion of the retrieved data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computing device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, where the computing device comprises a change data capture (CDC) system.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. One or more non-transitory computer-readable media storing instructions executable by one or more processors, the media storing one or more instructions for:
<claim-text>receiving, from a data warehouse, a request for incremental data, wherein the incremental data comprises data that is created, changed or deleted in an enterprise resource planning (ERP) system over a particular period of time;</claim-text>
<claim-text>creating one or more temporary tables based on the request;</claim-text>
<claim-text>extracting incremental data from tracking tables of the ERP system;</claim-text>
<claim-text>storing the extracted incremental data in the one or more temporary tables;</claim-text>
<claim-text>generating a function call to join the one or more temporary tables with one or more regular tables, wherein the one or more regular tables include data associated with the incremental data stored in the one or more temporary tables;</claim-text>
<claim-text>retrieving data from the joined one or more temporary tables and the one or more regular tables;</claim-text>
<claim-text>storing the retrieved data in the data warehouse; and</claim-text>
<claim-text>removing the one or more temporary tables after storing the retrieved data in the data warehouse. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
