<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626990-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626990</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13143075</doc-number>
<date>20081230</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>170</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711103</main-classification>
<further-classification>711156</further-classification>
<further-classification>711167</further-classification>
</classification-national>
<invention-title id="d2e53">Non-volatile configuration for serial non-volatile memory</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6094702</doc-number>
<kind>A</kind>
<name>Williams et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2002/0008551</doc-number>
<kind>A1</kind>
<name>Sevalia et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>327105</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2002/0034115</doc-number>
<kind>A1</kind>
<name>Jang et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0193864</doc-number>
<kind>A1</kind>
<name>Tsai et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0196725</doc-number>
<kind>A1</kind>
<name>Kang</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2006/0085589</doc-number>
<kind>A1</kind>
<name>Roohparvar</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2006/0227610</doc-number>
<kind>A1</kind>
<name>Pascucci et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518517</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2008/0165589</doc-number>
<kind>A1</kind>
<name>Hung et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518904</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>10-056490</doc-number>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>International Search Report mailed Sep. 18, 2009 in corresponding International Application No. PCT/IB2008/055583.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Written Opinion mailed Sep. 18, 2009 in corresponding International Application No. PCT/IB2008/055583.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120005411</doc-number>
<kind>A1</kind>
<date>20120105</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Rolandi</last-name>
<first-name>Paolo</first-name>
<address>
<city>Voghera</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lospalluti</last-name>
<first-name>Sandra</first-name>
<address>
<city>Catania</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bufano</last-name>
<first-name>Raffaele</first-name>
<address>
<city>Tremestieri Etneo</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Andreoli</last-name>
<first-name>Stefano</first-name>
<address>
<city>Milan</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Zerilli</last-name>
<first-name>Tommaso</first-name>
<address>
<city>Tremestieri Etneo</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Rolandi</last-name>
<first-name>Paolo</first-name>
<address>
<city>Voghera</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Lospalluti</last-name>
<first-name>Sandra</first-name>
<address>
<city>Catania</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Bufano</last-name>
<first-name>Raffaele</first-name>
<address>
<city>Tremestieri Etneo</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Andreoli</last-name>
<first-name>Stefano</first-name>
<address>
<city>Milan</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Zerilli</last-name>
<first-name>Tommaso</first-name>
<address>
<city>Tremestieri Etneo</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Knobbe Martens Olson &#x26; Bear LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Micron Technology, Inc.</orgname>
<role>02</role>
<address>
<city>Boise</city>
<state>ID</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gu</last-name>
<first-name>Shawn X</first-name>
<department>2188</department>
</primary-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/IB2008/055583</doc-number>
<kind>00</kind>
<date>20081230</date>
</document-id>
<us-371c124-date>
<date>20110926</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2010/076599</doc-number>
<kind>A </kind>
<date>20100708</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Example embodiments for configuring a serial non-volatile memory device may comprise a non-volatile configuration register to store a configuration value received from the processor, the configuration value to specify one or more attributes of a memory access operation. The configuration value may be read at least in part in response to power being applied to the memory device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="118.19mm" wi="172.13mm" file="US08626990-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="181.78mm" wi="136.57mm" orientation="landscape" file="US08626990-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="203.62mm" wi="98.72mm" orientation="landscape" file="US08626990-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="102.87mm" wi="99.57mm" orientation="landscape" file="US08626990-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="130.64mm" wi="137.58mm" orientation="landscape" file="US08626990-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="227.25mm" wi="149.52mm" orientation="landscape" file="US08626990-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="208.96mm" wi="151.81mm" orientation="landscape" file="US08626990-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a National Stage application of and claims the benefit of priority to PCT/IB2008/055583, filed Dec. 30, 2008, entitled Non-Volatile Configuration for Serial Non-Volatile Memory.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Subject matter disclosed herein may relate to non-volatile memory devices, and may relate more particularly to configuring non-volatile memory devices using non-volatile memory cells.</p>
<p id="p-0004" num="0003">Non-volatile memory devices, including flash memory devices, may be found in a wide range of electronic devices. In particular, flash memory devices may be used in computers, digital cameras, cellular telephones, personal digital assistants, etc. For many applications, flash memory devices may store instructions to be executed on a processor, and in at least some of these applications, the processor may fetch instructions from the flash memory devices, such as, for example, in execute-in-place (XiP) implementations.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004">Claimed subject matter is particularly pointed out and distinctly claimed in the concluding portion of the specification. However, both as to organization and/or method of operation, together with objects, features, and/or advantages thereof, it may best be understood by reference to the following detailed description if read with the accompanying drawings in which:</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an example embodiment of a computing platform;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref><i>a </i>is a block diagram depicting an example embodiment of a serial flash memory device configured for single input and single output operation;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref><i>b </i>is a block diagram depicting an example embodiment of a serial flash memory device configured for dual input/output operation;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref><i>c </i>is a block diagram depicting an example embodiment of a serial flash memory device configured for quad input/output operation;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example embodiment of a method for configuring a serial flash memory device for a memory access operation;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram of an example embodiment of a quad input/quad output fast read operation; and</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of an example embodiment of a quad input/quad output fast read operation in an example execute-in-place mode.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0013" num="0012">Reference is made in the following detailed description to the accompanying drawings, which form a part hereof, wherein like numerals may designate like parts throughout to indicate corresponding or analogous elements. It will be appreciated that for simplicity and/or clarity of illustration, elements illustrated in the figures have not necessarily been drawn to scale. For example, the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further, it is to be understood that other embodiments may be utilized. Furthermore, structural or logical changes may be made without departing from the scope of claimed subject matter. It should also be noted that directions or references, for example, up, down, top, bottom, and so on, may be used to facilitate discussion of the drawings and are not intended to restrict the application of claimed subject matter. Therefore, the following detailed description is not to be taken to limit the scope of claimed subject matter or their equivalents.</p>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013">In the following detailed description, numerous specific details are set forth to provide a thorough understanding of claimed subject matter. However, it will be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances, methods, apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.</p>
<p id="p-0015" num="0014">Reference throughout this specification to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; may mean that a particular feature, structure, or characteristic described in connection with a particular embodiment may be included in at least one embodiment of claimed subject matter. Thus, appearances of the phrase &#x201c;in one embodiment&#x201d; or &#x201c;an embodiment&#x201d; in various places throughout this specification are not necessarily intended to refer to the same embodiment or to any one particular embodiment described. Furthermore, it is to be understood that particular features, structures, or characteristics described may be combined in various ways in one or more embodiments. In general, of course, these and other issues may vary with the particular context of usage. Therefore, the particular context of the description or the usage of these terms may provide helpful guidance regarding inferences to be drawn for that context.</p>
<p id="p-0016" num="0015">Likewise, the terms, &#x201c;and,&#x201d; &#x201c;and/or,&#x201d; and &#x201c;or&#x201d; as used herein may include a variety of meanings that also is expected to depend at least in part upon the context in which such terms are used. Typically, &#x201c;or&#x201d; as well as &#x201c;and/or&#x201d; if used to associate a list, such as A, B or C, is intended to mean A, B, and C, here used in the inclusive sense, as well as A, B or C, here used in the exclusive sense. In addition, the term &#x201c;one or more&#x201d; as used herein may be used to describe any feature, structure, or characteristic in the singular or may be used to describe some combination of features, structures or characteristics. Though, it should be noted that this is merely an illustrative example and claimed subject matter is not limited to this example.</p>
<p id="p-0017" num="0016">As discussed above, for many applications, non-volatile memory devices such as flash memory devices may store instructions to be executed on a processor, and in at least some of these applications, the processor may fetch instructions from the flash memory devices, such as, for example, in execute-in-place (XiP) implementations. As used herein, the term &#x201c;execute-in-place&#x201d;, along with its abbreviation &#x201c;XiP&#x201d;, relates to a processor fetching instructions from a long term storage device, such as, for example, a flash memory, rather than fetching instructions from an intermediate storage, such as, for example, a dynamic random access memory (DRAM).</p>
<p id="p-0018" num="0017">Flash memory may be characterized at least in part by the ability to be electrically erasable and programmable, and may be utilized in a very wide range of electronic device types, including, but not limited to, digital cameras, cellular telephones, personal digital assistants, portable navigation devices, portable music players, notebook computers, desktop computers, etc., to name but a few examples. Also, flash memory devices may comprise either parallel data interfaces or serial interfaces. Parallel interfaces, in at least some instances, may allow for relatively good data throughput due at least in part to increased numbers of input/output terminals. Serial interfaces, on the other hand, may provide reduced costs due at least in part to reduced numbers of input/output terminals. As system designers seek to provide increased performance while reducing costs, it may be advantageous to enhance the throughput of serial flash memory devices and/or to provide increased flexibility to meet any number of applications. For one or more embodiments, a non-volatile configuration register may be implemented to enable a serial flash memory device to be programmed to accommodate a variety of situations and/or applications, and to remember its configuration in the event of a power-down of the memory device. Upon a subsequent power-up, the memory device may refer to its non-volatile configuration register to determine the proper configuration in which to resume operation. Although example embodiments described herein discuss flash memory devices, the scope of claimed subject matter is not limited in this respect and other embodiment may utilize other types of nonvolatile memory devices. For example, one or more embodiments may include serial read-only memory (ROM), serial phase change memory (PCM), etc.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an example embodiment of a computing platform <b>100</b>, comprising a processor <b>110</b> and a serial flash memory <b>200</b>. Memory <b>200</b> for this example is coupled to processor <b>110</b> by way of a serial peripheral interface (SPI) <b>115</b>, as discussed more fully below. For one or more embodiments, Serial Flash Memory <b>200</b> may comprise a control unit <b>126</b> and a configuration register <b>124</b>. For one or more embodiments, configuration register <b>124</b> may comprise a non-volatile register. Also for one or more embodiments, non-volatile configuration register <b>124</b> may comprise one or more flash memory cells, although the scope of claimed subject matter is not limited in this respect. Further, memory <b>200</b> may store instructions <b>122</b> that may comprise code for any of a wide range of possible operating systems and/or applications. The instructions may be executed by processor <b>110</b>. Note that for this example, processor <b>110</b> and memory <b>200</b> are configured as an execute-in-place (XiP) type implementation, where processor <b>110</b> may fetch instructions directly from a long-term storage device.</p>
<p id="p-0020" num="0019">For one or more embodiments, control unit <b>126</b> may receive one or more signals from processor <b>110</b> and may generate one or more internal control signals to perform any of a number of operations, including data read operations, by which processor <b>110</b> may access instructions <b>122</b>, for example. As used herein, the term &#x201c;control unit&#x201d; is meant to include any circuitry or logic involved in the management and/or execution of command sequences as they relate to flash memory devices.</p>
<p id="p-0021" num="0020">The term &#x201c;computing platform&#x201d; as used herein refers to a system or a device that includes the ability to process or store data in the form of signals. Thus, a computing platform, in this context, may comprise hardware, software, firmware or any combination thereof. Computing platform <b>100</b>, as depicted in <figref idref="DRAWINGS">FIG. 1</figref>, is merely one such example, and the scope of claimed subject matter is not limited in these respects. For one or more embodiments, a computing platform may comprise any of a wide range of digital electronic devices, including, but not limited to, personal desktop or notebook computers, high-definition televisions, digital versatile disc (DVD) players or recorders, game consoles, satellite television receivers, cellular telephones, personal digital assistants, mobile audio or video playback or recording devices, and so on. Further, unless specifically stated otherwise, a process as described herein, with reference to flow diagrams or otherwise, may also be executed or controlled, in whole or in part, by a computing platform. For the example embodiments described herein, computing platform <b>100</b> may comprise a cellular telephone, although again, the scope of claimed subject matter is not so limited.</p>
<p id="p-0022" num="0021">As mentioned above, for an embodiment, processor <b>110</b> may be coupled to serial flash memory <b>200</b> by way of a serial peripheral interface <b>115</b>. The term &#x201c;serial peripheral interface&#x201d; for an embodiment refers to a de facto standard for serial communications between components in some electronic devices. SPI <b>115</b> may comprise a number of signals, as will be discussed more fully below, including a clock signal, input/output signals, and a slave select signal. <figref idref="DRAWINGS">FIGS. 2</figref><i>a </i>through <b>2</b><i>c </i>below, describe several modes of operation for SPI <b>115</b> as it relates to serial flash memory device <b>200</b>, including single input/output interface operations, dual input/output interface operations, and quad input/output interface operations.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref><i>a </i>is a block diagram depicting an example embodiment of a serial flash memory device configured for single input/output (I/O) interface operations. Serial flash memory <b>200</b> may comprise a terminal Vcc to be coupled to a power source, and a terminal Vpp that may also be coupled to a power source, but which may also have other purposes in other configurations, as discussed below. Memory <b>200</b> may also include a terminal Vss that may provide an electrical connection to a ground signal. Serial flash memory <b>200</b> for this example may also comprise a data input terminal DI <b>211</b> and a data output terminal DO <b>212</b>, as well as a Reset# signal terminal <b>201</b>, a clock C signal terminal <b>203</b>, and a Slave (S#) signal <b>205</b>. if serial flash memory <b>200</b> is operating in the single input, single output mode, information may be shifted into the memory via DI <b>211</b>, and may be shifted out of the memory via DO <b>212</b>. Also, for one or more embodiments, terminal <b>201</b> may be utilized for functions other than the reset function. For example, a HOLD# signal may be received at terminal <b>201</b> for one or more embodiments.</p>
<p id="p-0024" num="0023">For an embodiment, an SPI command sequence may begin with a one byte command code that may be initiated with a falling edge of S# <b>205</b>. The 8 bit command code may be latched into DI <b>211</b>, most significant bit (MSB) first, for an example embodiment, on a rising edge of C <b>203</b>. Depending on the particular command code, the command code may be followed by additional address bytes, followed by dummy bytes and/or data bytes. The total number of input cycles for a command depends on the particular command code. Further, for this example, address bits may be latched at DI <b>211</b> on the rising edge of C. Also, cycles during which undefined (don't care) data are shifted onto DI <b>211</b> may be referred to as dummy clock cycles. Also, for an embodiment, as with the command code, the address, dummy, and data bytes are latched at DI <b>211</b> most significant bit first, for this example, although the scope of claimed subject matter is not limited in this respect.</p>
<p id="p-0025" num="0024">Further, for an embodiment, depending upon the particular command code, data bytes may either be latched as input data at DI <b>211</b> or transmitted as output data from DO <b>212</b>. For cycles that input data through DI <b>211</b>, DO <b>212</b> may be set to a high impedance (Z) state.</p>
<p id="p-0026" num="0025">Also for an embodiment, a rising edge of S# <b>205</b> may signal an end to the command sequence and may initiate a resetting of the SPI interface. A de-assertion of S# may also result in a termination of the output data stream for read operations, may bring DO <b>212</b> to a high Z state, and may also result in memory <b>200</b> entering a standby mode. Of course, these are merely examples of the possible results of a de-assertion of S# <b>205</b>, and the scope of claimed subject matter is not limited in these respects.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 2</figref><i>b </i>is a block diagram depicting an example embodiment of serial flash memory device <b>200</b> configured as a dual input/output interface. During a dual I/O command sequence, DI <b>211</b> and DO <b>212</b> may be referred to as DQ0 <b>211</b> and DQ1 <b>212</b>, and may be utilized as either input or output terminals, depending on the state of the command sequence. Information may be latched into DQ0 <b>211</b> and DQ1 <b>212</b> on the rising edge of C <b>203</b>, and information may be shifted out of terminals DQ0 <b>211</b> and DQ1 <b>212</b> on the falling edge of C <b>203</b>.</p>
<p id="p-0028" num="0027">A Dual Input Fast Program (DIFP) command, for an embodiment, makes it possible to program up to 256 bytes using terminals <b>211</b> and <b>212</b> concurrently as data input terminals. At the beginning of the command sequence, DQ0 <b>211</b> may be used to latch the command code and address information.</p>
<p id="p-0029" num="0028">A Dual Output Fast Read (DOFR) command, for an embodiment, makes it possible to read a data byte using two terminals DQ1 <b>212</b> and DQ0 <b>211</b> concurrently. Transmitting the information over two lines instead of one may effectively double the data transfer throughput compared to the Fast Read Data Bytes (Fast Read) command. DQ0 <b>211</b> may be used to latch the command code and address information, for an embodiment.</p>
<p id="p-0030" num="0029">Also, for an embodiment, a Dual I/O Fast Read (DIOFR) command may share many similarities with the DOFR command, discussed above, but it may also allow the input of the address using DQ0 <b>211</b> and DQ1 <b>212</b> concurrently as data output terminals. As with the commands discussed above, DQ0 <b>211</b> may be used to latch the command code and address information.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 2</figref><i>c </i>is a block diagram depicting an example embodiment of serial flash memory device <b>200</b> configured for quad input/output operations. For Quad I/O command sequences, for an embodiment, DQ0 <b>211</b> and DQ1 <b>212</b> terminals may be used as input and output terminals. Information may be latched on the rising edge of C <b>203</b>, and information may be shifted out onto the terminals on the falling edge of C <b>203</b>. During a quad I/O command sequence, at least in part in response to receiving the command code, the Vpp and Reset# <b>201</b> terminals may be re-purposed as input/output terminals DQ2 <b>213</b> and DQ3 <b>201</b>, respectively.</p>
<p id="p-0032" num="0031">For an embodiment, a Quad I/O Fast Read Data Bytes (QIOFR) command may allow reading information using four pins DQ3 <b>201</b>, DQ2 <b>213</b>, DQ1 <b>212</b>, and DQ0 <b>211</b> concurrently as data output terminals. Transmitting data on four terminals instead of one may greatly improve throughput compared to the Fast Read command, noted above. For the QIOFR command, it may also be possible to receive the address over the same four terminals. As with other commands discussed above, DQ0 <b>211</b> may be used to receive the command code.</p>
<p id="p-0033" num="0032">Various configurations for serial flash memory <b>200</b> among those discussed above, along with various examples of command sequences including execute-in-place (XiP) read operations, are revisited below. Also, it should be noted that the operations, command sequences, and serial flash memory device configurations described herein are merely examples, and the scope of claimed subject matter is not limited in this respect.</p>
<p id="p-0034" num="0033">For one or more embodiments, it may be advantageous to adapt one or more elements of one or more command sequences for some situations. For example, as discussed more fully below, it may be advantageous to adjust the number of dummy cycles in a command sequence. Other memory device configuration parameters such as output driver strength may also be adjusted in order to provide improved performance depending on conditions. Several example configuration parameters are described herein as examples. However, the scope of claimed subject matter is not limited to the specific examples described herein.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example embodiment of a method for configuring a serial non-volatile memory device using a non-volatile configuration register. At block <b>310</b>, a configuration value may be read from a non-volatile register in a serial non-volatile memory device at least in part in response to power being applied to the serial non-volatile memory device. The configuration value may specify one or more attributes of a memory access operation, for an embodiment. At block <b>320</b>, a performance of the memory access operation may be modified based, at least in part, on the one or more attributes specified by the configuration value. Embodiments in accordance with claimed subject matter may include all, less than, or more than blocks <b>310</b>-<b>320</b>. Also, the order of blocks <b>310</b>-<b>320</b> is merely an example order, and the scope of claimed subject matter is not limited in this respect.</p>
<p id="p-0036" num="0035">As previously mentioned, for one or more embodiments, configuration register <b>124</b> may be implemented as a non-volatile configuration register. Also for one or more embodiments, configuration register <b>124</b> may comprise a plurality of flash memory cells, although the scope of claimed subject matter is not limited in this respect. By implementing the configuration register as a non-volatile memory, configuration parameters stored therein may be maintained even in the event of a power-down of serial flash memory device <b>200</b>. Therefore, there may be no need to re-program memory device <b>200</b> upon a subsequent power-up of the memory device, and the clock cycles that would have been wasted in re-programming the memory device may be saved, resulting in reduced overhead and improved overall system performance.</p>
<p id="p-0037" num="0036">For one or more embodiments, any of a number of configuration parameters may be stored in non-volatile configuration register <b>124</b>. Table 1, below, comprises one example listing of configuration parameters along with example values for the various fields of the registers. Of course, the example depicted by Table 1 is merely one example, and the scope of claimed subject matter is not limited in these respects.</p>
<p id="p-0038" num="0037">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="266pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Non-Volatile Configuration Register</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="28pt" align="left"/>
<colspec colname="4" colwidth="63pt" align="left"/>
<colspec colname="5" colwidth="63pt" align="left"/>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>Parameter</entry>
<entry>Value</entry>
<entry>Description</entry>
<entry>Note</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>NVCR &#x3c;15:12&#x3e;</entry>
<entry>Dummy Clock</entry>
<entry>0000</entry>
<entry>Reserved</entry>
<entry>To improve</entry>
</row>
<row>
<entry/>
<entry>Cycles</entry>
<entry>0001</entry>
<entry>&#x2002;1</entry>
<entry>instruction fetch</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0010</entry>
<entry>&#x2002;2</entry>
<entry>performance (Fast</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0011</entry>
<entry>&#x2002;3</entry>
<entry>Read, DOFR,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0100</entry>
<entry>&#x2002;4</entry>
<entry>DIOFR, QOFR,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0101</entry>
<entry>&#x2002;5</entry>
<entry>QIOFR) according</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0110</entry>
<entry>&#x2002;6</entry>
<entry>to frequency</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0111</entry>
<entry>&#x2002;7</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1000</entry>
<entry>&#x2002;8</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1001</entry>
<entry>&#x2002;9</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1010</entry>
<entry>10</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1011</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1100</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1101</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1110</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1111</entry>
<entry>Target on maximum</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>allowed frequency</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>and to guarantee</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>backward</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>compatibility</entry>
</row>
<row>
<entry>NVCR &#x3c;11:9&#x3e;</entry>
<entry/>
<entry>000</entry>
<entry>XiP for SIO Read</entry>
</row>
<row>
<entry/>
<entry/>
<entry>001</entry>
<entry>XiP for DOFR</entry>
</row>
<row>
<entry/>
<entry/>
<entry>010</entry>
<entry>XiP for DIOFR</entry>
</row>
<row>
<entry/>
<entry/>
<entry>011</entry>
<entry>XiP for QOFR</entry>
</row>
<row>
<entry/>
<entry/>
<entry>100</entry>
<entry>XiP for QIOFR</entry>
</row>
<row>
<entry/>
<entry/>
<entry>101</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>110</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>111</entry>
<entry>XiP Disabled</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(default)</entry>
</row>
<row>
<entry>NVCR &#x3c;8:6&#x3e;</entry>
<entry/>
<entry>000</entry>
<entry>Reserved</entry>
<entry>Impedance at</entry>
</row>
<row>
<entry/>
<entry/>
<entry>001</entry>
<entry>90</entry>
<entry>Vcc/2</entry>
</row>
<row>
<entry/>
<entry/>
<entry>010</entry>
<entry>60</entry>
</row>
<row>
<entry/>
<entry/>
<entry>011</entry>
<entry>45</entry>
</row>
<row>
<entry/>
<entry/>
<entry>100</entry>
<entry>Reserved</entry>
</row>
<row>
<entry/>
<entry/>
<entry>101</entry>
<entry>20</entry>
</row>
<row>
<entry/>
<entry/>
<entry>110</entry>
<entry>15</entry>
</row>
<row>
<entry/>
<entry/>
<entry>111</entry>
<entry>30 (default)</entry>
</row>
<row>
<entry>NVCR &#x3c;5&#x3e;</entry>
<entry>First Access After</entry>
<entry>0</entry>
<entry>Enabled</entry>
<entry>&#x3c;200 &#x3bc;s - only</entry>
</row>
<row>
<entry/>
<entry>Power-Up</entry>
<entry/>
<entry/>
<entry>read operations</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>available</entry>
</row>
<row>
<entry/>
<entry/>
<entry>1</entry>
<entry>Disabled</entry>
<entry>700 &#x3bc;s - all</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>operations</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>available</entry>
</row>
<row>
<entry>NVCR &#x3c;4:0&#x3e;</entry>
<entry>Reserved</entry>
<entry>xxxxx</entry>
<entry>Don't Care</entry>
<entry>Default value =</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>11111b</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0039" num="0038">As depicted in Table 1, for one or more embodiments, memory device <b>200</b> may implement a variable number of dummy dock cycles depending on operating frequency and the characteristics of the memory device. Trade-offs may also be made between reliability and performance, for an embodiment. By providing a programmable solution for adjusting the number of dummy cycles for various types of command sequences, it may be possible to deviate from the numbers of dummy cycles normally utilized for operations compatible with the SPI protocol, for example. The non-volatile nature of the configuration register further allows for an application executed on processor <b>110</b> to program memory device <b>200</b> once, and the memory device may maintain the programmed values indefinitely, thereby eliminating the need to re-program the memory device each time the device is started up. Thus, system overhead may be reduced, and overall system performance may be improved. Of course, non-volatile configuration register <b>124</b> may be re-programmed any number of times, if desired, although the scope of claimed subject matter is not limited in this respect.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram of an example embodiment of a quad input/quad output fast read operation. This example demonstrates a number of dummy clock cycles between the address phase of the command sequence and the data phase. At byte <b>0</b>, S# becomes asserted by processor <b>110</b>, indicating that processor <b>110</b> is acting as the master and memory <b>200</b> is acting as slave, for this example, and a command code is presented by the processor to DI <b>211</b>. For this particular command sequence, there is a single input on DI <b>211</b>, and there are four outputs on terminals DQ0 <b>211</b>, DQ1 <b>212</b>, DQ2 <b>213</b>, and DQ3 <b>201</b>. For this example, four input terminals are used to shift in the address bytes. Specifically, the address is received during bytes <b>1</b>-<b>3</b> at DQ0 <b>211</b>, DQ1 <b>212</b>, DQ2 <b>213</b>, and DQ3 <b>201</b>. Data is shifted out of memory device <b>200</b> during byte <b>6</b> at DQ0 <b>211</b>, DQ1 <b>212</b>, DQ2 <b>213</b>, and DQ3 <b>201</b>.</p>
<p id="p-0041" num="0040">For this example, four dummy cycles are depicted at bytes <b>4</b> and <b>5</b>. However, as shown in Table 1, any of a range of possible numbers of dummy cycles may be specified, depending for the present example on the value stored in the NVCR &#x3c;15:12&#x3e; field of non-volatile configuration register <b>124</b>. For one or more embodiments, any of a range of one to ten dummy cycles may be specified. However, the scope of claimed subject matter is not limited in this respect.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of an example embodiment of a quad input/quad output fast read operation in XiP mode. As used herein, the term &#x201c;execute-in-place mode&#x201d; or &#x201c;XiP mode&#x201d; is meant to include any mode of operation for a serial flash memory device that configures that memory device for improved performance for read operations initiated by a processor. For one or more embodiments described herein, the improved performance may comprise performing read operations without a command code being received by the memory device from the processor. Because this example command sequence of <figref idref="DRAWINGS">FIG. 5</figref> is in XiP mode, no command code is presented to DQ0 <b>211</b> at the beginning of the sequence. Rather, the sequence begins with the address. By eliminating the need for a command code, eight clock cycles may be saved for read operations, for one example embodiment, and read operation performance may be enhanced. For this example embodiment, the input information is received over four terminals, DQ0 <b>211</b>, DQ1 <b>212</b>, DQ2 <b>213</b>, and DQ3 <b>201</b>. Output data is transmitted over the same four output terminals DQ0 <b>211</b>, DQ1 <b>212</b>, DQ2 <b>213</b>, and DQ3 <b>201</b>. Also, although the example command sequence of <figref idref="DRAWINGS">FIG. 5</figref> depicts four dummy cycles, other numbers of dummy cycles may be specified by writing appropriate values to NVCR &#x3c;11:9&#x3e; field, as shown in Table 1 and as described above in connection with <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0043" num="0042">As mentioned above, and as depicted in <figref idref="DRAWINGS">FIG. 1</figref>, serial flash memory device <b>200</b> may comprise a non-volatile configuration register <b>124</b> and a control unit <b>126</b>. Configuration register <b>124</b> may be used to indicate that an XiP mode of operation has been entered. By storing the indication in a non-volatile register, memory device <b>200</b> may remember its current mode of operation even in the event of a system shutdown or reset. Memory device <b>200</b> may begin operation in the indicated XiP mode of operation upon a system restart. In this manner, there in no need for processor <b>100</b> to re-program memory device <b>200</b> to enter the XiP mode every time the system is restarted. Overall system performance may be improved, and user of the system may perceive a quicker start-up in some situations.</p>
<p id="p-0044" num="0043">For one or more embodiments, a number of XiP modes of operation may be implemented in accordance with a number of different read operation types. Possible XiP mode read operations, for one or more embodiments, may include but are not limited to, Fast Read Data Bytes (Fast Read), Dual Output Fast Read Data Bytes (DOFR), Dual I/O Fast Read Data Bytes (DIOFR), Quad Output Fast Read Data Bytes (QOFR) and Quad I/O Fast Read Data Bytes (QIOFR) commands.</p>
<p id="p-0045" num="0044">Non-Volatile configuration register <b>124</b> for an embodiment may be programmed through a Write to Configuration Register (WRCR) command. Also, for an embodiment, the contents of the non-volatile configuration register may be verified by way of a dedicated read operation which, for an embodiment, may comprise an eight-bit command code.</p>
<p id="p-0046" num="0045">For an embodiment, non-volatile configuration register <b>124</b> may comprise flash memory cells, and may have a default value determined during the manufacturing process, for example. Also for an embodiment, the default value for the NVCR &#x3c;11:9&#x3e; field may comprise a value signifying an &#x201c;XiP Disabled&#x201d; mode. However, the scope of claimed subject matter is not limited in these respects.</p>
<p id="p-0047" num="0046">For one or more embodiments, non-volatile configuration register <b>124</b> may store a value specifying an output driver strength. For example, Table 1 depicts possible impedance values ranging from 15 Ohms to 90 Ohms, as measured at Vcc/2. As also depicted in Table 1, for one or more embodiments, NVCR &#x3c;8:6&#x3e; field may be used to specify the output driver strength. However, the scope of claimed subject matter is not limited in these respects. The ability to program the driver strength and for the memory device to remember the programmed configuration may help to increase performance and/or to improve signal integrity. Of course, the driver strength value in NVCR &#x3c;8:6&#x3e; may be re-programmed for one or more embodiments should environmental circumstances warrant.</p>
<p id="p-0048" num="0047">Also, for one or more embodiments, non-volatile register <b>124</b> may store a value indicating a minimum time for a first access after power-up. If a fast power-up mode is enabled by writing a &#x2018;1&#x2019; to NVCR &#x3c;5&#x3e;, read operations only may be available within the first 200 &#x3bc;s. If the fast power-up mode is not enabled, then after 700 &#x3bc;s have elapsed, for an embodiment, all memory access operations may be available. For situations in which memory device <b>200</b> is providing instructions <b>122</b> to processor <b>110</b>, the fast power-up mode may enable system <b>100</b> to recover quicker from a low-power state to resume code fetch operations from memory device <b>200</b>. Of course, these are merely examples of a fast power-up mode, and the scope of claimed subject matter is not limited to the specific details discussed herein.</p>
<p id="p-0049" num="0048">As also depicted in Table 1, the NVCR &#x3c;4:0&#x3e; field is reserved for an embodiment for future use. For one or more embodiments, any of a wide range of possible memory device parameters may be programmable via non-volatile configuration register <b>124</b>, and the scope of claimed subject matter is not limited to the specific examples discussed herein and/or depicted in the accompanying figures and table.</p>
<p id="p-0050" num="0049">In the preceding description, various aspects of claimed subject matter have been described. For purposes of explanation, systems or configurations were set forth to provide an understanding of claimed subject matter. However, claimed subject matter may be practiced without those specific details. In other instances, well-known features were omitted or simplified so as not to obscure claimed subject matter. While certain features have been illustrated or described herein, many modifications, substitutions, changes or equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications or changes as fall within the true spirit of claimed subject matter.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of configuring a memory, the method comprising:
<claim-text>reading a configuration value in a non-volatile configuration register in a serial non-volatile memory device at least in part in response to power being applied to the serial non-volatile memory device, the configuration value to specify one or more attributes of a read operation, wherein at least one of the one or more attributes comprises an execute-in-place mode for the read operation; and</claim-text>
<claim-text>modifying a performance of the read operation by the serial nonvolatile memory device based at least in part on the one or more attributes specified by the configuration value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the serial non-volatile memory device comprises a serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the one or more attributes of the read operation comprise a number of dummy cycles for the read operation.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the one or more attributes further comprise an output driver strength for the serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more attributes further comprise a minimum time before first access after power-up for the serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the non-volatile configuration register comprises a plurality of flash memory cells.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising updating contents of the non-volatile configuration register at least in part in response to receiving a subsequent configuration value from a processor.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A serial non-volatile memory device, comprising:
<claim-text>a non-volatile configuration register to store a configuration value, the configuration value to specify one or more attributes of a read operation, wherein at least one of the one or more attributes comprises an execute-in-place mode for the read operation; and</claim-text>
<claim-text>a control unit configured to read the configuration value from the non-volatile configuration register at least in part in response to power being applied to the serial non-volatile memory device, the control unit configured to modify a performance of the read operation by the serial non-volatile memory device based at least in part on the one or more attributes specified by the configuration value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The memory device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the serial non-volatile memory device comprises a serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The memory device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the one or more attributes of the read operation comprise a number of dummy cycles for the read operation.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The memory device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the one or more attributes further comprise an output driver strength for the serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The memory device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the one or more attributes further comprise a minimum time before first access after power-up for the serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The memory device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the non-volatile configuration register comprises a plurality of flash memory cells.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The memory device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the non-volatile configuration register is configured to be updated at least in part in response to the serial non-volatile memory device receiving a subsequent configuration value from a processor.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system, comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a serial non-volatile memory device coupled to the processor, the memory device comprising:
<claim-text>a non-volatile configuration register to store a configuration value received from the processor, the configuration value to specify one or more attributes of a read operation, wherein at least one of the one or more attributes comprises an execute-in-place mode for the read operation; and</claim-text>
<claim-text>a control unit configured to read the configuration value from the non-volatile configuration register at least in part in response to power being applied to the serial non-volatile memory device, the control unit configured to modify a performance of the read operation by the serial non-volatile memory device based at least in part on the one or more attributes specified by the configuration value.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the one or more attributes of the read operation further comprise one or more of a number of dummy cycles for the read operation, an execute-in-place mode, an output driver strength, and/or a minimum time before first access after power-up for the serial non-volatile memory device.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the non-volatile configuration register comprises a plurality of flash memory cells and wherein the serial non-volatile memory device comprises a serial flash memory device.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the non-volatile configuration register is configured to be updated at least in part in response to the serial flash memory device receiving a subsequent configuration value from the processor. </claim-text>
</claim>
</claims>
</us-patent-grant>
