<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624837-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624837</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13073306</doc-number>
<date>20110328</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>330</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>09</class>
<subclass>G</subclass>
<main-group>5</main-group>
<subgroup>08</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>345157</main-classification>
<further-classification>345173</further-classification>
</classification-national>
<invention-title id="d2e53">Methods and apparatus related to a scratch pad region of a computing device</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5481278</doc-number>
<kind>A</kind>
<name>Shigematsu et al.</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5495077</doc-number>
<kind>A</kind>
<name>Miller et al.</name>
<date>19960200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5764218</doc-number>
<kind>A</kind>
<name>Della Bona et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5821922</doc-number>
<kind>A</kind>
<name>Sellers</name>
<date>19981000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5825352</doc-number>
<kind>A</kind>
<name>Bisset et al.</name>
<date>19981000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5864334</doc-number>
<kind>A</kind>
<name>Sellers</name>
<date>19990100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5943052</doc-number>
<kind>A</kind>
<name>Allen et al.</name>
<date>19990800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6216988</doc-number>
<kind>B1</kind>
<name>Hsu et al.</name>
<date>20010400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6266050</doc-number>
<kind>B1</kind>
<name>Oh et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6336614</doc-number>
<kind>B1</kind>
<name>Kwitek</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6337678</doc-number>
<kind>B1</kind>
<name>Fish</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6610936</doc-number>
<kind>B2</kind>
<name>Gillespie et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6611253</doc-number>
<kind>B1</kind>
<name>Cohen</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6654001</doc-number>
<kind>B1</kind>
<name>Su</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6756971</doc-number>
<kind>B1</kind>
<name>Ramey et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6819312</doc-number>
<kind>B2</kind>
<name>Fish</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6943705</doc-number>
<kind>B1</kind>
<name>Bolender et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7038659</doc-number>
<kind>B2</kind>
<name>Rajkowski</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>8098233</doc-number>
<kind>B2</kind>
<name>Hotelling et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2002/0080123</doc-number>
<kind>A1</kind>
<name>Kennedy et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2004/0104894</doc-number>
<kind>A1</kind>
<name>Tsukada et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2004/0233624</doc-number>
<kind>A1</kind>
<name>Aisenberg</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2006/0033701</doc-number>
<kind>A1</kind>
<name>Wilson</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2006/0119582</doc-number>
<kind>A1</kind>
<name>Ng et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2007/0273660</doc-number>
<kind>A1</kind>
<name>XiaoPing</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2008/0018615</doc-number>
<kind>A1</kind>
<name>Zadesky et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2010/0214250</doc-number>
<kind>A1</kind>
<name>Gillespie et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>JP</country>
<doc-number>6289969</doc-number>
<kind>A</kind>
<date>19941000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>JP</country>
<doc-number>11194883</doc-number>
<kind>A</kind>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>WO</country>
<doc-number>92/11623</doc-number>
<date>19920700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>WO</country>
<doc-number>98/43202</doc-number>
<kind>A1</kind>
<date>19981000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>WO</country>
<doc-number>2004025449</doc-number>
<kind>A2</kind>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>345156</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345157</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345173-179</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Han</last-name>
<first-name>Amy</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Han</last-name>
<first-name>Amy</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Brake Hughes Bellermann LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Google Inc.</orgname>
<role>02</role>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Osorio</last-name>
<first-name>Ricardo L</first-name>
<department>2692</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In one general aspect, a computing device can include a display, a touchpad configured for moving a cursor on the display, and a keyboard for inputting input into the computing device. The computing device also can include a scratch region mutually exclusive from the touchpad and the keyboard. The scratch region can be configured to receive input to the computing device based on contact with the scratch region. An interaction detection module can be configured to detect an interaction with the scratch region, and configured to generate an indicator of the interaction. The computing device can also include a scratch region analyzer configured to define an alphanumeric character based on the indicator of the interaction with the scratch region.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="130.13mm" wi="157.40mm" file="US08624837-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="206.93mm" wi="178.39mm" file="US08624837-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="181.78mm" wi="140.72mm" file="US08624837-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="188.04mm" wi="152.57mm" file="US08624837-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="192.70mm" wi="134.11mm" file="US08624837-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="238.34mm" wi="163.83mm" file="US08624837-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="154.26mm" wi="149.61mm" file="US08624837-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="242.32mm" wi="154.94mm" file="US08624837-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="175.77mm" wi="133.43mm" file="US08624837-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">This description relates to user input devices of a computing device.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Many known computing devices can have several mechanisms through which a user may interact with (e.g., trigger) one or more functions of the computing device. For example, user input devices such as keyboards, mouse devices, touch screen displays and/or so forth, through which a user may interact with computing devices to perform one or more computing functions can be connected with and/or integrated into the computing devices. However, these user input devices may be cumbersome to use and/or may not produce results at a desirable speed and/or level of accuracy.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">In one general aspect, a computing device can include a display, a touchpad configured for moving a cursor on the display, and a keyboard for inputting input into the computing device. The computing device also can include a scratch region mutually exclusive from the touchpad and the keyboard. The scratch region can be configured to receive input to the computing device based on contact with the scratch region. An interaction detection module can be configured to detect an interaction with the scratch region, and configured to generate an indicator of the interaction. The computing device can also include a scratch region analyzer configured to define an alphanumeric character based on the indicator of the interaction with the scratch region.</p>
<p id="p-0005" num="0004">In another general aspect, a tangible computer-readable storage medium can store code representing instructions that when executed can be configured to cause a processor to perform a process. The code can include code to detect a plurality of interactions with a scratch region of a computing device. The scratch region can be mutually exclusive from a touchpad for moving a cursor of the computing device and from a keyboard of the computing device. The code can include code to generate an indicator of a first interaction from the plurality of interactions, and an indicator of a second interaction from the plurality of interactions. The code can include code to associate the indicator of the first interaction from the plurality of interactions with an interpretation instruction, and code to interpret, in response to the interpretation instruction, the second interaction from the plurality of interactions as an alphanumeric character based on the indicator of the second interaction from the plurality of interactions</p>
<p id="p-0006" num="0005">In yet another general aspect, a method can include changing at least a portion of a scratch device included in a computing device from an inactive state to an active state in response to a first interaction with a scratch region of the scratch device. The changing can be performed while a primary operating system of the computing device is in an inactive state. The method can include defining an indicator of the first interaction, and defining an indicator of a second interaction with the scratch region of the scratch device. The method can include associating the indicator of the first interaction from the plurality of interactions with an instruction configured to trigger processing of the indicator of the second interaction from the plurality of interactions.</p>
<p id="p-0007" num="0006">The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a computing device including a scratch region.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart that illustrates a method for associating an interaction with an instruction.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram that illustrates a computing device that has a scratch region.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart that illustrates a method related to changing a state of a scratch device.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> is a schematic diagram that illustrates multiple scratch regions of a computing device.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram that illustrates a scratch region included in a portion of the computing device.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 7</figref> is a schematic diagram that illustrates a scratch region of a computing device.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 8A</figref> is a diagram that illustrates a scratch region included in an extension of a computing device when the extension is in a deployed configuration.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 8B</figref> is a diagram that illustrates the extension of the computing device (shown in <figref idref="DRAWINGS">FIG. 8A</figref>) when the extension is in a stowed configuration.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart that illustrates a method for using a scratch region of the computing device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a computing device <b>100</b> including a scratch device <b>112</b> (also can be referred to as scratch pad device). The scratch device <b>112</b> is a user input device that is separate from other user input devices of the computing device <b>100</b> such as an electrostatic touch pad <b>140</b> of the computing device <b>100</b> used to control, for example, a mouse (e.g., a mouse pointing device) and/or a keyboard <b>150</b> of the computing device <b>100</b>. Specifically, the scratch device <b>112</b> is a device of the computing device <b>100</b> through which a user can store information (e.g., notes) without interacting with the computing device <b>300</b> via the electrostatic touchpad <b>140</b> and/or the keyboard <b>150</b>. Thus, the scratch device <b>112</b> is configured as an alternative through which a user can store information (in a memory of the computing device <b>100</b>) using the computing device <b>100</b>.</p>
<p id="p-0019" num="0018">Specifically, the scratch device <b>112</b> is configured to function as an electronic notepad through which a user of the computing device <b>100</b> can take notes and/or make other types of markings. The scratch device <b>112</b> includes a scratch region <b>110</b> (also can be referred to as scratch pad region) upon which a user can write handwritten notes, drawings, etc. using, for example, a typical pencil similar to a typical paper notepad (e.g., a sticky notepad, a scratch pad). Unlike a typical paper notepad, notes jotted onto the scratch region <b>110</b> by the user can be electronically stored, manipulated, interpreted, and/or otherwise processed. Thus, a user can jot several pages of notations into the scratch region <b>110</b> that can be electronically stored as pages, recalled, printed, etc. Using the scratch device <b>112</b>, a user can be spared the inconveniences of, for example, finding scratch paper, handling handwritten notes that may be misplaced, and so forth.</p>
<p id="p-0020" num="0019">The scratch region <b>110</b> of the scratch device <b>112</b> can be configured so that an interaction (e.g., contact, gesture) of a user (not shown) with the scratch region <b>110</b> can be detected by an interaction detection module <b>114</b> of the scratch device <b>112</b>. The interaction detection module <b>114</b> can be configured to generate an indicator of the interaction of the user with the scratch region <b>110</b>. The indicator of the interaction can be, for example, an electrical signal (e.g., an analog signal) produced directly in response to the interaction with the scratch region <b>110</b>. The indicator of the interaction (e.g., contact, gesture) can be sent from the interaction detection module <b>114</b> and processed at a scratch module <b>120</b>. An interpretation of the interaction, such as a series of alphanumeric characters, can be defined (e.g., defined at the scratch module <b>120</b>) based on the indicator of the interaction. For example, an indicator of an interaction can be interpreted as words or as an image drawn by a user. In some embodiments, the indicator of the interaction and/or the interpretation of the indicator of the interaction can be stored in a memory <b>130</b>. In some embodiments, an indicator of an interaction of a user with the scratch region <b>110</b> can be referred to as an interaction indicator. In some embodiments, an interpretation of an interaction indicator can be referred to as an interpretation.</p>
<p id="p-0021" num="0020">In some embodiments, the scratch region <b>110</b> of the scratch device <b>112</b> can be physically defined within a surface of the computing device <b>110</b>. In some embodiments, the scratch region <b>110</b> can be associated with a physical area within an existing surface of the computing device <b>110</b>. Although some of the details related to physical implementations of the scratch region <b>110</b> are described in connection with <figref idref="DRAWINGS">FIG. 1</figref>, more details related to the physical implementations of the scratch region <b>110</b> are also described, for example, in connection with the remaining figures.</p>
<p id="p-0022" num="0021">In some embodiments, the scratch region <b>110</b> and the interaction detection module <b>114</b> can collectively define a touch (e.g., contact) sensitive device (e.g., an electrostatic touchpad, a resistive touchscreen device, a surface acoustic wave (SAW) device, a capacitive touchscreen device, a pressure sensitive device, a surface capacitive device, a projected capacitive touch (PCT) device, and/or so forth) that is separate from the electrostatic touch pad <b>140</b> of the computing device <b>100</b> used to control a mouse (e.g., a mouse pointing device) and/or the keyboard <b>150</b> of the computing device <b>100</b>. Said differently, the scratch region <b>110</b> and the interaction detection module <b>114</b> can collectively define an input device that is different from a device such as the electrostatic touchpad <b>140</b> and/or the keyboard <b>150</b>.</p>
<p id="p-0023" num="0022">The scratch region <b>110</b> and the interaction detection module <b>114</b> can be collectively defined so that an interaction (e.g., contact, gesture) of the user with the scratch region <b>110</b> can be converted into an indicator by the interaction detection module <b>114</b>. The interaction with the scratch region <b>110</b> can be any type of interaction that can be detected by and converted by the interaction detection module <b>114</b> into an indicator. In some embodiments, the interaction detection module <b>114</b> can be any type of hardware and/or software that can be used to convert an interaction of the user with the scratch region <b>110</b> into an indicator of the interaction. In some embodiments, the defining of an indicator based on an interaction with the scratch region <b>110</b> can be referred to as registering the interaction.</p>
<p id="p-0024" num="0023">For example, a user can interact with the scratch region <b>110</b> (which can be defined within a surface of the computing device <b>100</b>) by moving (e.g., contacting) a tip of a pointing device (e.g., a pencil, a pen, a stylus) and/or a finger of the user along a surface of the scratch region <b>110</b> to define, for example, one or more marks (e.g., lines, curves), one or more glyphs, portions of a drawing, alphanumeric characters, or set of alphanumeric characters, (which can be defined by one or more glyphs), and/or so forth. During the movements, the tip of the pencil can physically contact at least a portion of the surface of the scratch region <b>110</b>. The interaction, which in this case is the physical movements of the pencil along the surface of the scratch region <b>100</b>, can be detected by the interaction detection module <b>114</b>, and the interaction detection module <b>114</b> can be configured to generate an indicator that represents the interaction. Specifically, the indicator can represent the glyph(s), the portion(s) of the drawing, the alphanumeric characters, and/or so forth.</p>
<p id="p-0025" num="0024">In some embodiments, the indicator can be, for example, a digital signal (e.g., a binary digital signal, a binary sequence of bits) and/or an analog signal that represents one or more portions of the interaction. In some embodiments, an indicator can be an approximation of an interaction. For example, an indicator can be configured to approximate one or more portions of the interaction using a sequence of bits that represent an approximated image of the portion(s) of the interaction. As a specific example, an indicator can be, or can include, three points that approximate a curved line formed during an interaction. The three points can be represented as, for example, a set of bit values.</p>
<p id="p-0026" num="0025">In some embodiments, an interpretation of an indicator can be, for example, a digital signal (e.g., a binary digital signal, a binary sequence of bits) and/or an analog signal that represents one or more portions of the interpretation of the indicator. For example, a series of signals generated by, for example, an interaction detection module <b>114</b> can be indicators of an interaction with the scratch region <b>110</b>. The series of signals can be interpreted and represented as alphanumeric characters (American Standard Code for Information Interchange (ASCII) characters), words (e.g., written in cursive), phrases, and/or so forth. The alphanumeric characters can be considered an interpretation of the indicators of the interaction.</p>
<p id="p-0027" num="0026">An interaction indicator, which is generated by the interaction detection module <b>114</b>, can be sent from the interaction detection module <b>114</b> to the scratch module <b>120</b>. The scratch module <b>120</b> can have a scratch manager <b>124</b> configured to handle storage of the interaction indicator in the memory <b>130</b>. In some embodiments, the interaction indicator, which can be a digital signal and/or an analog signal, can be stored directly in the memory <b>130</b> without additional processing at the scratch module <b>120</b>.</p>
<p id="p-0028" num="0027">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the scratch module <b>120</b> includes a scratch region analyzer <b>122</b> that can be configured to process an interaction indicator. The scratch region analyzer <b>122</b> can be configured to, for example, interpret an interaction indicator. The interpretation of the interaction indicator can be stored by the scratch manager <b>124</b> in the memory <b>130</b>. Accordingly, the scratch manager <b>124</b> can be configured to handle storage of interaction indicators and/or interpretations of interaction indicators in the memory <b>130</b>. In some embodiments, the interpretation of an interaction indicator can be stored as a digital signal (e.g., a binary sequence of bits) and/or as an analog signal.</p>
<p id="p-0029" num="0028">For example, a user can interact with the scratch region <b>110</b> by drawing glyphs associated with an alphanumeric character (or set of alphanumeric characters) on the scratch region <b>110</b> of the computing device <b>100</b>. The interaction detection module <b>114</b> can generate an indicator as a binary representation of the glyphs. The indicator, which is a binary representation of the glyphs, can be sent to the scratch region analyzer <b>122</b> of the scratch module <b>120</b>. The scratch region analyzer <b>122</b> can be configured to interpret the binary representation of the glyphs as the alphanumeric character (or set of alphanumeric characters). Accordingly, the scratch region analyzer <b>122</b> can trigger the scratch manager <b>124</b> to store a binary representation (e.g., an American Standard Code for Information Interchange (ASCII) representation) of the alphanumeric character (or set of alphanumeric characters) and/or the binary representation of the glyphs in the memory.</p>
<p id="p-0030" num="0029">In some embodiments, the scratch module <b>120</b> can be configured to prompt a user with respect to an interpretation of an interaction indicator. For example, the scratch region analyzer <b>122</b> can be configured to interpret an interaction indicator as an alphanumeric character (or set of alphanumeric characters), a drawing, and/or so forth, and the scratch module <b>120</b> can be configured to trigger a prompt requesting confirmation from a user as to whether the interpretation of the interaction indicator is correct. In some embodiments, the scratch module <b>120</b> can be configured to present several potential interpretations, one or more of which can be selected by a user.</p>
<p id="p-0031" num="0030">In some embodiments, the scratch region analyzer <b>122</b> can be any type of hardware and/or software configured to interpret one or more interaction indicators generated by the interaction detection module <b>114</b>. For example, the scratch region analyzer <b>122</b> can include an optical character recognition (OCR) module, a drawing recognition module, and/or so forth.</p>
<p id="p-0032" num="0031">In some embodiments, the interaction detection module <b>114</b> can be configured to generate an interaction indicator based on only a particular type of interaction with the scratch region <b>110</b>. For example, it may be desirable to generate an interaction indicator only based on a user interacting with the scratch region <b>100</b> with a pencil or other pointing device but not to generate an interaction indicator when the user rests his or her palm on the scratch region. To achieve this, the interaction detection module <b>114</b> can be configured to generate an interaction indicator only when the instantaneous interaction with the scratch region <b>110</b> is smaller than a particular size (e.g., smaller than a 6 square millimeter (mm) area, smaller than a palm of a hand), and/or larger than a particular size. In some embodiments, the interaction detection module <b>114</b> can be configured to generate an interaction indicator based on an interaction only if the interaction is performed using a finger of a user and/or a particular device such as a ballpoint pen, a graphite pencil, a stylus, and/or so forth. For example, a stylus may be embedded with an identifying device (e.g., active identifying device, passive identifying device) so that proximity of the stylus to the scratch region may be detected, and only when such proximity is detected may an interaction indicator be generated. In another example, the interaction detecting device <b>114</b> can be configured to generate an interaction indicator only when the interaction is defined by what appears to be a tip of a pointing device such as a pen, pencil or stylus, by generating an interaction indicator only when the instantaneous interaction with the scratch region <b>110</b> is greater than a predefined minimum area (e.g., 1 mm<sup>2</sup>) and less than a predefined maximum area (e.g., 6 mm<sup>2</sup>). In some embodiments, the interaction detection module <b>114</b> can be configured to generate an interaction indicator based on an interaction by, for example, a finger of the user.</p>
<p id="p-0033" num="0032">In some embodiments, an interaction with the scratch region <b>110</b> can be associated with an instruction (e.g., can function as an instruction). In such embodiments, the interaction detection module <b>114</b> can generate an interaction indicator based on the interaction (e.g., contact, gesture), and the interaction indicator can be interpreted by the scratch region analyzer <b>122</b> of the scratch module <b>120</b> as an instruction (or can be used to fetch an instruction) to perform a particular action (e.g., deleting of a previously stored interaction indicator (i.e., a delete instruction), editing of a previous interaction indicator, interpretation of a subsequent interaction indicator (i.e., an interpretation instruction), etc.). For example, drawing a slash across the entire scratch region <b>110</b> can be interpreted as an instruction to save (i.e., a save instruction) a set of interaction indicators (since a previous instruction was given) with the scratch region <b>110</b> as a current note. As another example, double-tapping in the scratch region <b>110</b> can be interpreted as an instruction to delete (i.e., a delete instruction) temporarily buffered interaction indicators that have not been set aside for longer term storage.</p>
<p id="p-0034" num="0033">In some embodiments, for example, interpretation of an interaction indicator from the interaction detection module <b>114</b> can be triggered by an additional interaction with the scratch region <b>110</b>. In such embodiments, the scratch module <b>120</b> can be configured to trigger interpretation of the interaction indicator in response to a second interaction indicator generated based on the additional interaction. Specifically, the interaction detection module <b>114</b> can be configured to generate a first interaction indicator based on a first interaction of a user with the scratch region <b>110</b>. The first interaction indicator can be sent to the scratch module <b>120</b>, and, in some embodiments, the first interaction indicator can be stored in the memory <b>130</b>. At a later time, the interaction detection module <b>114</b> can be configured to generate a second interaction indicator based on a second interaction of the user with the scratch region <b>110</b>. The second interaction indicator can be sent to the scratch module <b>120</b>. The scratch region analyzer <b>122</b> can be configured to determine that the second interaction indicator is (or is associated with) an instruction configured to trigger interpretation (i.e., an interpretation instruction) of the first interaction indicator.</p>
<p id="p-0035" num="0034">As a specific example, an indicator of a first interaction from the interaction detection module <b>114</b> can be interpreted as an alphanumeric character by the scratch region analyzer <b>122</b> in response to an interpretation instruction. The interpretation instruction can be triggered by an indicator of a second interaction with the scratch region <b>110</b>. The scratch region analyzer <b>122</b> can be configured to determine that the indicator of the second interaction is associated with the interpretation instruction.</p>
<p id="p-0036" num="0035">In some embodiments, one or more instructions that can be used to trigger one more functions of the scratch module <b>120</b> (or a portion thereof) can be learned by the scratch module <b>120</b>. Specifically, the scratch module <b>120</b> (or a portion thereof) can be trained to process one or more interactions with the scratch region <b>110</b> by a user as an instruction. For example, the scratch region analyzer <b>122</b> can be changed from an operational mode (e.g., an analyzing mode) to a learning mode. When in the learning mode, the scratch region analyzer <b>122</b> can be configured to associate a particular interaction with the scratch region <b>110</b> (where the particular interaction may be performed differently by different users) with an instruction that can trigger one or more functions of the scratch module <b>120</b>. Then, when the scratch region analyzer <b>122</b> is in the operational mode, the specified interaction with the scratch region can be interpreted by the scratch region analyzer <b>122</b> as the instruction.</p>
<p id="p-0037" num="0036">For example, a user can change the scratch region analyzer <b>122</b> from an operational mode to a learning mode (during a learning time period). While in the learning mode, the scratch region analyzer <b>122</b> can be triggered (e.g., triggered by the user) to associate a specified interaction(s) (and/or interaction indicators of the specified interaction(s)) with the scratch region <b>110</b> with, for example, an instruction configured to trigger interpretation (i.e., an interpretation instruction) of the previous interaction indicator. The specified interaction can be referred to as a teaching interaction.</p>
<p id="p-0038" num="0037">After triggering the association, the user can change the scratch region analyzer <b>122</b> from the learning mode back to the operational mode (during an operational time period). While in the operational mode, the interaction detection module <b>114</b> can be configured to generate an interaction indicator based on an interaction of the user with the scratch region <b>110</b>. The interaction during the operational mode can be referred to as an operational interaction. The interaction indicator can be sent to the scratch module <b>120</b>. The scratch region analyzer <b>122</b> can be configured to determine that the interaction indicator of the operational interaction is associated with the instruction based on the association performed while the scratch region analyzer <b>122</b> was in the learning mode. Specifically, the scratch region analyzer <b>122</b> can be configured to associate the interaction indicator of the operational interaction with the instruction based on, for example, a match (through a comparison) of the interaction indicator of the operational interaction with an interaction indicator of the teaching interaction.</p>
<p id="p-0039" num="0038">As a specific example, a user can change the scratch region analyzer <b>122</b> from an operational mode to a learning mode (during a learning time period). While in the learning mode, an oval drawn by a user in the scratch region <b>110</b> can be associated by the scratch region analyzer <b>122</b> with a save instruction. The save instruction can cause (or can be used to cause) saving of a previous set of interaction indicators as a drawing. After triggering the association, the user can change the scratch region analyzer <b>122</b> from the learning mode back to the operational mode (during an operational time period). While in the operational mode, the interaction detection module <b>114</b> can be configured to generate a set of interaction indicators based on the user drawing a picture on the scratch region <b>110</b>. After drawing the picture, the user can draw the oval (which was learned while the scratch region analyzer <b>122</b> was in the learning mode) in the scratch region <b>110</b>. The scratch region analyzer <b>122</b> can be configured to determine that the oval is associated with the save instruction. In response to the save instruction, the set of interaction indicators associated with the picture and generated prior to the drawing of the oval can be saved as a drawing.</p>
<p id="p-0040" num="0039">In some embodiments, for example, storage of a first interaction indicator can be triggered by a second interaction indicator interpreted, by the scratch region analyzer <b>122</b> of the scratch module <b>120</b>, as an instruction to store the first interaction indicator. In some embodiments, one or more interaction indicators can be modified, deleted, and/or otherwise processed in response to another interaction indicator associated with an interaction with the scratch region <b>110</b>. For example, an interaction indicator (or group of interaction indicators) can be deleted from the memory <b>130</b> in response to the scratch region analyzer <b>122</b> determining that a user drew a large &#x201c;X&#x201d; across the entire scratch region <b>110</b> directly after the interaction indicator (or group of interaction indicators) have been stored in the memory <b>130</b>.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart that illustrates a method for associating an interaction with an instruction. At least some portions of the method shown in <figref idref="DRAWINGS">FIG. 2</figref> can be performed by a scratch device such as scratch device <b>112</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0042" num="0041">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, a plurality of interactions with a scratch region of a computing device, which is mutually exclusive from a touchpad for moving a cursor of the computing device and from a keyboard of the computing device, are detected (block <b>200</b>). The interactions can be, for example, interactions of a pencil (controlled by a user) with the scratch region of the computing device. In some embodiments, the scratch region can be included on an outside surface of the computing device. In some embodiments, the scratch region can be mutually exclusive from a keyboard and an electrostatic touchpad for controlling a pointing device of the computing device.</p>
<p id="p-0043" num="0042">An indicator of a first interaction from the plurality of interactions and an indicator of a second interaction from the plurality of interactions are generated (block <b>210</b>). The indicator of the first interaction and the indicator of the second interaction can be generated by, for example, an interaction detection module such as interaction detection module <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In some embodiments, the indicators can be, for example, electrical signals.</p>
<p id="p-0044" num="0043">The indicator of the first interaction from the plurality of interactions is associated with an instruction configured to trigger processing of the indicator of the second interaction from the plurality of interactions (block <b>220</b>). In some embodiments, the indicator of the first interaction can be associated (e.g., associated by a scratch region analyzer such as scratch region analyzer <b>122</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>) with the instruction based on a comparison of the indicator of the first interaction with a predefined interaction indicator associated with the instruction.</p>
<p id="p-0045" num="0044">For example, the scratch region analyzer <b>122</b> can be changed from an operational mode (e.g., an analyzing mode) to a learning mode. When in the learning mode, the scratch region analyzer <b>122</b> can be configured to associate a particular interaction (such as drawing a slash) with the scratch region <b>110</b> with an instruction that can trigger one or more functions of the scratch module <b>120</b>. Then, when the scratch region analyzer <b>122</b> is in the operational mode, the specified interaction (which can be stored and represented as a predefined interaction indicator) with the scratch region can be interpreted by the scratch region analyzer <b>122</b> as the instruction. As a specific example, drawing a slash across the entire scratch region <b>110</b> (i.e., a first interaction) can be interpreted as an instruction (by comparison with a predefined interaction indicator associated with the instruction) to store a different indicator of an interaction (i.e., a second interaction) as an alphanumeric character.</p>
<p id="p-0046" num="0045">Referring back to <figref idref="DRAWINGS">FIG. 1</figref>, in some embodiments, one or more functions performed by the scratch module <b>120</b> (such as interpretation performed by the scratch region analyzer <b>122</b> and/or storage of an interaction indicator by the scratch manager <b>124</b>) can be triggered by a button (not shown). More details related to one or more buttons used to trigger an action performed by the scratch module <b>120</b> are described in connection with the figures below.</p>
<p id="p-0047" num="0046">In some embodiments, one or more functions of the scratch module (such as an interpretation performed by the scratch region analyzer <b>122</b>) can be triggered via the electrostatic touch pad <b>140</b> and/or the keyboard <b>150</b>. For example an interpretation of an interaction indicator can be triggered via the keyboard <b>150</b> by a user pressing a combination of keys of the keyboard <b>150</b>.</p>
<p id="p-0048" num="0047">In some embodiments, the scratch manager <b>124</b> can be configured to process one or more interaction indicators. For example, the scratch manager <b>124</b> can be configured to store one or more interaction indicators (which can be generated in response to one or more interactions with the scratch region <b>110</b>) and/or one or more interpretations of the interaction indicator(s) in the memory <b>130</b> based on a date/timestamp. In some embodiments, the scratch manager <b>124</b> can be configured to trigger storage of one or more interpretations of one or more interaction indicators based on the subject matter of the interpretation(s) of the interaction indicator(s). For example the scratch manager <b>124</b> can be configured to store a group of interaction indicators associated with a particular subject matter as a particular file (or set of files) in the memory <b>130</b>.</p>
<p id="p-0049" num="0048">In some embodiments, an interaction with the scratch region <b>110</b> can be shown on a display <b>160</b> of computing device <b>100</b>. For example, the display <b>160</b> can be configured to display an interaction of a user with the scratch region <b>122</b> as the user is performing the interaction. Thus, interactions with the scratch region <b>122</b> can be displayed at the display <b>160</b> simultaneous with the interactions as they are occurring. Accordingly, a user can see on the display <b>160</b> the interactions the user is defining in the scratch region <b>110</b>. In such embodiments, the interaction detection module <b>114</b> can be configured to send an indicator of an interaction to the display <b>160</b> as well as to the scratch module <b>120</b>. In some embodiments, the indicator of the interaction can be interpreted by the scratch region analyzer <b>122</b> of the scratch module <b>120</b> and the interpretation can be sent to the display <b>160</b> for representation on the display <b>160</b>.</p>
<p id="p-0050" num="0049">In some embodiments, a portion of the display <b>160</b> can be dedicated, either permanently or temporarily, to display of interactions (e.g., display of representations of the interactions) with the scratch region <b>110</b>. In some embodiments, a portion of the display <b>160</b> can be temporarily dedicated to display of interactions with the scratch region <b>110</b>. In some embodiments, the entire display <b>160</b> (or a portion thereof) can be temporarily dedicated to display of interactions with the scratch region <b>110</b> when the scratch region <b>110</b> (and associated hardware and/or software) have been activated (e.g., activated in response to an interaction with the scratch region <b>110</b>). In some embodiments, the scratch region <b>110</b> and associated hardware and/or software can be referred to as a scratch device <b>112</b> (shown in <figref idref="DRAWINGS">FIG. 1</figref>). Although not shown, in some embodiments, a scratch region (such as scratch region <b>110</b>) can be included in a display (such as display <b>160</b>).</p>
<p id="p-0051" num="0050">Although not shown in <figref idref="DRAWINGS">FIG. 1</figref>, a separate display (such as a liquid crystal display (LCD)) can be configured to display one or more interactions of a user with the scratch region <b>122</b>. In such embodiments, this separate display can be dedicated to display of interactions with the scratch region <b>110</b>. In such embodiments, a separate display dedicated to display of interactions with the scratch region <b>110</b> can be installed near the scratch region <b>110</b>. Although not depicted in <figref idref="DRAWINGS">FIG. 1</figref>, in some embodiments, the separate display can be disposed behind the scratch region <b>110</b>, which can be at least partially transparent, so that images (or portions thereof) that track (e.g., precisely track) interactions with the scratch region <b>110</b> can be displayed on the separate display simultaneous (or substantially simultaneous) with (or during at least a portion of the time period during which) the interactions with the scratch region <b>110</b> as they are occurring. Accordingly, interactions with the scratch region <b>110</b> can appear to a user performing the interactions that the interactions with the scratch region <b>110</b> are being created on (e.g., written onto) the separate display.</p>
<p id="p-0052" num="0051">An interaction indicator (e.g., a raw interaction indicator) and or an interpretation of an interaction indicators stored in the memory <b>130</b> can be retrieved from the memory <b>130</b>. In some embodiments, the scratch manager <b>124</b> can be configured to retrieve an interaction indicator and/or an interpretation of the interaction indicator from the memory in response to an instruction. The instruction can be triggered via the electrostatic touch pad <b>140</b>, the keyboard <b>150</b>, and/or the scratch region <b>110</b>.</p>
<p id="p-0053" num="0052">Memory <b>130</b> can be any type of memory device such as a random-access memory (RAM) component or a disk drive memory. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the memory <b>130</b> is a local memory included in the computing device <b>100</b>. Although not shown, in some embodiments, the memory <b>130</b> can be implemented as more than one memory component (e.g., more than one RAM component or disk drive memory) within the computing device <b>100</b>. In some embodiments, the memory <b>130</b> can be, or can include, a non-local memory (e.g., a memory not physically included within the computing device <b>100</b>) within a network (not shown). For example, the memory <b>130</b> can be, or can include, a memory shared by multiple computing devices (not shown) within a network. In some embodiments, the memory <b>130</b> can be associated with a server device (not shown) on a client side of a network and configured to serve several computing devices on the client side of the network.</p>
<p id="p-0054" num="0053">The components of the computing device <b>100</b> (e.g., the scratch module <b>120</b>) are configured to operate within an environment that includes an operating system. In some embodiments, the operating system can be configured to facilitate, for example, the interpretation of an interaction with the scratch region <b>100</b>.</p>
<p id="p-0055" num="0054">The computing device <b>100</b> can be, for example, a wired device and/or a wireless device (e.g., wi-fi enabled device) and can be, for example, a computing entity (e.g., a personal computing device), a server device (e.g., a web server), a mobile phone, a personal digital assistant (PDA), e-reader, and/or so forth. The computing device <b>100</b> can be configured to operate based on one or more platforms (e.g., one or more similar or different platforms) that can include one or more types of hardware, software, firmware, operating systems, runtime libraries, and/or so forth.</p>
<p id="p-0056" num="0055">In some embodiments, the computing device <b>100</b> can represent a cluster of devices. In such an embodiment, the functionality and processing of the computing device <b>100</b> (e.g., the scratch module <b>120</b> of the computing device <b>100</b>) can be distributed to several computing devices of the cluster of computing devices.</p>
<p id="p-0057" num="0056">In some embodiments, one or more portions of the components shown in the computing device <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref> can be, or can include, a hardware-based module (e.g., a digital signal processor (DSP), a field programmable gate array (FPGA), a memory), a firmware module, and/or a software-based module (e.g., a module of computer code, a set of computer-readable instructions that can be executed at a computer). For example, in some embodiments, one or more portions of the scratch module <b>120</b> can be, or can include, a software module configured for execution by at least one processor (not shown). In some embodiments, the functionality of the components can be included in different modules and/or components than those shown in <figref idref="DRAWINGS">FIG. 1</figref>. For example, although not shown, the functionality of the scratch module <b>120</b> can be included in a different module than the scratch module <b>120</b>, or divided into several different modules.</p>
<p id="p-0058" num="0057">In some embodiments, the computing device <b>100</b> can be included in a network. In some embodiments, the network can include multiple computing devices (such as computing device <b>100</b>) and/or multiple server devices (not shown). Also, although not shown in <figref idref="DRAWINGS">FIG. 1</figref>, the computing device <b>100</b> can be configured to function within various types of network environments. For example, the network can be, or can include, a local area network (LAN), a wide area network (WAN), and/or so forth. The network can be, or can include, a wireless network and/or wireless network implemented using, for example, gateway devices, bridges, switches, and/or so forth. The network can include one or more segments and/or can be have portions based on various protocols such as Internet Protocol (IP) and/or a proprietary protocol. The network can include at least a portion of the Internet.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram that illustrates a computing device <b>300</b> that has a scratch region <b>310</b>. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the scratch region <b>310</b> is adjacent to an electrostatic touchpad <b>340</b> configured to control a pointing device such as a mouse. The computing device <b>300</b> has a display portion <b>302</b> and a base portion <b>304</b>. The electrostatic touchpad <b>340</b> and the scratch region <b>310</b> are included in the base portion <b>304</b>. The base portion <b>304</b> also includes a keyboard <b>350</b>. The display portion <b>302</b> of the computing device <b>300</b> includes a display <b>360</b> that can be, for example, a liquid crystal display (LCD), or other type of display device. The computing device <b>300</b> shown in <figref idref="DRAWINGS">FIG. 3</figref> is in an open configuration. When the computing device <b>300</b> is in a closed configuration (not shown), the keyboard <b>350</b> can be disposed between the display portion <b>302</b> and the base portion <b>304</b> (which can be substantially parallel to one another).</p>
<p id="p-0060" num="0059">The scratch region <b>310</b> is a portion of the base portion <b>304</b> of the computing device <b>300</b> through which a user of the computing device <b>300</b> can store information without interacting with the computing device <b>300</b> via the electrostatic touchpad <b>340</b> and/or the keyboard <b>350</b>. Thus, the scratch region <b>310</b> is configured as an alternative through which a user can store information (in a memory of the computing device <b>300</b>) using the computing device <b>300</b>.</p>
<p id="p-0061" num="0060">The scratch region <b>310</b> is configured so that a user of the computing device <b>300</b> can interact with the scratch region <b>310</b>, for example, using a writing utensil (not shown), a stylus (not shown), a finger, and/or so forth. In other words, the scratch region <b>310</b> is configured so that a user of the computing device <b>300</b> can interact with the scratch region <b>310</b> by contacting the scratch region <b>310</b> with, for example, using a writing utensil (not shown), a stylus (not shown), a finger, and/or so forth. The interaction with the scratch region <b>310</b> can be detected and indicators of the interaction can be interpreted and/or stored in a memory (not shown) for later recall. For example, a user, using a writing utensil such as a pen, can interact with the scratch region <b>110</b> by handwriting a note in the scratch region <b>310</b>. The handwritten note (which is the interaction) can be detected (e.g., detected by an interaction detection module such as interaction detection module <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>) and converted into an interaction indicator that can be stored in the memory of the computing device <b>300</b>. In some embodiments, the interaction indicator can be interpreted by a scratch region analyzer of a scratch module (e.g., the scratch region analyzer <b>122</b> of the scratch module <b>120</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>), and the interpretation of the interaction indicator can be stored in the memory of the computing device <b>300</b>.</p>
<p id="p-0062" num="0061">In this embodiment, the base portion <b>304</b> the computing device <b>300</b> includes a button <b>312</b>. At least a portion of the scratch region <b>310</b> (and at least a portion of the associated hardware and/or software such as an interaction detection module and/or scratch module) is activated when the button <b>312</b> is actuated. Specifically, the scratch region <b>310</b> (and associated hardware and/or software) can be configured to remain in an inactive state (e.g., off state) so that interactions of a user with the scratch region <b>310</b> will not be registered until the button <b>312</b> has been activated. After the button <b>312</b> has been activated the scratch region <b>310</b> (and associated hardware and/or software) can be configured to change from the inactive state to an active state (e.g., an on state) where interactions of a user with the scratch region <b>310</b> can be registered. In some embodiments, a general reference to a scratch region, such as scratch region <b>310</b>, can include reference to hardware and/or software (e.g., interaction detection module, scratch module) associated with the scratch region. In some embodiments, the scratch region <b>310</b> and associated hardware and/or software (not shown in <figref idref="DRAWINGS">FIG. 3</figref>) can collectively be referred to as a scratch device.</p>
<p id="p-0063" num="0062">In some embodiments, the scratch region <b>310</b> (and associated hardware and/or software) can be configured to change from an active state to an inactive state (or a sleep state) if an interaction with the scratch region <b>310</b> has not occurred within a specified period of time after the button <b>312</b> has been activated. In some embodiments, the scratch region <b>310</b> (and associated hardware and/or software) can be configured to remain in a sleep state until a user interacts with the scratch region <b>310</b>.</p>
<p id="p-0064" num="0063">In some embodiments, the computing device <b>300</b> can be configured so that one or more portions of the computing device <b>300</b> can remain in an inactive state (e.g., an off state, a sleep state) when the scratch region <b>310</b> is in an active state (e.g., an on state). For example, the display <b>360</b> of the computing device <b>300</b> can be inactive (e.g., in an off state, in a non-illuminating state (e.g., a relatively low illuminating state)) even though the scratch region <b>310</b> is in an active state. In some embodiments, an operating platform of (e.g., a primary operating platform, an operating system and associated hardware/software) associated with the computing device <b>300</b> can remain in an inactive state (e.g., off state, sleep state) while at least a portion of the scratch region <b>310</b> and at least a portion of associated hardware (e.g., memory, processor) and/or software is active (i.e., scratch device). In such embodiments, the scratch region <b>310</b> can be associated with hardware and/or software that is sufficiently independent from the operating platform associated with the computing device <b>300</b> so that the scratch region <b>310</b> can be in an active state while the computing device <b>300</b> is in (e.g., remains in) an inactive state.</p>
<p id="p-0065" num="0064">In some embodiments, the scratch region <b>310</b> can be associated with a buffer and/or processor where information associated with the scratch region <b>310</b> can be temporarily stored and/or processed while one or more portions of the computing device <b>300</b> are in an inactive state. When the one or more portions of the computing device <b>300</b> is changed to (e.g., returned to) an active state, the information that is temporarily stored and/or processed can then be stored in and/or processed at the computing device <b>300</b>.</p>
<p id="p-0066" num="0065">In some embodiments, the button <b>312</b> can be configured to trigger pagination of the scratch region <b>310</b>. For example, indicators of a set of interactions (or interpretations of the indicators of set of interactions) with the scratch region <b>310</b> can be stored in response to the button <b>312</b> been activated. Specifically, a user can interact with the scratch region <b>310</b> for a period of time (the period of time can be initiated by actuation of the button <b>312</b>), and can activate the button <b>312</b> at the end of the period of time. The indicators of the interactions with the scratch region <b>310</b> during the period of time can be stored and/or interpreted as being related in response to the button <b>312</b> been activated at the end of the period of time. Thus, the indicators of the interactions can be associated with a particular page, and can be stored in a memory of the computing device <b>300</b> as the particular page in response to the button <b>312</b> been activated at the end of the period of time. In some embodiments, the pages can be referred to as note pages (e.g., or as sticky note pages).</p>
<p id="p-0067" num="0066">In some embodiments, pagination can be triggered by an instruction (i.e., a pagination instruction) that has been associated with an interaction (e.g., an indicator of the interaction). For example, a first interaction (i.e., an indicator of the first interaction) of a user with the scratch region <b>310</b> can be interpreted as an instruction to start (i.e., a page start instruction) a note page, and a second interaction (i.e., an indicator of the second interaction) of a user with the scratch region <b>310</b> can be interpreted as an instruction to end (i.e., a page end instruction) the note page. Indicators of interactions with the scratch region <b>310</b> generated between the page start instruction and the page end instruction can be stored as the note page. In some embodiments, the page start instruction and the page end instruction can be types of pagination instructions.</p>
<p id="p-0068" num="0067">In some embodiments, the computing device <b>300</b> can include a combination of hardware and/or software (i.e., a note page organization application, a computer desktop application) that can be used to manage note pages defined via the scratch region <b>310</b>. For example, note pages can be organized (e.g., automatically organized) based on, for example, date/time stamps (e.g., creation date/time stamps, modification date/time stamps) associated with note pages, subject matter of the note pages, and/or so forth. In some embodiments, the organization can include storing the note pages in files and/or folders. For example, note pages created (or stored) during a specified time period (e.g., during a day or hour) can be stored in a folder associated with the specified time period. In some embodiments, the subject matter of a note page can be determined based on language processing of words associated with the note page. In such embodiments, note pages associated with the subject matter category can be stored in a folder associated with the subject matter category.</p>
<p id="p-0069" num="0068">In some embodiments, organization of note pages can be triggered by an instruction associated with an interaction (e.g., an indicator of the interaction) and/or via the button <b>312</b>. For example, an interaction (i.e., an indicator of the first interaction) of a user with the scratch region <b>310</b> can be interpreted as an instruction to store a note page in a specified folder. In some embodiments, actuation of the button <b>312</b> can trigger store of a note page in a specified folder.</p>
<p id="p-0070" num="0069">In some embodiments, the button <b>312</b> can be configured to trigger interpretation of one or more indicators of interactions with the scratch region <b>310</b>. For example, indicator of a set of interactions with the scratch region <b>310</b> can be interpreted in response to the button <b>312</b> having been activated. Specifically, a user can interact with the scratch region <b>310</b> for a period of time, and can activate the button <b>312</b> at the end of the period of time. The indicators of the interactions with the scratch region <b>310</b> during the period of time can be interpreted in response to the button <b>312</b> been activated at the end of the period of time.</p>
<p id="p-0071" num="0070">In some embodiments, the button <b>312</b> can be configured to trigger display of one or more interactions (e.g., representations of the interaction(s)) with the scratch region <b>310</b>. In some embodiments, one or more interactions with the scratch region <b>310</b> may be excluded from display on the display <b>360</b> in response to actuation of the button <b>312</b>.</p>
<p id="p-0072" num="0071">In some embodiments, one or more indicators of interactions with the scratch region <b>310</b> can be removed (e.g., deleted, cleared) in response to actuation of the button <b>312</b>. The above-identified functions are presented by way of example only, and additional functions, in addition to those described, can be triggered by activation of the button <b>312</b>.</p>
<p id="p-0073" num="0072">Although not shown in <figref idref="DRAWINGS">FIG. 3</figref>, more than one button can be included in the computing device <b>300</b>. Each of the buttons can be configured to trigger one or more functions associated with scratch region <b>310</b>. For example, a first button can be configured to turn the functionality of scratch region <b>310</b> (and associated hardware and/or software) on and/or off, and a second button can be configured to trigger interpretation of an indicator of an interaction with the scratch region <b>310</b>.</p>
<p id="p-0074" num="0073">In some embodiments, the scratch region <b>310</b> can be configured so that a user can write in the scratch region <b>310</b> with a writing utensil (such as a pen), and marks made in the scratch region <b>310</b> by the writing utensil can be removed in a desirable fashion. In such embodiments, the scratch region <b>310</b> can be a wipeable writing surface. In some embodiments, the scratch region <b>310</b> can be made of, for example, a polymer-based surface that can be cleaned in a desirable fashion.</p>
<p id="p-0075" num="0074">In some embodiments, the scratch region <b>300</b> and/or the button <b>312</b> can be included in different portions of the computing device <b>300</b>. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the scratch region <b>310</b> and the button <b>312</b> are included to the right of the electrostatic pad <b>340</b> (if directly facing the display <b>360</b>). In some embodiments, for example, the scratch region <b>310</b> and or the button <b>312</b> can be included in an area to the left of the electrostatic pad <b>340</b>. In some embodiments, the button <b>312</b> may not be adjacent to the scratch region <b>310</b> as shown in <figref idref="DRAWINGS">FIG. 3</figref>. For example, the button <b>312</b> may be located in an area to the right of the electrostatic pad <b>340</b>, and the scratch region <b>310</b> may be located in an area to the left of the electrostatic pad <b>340</b>.</p>
<p id="p-0076" num="0075">In some embodiments, the scratch region <b>310</b> can be included in a different computing device than the computing device <b>300</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. For example, the scratch region <b>310</b> can be included in a tablet type computing device. In some embodiments, the tablet type computing device may not have a separate base portion <b>304</b> and display portion <b>302</b>. The functionality of at least a portion of the base portion <b>304</b> and at least a portion of the display portion <b>302</b> may be combined into a tablet type device. In some embodiments, the scratch region <b>310</b> can be included in a smaller computing device than the computing device <b>300</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. For example, the scratch region <b>310</b> can be included in a personal digital assistant (PDA) or an e-reader.</p>
<p id="p-0077" num="0076">Although not shown, the functionality of the electrostatic pad <b>340</b> and the functionality of the scratch region <b>310</b> can be combined. In such embodiments, at least a portion of the scratch region <b>310</b> can overlap with the area of the electric static pad <b>340</b>. In such embodiments, the button <b>312</b> can be used to trigger the functionality of the electrostatic pad <b>340</b> and/or the functionality of the scratch region <b>310</b>. For example, actuation of the button <b>312</b> at a first time can trigger the functionality of the scratch region <b>310</b>, and actuation of button <b>312</b> and a second time can trigger the functionality of the electrostatic pad <b>340</b>. More details related to additional configurations of a scratch region are described in connection with the figures below.</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart that illustrates a method related to changing a state of a scratch device. The scratch device can be a scratch device such as scratch device <b>112</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0079" num="0078">As shown in <figref idref="DRAWINGS">FIG. 4</figref>, at least a portion of a scratch device included in a computing device is changed from an inactive state to an active state in response to a first interaction with a scratch region of the scratch device (block <b>400</b>). The first interaction can be, for example, an interaction of a pen or finger of a user with the scratch region of the computing device.</p>
<p id="p-0080" num="0079">An indicator of the first interaction is generated (block <b>410</b>) and an indicator of a second interaction with the scratch region of the scratch device is also generated (block <b>420</b>). The indicator of the first interaction and the indicator of the second interaction can be generated by, for example, an interaction detection module such as interaction detection module <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In some embodiments, the indicators can be, for example, electrical signals.</p>
<p id="p-0081" num="0080">The indicator of the first interaction from the plurality of interactions is associated with an instruction configured to trigger processing of the indicator of the second interaction from the plurality of interactions (block <b>430</b>). In some embodiments, the indicator of the first interaction can be associated (e.g., associated by a scratch region analyzer such as scratch region analyzer <b>122</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>) with the instruction based on a comparison of the indicator of the first interaction with a predefined interaction indicator associated with the instruction.</p>
<p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. 5</figref> is a schematic diagram that illustrates multiple scratch regions of a computing device <b>500</b>. As shown in <figref idref="DRAWINGS">FIG. 5</figref>, a first scratch region <b>510</b> and a second scratch region <b>512</b> are included in a base portion <b>504</b> of the computing device <b>500</b>. Specifically, the first scratch region <b>510</b> is located on one side (right side) of electrostatic pad <b>540</b> and the second scratch region <b>512</b> is located on another side (left side) of the electrostatic pad <b>540</b>. As shown in <figref idref="DRAWINGS">FIG. 5</figref>, the computing device <b>500</b> is a tablet type of computing device with a display <b>560</b> that is a touch sensitive display.</p>
<p id="p-0083" num="0082">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, a display <b>560</b> is included in the display portion <b>502</b> of the computing device <b>500</b>. The first scratch region <b>510</b> and the second scratch region <b>512</b> are exposed so that the first scratch region <b>510</b> and/or the second scratch region <b>512</b> can be used by a user of the computing device <b>500</b> when the display portion <b>502</b> of the computing device <b>500</b> is slidably moved along sliding mechanisms <b>582</b> of the computing device <b>500</b>. Specifically, the first scratch region <b>510</b> and the second scratch region <b>512</b> are exposed when the display portion <b>502</b> is moved along direction <b>53</b> so that the computing device <b>500</b> is in an open configuration. The computing device can be changed from the open configuration to a closed configuration (not shown) when the display portion <b>502</b> is moved along direction <b>55</b>.</p>
<p id="p-0084" num="0083">In some embodiments, the first scratch region <b>510</b> (and associated software and/or hardware) and/or the second scratch region <b>512</b> (and associated software and/or hardware) can be activated when the computing device <b>500</b> is changed from the closed configuration to the open configuration. In such embodiments, the first scratch region <b>510</b> (and associated software and/or hardware) and/or the second scratch region <b>512</b> (and associated software and/or hardware) can be in an inactive state when the computing device <b>500</b> is in the closed configuration. The first scratch region <b>510</b> (and associated software and/or hardware) and/or the second scratch region <b>512</b> (and associated software and/or hardware) can be in an active state when the computing device <b>500</b> is in the open configuration. In some embodiments, a scratch region <b>510</b> and associated software and/or hardware can collectively be referred to as a scratch device.</p>
<p id="p-0085" num="0084">In some embodiments, the computing device <b>500</b> can be configured so that one or more portions of the computing device <b>500</b> can remain in an inactive state (or a sleep state) when the first scratch region <b>510</b> and/or the second scratch region <b>512</b> are in an active state (e.g., on state). In some embodiments, for example, the first scratch region <b>510</b> can be in an active state and the second scratch region <b>512</b> can be in an inactive state (or vice versa) while the remaining portions of the computing device computing device <b>500</b> can be in a sleep state.</p>
<p id="p-0086" num="0085">In some embodiments, the first scratch region <b>510</b> can be associated with a different type of scratch region device than the second scratch region <b>512</b>. For example the first scratch region <b>510</b> can be associated with (or define at least a portion of) a surface acoustic wave device, and the second scratch region <b>512</b> can be associated with (or define at least a portion of) a surface capacitive device.</p>
<p id="p-0087" num="0086">Although not shown in <figref idref="DRAWINGS">FIG. 5</figref>, in some embodiments, the first scratch region <b>510</b> and/or the second scratch region <b>512</b> can be associated with one or more buttons. In such embodiments, the one or more buttons can be configured to trigger the functionality associated with the first scratch region <b>510</b> and/or the functionality associated with the second scratch region <b>512</b>. The features described in connection with <figref idref="DRAWINGS">FIG. 5</figref> may be combined any of the embodiments described herein.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram that illustrates a scratch region <b>610</b> included in a portion of the computing device <b>600</b>. As shown in <figref idref="DRAWINGS">FIG. 6</figref>, the scratch region <b>610</b> is included on an outside surface of the computing device <b>600</b>. Specifically, the scratch region <b>610</b> is included on an outside surface of a display portion <b>602</b> of the computing device. The computing device <b>600</b> also has a base portion <b>604</b>. The computing device <b>600</b> shown in <figref idref="DRAWINGS">FIG. 6</figref> is in a closed configuration so that a viewable portion of a display (not shown) of the display portion <b>602</b> is disposed between the base portion <b>604</b> the computing device and the display portion <b>602</b> of the computing device. In some embodiments, the computing device <b>600</b> can be configured to have an open configuration similar to the computing device <b>200</b> shown in <figref idref="DRAWINGS">FIG. 3</figref> and/or similar to the computing device <b>500</b> shown in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0089" num="0088">The scratch region <b>610</b> is configured so that the scratch region <b>610</b> can be used when the computing device <b>600</b> is in a closed configuration. Although the scratch region <b>610</b> is configured so that the scratch region <b>610</b> can be used when the computing device <b>600</b> is in a closed configuration, in some embodiments, the scratch region <b>610</b> can be configured so that the scratch region <b>610</b> can be used when the computing device <b>600</b> is in an open configuration.</p>
<p id="p-0090" num="0089">Although not shown, in some embodiments, the scratch region <b>610</b> could be included on an outside surface of a base portion <b>604</b> of the computing device <b>600</b>. In some embodiments, an additional scratch region (not shown), in addition to scratch region <b>610</b>, can be included on the base portion <b>604</b> the computing device. In some embodiments, an additional scratch region (not shown), in addition to scratch region <b>610</b>, can be included on the display portion <b>602</b> of the computing device <b>600</b>.</p>
<p id="p-0091" num="0090">As shown in <figref idref="DRAWINGS">FIG. 6</figref>, several buttons <b>620</b> are associated with the scratch region <b>610</b>. In some embodiments, at least one of the buttons <b>620</b> can be configured to trigger the functionality associated with the scratch region <b>610</b>. For example, in some embodiments, at least one of buttons <b>620</b> can be configured to activate the scratch region <b>610</b> so that an interaction of a user with the scratch region <b>610</b> can be registered.</p>
<p id="p-0092" num="0091">Although not shown, in some embodiments, one or more buttons may not be associated with scratch region <b>610</b>. In such embodiments, interactions with the scratch region <b>610</b> may be used to activate one more functions associated with scratch region <b>610</b>. For example, a particular type of interaction with the scratch region <b>610</b> (e.g., a particular type of gesture) can be configured to activate the scratch region <b>610</b> so that an interaction with the scratch region <b>610</b> can be registered. Other types of interactions with the scratch region <b>610</b> can be configured to trigger other functionality of the scratch region <b>610</b>.</p>
<p id="p-0093" num="0092">In some embodiments, the computing device <b>600</b> can be configured so that the scratch region <b>610</b> may only be activated when the computing device <b>600</b> is in a particular orientation (as determined using, for example, a gyroscope or an accelerometer). For example, the scratch region <b>610</b> may only be activated when the scratch region <b>610</b> (and the computing device <b>600</b>) is within a plane that is normal (e.g., substantially normal) to a gravitational pull of the earth. This orientation can be referred to as a flat orientation. The computing device <b>600</b> may be configured so the scratch region <b>610</b> is only activated when the computing device <b>600</b> is in the flat orientation so that interactions with the scratch region <b>610</b> may not be inadvertently registered by the scratch region <b>610</b> (and associated hardware and/or software which are not shown in <figref idref="DRAWINGS">FIG. 6</figref>) when not in the flat orientation. In some embodiments, the computing device <b>600</b> can be configured so that the scratch region <b>610</b> may only be activated when the computing device is in a different orientation than the flat orientation. In some embodiments, the scratch region <b>610</b> and associated hardware and/or software can collectively be referred to as a scratch device.</p>
<p id="p-0094" num="0093">As another example, one or more indicators of interactions with the scratch region <b>610</b> can be ignored or discarded if the indicators of interactions with the scratch region <b>610</b> occur (e.g., occur during a time period) when an orientation of the computing device <b>600</b> does not satisfy an orientation condition. In contrast, one or more interactions with the scratch region <b>610</b> can be registered if the interactions with the scratch region <b>610</b> occur (e.g., occur during a time period) when an orientation of the computing device <b>600</b> satisfies an orientation condition. The orientation condition may be satisfied based on the computing device <b>600</b> being in a first orientation with respect to a plane (e.g., oriented so that the scratch region is substantially co-planar with the plane) and unsatisfied when the computing device <b>600</b> is in a second orientation with respect to the plane (e.g., oriented so that the scratch region is substantially normal to the plane).</p>
<p id="p-0095" num="0094">In some embodiments, the scratch region <b>610</b> may be changed from an active state to an inactive state when the computing device <b>600</b> is changed from a closed configuration to an open configuration. In in some embodiments, the scratch region <b>610</b> may only be changed from an inactive state to an active state when the computing device <b>600</b> is in the closed configuration.</p>
<p id="p-0096" num="0095">Although not shown, in some embodiments, a scratch region can be included on a backside of a tablet type computing device, or in a margin of a frontside of a tablet type computing device. Thus, the scratch region can be included on the side of the tablet type computing device that is opposite a display of the computing device.</p>
<p id="p-0097" num="0096">In some embodiments, the scratch region <b>610</b> may be larger than that shown in <figref idref="DRAWINGS">FIG. 6</figref> or smaller than the scratch region <b>610</b> shown in <figref idref="DRAWINGS">FIG. 6</figref>. In some embodiments, the scratch region <b>610</b> can have a different shape than that shown in <figref idref="DRAWINGS">FIG. 6</figref>. For example, the scratch region <b>610</b> can have a triangular shape, a hexagonal shape, a circular shape, and/or so forth. In some embodiments, the scratch region <b>602</b> can have an irregular shape.</p>
<p id="p-0098" num="0097">In some embodiments, one or more boundaries of the scratch region <b>610</b> may be marked (e.g., visibly marked) so that the boundaries of the scratch region <b>610</b> can be identified by a user. In some embodiments, one or more boundaries of the scratch region <b>610</b> may not be visibly marked. In some embodiments, at least a portion of the scratch region <b>610</b> may be illuminated using, for example, a light (e.g., a backlight, a light emitting diode (LED)) so that the scratch region <b>610</b> may be identified by a user of the computing device <b>600</b>. The features described in connection with <figref idref="DRAWINGS">FIG. 6</figref> may be combined any of the embodiments described herein.</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. 7</figref> is a schematic diagram that illustrates a scratch region <b>710</b> of a computing device <b>700</b>. As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the scratch region <b>710</b> spans nearly the entire length of the computing device <b>700</b>. In some embodiments, the scratch region <b>710</b> can be smaller than that shown in <figref idref="DRAWINGS">FIG. 7</figref>, or larger than that shown in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0100" num="0099">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the scratch region <b>710</b> is exposed so that the scratch region <b>710</b> can be used by a user of the computing device <b>700</b> when the display portion <b>702</b> of the computing device <b>700</b> is slidably moved along sliding mechanisms <b>782</b> of the computing device <b>700</b>. Specifically, the scratch region <b>710</b> is exposed when the display portion <b>702</b> is moved along direction <b>73</b> so that the computing device <b>700</b> is in an open configuration. The computing device can be changed from the open configuration to a closed configuration (not shown) when the display portion <b>702</b> is moved along direction <b>75</b>.</p>
<p id="p-0101" num="0100">Although not shown, in some embodiments, the scratch region <b>710</b> can be configured so that at least a portion of the scratch region <b>710</b> may be activated when only a portion of the scratch region <b>700</b> is exposed. For example, the scratch region <b>710</b> can be configured so that only a portion of the scratch region <b>710</b> that is exposed is activated when the display portion <b>702</b> of the computing device <b>700</b> is moved. In some embodiments, all, or less than all, of the scratch region <b>710</b> (and associated hardware and/or software) can be activated when only a portion of the scratch region <b>710</b> is exposed for use by a user when the display portion <b>702</b> of the computing device <b>700</b> is moved.</p>
<p id="p-0102" num="0101">Although not shown in <figref idref="DRAWINGS">FIG. 7</figref>, the scratch region <b>710</b> can be divided into several different regions with different functionality. For example, a first portion of the scratch region <b>710</b> can be configured so that a user may interact with the first portion of the scratch region <b>710</b> with a pencil. A second portion of the scratch region <b>710</b> can be configured so that a user may interact with the second portion of the scratch region <b>710</b> with a stylus and/or a finger.</p>
<p id="p-0103" num="0102">In some embodiments, the scratch region <b>710</b> can be configured so that a default set of processing may be performed when a user interacts with the scratch region <b>710</b>. For example, an interpretation of an indicator of an interaction with the scratch region <b>710</b> may be automatically triggered when a user interacts with the scratch region <b>710</b>. In some embodiments, an interpretation of an indicator of an interaction with the scratch region <b>710</b> may be stored in a particular location, associated with a particular file type, defined as a particular file type, and/or so forth in response to a user interacting with the scratch region <b>710</b>. In some embodiments, the file type can include, for example, an image file (e.g., a Joint Photographic Experts Group (JPEG) file), a text file (e.g., an American Standard Code for Information Interchange (ASCII) file, a rich text formal (RTF) file), a portable document format (pdf) file, and/or so forth. The features described in connection with <figref idref="DRAWINGS">FIG. 7</figref> may be combined any of the embodiments described herein.</p>
<p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. 8A</figref> is a diagram that illustrates a scratch region <b>810</b> included in an extension <b>814</b> of a computing device <b>800</b> when the extension <b>814</b> is in a deployed configuration. <figref idref="DRAWINGS">FIG. 8B</figref> is a diagram that illustrates the extension <b>814</b> of the computing device <b>800</b> (shown in <figref idref="DRAWINGS">FIG. 8A</figref>) when the extension <b>814</b> is in a stowed configuration. As shown in <figref idref="DRAWINGS">FIG. 8A</figref>, the computing device <b>800</b> is a tablet type computing device that has a display <b>860</b>.</p>
<p id="p-0105" num="0104">As shown in <figref idref="DRAWINGS">FIG. 8A</figref>, the scratch region <b>810</b> is exposed when the extension <b>814</b> is in the deployed configuration. The scratch region <b>810</b> is exposed so that the scratch region <b>810</b> can be used (in an active state) when the extension <b>814</b> is in the deployed configuration. In some embodiments, the scratch region <b>810</b> (e.g., the scratch region <b>810</b> and associated hardware and/or software) (i.e., scratch device) is changed from an inactive state to an active state when the extension <b>814</b> is moved from the stowed configuration (shown in <figref idref="DRAWINGS">FIG. 8B</figref>) to the deployed configuration (shown in <figref idref="DRAWINGS">FIG. 8A</figref>). For example, a scratch module associated with the scratch region <b>810</b> is changed from an inactive state to an active state when the extension <b>814</b> is moved from the stowed configuration (shown in <figref idref="DRAWINGS">FIG. 8B</figref>) to the deployed configuration (shown in <figref idref="DRAWINGS">FIG. 8A</figref>)</p>
<p id="p-0106" num="0105">The scratch region <b>810</b>, as shown in <figref idref="DRAWINGS">FIG. 8B</figref>, is hidden and cannot be used when the extension <b>814</b> is in the stowed configuration. As shown in <figref idref="DRAWINGS">FIG. 8B</figref>, all of the extension <b>814</b> except for an end portion <b>813</b> of the extension <b>814</b> is disposed within the computing device when the extension <b>814</b> is in the stowed configuration. Accordingly, the scratch region <b>810</b> is also disposed within the computing device <b>800</b> and is unavailable for use by a user of the computing device <b>800</b>. In some embodiments, the scratch region <b>810</b> is changed from an active state to an inactive state when the extension <b>814</b> is moved from the deployed configuration (shown in <figref idref="DRAWINGS">FIG. 8A</figref>) to the stowed configuration (shown in <figref idref="DRAWINGS">FIG. 8B</figref>).</p>
<p id="p-0107" num="0106">In some embodiments, the extension <b>814</b> can be changed from the stowed configuration to the deployed configuration, and/or vice versa using an instruction triggered via the computing device <b>800</b>. For example, the extension <b>814</b> can be changed from the stowed configuration for the deployed configuration, and/or vice versa using a button, a command using a keyboard, and/or so forth. In some embodiments, the extension <b>814</b> can be changed from the stowed configuration to the deployed configuration, and/or vice versa, mechanically. For example, the extension <b>814</b> can be changed from the deployed configuration to the stowed configuration when a user pushes the extension <b>814</b> into the interior of the computing device <b>800</b>.</p>
<p id="p-0108" num="0107">In some embodiments, the scratch region <b>810</b> can be in an active state even though one or more portions of the computing device <b>800</b> remain in an inactive state (e.g., an off state, a sleep state). Accordingly, the scratch region <b>810</b> can be changed from an inactive state to an active state when deploying the extension <b>814</b>, even though the remaining portions of the computing device <b>800</b> (or portions thereof) may be in an inactive state.</p>
<p id="p-0109" num="0108">In some embodiments, hardware and/or software associated with the scratch region <b>810</b> can be disposed within the extension <b>814</b>. Thus, at least a portion of the hardware and/or software associated with the scratch region <b>810</b> (such as portions of the scratch device <b>112</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>) can be integrated into the extension <b>814</b>.</p>
<p id="p-0110" num="0109">Although not shown, in some embodiments, the extension <b>814</b> can be a standalone device that can be plugged into the computing device <b>800</b>. In some embodiments, the extension <b>814</b> can be a standalone device that is configured separate from the computing device <b>800</b> (e.g., produced as a separate device from the computing device <b>800</b>), and can be attached to the computing device <b>800</b>. Although not shown, in some embodiments, the extension <b>814</b> can be plugged into, for example, a universal serial bus (USB) port not shown of the computing device <b>800</b>, and can be activated when (or after) the extension <b>814</b> is plugged into the USB port. In some embodiments, software and or hardware that can interface with (e.g., operate with) the extension <b>814</b> (if a standalone device) can be integrated into and/or installed within the computing device <b>800</b>.</p>
<p id="p-0111" num="0110">Although not shown, in some embodiments, the extension <b>814</b> can be a standalone device that can be wirelessly associated with the computing device <b>800</b>. In such embodiments, the extension <b>814</b> can be configured to communicate with the computing device <b>800</b> via a wireless protocol (e.g., a Bluetooth protocol). In some embodiments, software and or hardware that can interface with (e.g., operate with) the extension <b>814</b> (if functioning as a standalone wireless device) can be integrated into and/or installed within the computing device <b>800</b>. For example, one or more functions associated with a scratch region analyzer can be included in the computing device <b>800</b> and can be associated with an extension <b>814</b> functioning as a standalone wireless device. In such embodiments, an interaction indicator can be generated based on an interaction with the scratch region <b>810</b> of the extension <b>814</b>. The interaction indicator can be wirelessly communicated to the scratch region analyzer included in the computing device <b>800</b> and the scratch region analyzer can be configured to analyze the interaction indicator. In some embodiments, after the interaction indicator is received at the computing device <b>800</b>, the interaction indicator can be represented in at least a portion of the display <b>860</b>. The features described in connection with <figref idref="DRAWINGS">FIG. 8</figref> may be combined any of the embodiments described herein.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart that illustrates a method for using a scratch region of the computing device. As shown in <figref idref="DRAWINGS">FIG. 9</figref>, an interaction with the scratch region of a computing device is detected (block <b>900</b>). In some embodiments, an indicator of the interaction with the scratch region can be interpreted by an interaction detection module such as interaction detection module <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In some embodiments, the interaction with the scratch region can be an interaction of a pencil with a surface of the scratch region, an interaction of the finger of a user with the surface of the scratch region, and/or so forth.</p>
<p id="p-0113" num="0112">In some embodiments, the scratch region can be included on an outside surface of the computing device. In some embodiments, the scratch region can be mutually exclusive from a keyboard and an electrostatic touchpad for controlling a pointing device of the computing device.</p>
<p id="p-0114" num="0113">An indicator of the interaction with the scratch region of the computing device is generated (block <b>910</b>). In some embodiments, the indicator of the interaction with the scratch region can be generated by an interaction detection module such as interaction detection module <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In some embodiments, the indicator can be, for example, a series of binary values that represent the interaction with the scratch region.</p>
<p id="p-0115" num="0114">An interpretation of the interaction is defined based on the indicator of the interaction (block <b>920</b>). In some embodiments, the interpretation can be triggered in response to an instruction from a user via, for example, a keyboard. In some embodiments, the interpretation can be defined by a scratch region analyzer such as scratch region analyzer <b>122</b> of the scratch module <b>120</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In some embodiments, the interpretation can be triggered by a separate interaction with the scratch region of the computing device.</p>
<p id="p-0116" num="0115">The interpretation is stored in a memory (block <b>930</b>). In some embodiments, the memory can be included in the computing device. Although not shown in <figref idref="DRAWINGS">FIG. 9</figref>, in some embodiments, the indicator of the interaction is also stored in the memory. In some embodiments, the indicator of the interaction is not stored in the memory.</p>
<p id="p-0117" num="0116">Implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Implementations may implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device (computer-readable medium) or in a propagated signal, for processing by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program, such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be processed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.</p>
<p id="p-0118" num="0117">Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method steps also may be performed by, and an apparatus may be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).</p>
<p id="p-0119" num="0118">Processors suitable for the processing of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer also may include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in special purpose logic circuitry.</p>
<p id="p-0120" num="0119">To provide for interaction with a user, implementations may be implemented on a computer having a display device, e.g., a cathode ray tube (CRT) or liquid crystal display (LCD) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user ca provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.</p>
<p id="p-0121" num="0120">Implementations may be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation, or any combination of such back-end, middleware, or front-end components. Components may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.</p>
<p id="p-0122" num="0121">While certain features of the described implementations have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments. It should be understood that they have been presented by way of example only, not limitation, and various changes in form and details may be made. Any portion of the apparatus and/or methods described herein may be combined in any combination, except mutually exclusive combinations. The embodiments described herein can include various combinations and/or sub-combinations of the functions, components and/or features of the different embodiments described.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computing device, comprising:
<claim-text>a display;</claim-text>
<claim-text>a touchpad configured for moving a cursor on the display;</claim-text>
<claim-text>a keyboard for inputting input into the computing device;</claim-text>
<claim-text>a scratch region mutually exclusive from the touchpad and the keyboard, the scratch region being configured to receive input to the computing device based on contact with the scratch region;</claim-text>
<claim-text>an interaction detection module configured to detect an interaction with the scratch region, and configured to generate an indicator of the interaction; and</claim-text>
<claim-text>a scratch region analyzer configured to define an alphanumeric character based on the indicator of the interaction with the scratch region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>an extension configured to be moved from a stowed configured to a deployed configuration, the scratch region being defined within a portion of the extension,</claim-text>
<claim-text>the scratch region analyzer being changed from an inactive state to an active state when the extension is moved from the stowed configured to the deployed configuration.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the scratch region is a first scratch region defined by a first region of the computing device, the interaction is a first interaction,
<claim-text>the computing device, further comprising:</claim-text>
<claim-text>a second scratch region defined by a second region of the computing device mutually exclusive with the first region of the computing device, the interaction detection module configured to detect a second interaction and configured to generate an indicator of the second interaction,</claim-text>
<claim-text>the scratch region analyzer configured to define an interpretation of the second interaction based on the indicator of the second interaction with the second scratch region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a first display included in a display portion of the computing device; and</claim-text>
<claim-text>a second display included in a base portion of the computing device, the second display is configured to display a representation of the indicator of the interaction during at least a portion of a time period that the interaction with the scratch region occurs.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the touchpad is disposed within a first plane co-planar with a first side of a base portion of the computing device, the scratch region is disposed within a second plane co-planar with a second side of the base portion of the computing device, the first plane is substantially parallel to the second plane.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the scratch region defines an area on a base portion of the computing device,
<claim-text>the computing device further comprising:</claim-text>
<claim-text>a memory configured to store an interpretation; and</claim-text>
<claim-text>a display portion slidably coupled to the base portion of the computing device and configured to slidably move from a first position with respect to the base portion of the computing device to a second position with respect to the base portion of the computing device, the scratch region being disposed between the base portion and the display portion when the display portion is in the first position, the scratch region being exposed when the display portion is in the second position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a display of the computing device configured to change from an illuminating mode to a non-illuminating mode; and</claim-text>
<claim-text>a button configured to change the scratch region analyzer from an off-state to an on-state when the button is actuated and while the display is in the non-illuminating mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a button configured to trigger storage of the alphanumeric character as part of a note page in response to the button being actuated.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the interaction is a first interaction,</claim-text>
<claim-text>the interaction detection module is configured to detect a second interaction with the scratch region and configured to generate an indicator of the second interaction,</claim-text>
<claim-text>the scratch region analyzer is configured to associate the indicator of the second interaction with an instruction, and</claim-text>
<claim-text>the scratch region analyzer is configured to define the alphanumeric character based on the indicator of the interaction in response to the instruction.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a base portion of the computing device; and</claim-text>
<claim-text>a display portion of the computing device coupled to the base portion of the computing device, the interaction detection module and the scratch region analyzer being in an active state when the display portion of the computing device and the base portion of the computing device define a closed configuration, the keyboard being disposed between the display portion of the computing device and the base portion of the computing device when the display portion of the computing device and the base portion of the computing device are in the closed configuration.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A computer-readable storage medium storing instructions that when executed cause a computing device to perform a process, the instructions comprising instructions to:
<claim-text>detect a plurality of interactions with a scratch region of the computing device, the scratch region being mutually exclusive from a touchpad for moving a cursor of the computing device and from a keyboard of the computing device;</claim-text>
<claim-text>generate an indicator of a first interaction from the plurality of interactions, and an indicator of a second interaction from the plurality of interactions;</claim-text>
<claim-text>associate the indicator of the first interaction from the plurality of interactions with an interpretation instruction; and</claim-text>
<claim-text>interpret, in response to the interpretation instruction, the second interaction from the plurality of interactions as an alphanumeric character based on the indicator of the second interaction from the plurality of interactions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the generating of the indicator of the first interaction and the indicator of the second interaction are performed while a display of the computing device is in an inactive state.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the plurality of interactions is a first plurality of interactions during a first time period,
<claim-text>the instructions further comprising instructions to:</claim-text>
<claim-text>detect a second plurality of interactions with the scratch region of the computing device during a second time period different from the first time period;</claim-text>
<claim-text>determine that an orientation condition is unsatisfied during the second time period; and</claim-text>
<claim-text>discard the second portion of the plurality of interactions in response to the orientation condition being unsatisfied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising instructions to:
<claim-text>generate an indicator of a third interaction from the plurality of interactions;</claim-text>
<claim-text>associate the indicator of the third interaction from the plurality of interactions with a pagination instruction; and</claim-text>
<claim-text>trigger storage, in response to the pagination instruction, of the alphanumeric character as a portion of a note page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising instructions to:
<claim-text>generate an indicator of a third interaction from the plurality of interactions;</claim-text>
<claim-text>associate the indicator of the third interaction from the plurality of interactions with a delete instruction;</claim-text>
<claim-text>trigger storage of the indicator of the second interaction in a memory at a first time; and</claim-text>
<claim-text>remove, in response to the delete instruction and at a second time after the first time, the indicator of the second interaction from the memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising instructions to:
<claim-text>associate an indicator of a teaching interaction with the interpretation instruction during a learning time period, the associating includes comparing the indicator of the first interaction with the indicator of the teaching interaction.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method, comprising:
<claim-text>changing at least a portion of a scratch device included in a computing device from an inactive state to an active state in response to a first interaction with a scratch region of the scratch device, the changing is performed while a primary operating system of the computing device is in an inactive state;</claim-text>
<claim-text>defining an indicator of the first interaction;</claim-text>
<claim-text>defining an indicator of a second interaction with the scratch region of the scratch device; and</claim-text>
<claim-text>associating the indicator of the first interaction from the plurality of interactions with an instruction configured to trigger processing of the indicator of the second interaction from the plurality of interactions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the changing the at least the portion of the scratch device from the active state to the inactive state in response to the computing device being changed from an open position to a closed position.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:
<claim-text>triggering display of a representation of the indicator of the first interaction during at least a portion of a time period that the first interaction with the scratch region occurs; and</claim-text>
<claim-text>defining, in response to the instruction, an interpretation of the second interaction based on the indicator of the second interaction.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:
<claim-text>generating an image on a display of the computing device;</claim-text>
<claim-text>receiving an input from a keyboard of the computing device; and</claim-text>
<claim-text>moving a cursor on the display in response to an input from a touchpad, the scratch region of the scratch device being mutually exclusive from the touchpad and from the keyboard.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the second interaction represents an alphanumeric character, the instruction is configured to trigger processing of the indicator of the second interaction, the first interaction is a gesture configured to trigger execution of the instruction.</claim-text>
</claim>
</claims>
</us-patent-grant>
