<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627104-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627104</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13096603</doc-number>
<date>20110428</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>219</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713189</main-classification>
<further-classification>707640</further-classification>
<further-classification>711100</further-classification>
</classification-national>
<invention-title id="d2e53">Secure data storage</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4816653</doc-number>
<kind>A</kind>
<name>Anderl et al.</name>
<date>19890300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4882474</doc-number>
<kind>A</kind>
<name>Anderl et al.</name>
<date>19891100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5032979</doc-number>
<kind>A</kind>
<name>Hecht et al.</name>
<date>19910700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5390318</doc-number>
<kind>A</kind>
<name>Ramakrishnan et al.</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711158</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5859966</doc-number>
<kind>A</kind>
<name>Hayman et al.</name>
<date>19990100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5960086</doc-number>
<kind>A</kind>
<name>Atalla</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5987517</doc-number>
<kind>A</kind>
<name>Firth et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6064736</doc-number>
<kind>A</kind>
<name>Davis et al.</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713155</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6088449</doc-number>
<kind>A</kind>
<name>Atalla</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6393569</doc-number>
<kind>B1</kind>
<name>Orenshteyn</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6453334</doc-number>
<kind>B1</kind>
<name>Vinson et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6711686</doc-number>
<kind>B1</kind>
<name>Barrett</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6912655</doc-number>
<kind>B1</kind>
<name>Zucker</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6959394</doc-number>
<kind>B1</kind>
<name>Brickell et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7024452</doc-number>
<kind>B1</kind>
<name>O'Connell, Jr. et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7036020</doc-number>
<kind>B2</kind>
<name>Thibadeau</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>7096253</doc-number>
<kind>B2</kind>
<name>Vinson et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7107323</doc-number>
<kind>B2</kind>
<name>Hara et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>7178165</doc-number>
<kind>B2</kind>
<name>Abrams</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>7209960</doc-number>
<kind>B2</kind>
<name>Veselov</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>7257706</doc-number>
<kind>B1</kind>
<name>Zucker</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>7290279</doc-number>
<kind>B2</kind>
<name>Eun et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>7302571</doc-number>
<kind>B2</kind>
<name>Noble et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>7325041</doc-number>
<kind>B2</kind>
<name>Hara et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>7328341</doc-number>
<kind>B1</kind>
<name>Eun et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>7426787</doc-number>
<kind>B2</kind>
<name>Tracy et al.</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>7461270</doc-number>
<kind>B2</kind>
<name>Thibadeau</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>7587426</doc-number>
<kind>B2</kind>
<name>Fujiwara et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>7620698</doc-number>
<kind>B2</kind>
<name>Hara et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>7698732</doc-number>
<kind>B2</kind>
<name>Naglieri</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>7716342</doc-number>
<kind>B2</kind>
<name>O'Connell, Jr. et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>7716743</doc-number>
<kind>B2</kind>
<name>Costea et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>7743249</doc-number>
<kind>B1</kind>
<name>Zucker et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>7765239</doc-number>
<kind>B2</kind>
<name>Rajan et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>7792859</doc-number>
<kind>B2</kind>
<name>Harris et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>7885932</doc-number>
<kind>B2</kind>
<name>Kulkarni et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707640</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2002/0169878</doc-number>
<kind>A1</kind>
<name>Orenshteyn</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2002/0184398</doc-number>
<kind>A1</kind>
<name>Orenshteyn</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2003/0005300</doc-number>
<kind>A1</kind>
<name>Noble et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2003/0023867</doc-number>
<kind>A1</kind>
<name>Thibadeau</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2003/0037252</doc-number>
<kind>A1</kind>
<name>Abrams</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2003/0056112</doc-number>
<kind>A1</kind>
<name>Vinson et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2003/0200436</doc-number>
<kind>A1</kind>
<name>Eun et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>2004/0060053</doc-number>
<kind>A1</kind>
<name>Veselov</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>2004/0156501</doc-number>
<kind>A1</kind>
<name>Zuili</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>2004/0205109</doc-number>
<kind>A1</kind>
<name>Hara et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>2005/0251806</doc-number>
<kind>A1</kind>
<name>Auslander et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>2005/0268114</doc-number>
<kind>A1</kind>
<name>Thibadeau</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>2006/0069692</doc-number>
<kind>A1</kind>
<name>Pernia</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>2006/0129657</doc-number>
<kind>A1</kind>
<name>O'Connell, Jr. et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>2006/0161988</doc-number>
<kind>A1</kind>
<name>Costea et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>2006/0174325</doc-number>
<kind>A1</kind>
<name>Naglieri</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>2006/0271653</doc-number>
<kind>A1</kind>
<name>Hara et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>2006/0282440</doc-number>
<kind>A1</kind>
<name>Fletcher et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>2007/0011469</doc-number>
<kind>A1</kind>
<name>Allison et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>2007/0011749</doc-number>
<kind>A1</kind>
<name>Allison et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>2007/0016771</doc-number>
<kind>A1</kind>
<name>Allison et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>2007/0027873</doc-number>
<kind>A1</kind>
<name>Factor et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>2007/0083559</doc-number>
<kind>A1</kind>
<name>Harris et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>2007/0174920</doc-number>
<kind>A1</kind>
<name>Thibadeau</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>2008/0010285</doc-number>
<kind>A1</kind>
<name>Rajan et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>2008/0027866</doc-number>
<kind>A1</kind>
<name>Halcrow et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>2008/0098086</doc-number>
<kind>A1</kind>
<name>Hara et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>2009/0049047</doc-number>
<kind>A1</kind>
<name>Battepati et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>2009/0144545</doc-number>
<kind>A1</kind>
<name>Dhuvur et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>2009/0144582</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>2009/0235091</doc-number>
<kind>A1</kind>
<name>Kurn et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>2009/0276434</doc-number>
<kind>A1</kind>
<name>Harris et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>2010/0088496</doc-number>
<kind>A1</kind>
<name>Zolnowsky et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712245</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>2010/0205458</doc-number>
<kind>A1</kind>
<name>O'Connell, Jr. et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>2010/0333116</doc-number>
<kind>A1</kind>
<name>Prahlad et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>2012/0054315</doc-number>
<kind>A1</kind>
<name>Morrison et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00073">
<document-id>
<country>WO</country>
<doc-number>WO 2010/111438</doc-number>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00074">
<document-id>
<country>WO</country>
<doc-number>WO2010111438</doc-number>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00075">
<othercit>Andrews, &#x201c;The Design of the Saguaro Distributed Operating System&#x201d;, 1987, IEEE, p. 104-118.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00076">
<othercit>International Sear Report and Written Opinion for International (PCT) Patent Application No. PCT/US12/34765, mailed Apr. 8, 2013, 8 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713189</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707640</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>7079992</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130031372</doc-number>
<kind>A1</kind>
<date>20130131</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Oltmans</last-name>
<first-name>James Robert</first-name>
<address>
<city>Evergreen</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Zweber</last-name>
<first-name>Benjamin E.</first-name>
<address>
<city>Littleton</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Oltmans</last-name>
<first-name>James Robert</first-name>
<address>
<city>Evergreen</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Zweber</last-name>
<first-name>Benjamin E.</first-name>
<address>
<city>Littleton</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Sheridan Ross P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Absio Corporation</orgname>
<role>02</role>
<address>
<city>Littleton</city>
<state>CO</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Mehedi</last-name>
<first-name>Morshed</first-name>
<department>2438</department>
</primary-examiner>
<assistant-examiner>
<last-name>Lane</last-name>
<first-name>Gregory</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Methods and systems for obscuring the location of critical system files are provided. In particular, the locations of files stored within a file system are selected by applying various inputs to a hash algorithm. For system files, the inputs applied to the hash algorithm can include a user name and password. For data files, the information provided to the hash algorithm can include the file name. In addition to providing random file locations, a file system in accordance with embodiments of the present invention can homogenize other information, including file names, sizes and creation dates.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="161.54mm" wi="181.61mm" file="US08627104-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="182.63mm" wi="181.95mm" file="US08627104-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="257.73mm" wi="183.13mm" file="US08627104-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="227.75mm" wi="139.53mm" file="US08627104-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="237.83mm" wi="174.67mm" file="US08627104-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="234.02mm" wi="137.84mm" file="US08627104-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="196.85mm" wi="136.82mm" file="US08627104-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="230.21mm" wi="186.77mm" orientation="landscape" file="US08627104-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="230.21mm" wi="158.50mm" file="US08627104-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="152.15mm" wi="176.87mm" file="US08627104-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD</heading>
<p id="p-0002" num="0001">Systems and methods for providing secure data storage are disclosed. More particularly, a file system is provided in which the locations of critical system files are obfuscated.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">The security of computer and data systems is an important consideration. In order to secure data stored electronically, various techniques have been employed. For example, physical access to data can be restricted. However, physically compartmentalizing data is inconvenient, and is becoming increasingly unrealistic, as remote access to data and cloud based computing becomes the norm.</p>
<p id="p-0004" num="0003">Other techniques for securing electronic data involve the use of passwords and encryption. Passwords can be required before a user is granted access to a system. Most encryption schemes operate by scrambling the data to be secured using an encryption key. Access to protected data can thus require provision of a required password, use of an appropriate algorithm, and the compliment or pair to the key that was used to encrypt the data. Depending on the password, the encryption algorithm and the length of the key, data thus protected can be quite difficult to access. However, one weakness of such systems is that, once a hacker or other unauthorized party obtains the necessary password and/or key, that party has complete access to the encrypted data. Another weakness of systems that utilize encryption keys is that when a hacker desires access to encrypted information, the hacker can initiate an attack by analyzing relatively small files, which likely comprise files containing encryption keys. In addition, the hacker can concentrate on files generated on or near the date and time of system initialization, since such files are likely to comprise system files containing or pointing to key stores. By thus limiting the volume of information on which to concentrate an attack, the security of encrypted file systems can more easily be overcome.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">Embodiments of the disclosed invention are directed to solving these and other problems and disadvantages of the prior art. In accordance with embodiments of the present invention, an apparently homogenous or obfuscated file system is provided. The file system utilizes random storage locations for at least some system and/or data files when those files are stored on the system. This makes it more difficult for a hacker to locate files containing information that is used to secure system data, such as files containing keys required to unlock that data or content.</p>
<p id="p-0006" num="0005">In accordance with embodiments of the present invention, a client or system application implementing an obfuscated file system or structure places files created by or stored on the system in a unique hashed file location. This location is stored in a central index, which is encrypted and stored within the file system like any other file when it is not in use. Moreover, the location of the central index is not stored in any obvious or universally known location. In particular, a different hash for the location of the central index will be generated for each different user. The location of the central index can be calculated based on a combination of secret data or input and known data or input. Secret data or input can include, but is not limited to, a password. Accordingly, although password is at times used in the present disclosure to refer to secret input, embodiments of the present invention can make use of secret input in forms other than a password. Therefore, as an example, the location of a central index can be calculated based on the user name and password for a system user. As another example, the location of a central index can be calculated from input that includes a private key or other secret data or input. Accordingly, calculating the location of the central index relies on the knowledge of secret information, such as the user's password. In addition, this arrangement enables different central indices and index locations for different users and/or user name and password combinations, while maintaining security between the different users and/or user name and password combinations.</p>
<p id="p-0007" num="0006">The location of the central index is determined by a hash function or algorithm that can be passed the name and password of the user, a salt, and optionally additional unique information to calculate the file location or by passing the hash function any combination of secret and known data. Having thus determined the file location, that location and password can be validated by using the password or other secret data to decrypt the file found at that location. If the decryption fails or a file is not found at the determined location, then it can be concluded that the input data was invalid. This verification removes any need to permanently store the exact password in a retrievable way or the need for system files to be stored in a standard or known location. Accordingly, a password or other secret data or input is both a critical part of the file location mechanism, and part of the key to decrypting that file.</p>
<p id="p-0008" num="0007">In accordance with further embodiments of the present invention, one user can use different passwords or secret inputs for different purposes. For example, a first password or secret input can unlock the system normally. A second, different password or secret input, can be used to access and initiate a script that is executed to perform a task. An example of a task could be a background task that performs a system wipe and that sends an alarm message where the second password or secret input is set up as a duress signal. A third password or secret input could be established to unlock an alternate system content index. Therefore, different data sets can be stored concurrently in the system. Moreover, no interrelation or knowledge of the different data sets by other data sets is required. In accordance with still other embodiments, a first password or secret input may be required to access a first content index. After accessing this first content index, additional content could be accessed if a second password or secret input is provided, where the additional content is accessed through a second content index that could require both the first password/secret input and the second password/secret input in order to calculate the location and decrypt the content. This principle can be extended for n number of passwords/secret inputs. As still other examples, different algorithms and/or the addition of different salts to the secret inputs can be used to calculate different file locations. For instance, one hash salt can be used to unlock the central index while another hash salt can be used to unlock an asymmetric private encryption key at a location different than the central index, all in response to the entry of one password or secret input. In accordance with still other embodiments, device identification and other device specific information can be mixed into the hash algorithm's input to ensure that copies of the file are only accessible by a specific device or system reporting to the same device identifier.</p>
<p id="p-0009" num="0008">The location of all data files can also be determined through application of a hash algorithm. More particularly, a file name and a salt can be provided to the hash algorithm. From these inputs, the hash algorithm calculates a file location for the data file. Provided the calculated location is not already occupied, the data file is stored in the calculated location.</p>
<p id="p-0010" num="0009">In accordance with other embodiments of the present invention, measures may be taken to further obscure or homogenize system files. For example, the names of system and data files can be homogenized. As a further example, files may be split into multiple chunks or padded so that all files have the same or similar sizes to one another. The common file size can be a predetermined size, or a size that represents an average size or common size of the files stored on the system. Alternatively or in addition, dummy files can be generated. In accordance with still other embodiments, the files may be placed within a tree of directories and subdirectories according to the algorithm used to determine the index file location. In accordance with still other embodiments, the times and dates associated with files can be altered, either directly or through the regeneration of the files.</p>
<p id="p-0011" num="0010">Additional features and advantages of embodiments of the present invention will become more readily apparent from the following description, particularly when taken together with the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> depicts components of a system incorporating a secure file system in accordance with embodiments of the present invention;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> depicts aspects of an exemplary file storage process in accordance with embodiments of the present invention; and</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> depicts aspects of an exemplary system file retrieval process in accordance with embodiments of the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> illustrates features of a system file location process in accordance with embodiments of the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> depicts aspects of a data file location process in accordance with embodiments of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> illustrates other exemplary file obfuscation features in accordance with embodiments of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> depicts features of a file system in accordance with embodiments of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> depicts features of another exemplary file system in accordance with embodiments of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> depicts features of another exemplary file system in accordance with embodiments of the present invention; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an exemplary file system in accordance with embodiments of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> depicts components of a system <b>100</b> incorporating a secure file system in accordance with embodiments of the present invention. The system <b>100</b> can be implemented by or in connection with a computer <b>104</b>. The computer <b>104</b> is not limited to any particular type or class of device. For example, as used herein, the computer <b>104</b> can include a general purpose computer, a personal computer, a server computer, a workstation, a dedicated data storage system or network attached storage system, a smart phone, tablet computer, a gaming system, an industrial control system, or any other device that contains or is associated with data stored as a set or collection of files in a file system. Moreover, the system <b>100</b> can, but need not, include a plurality of interconnected devices and integrated and/or external data storage systems.</p>
<p id="p-0023" num="0022">A computer <b>104</b> implementing some or all of a system <b>100</b> in accordance with embodiments of the present invention generally includes a processor <b>108</b> and memory <b>112</b>. In addition, the computer <b>104</b> can include one or more user input devices <b>116</b> and one or more user output devices <b>120</b>. The computer <b>104</b> also generally includes data storage <b>124</b>. In addition, a communication interface <b>126</b> can be provided, to facilitate interconnection of the computer <b>104</b> to other computers or devices, including external storage devices, directly or over a network.</p>
<p id="p-0024" num="0023">The processor <b>108</b> may include any processor capable of performing or executing instructions encoded in software or firmware. In accordance with other embodiments of the present invention, the processor <b>108</b> may comprise a controller or application specific integrated circuit (ASIC) having or capable of performing instructions encoded in logic circuits. The memory <b>112</b> may be used to store programs and/or data, for example in connection with the execution of code or instructions by the processor <b>104</b>. As examples, the memory <b>112</b> may comprise RAM, SDRAM, or other solid state memory. In general, a user input device <b>116</b> is included as part of the computer <b>104</b> that allows a user to input a password and other information, such as a user name. Examples of user inputs <b>116</b> that can be provided as part of a computer <b>104</b> include a keyboard, keypad, speaker, biometric input device, mouse or other position encoding device, or the like. A user output <b>120</b> can, for example, include a display, speaker, indicator lamp, or the like. The data storage <b>124</b> may generally include storage for programs and data. Like the memory <b>112</b>, the data storage <b>124</b> may comprise a solid state device. Alternatively or in addition, the data storage <b>124</b> may comprise but is not limited to a hard disk drive, a tape drive, or other addressable storage device or set of devices. Moreover, the data storage <b>124</b> can be provided as an integral component of the computer <b>104</b>, or as an interconnected data storage device or system. The data storage <b>124</b> may provide storage for a client application <b>128</b> that includes or implements a location module <b>132</b>. The location module <b>132</b> generally operates to determine the location of files in data storage based on various inputs, and to perform other functions to obscure the locations and/or identity of significant system files as described herein. The location module <b>132</b> includes a hash algorithm <b>136</b> that is used in connection with the generation of file storage locations, and with accessing stored files. In addition, the data storage <b>112</b> may include storage for a file system <b>140</b>. As described in greater detail elsewhere herein, the file system <b>140</b> includes a plurality of files <b>142</b> placed at locations determined by the operation of the location module <b>132</b>. These files <b>142</b> can include system files <b>144</b> and data files <b>148</b>. The data storage <b>124</b> can also store operating system software <b>152</b>, and other applications or data.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> depicts aspects of the operation of a client application <b>128</b> incorporating a location module <b>132</b> in accordance with embodiments of the present invention. Initially, at step <b>200</b>, a file <b>142</b> is received for placement in the file system <b>140</b> of the computer <b>104</b> running or associated with the client application <b>128</b>. At step <b>204</b>, a determination is made as to whether the received file <b>142</b> is a system or data file. If the file <b>142</b> is a system file <b>144</b>, the client application <b>128</b> gets the user name and a secret input (step <b>208</b>). As an example, the secret input can be a user password. Getting the user name and secret input can include providing a prompt that is displayed to the user through the user output <b>120</b> to request that the user provide the user name and secret input through the user input <b>116</b>. If the user name and secret input have been entered previously, getting those items can include retrieving them from memory <b>112</b> and/or data storage <b>124</b>. The user name and secret input are then provided to the hash algorithm <b>136</b>, and the hash algorithm <b>136</b> is run, to determine the location at which the system file <b>144</b> will be placed within the file system <b>140</b> on the data storage <b>124</b> (step <b>212</b>). In connection with the execution of the hash algorithm <b>136</b>, a salt can be provided as an additional input. The salt can be maintained by the client application <b>128</b>, and in particular by the location module <b>132</b>. The resulting output from the hash algorithm <b>136</b> can then be used to determine the location at which the system file <b>144</b> will be placed.</p>
<p id="p-0026" num="0025">If at step <b>204</b> the file <b>142</b> is determined to be a data file <b>148</b>, the client application <b>128</b> and in particular the location module <b>132</b> operates to get the name of the data file <b>148</b> (step <b>220</b>). The data file <b>148</b> name can be a name associated with the data file <b>148</b> upon the creation of that file <b>148</b>. Alternatively, the name of the data file <b>148</b> can be assigned by the location module <b>132</b> of the client application <b>128</b>, for example after the client application <b>128</b> has been tasked with storing the data file <b>148</b> in the file system <b>140</b>. Accordingly, a homogenized naming convention, as described in greater detail elsewhere herein, can be applied by the location module <b>132</b>. At step <b>224</b>, the location module <b>132</b> provides the file name <b>220</b> to the hash algorithm <b>136</b>, which is executed to obtain a value used to determine the file location. In connection with the execution of the hash algorithm <b>136</b>, a salt can be applied. The salt can be the same as or different than the salt used in connection with the determination of a system file <b>144</b> location.</p>
<p id="p-0027" num="0026">As previously noted, the hash algorithm <b>136</b> of the location module <b>132</b> operates to generate values that are used to determine a location within the file system <b>140</b> in which to place a subject file <b>142</b>. The value generated by execution of the hash algorithm <b>136</b> can be characterized as a random or pseudorandom value, which may require translation or transformation in order to be used as a location within the file system <b>140</b>. Accordingly, at step <b>228</b>, the location module <b>132</b> operates to determine the location within the file system <b>140</b> at which the file <b>142</b> will be placed, based on the output of the hash algorithm <b>136</b>. As described in greater detail elsewhere herein, determining the file <b>142</b> location can include parsing a value generated by the hash algorithm <b>136</b>, translating segments of the generated value, and/or the creation of directories and subdirectories within the file system <b>140</b>.</p>
<p id="p-0028" num="0027">At step <b>232</b>, a determination is made as to whether a file, such as a previously stored system file <b>144</b> or data file <b>148</b>, already occupies the determined file location. If another file already occupies the determined location, then measures are taken to place the file <b>142</b> in an appropriate location. For example, if it is determined that a system file <b>144</b> is being stored and the collision is with a data file <b>148</b> (step <b>236</b>), the data file <b>148</b> is moved (step <b>240</b>) and the system file <b>144</b> is stored at the determined location. Alternatively, if it is determined that the file being stored is a data file <b>148</b> and there is a collision with a previously stored file <b>142</b> (step <b>244</b>), a collision algorithm can be applied to calculate a new location (step <b>248</b>). As yet another alternative, if at step <b>252</b> the file being stored is determined to be a received system file <b>144</b>, and another system file <b>144</b> is already in the determined location, the process can return to step <b>208</b> where the user is prompted for additional input so that a new location can be calculated. In particular, recalculation can include prompting the user to provide other secret input or data. If at step <b>252</b> a collision between a received system file <b>144</b> and another system file <b>144</b> is not detected, a system error signal is indicated (step <b>254</b>).</p>
<p id="p-0029" num="0028">If the determined location for the file <b>142</b> is not already occupied, the file <b>142</b> is stored at the determined location within the file system <b>140</b> (step <b>256</b>). After storing the file <b>142</b> at any one of steps <b>240</b>, <b>248</b> or <b>256</b>, a determination is made as to whether the subject file is a data file <b>148</b> (step <b>260</b>). If the subject file is a data file <b>148</b>, information regarding the location of that data file <b>148</b> is stored in the applicable system index (step <b>264</b>). If the subject file is a system file <b>144</b>, the location of that system file <b>144</b> is not stored. Instead, the location of the system file <b>144</b>, which for example can include a file system <b>140</b> index containing the locations of data files <b>148</b>, is generated from provided user name and password information each time the system file <b>144</b> is retrieved from data storage <b>124</b>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> illustrates aspects of an exemplary system file <b>144</b> retrieval process in accordance with embodiments of the present invention. In particular, at step <b>304</b>, the client application <b>128</b> gets required user input. This required input can include the user name and secret input or data associated with the file system <b>140</b> that is being accessed. The hash algorithm <b>136</b> is then executed to generate the location of the system file <b>144</b> (step <b>308</b>). As can be appreciated by one of skill in the art after consideration of the present disclosure, the generation of a system file <b>144</b> location by the hash algorithm <b>136</b> requires that the same user name and secret input, and salt (if any) that were used to originally determine the system file <b>144</b> location be provided as part of the retrieval process.</p>
<p id="p-0031" num="0030">At step <b>312</b>, a determination is made as to whether the system file <b>144</b> is at the determined location. If the file is not at that location, an error is indicated (step <b>316</b>), and the process returns to step <b>304</b>. If the system file <b>144</b> is found at the determined location, that system file <b>144</b> can be decrypted using the provided input or a calculated input derivative (step <b>320</b>). Accordingly, some or all of the user input that was used to determine the location at which the system file <b>144</b> is stored can be used to decrypt the system file <b>144</b>. At step <b>324</b>, a determination is made as to whether decryption of the system file <b>144</b> has succeeded. If decryption did not succeed, an error is declared (step <b>316</b>), and the process returns to step <b>304</b>. If the decryption has succeeded, the system file <b>144</b> contents are returned to the client application <b>128</b> (step <b>328</b>). For example, where the system file <b>144</b> comprises a system index, the client application <b>128</b> can retrieve information regarding the location of data files <b>148</b> within the file system <b>140</b> once the system file <b>144</b> has been decrypted and its contents provided or made available to the client application <b>128</b>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4</figref> illustrates features of the determination of a system file <b>144</b> location in accordance with embodiments of the present invention. In particular, <figref idref="DRAWINGS">FIG. 4</figref> shows the provision of user inputs, including the user name <b>404</b> and secret input or data <b>408</b>, to the hash algorithm <b>136</b> (step <b>412</b>). The hash algorithm <b>136</b> can also receive a salt <b>414</b>. The salt <b>414</b> can vary, for example depending on the identity of the system file <b>144</b> that is being located. For instance, a first salt <b>414</b> can be applied for the storage of a system index, while a second salt <b>414</b> can be applied for the location of an alternate system index or a key store. The hash algorithm <b>136</b> is executed at step <b>412</b>, using the provided inputs <b>404</b>, <b>408</b> and <b>416</b>, to produce the system file location (step <b>416</b>). The system file <b>144</b> location can be obtained directly from the output of the hash algorithm <b>412</b>, or through a transformation of the hash algorithm <b>136</b> output. The process for locating a system file <b>144</b> illustrated in <figref idref="DRAWINGS">FIG. 4</figref> can be followed whether the system file <b>144</b> is being stored, or is being accessed. In addition, the location of the system file <b>144</b> is changed each time the inputs, for example the user name <b>404</b> and/or secret data <b>408</b>, are changed.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 5</figref> illustrates aspects of the determination of a data file <b>148</b> location in accordance with embodiments of the present invention. Initially, the name of the data file <b>148</b> is obtained (step <b>504</b>). The name of the data file can be a name that is assigned to that file <b>148</b> by the location module <b>132</b> of the client application <b>128</b>. Alternatively, the name can be a name assigned to that data file <b>148</b> by another system or application. That file name and optionally a salt <b>414</b> are provided to the hash algorithm <b>136</b>, which operates to generate an output (step <b>508</b>). That output is then applied to determine the location of the data file <b>148</b> (step <b>512</b>). The location can be derived directly from the output of the hash algorithm <b>136</b>, or can be some transformation of the hash algorithm <b>136</b> output that is performed by the location module <b>132</b>. At step <b>516</b>, the location of the data file <b>148</b> is stored in the appropriate system index. Accordingly, a data file <b>148</b> that has been stored in the file system <b>140</b> is accessed by first obtaining the location of that data file <b>148</b> from the appropriate system file <b>144</b> (i.e., the system index). As a result, different salts <b>414</b> can be applied to different data files <b>148</b>. Moreover, neither the location module <b>132</b> nor the file system <b>140</b> is required to track or record the particular salt <b>414</b> used in connection with the storage of a particular data file <b>148</b>.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a process for implementing other file obfuscation features of a system <b>100</b> in accordance with embodiments of the present invention. In particular, these features can include the homogenization or the normalization of the names of files <b>142</b>, the homogenization or the normalization of file <b>142</b> sizes, and the homogenization or normalization of creation times associated with files <b>142</b>. These procedures can be initiated upon the receipt of a file <b>142</b> for storage in the file system <b>140</b> (step <b>604</b>). At step <b>608</b>, a determination may be made as to whether the file name has been normalized or otherwise conforms to a homogenized naming convention implemented by the location module <b>132</b> of the client application <b>128</b>. If the file name has not been normalized, the file <b>142</b> is renamed (step <b>612</b>). Renaming can include assigning a random, pseudorandom, or otherwise indistinct name to the file <b>142</b>. As an example, and without limitation, the location module <b>132</b> can obfuscate the identity of individual files <b>142</b> by assigning file and folder or directory names that consist of platform independent characters. For instance, the letters A through Z and the numbers <b>0</b> through <b>9</b>. Moreover, the file and folder names can be limited to some specified number of characters, for example two. Limiting the number of characters in the file name can also be beneficial in complying with the suggested limitations of certain operating systems <b>152</b> regarding the maximum number of files in a folder or directory. Where the potential number of files would exceed the number of files available through the use of file names having a maximum of two characters, nested files or directories can be used, such that the total number of files <b>142</b> within the file system <b>140</b> is not limited by the naming convention. Moreover, the characters assigned to an individual file <b>142</b> in order to name that file <b>142</b> can be selected randomly or pseudorandomly. In addition, file names can be case insensitive. The result of applying some or all of the measures is a file system <b>140</b> with a collection of files <b>142</b> with relatively indistinct, homogenized names.</p>
<p id="p-0035" num="0034">At step <b>616</b>, a determination can be made as to whether the file <b>142</b> size is less than a selected size. If the size of the file <b>142</b> is less than the selected size, the file <b>142</b> can be padded to bring the file size to at or near the selected size (step <b>620</b>). At step <b>624</b>, a determination may be made as to whether the size of the file <b>142</b> is greater than a selected size. If the size is greater than the selected size, the file <b>142</b> can be chunked or broken into a plurality of smaller files <b>142</b> (step <b>628</b>). Chunking a file <b>142</b> can include padding the size of a remainder file that is smaller than a selected size. As used herein, a selected size can be a predetermined file size. Alternatively, the selected size can be determined from an average size of files in the file system <b>140</b>. In accordance with still other embodiments, the selected size can be determined based at least in part on the limitations of the device <b>104</b> on or in connection with which the file system <b>140</b> is implemented. Such limitations can include operating system <b>152</b> limitations, and data storage <b>124</b> limitations or requirements. In addition, the selected size to which a file <b>142</b> is padded or chunked can comprise a range of sizes, and a different selected size can be used in connection with a padding determination than is used in connection with a chunking determination. Accordingly, the files <b>142</b> within the file system <b>140</b> can have sizes that fall within some range. The result is that information regarding the amount of content actually contained by any one file <b>142</b> is obscured, making it impossible or more difficult for a hacker to identify files <b>142</b> that may be of particular interest.</p>
<p id="p-0036" num="0035">At step <b>632</b>, a determination may be made as to whether the creation time of a file <b>142</b> has been homogenized. If the creation time has not been homogenized, the creation time can be reset (step <b>636</b>). For example, the creation time of files <b>142</b> as shown in a directory can be manipulated, either directly or by resaving the file <b>142</b>. For instance, all of the files <b>142</b> in a file system <b>140</b> can be periodically reset. As another example, the indicated creation date of files <b>142</b> in the file system <b>140</b> can be reset to or about the date and time at which a most recent file <b>142</b> was saved to the file system <b>140</b>. By thus homogenizing the creation time of files <b>142</b> and the file system <b>140</b>, information that might be used by a hacker to identify critical system files is further obscured.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 7</figref> depicts aspects of an implementation of a system <b>100</b> in accordance with embodiments of the present invention that includes a single secured data subsystem <b>700</b>. According to this exemplary implementation, upon the input of a user name and secret data <b>404</b> and <b>408</b>, system files <b>144</b> including a key index <b>708</b> and a private key file <b>716</b> are located. More particularly, in one operation <b>704</b> the hash algorithm <b>136</b> applies a first salt <b>414</b> to the user name and password <b>404</b> and <b>408</b> to determine the location of a system file <b>144</b> comprising a key index <b>708</b>. The key index <b>708</b> generally includes index information regarding the location of items of content or data files <b>148</b>. In another operation <b>712</b>, the hash algorithm <b>136</b> applies the user name and password <b>404</b> and <b>408</b> and a second or private key salt <b>414</b> to determine the location of a system file <b>144</b> comprising a private key file <b>716</b>. The private key file <b>716</b> can function as a store of keys required to access content or other data files <b>148</b>. Therefore, from this example, it can be appreciated that the entry by a user of one set of information can be used by the location module <b>132</b> to point to multiple system files <b>144</b>.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 8</figref> depicts aspects of another exemplary system <b>100</b> in accordance with embodiments of the present invention that includes first <b>800</b><i>a </i>and second <b>800</b><i>b </i>secured data subsystems. In this system <b>100</b>, a first user name <b>404</b> and a first secret input (in this example a first password) <b>408</b> are provided to the location module <b>132</b> for processing by the hash algorithm <b>136</b> in connection with the first data subsystem <b>800</b><i>a</i>. In a first operation <b>804</b> the hash algorithm <b>136</b> uses the user name <b>404</b> and password <b>408</b>, and a first key store salt <b>414</b> to point to a first system file <b>144</b> comprising a salt database <b>808</b>. After thus gaining access to the salt database <b>808</b>, a first key index salt <b>414</b> and the user name <b>404</b> are provided by the location module <b>132</b> to the hash algorithm <b>136</b> in a second operation <b>812</b> to obtain the location of and access to a second system file <b>144</b> comprising a first key index <b>816</b><i>a</i>. The first key index <b>816</b><i>a </i>can provide index information required to access a first set of content or data files <b>148</b><i>a</i>. A second salt <b>414</b> from the salt database <b>808</b> can be provided to the hash algorithm <b>136</b>, together with the user name <b>404</b>, in a third operation <b>820</b> to determine the location of and gain access to another system file <b>144</b> comprising a second key index <b>816</b><i>b</i>. The second key index <b>816</b><i>b </i>can include index information required to access a second set of content or data files <b>148</b><i>b</i>. The first user name <b>404</b> and first password <b>408</b> can also be combined with a private key salt <b>414</b> and provided by the location module <b>132</b> to the hash algorithm in a fourth operation <b>822</b> to determine a location of and to gain access to a first private key file <b>824</b><i>a</i>. The first private key file <b>824</b><i>a </i>can contain the private keys necessary to access content <b>148</b><i>a </i>and <b>148</b><i>b </i>indexed as part of the first <b>816</b><i>a </i>or second <b>816</b><i>b </i>key indices.</p>
<p id="p-0039" num="0038">In addition, the first user name <b>404</b> can be provided in combination with a second secret input (in this example a second password) <b>408</b> to the hash algorithm <b>136</b> by the location module <b>132</b> in connection with establishing and accessing the second data subsystem <b>800</b><i>b</i>. For example, the first user name <b>404</b> and a second password <b>408</b>, together with the first salt <b>414</b>, can be provided to the hash algorithm <b>132</b> in a fifth operation <b>828</b> to determine the location of and to gain access to a third key index <b>816</b><i>c. </i>The third key index <b>816</b><i>c </i>can include index information required to access an associated set of content or data files <b>148</b><i>c</i>. Moreover, the set of content or data files <b>148</b><i>c </i>accessed through the third key index <b>816</b><i>c </i>can be entirely independent of the sets of content <b>148</b><i>a </i>and <b>148</b><i>b </i>associated with the first and second <b>816</b><i>a </i>and <b>816</b><i>b </i>key indices. In fact, the only commonality in this example is that a first user name <b>404</b> is used to access and locate both data subsystems <b>800</b><i>a </i>and <b>800</b><i>b</i>, and both data subsystems <b>800</b><i>a </i>and <b>800</b><i>b </i>are associated with the same client application <b>128</b>. The first user name <b>404</b> and the second password <b>408</b> can be combined with the private key salt <b>414</b> in a sixth operation <b>832</b> to determine a location of and to access a second private key file <b>824</b><i>b </i>that, for example, contains the private keys necessary to access data files <b>148</b><i>c </i>indexed by the third key index <b>816</b><i>c. </i></p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 9</figref> depicts aspects of another exemplary system <b>100</b> in accordance with embodiments of the present invention. In this system <b>100</b>, a first user name <b>404</b> can be combined with first and/or second secret inputs <b>408</b><i>a </i>and <b>408</b><i>b </i>to access different data sets. For example, by combining the user name <b>404</b>, a first item of secret data <b>408</b><i>a</i>, and a first salt <b>414</b> using the hash algorithm <b>132</b> at step <b>904</b>, a first key index <b>908</b><i>a </i>can be located and accessed. The first key index <b>908</b><i>a </i>can point to a first set of content <b>148</b><i>a. </i></p>
<p id="p-0041" num="0040">In a further aspect, by providing the user name <b>404</b>, the first secret input <b>408</b><i>a</i>, the second secret input <b>408</b><i>b</i>, and the first salt <b>414</b> to the hash algorithm <b>132</b> in a second step <b>912</b>, a second key index <b>908</b><i>b </i>can be located and accessed. The second key index <b>908</b><i>b </i>can point to a second set of content <b>148</b><i>b</i>. Accordingly, by providing additional secret inputs <b>408</b>, different locations can be produced and accessed within the file system <b>140</b>. Moreover, embodiments of the present invention can require that alternate or additional secret inputs <b>408</b> be entered in a specific sequence in order to produce a particular hash location. For example, if multiple secret inputs <b>408</b> required to access a particular hash location are entered in the incorrect sequence, the first system file will not be located.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 10</figref> illustrates the contents of an exemplary file system <b>140</b> in accordance with embodiments of the present invention. As shown, the file system <b>140</b> can contain a plurality of files <b>142</b> either in a root directory <b>1004</b> or in one or more subdirectories <b>1008</b><i>a </i>or <b>1008</b><i>b </i>established in the data storage <b>124</b>. Moreover, these files <b>142</b> can comprise system files <b>144</b> and <b>148</b>, without any obvious distinction between those types of files <b>142</b>. The directory <b>1004</b> or subdirectory <b>1008</b><i>a </i>or <b>1008</b><i>b </i>in which a particular file <b>142</b> is placed is determined through operation of the location module <b>132</b> by application of input data to the hash algorithm <b>136</b>. For example, if a file name of a data file <b>148</b> and a salt input to the hash algorithm result is the location module returning a value of &#x201c;ACAFAG&#x201d;, the data file <b>148</b> is placed in directory AC, and subdirectory AF, and is renamed AG. A homogenized location and name can thus be generated in the same operation. Moreover, the structure of the file system <b>140</b> directories does not provide information that can be used by a hacker to locate significant files <b>142</b>. In addition, the names of the directories <b>1004</b> and <b>1008</b><i>a </i>and <b>1008</b><i>b </i>and the files <b>142</b> are homogenized. In particular, although the subdirectories <b>1008</b><i>a </i>and <b>1008</b><i>b </i>and the files <b>142</b> have names and/or past names that allow them to be uniquely distinguished from one another, the naming convention that is applied, here the assignment of a two character name, does not provide information to a potential hacker as to the content of the files <b>142</b>. Likewise, in the column of size information <b>1012</b>, the file sizes have been homogenized such that they all fall within a selected range. Again, information that could be used by a hacker to distinguish files of significance to the security of the system from other files is obscured. Similarly, the date <b>1016</b> associated with each file <b>142</b> has been homogenized, to remove information that may be used by a hacker to identify significant system files <b>144</b>.</p>
<p id="p-0043" num="0042">A system <b>100</b> in accordance with embodiments of the present invention can also include features to lock associated files <b>142</b> to the computer <b>104</b>. According to such an embodiment, a device identifier (ID) associated with the computer <b>104</b> is used as part of the input provided to the hash algorithm <b>136</b>. As a result, any other device ID will not produce the same hash algorithm <b>136</b> output, even if the other inputs to the hash algorithm <b>136</b> are the same.</p>
<p id="p-0044" num="0043">The description of the system <b>100</b> contained herein provides as examples certain arrangements and embodiments of the disclosed secure file system. However, embodiments of the invention are not limited to those specifically illustrated. For example, as can be appreciated by one of skill in the art, other physical arrangements of system <b>100</b> components can be employed in connection with providing a secured file system <b>140</b> as disclosed herein. In addition, while the description has included examples of a secure file system <b>140</b> implemented on a device or computer <b>104</b>, a secure file system <b>140</b> may be implemented in connection with a distributed system. For example, embodiments of the present invention can include variations in which the data storage <b>124</b> is provided by the cloud or by specific network connected data storage <b>124</b>. Moreover, data storage <b>124</b> can include multiple storage devices, for example configured as a RAID system or other coordinated set of storage devices <b>124</b>.</p>
<p id="p-0045" num="0044">In addition, certain exemplary applications and modules, such as a client application <b>128</b>, location module <b>132</b> and hash algorithm <b>136</b> have been illustrated and described. As can be appreciated by one of skill in the art after consideration of the present disclosure, such components or modules and their relation to one another can be modified. In particular, while the description of such components is believed to facilitate an understanding of the system <b>100</b> and its operation, a system <b>100</b> or process in accordance with embodiments of the present invention is not necessarily required to include components and modules that are segmented as described in the provided examples.</p>
<p id="p-0046" num="0045">The foregoing discussion of the invention has been presented for purposes of illustration and description. Further, the description is not intended to limit the invention to the form disclosed herein. Consequently, variations and modifications commensurate with the above teachings, within the skill or knowledge of the relevant art, are within the scope of the present invention. The embodiments described hereinabove are further intended to explain the best mode presently known of practicing the invention and to enable others skilled in the art to utilize the invention in such or in other embodiments and with various modifications required by the particular application or use of the invention. It is intended that the appended claims be construed to include alternative embodiments to the extent permitted by the prior art.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for storing files, comprising:
<claim-text>receiving by a first client application at least first and second identifiers;</claim-text>
<claim-text>providing the first and second identifiers to a hash algorithm, wherein the hash algorithm produces a first output;</claim-text>
<claim-text>using the first output to determine a first file system location;</claim-text>
<claim-text>storing a first index file in data storage at the first file system location;</claim-text>
<claim-text>assigning a first filename to a first data file;</claim-text>
<claim-text>providing the first filename as a third identifier to the hash algorithm, wherein the third identifier is different than the first identifier and the second identifier, and wherein the hash algorithm produces a second output;</claim-text>
<claim-text>using the second output to determine a second file system location;</claim-text>
<claim-text>storing the first data file in the data storage at the second file system location;</claim-text>
<claim-text>storing the second file system location in the first index file;</claim-text>
<claim-text>receiving at the first client application a request to access the first data file;</claim-text>
<claim-text>prompting by the first client application entry by a user of at least one of the first and second identifiers, wherein the user is prompted to enter the at least one of the first and second identifiers after the first output has been produced;</claim-text>
<claim-text>in response to the prompt, the user entering the at least one of the first and second identifiers;</claim-text>
<claim-text>receiving by the first client application the at least one of the first and second identifiers, wherein the at least one of the first and second identifiers are provided to the hash algorithm to reproduce the first output and to determine the first file system location;</claim-text>
<claim-text>accessing the first index file stored in the data storage at the first file system location and retrieving from the first index file the second file system location;</claim-text>
<claim-text>assigning a second filename to a second data file, wherein the first filename has a first character length, and wherein the second filename has the first character length:</claim-text>
<claim-text>determining a size of the first data file, wherein in response to the size of the first data file having less than a first predetermined size the first data file is padded to have a first normalized size, and wherein the padded first data file is stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first identifier is a user name and wherein the second identifier is a password.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a first salt, wherein the first salt is input to the hash algorithm with the first identifier and the second identifier to produce the first output that is used to determine the first file system location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>a second salt, wherein the second salt is input to the hash algorithm with the third identifier, wherein the hash algorithm produces the second output that is used to determine the second file system location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>a second salt, wherein the second salt is input to the hash algorithm with the first identifier and the second identifier, wherein the hash algorithm produces the second output that is used to determine the second file system location;</claim-text>
<claim-text>storing a second file in the data storage at the second file system location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the second file is a key store.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving by the first client application a fourth identifier;</claim-text>
<claim-text>providing the first identifier and the fourth identifier to the hash algorithm to produce a third output;</claim-text>
<claim-text>using the third output to determine a third file system location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving by the first client application a fourth identifier;</claim-text>
<claim-text>providing the first identifier and the fourth identifier to the hash algorithm to produce a third output;</claim-text>
<claim-text>using the third output to determine a third file system location;</claim-text>
<claim-text>accessing an executable file stored in the data storage at the third file system location;</claim-text>
<claim-text>executing the executable file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>providing at least a fourth identifier to the hash algorithm, wherein the hash algorithm produces a third output;</claim-text>
<claim-text>using the third output to determine a third file system location;</claim-text>
<claim-text>storing a second file in the data storage at the third file system location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the third file stored in the second file system location is a second index file associated with a second data set.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>providing the second file name as a fourth identifier to the hash algorithm, wherein the hash algorithm produces a third output;</claim-text>
<claim-text>using the third output to determine a third file system location;</claim-text>
<claim-text>storing the second data file in the data storage at the third file system location;</claim-text>
<claim-text>storing the third file system location in the first index file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method for storing files, comprising:
<claim-text>providing data storage;</claim-text>
<claim-text>providing a processor;</claim-text>
<claim-text>providing a client application that is executable by the processor, wherein the client application includes a file system module;</claim-text>
<claim-text>prompting a user for a password;</claim-text>
<claim-text>receiving a first password at the client application;</claim-text>
<claim-text>providing at least the received first password and a first salt as a first input to a hash algorithm;</claim-text>
<claim-text>in response to the first input, generating by the hash algorithm a first output;</claim-text>
<claim-text>transforming the first output to a first file system location;</claim-text>
<claim-text>storing a first index file at the first file system location in the data storage;</claim-text>
<claim-text>providing at least the received first password and a second salt as a second input to the hash algorithm;</claim-text>
<claim-text>in response to the second input, generating by the hash algorithm a second output;</claim-text>
<claim-text>transforming the second output to a second file system location;</claim-text>
<claim-text>storing a first key store file at the second file system location in the data storage;</claim-text>
<claim-text>receiving a first data file, wherein the first data file is associated with a first name, wherein the first name has a first character length;</claim-text>
<claim-text>assigning a second name to a second data file, wherein the second name has the first character length;</claim-text>
<claim-text>determining a size of the first data file, wherein in response to the size of the first data file having less than a first predetermined size the first data file is padded to have a first normalized size, and wherein the padded first data file is stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>providing at least the first name and the second salt as a third input to the hash algorithm;</claim-text>
<claim-text>in response to the third input, generating by the hash algorithm a third output;</claim-text>
<claim-text>transforming the third output to a third file system location;</claim-text>
<claim-text>storing the first data file at the third file system location in the data storage;</claim-text>
<claim-text>storing a record of the third file system location in the first index file;</claim-text>
<claim-text>placing a key associated with the first data file in the first key store file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>receiving a second password at the client application;</claim-text>
<claim-text>providing at least the received second password and the first salt as a fourth input to the hash algorithm;</claim-text>
<claim-text>in response to the fourth input, generating by the hash algorithm a fourth output;</claim-text>
<claim-text>transforming the fourth output to a fourth file system location;</claim-text>
<claim-text>storing a second index file at the fourth file system location in the data storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system, comprising:
<claim-text>data storage device;</claim-text>
<claim-text>a client application, wherein the client application is stored in the data storage device, and wherein the client application includes a hash algorithm;</claim-text>
<claim-text>a user input, wherein in response to receiving at least a first input at the user input the client application is operable to generate a first value using the hash algorithm, wherein the first value is used to determine a first location in the data storage device for storing a system index file, wherein the system index file is stored at the first location in the data storage device, and wherein a record of the first location is not stored in the data storage device, wherein in response to the client application receiving a request to store a data file in the data storage device the client application is operable to generate a second value using a first filename of the data file as a second input to the hash algorithm, wherein the second value is used to determine a second location in the data storage device for storing the data file, wherein the data file is placed in the data storage device at the second location, and wherein the second location is stored in the system index file, wherein a second data file has a second filename, wherein the first filename has a first character length, wherein the second filename has the first character length, wherein in response to the client application determining a size of the data file is less than a first predetermined size the client application is operable to pad the data file to have a first normalized size, and wherein the padded data file is stored. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
