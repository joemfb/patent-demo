<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625456-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625456</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11533904</doc-number>
<date>20060921</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1542</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>177</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370254</main-classification>
<further-classification>370390</further-classification>
<further-classification>37039554</further-classification>
<further-classification>709222</further-classification>
<further-classification>709226</further-classification>
</classification-national>
<invention-title id="d2e53">Withholding a data packet from a switch port despite its destination address</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6697360</doc-number>
<kind>B1</kind>
<name>Gai et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7209435</doc-number>
<kind>B1</kind>
<name>Kuo et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7231660</doc-number>
<kind>B1</kind>
<name>Daude et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7783735</doc-number>
<kind>B1</kind>
<name>Sebes et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0151120</doc-number>
<kind>A1</kind>
<name>Shankar et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370249</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2004/0221042</doc-number>
<kind>A1</kind>
<name>Meier</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2005/0114544</doc-number>
<kind>A1</kind>
<name>Chu et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2005/0246768</doc-number>
<kind>A1</kind>
<name>Hunt et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 11</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2006/0036733</doc-number>
<kind>A1</kind>
<name>Fujimoto et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709225</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2006/0064506</doc-number>
<kind>A1</kind>
<name>Mielke</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709244</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0155853</doc-number>
<kind>A1</kind>
<name>Nesz et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0212560</doc-number>
<kind>A1</kind>
<name>Purser</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2006/0248229</doc-number>
<kind>A1</kind>
<name>Saunderson et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0076607</doc-number>
<kind>A1</kind>
<name>Voit et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370230</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Droms, R., &#x201c;RFC 2131&#x2014;Dynamic Host Configuration Protocol&#x201d; Mar. 1997, Bucknell University, pp. 1-45.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>U.S. Appl. No. 11/533,874, filed Sep. 21, 2006, inventor: Peter Nils Boden Jr., et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Patrick, M., &#x201c;DHCP Relay Agent Information Option&#x201d;, Motorola BCS, Jan. 2001, 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370254</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370389-390</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37039552-39554</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370475</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709220- 22</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709226</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709236</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709245</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>14</number-of-drawing-sheets>
<number-of-figures>14</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Boden, Jr.</last-name>
<first-name>Peter Nils</first-name>
<address>
<city>Veradale</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Busch</last-name>
<first-name>Dackary Ronald</first-name>
<address>
<city>Veradale</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chartier</last-name>
<first-name>Michael J.</first-name>
<address>
<city>Liberty Lake</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Boden, Jr.</last-name>
<first-name>Peter Nils</first-name>
<address>
<city>Veradale</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Busch</last-name>
<first-name>Dackary Ronald</first-name>
<address>
<city>Veradale</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Chartier</last-name>
<first-name>Michael J.</first-name>
<address>
<city>Liberty Lake</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Clements Bernard PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Bernard</last-name>
<first-name>Christopher L.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Baratta, Jr.</last-name>
<first-name>Lawrence A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>World Wide Packets, Inc.</orgname>
<role>02</role>
<address>
<city>Spokane</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Cho</last-name>
<first-name>Un C</first-name>
<department>2413</department>
</primary-examiner>
<assistant-examiner>
<last-name>Costin</last-name>
<first-name>Jeremy</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">This document describes tools that withhold a data packet from a switch port despite its destination address. In one embodiment, the tools may receive a port description identifying a set of switch ports. The tools configure the set of ports so that data packets exchanged through the switch by interested entities that would otherwise be forwarded to uninterested entities are instead withheld from the uninterested entities. In another embodiment, the tools may configure a data-packet switch according to a port description identifying a set of ports and a subset of the set of ports. The tools receive a data packet that includes a broadcast destination address on a receive port and then determine, based on the port description, whether the receive port belongs to the subset. If the receive port does not belong to the subset the data packet is withheld from the other ports of the set.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="200.49mm" wi="167.64mm" file="US08625456-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="256.37mm" wi="184.15mm" file="US08625456-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="183.81mm" wi="178.22mm" file="US08625456-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="250.44mm" wi="193.72mm" file="US08625456-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="238.25mm" wi="168.06mm" file="US08625456-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="246.46mm" wi="184.15mm" file="US08625456-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="251.04mm" wi="154.18mm" file="US08625456-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="254.34mm" wi="157.14mm" file="US08625456-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="255.35mm" wi="170.69mm" file="US08625456-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="181.53mm" wi="129.12mm" file="US08625456-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="206.93mm" wi="136.40mm" file="US08625456-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="206.59mm" wi="147.91mm" file="US08625456-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="188.13mm" wi="125.56mm" file="US08625456-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="187.79mm" wi="126.83mm" file="US08625456-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="213.19mm" wi="133.77mm" file="US08625456-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">An important component of a data network is an addressing scheme that allows devices connected to the network to communicate with each other. A common protocol used to assign network addresses in Internet Protocol (IP) networks is the Dynamic Host Configuration Protocol (DHCP). Typically, a device uses a DHCP client to obtain a network address by exchanging DHCP messages with a DHCP server.</p>
<p id="p-0003" num="0002">As the number of devices connected to a data network increases, so does the number of DHCP messages. Because many of these messages are broadcast, they may be sent to every device on a network, not just the DHCP client attempting to obtain a network address and the DHCP server. Consequently, a large number of broadcast messages may needlessly consume network resources.</p>
<p id="p-0004" num="0003">Security problems may also arise due to broadcast DHCP messages. For example, a rogue DHCP server may intercept a request for an address sent by a DHCP client and improperly reply to the request. As a result, the rogue server may disable the client by assigning it a non-functional network address. Malevolent devices may also be listening to broadcast DHCP messages to discover which network address is assigned to a device and later use its knowledge of the network address in a harmful way.</p>
<p id="p-0005" num="0004">A conventional solution to these problems is to limit the number of broadcast messages allowed on a network link. A limit may reduce the amount of link bandwidth consumed by broadcast messages, but has the undesirable side effect of unintentionally discarding legitimate DHCP messages. Furthermore, a limit does not address the security problems described above.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0006" num="0005">This document describes tools that withhold a data packet from a switch port despite its destination address. In one embodiment, the tools may receive a port description identifying a set of switch ports. The tools configure the set of ports so that data packets exchanged through the switch by interested entities that would otherwise be forwarded to uninterested entities are instead withheld from the uninterested entities. In another embodiment, the tools may configure a data-packet switch according to a port description identifying a set of ports and a subset of the set of ports. The tools receive a data packet that includes a broadcast destination address on a receive port and then determine, based on the port description, whether the receive port belongs to the subset. If the receive port does not belong to the subset the data packet is withheld from the other ports of the set.</p>
<p id="p-0007" num="0006">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter. The term &#x201c;tools,&#x201d; for instance, may refer to system(s), method(s), computer-readable instructions, and/or technique(s) as permitted by the context above and throughout the document.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary operating environment in which various embodiments of the tools may operate.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an exemplary set of communications between a client and a server.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary operating environment in which a data packet is withheld from a port despite its destination address.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an exemplary switch capable of withholding a data packet from a port despite its destination address in a first configuration.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary method of classifying a switch port as a trusted port.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary switch capable of withholding a data packet from a port despite its destination address in a second configuration.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a system of switches capable of withholding a data packet from a port despite its destination address along with exemplary data packets relayed from a client to a server.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a system of switches capable of withholding a data packet from a port despite its destination address along with exemplary data packets relayed from a server to a client.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 9</figref> is an exemplary process illustrating various embodiments and manners in which the tools configure a set of ports to withhold data packets from uninterested entities.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 10</figref> is an exemplary process illustrating various embodiments and manners in which the tools forward a data packet to a destination port specified by a label.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 11</figref> is an exemplary process illustrating various embodiments and manners in which the tools withhold a data packet from a set of ports because a receive port does not belong to a subset of the set of ports.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 12</figref> is an exemplary process illustrating various embodiments and manners in which the tools prevent a data packet from egressing a port of a set of ports that does not belong to a subset of the ports.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 13</figref> is an exemplary process illustrating various embodiments and manners in which the tools forward a Dynamic Host Configuration Protocol (DHCP) broadcast data packet to trusted server ports.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 14</figref> is an exemplary process illustrating various embodiments and manners in which the tools determine that a reply device is a trusted device and mark a reply port as a trusted port.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0022" num="0021">The same numbers are used throughout the disclosure and figures to reference like components and features.</p>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="h-0005" num="0000">Overview</p>
<p id="p-0023" num="0022">The following document describes tools capable of withholding a data packet from a switch port despite its destination address. An environment in which the tools may enable these and other actions is set forth below in a section entitled Exemplary Operating Environment. This is followed by another section describing exemplary ways in which the tools may act to forward data packets to some ports within a set of ports and prevent data packets from being forwarded to other ports within the set and is entitled Exemplary Embodiments for Withholding a Data Packet from a Switch Port Despite Its Destination Address. A final section describes these and other embodiments and manners in which the tools may act and is entitled Other Embodiments of the Tools. This overview, including these section titles and summaries, is provided for the reader's convenience and is not intended to limit the scope of the claims or the entitled sections.</p>
<p id="h-0006" num="0000">Exemplary Operating Environment</p>
<p id="p-0024" num="0023">Before describing the tools in detail, the following discussion of an exemplary operating environment is provided to assist the reader in understanding some ways in which various inventive aspects of the tools may be employed. The environment described below constitutes an example and is not intended to limit application of the tools to any one particular operating environment. Other environments may be used without departing from the spirit and scope of the claimed subject matter.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 1</figref> illustrates one operating environment generally at <b>100</b> for enabling equipment to withhold a data packet from a switch port despite its destination address. The environment includes a server <b>102</b>; three switches <b>104</b>, <b>106</b>, <b>108</b>; and five clients <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b>.</p>
<p id="p-0026" num="0025">The server communicates with the clients by exchanging data packets with the clients. A data network connects the server and clients and facilitates the exchange of data packets. In this embodiment of the operating environment, the data network comprises three switches. Of course, the data network may include other devices or may have a different topology than the data network illustrated in <figref idref="DRAWINGS">FIG. 1</figref> as long as the data network includes at least one switch and is capable of facilitating an exchange of data packets between the server and the clients.</p>
<p id="p-0027" num="0026">The server may comprise a computer, a server, a personal digital assistant (PDA), a wireless data device, or other device capable of sending and receiving data packets. Similarly, the clients may also comprise a computer, a server, a personal digital assistant (PDA), a wireless data device, or other device capable of sending and receiving data packets.</p>
<p id="p-0028" num="0027">The clients interact with the server to accomplish a desired result. For example, in one embodiment the clients are DHCP clients that communicate with a DHCP server to acquire an IP address from the DHCP server. The DHCP client uses the IP address on a temporary, permanent, or semi-permanent basis to communicate with other devices connected to the network.</p>
<p id="p-0029" num="0028">Each switch may be a switch, router, hub, or other device capable of forwarding data packets. Although the switches illustrated in <figref idref="DRAWINGS">FIG. 1</figref> are each connected to four or fewer devices (a server, switch, or client), the switches may generally be connected to a plurality of devices. Each switch comprises a plurality of ports that transmit and receive data packets. Each switch forwards a data packet received on one port of the switch to a destination port of the switch based on a destination address included in the data packet. The destination port may change from data packet to data packet since the destination address included in each data packet may vary.</p>
<p id="p-0030" num="0029">Each switch may comprise one or more processor(s) <b>122</b>, a switch module <b>124</b>, and computer-readable media <b>126</b>. The computer-readable media includes a withholding application <b>128</b> comprising a set of executable instructions that when executed withhold a data packet from a switch port despite its destination address. The switch module <b>124</b> may comprise one or more switch chips capable of forwarding data packets from one switch port to another switch port. The processor(s) are capable of accessing and/or executing the computer-readable media and may be further capable of configuring the switch module to operate in a particular manner. In some embodiments, the switch module may access and/or execute portions of the computer-readable media.</p>
<p id="p-0031" num="0030">Each switch may alternatively comprise a programmable logic device, such as a Field Programmable Gate Array (FPGA), and the computer-readable media <b>126</b>. In this embodiment, the FPGA is capable of accessing and/or executing the computer-readable media, including the withholding application and forwarding data packets from one switch port to another switch port.</p>
<p id="p-0032" num="0031">In yet another alternative embodiment, each switch may comprise a network processor and computer-readable media. In this embodiment, the network processor is capable of accessing and/or executing the computer readable media, including the withholding application and forwarding data packets from one switch port to another switch port.</p>
<p id="p-0033" num="0032">Switch <b>104</b> may be used to aggregate data packets. For example, switch <b>104</b> may receive data packets from both switch <b>106</b> and switch <b>108</b> and forward the data packets on a single link to the server. Using switch <b>104</b> to aggregate data packets from several switches may be a more efficient manner of operating a network than if switch <b>106</b> and switch <b>108</b> were directly connected to the server.</p>
<p id="p-0034" num="0033">Physical links <b>120</b> provide a communication path between two devices, enabling the two devices to exchange data packets. Each physical link comprises a medium. For example, the medium may be twisted-pair copper, single-mode fiber, multi-mode fiber, a radio frequency, or other medium.</p>
<p id="p-0035" num="0034">Each physical link also comprises a protocol used to communicate over the physical medium. For example, the devices may communicate using Ethernet data packets, Asynchronous Transfer Mode (ATM) cells, Time Division Multiplexing (TDM) messages, or the like. Additionally, each physical link may use higher-level protocols such as Internet Protocol (IP) or Transmission Control Protocol (TCP).</p>
<p id="p-0036" num="0035">Entire switches or ports of one or more switches may be grouped together into a domain. Clients or servers that are connected to ports belonging to the same domain are able to communicate with each other by exchanging data packets. The switches within the domain relay these data packets between the client and the server. In contrast, devices connected to switch ports belonging to different domains are not able to communicate with each other because switches do not relay data packets between domains. A Local Area Network (LAN) is one example of a domain.</p>
<p id="p-0037" num="0036">A second example of a domain is a Virtual Local Area Network (VLAN). Devices belonging to a common VLAN may exchange data packets with each other, but devices belonging to different VLANs are not able to exchange data packets with each other. The switches of a data network may be capable of supporting a plurality of VLANs simultaneously and may thereby support a plurality of domains simultaneously.</p>
<p id="p-0038" num="0037">A switch may support multiple VLANs simultaneously by dividing a single physical switch port into a plurality of logical ports. Each of these logical ports may be assigned to a different VLAN and thus a different domain. Data packets relayed by the physical switch port include a VLAN identifier that enables the switch port to assign each data packet to a particular VLAN.</p>
<p id="p-0039" num="0038">Another example of a domain is a multicast group. A multicast group enables a multicast server to send a single data packet into a network that the multicast server intends each of a plurality of multicast clients to receive. The data packet comprises a particular multicast destination address. Switches that couple the multicast server to the multicast clients replicate the data packet for each switch port that is connected directly or indirectly through another switch to a multicast client and send the replicates out each of these ports.</p>
<p id="p-0040" num="0039">Switch ports not connected directly or indirectly to a multicast client do not receive a replicate. In this manner, the switch confines replicates to a particular set of switch ports and multicast clients. This set of switch ports forms a domain and data packets sent by the multicast server are confined to the domain.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a single domain wherein the server, switches, and clients are able to communicate with each other.</p>
<p id="p-0042" num="0041">Each domain may have a method of efficiently distributing a data packet to all devices that are part of the domain. The use of a reserved address as a destination address is one such method. The reserved address indicates that the data packet is addressed to all destinations within a domain instead of to one particular destination. Switches that encounter a data packet having the reserved address as a destination address recognize the reserved address. In response, the switches replicate the data packet and send a replicate to each switch port belonging to the domain.</p>
<p id="p-0043" num="0042">For example, a reserved Ethernet broadcast address may be used to send a data packet to all devices belonging to a LAN or a VLAN. Alternatively, one of a set of reserved Ethernet multicast address may be used to send data packets to all multicast clients belonging to a domain comprising a multicast group.</p>
<p id="h-0007" num="0000">Exemplary Embodiments for Withholding a Data Packet from a Switch Port Despite its Destination Address</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIGS. 2-8</figref> illustrate exemplary embodiments of the tools enabling switches to withhold a data packet from a switch port despite its destination address. The tools may act in other manners as well, some of which are described in the final section.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an exemplary set of communications between a DHCP client <b>202</b> and a DHCP server <b>204</b> used by the DHCP client to obtain a network address. A network <b>206</b> couples the DHCP client to the DHCP server. To obtain a network address, the DHCP client sends a DHCP discover message.</p>
<p id="p-0046" num="0045">The DHCP discover message requests a network address from a DHCP server. The DHCP discover message includes a broadcast destination address that specifies, as described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, that the DHCP discover message is to be sent to all devices in the domain (LAN or VLAN) to which the DHCP client belongs. The DHCP discover message is broadcasted because the DHCP client does not know the network address of the DHCP server.</p>
<p id="p-0047" num="0046">In response to the DHCP discover message, the DHCP server sends a DHCP offer message <b>210</b>. The DHCP offer message contains a network address that the DHCP server offers to the DHCP client. The DHCP offer message also includes a broadcast destination address and therefore is forwarded to all devices in the domain.</p>
<p id="p-0048" num="0047">Since the DHCP discover message is sent as a broadcast to all devices in the domain, it is possible that there may be a plurality of DHCP servers in the domain and that each of them will send a DHCP offer message in response to the DHCP discover message. In this situation, the DHCP client will select a single DHCP offer to accept.</p>
<p id="p-0049" num="0048">Accordingly, the DHCP client sends a DHCP request message <b>212</b> indicating that the DHCP client would like to use the network address specified by the selected DHCP offer. This DHCP request message includes a broadcast destination address and therefore is forwarded to all devices in the domain.</p>
<p id="p-0050" num="0049">The DHCP server that sent the selected DHCP offer responds by sending a DHCP acknowledge message <b>214</b> acknowledging that the DHCP client has decided to use the offered network address. The DHCP acknowledge message is addressed directly to the DHCP client rather than being broadcast to all devices in the domain.</p>
<p id="p-0051" num="0050">This method of obtaining a network address may be used by the clients <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b> of <figref idref="DRAWINGS">FIG. 1</figref>. For example, client <b>110</b> may use this method to obtain a network address from the server <b>102</b>. Since each of the other clients <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b> are in the same domain as client <b>110</b>, the other clients will receive the broadcasted DHCP discover, DHCP offer, and DHCP request messages. The other clients have no need to receive these messages. Thus, the distribution of the messages to the other clients is an inefficient use of network resources.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary operating environment <b>300</b> in which a data packet is withheld from a port despite it destination address. The operating environment is similar to the operating environment of <figref idref="DRAWINGS">FIG. 1</figref>, but illustrates the effect on the environment of a client <b>112</b> following the method described above in relation to <figref idref="DRAWINGS">FIG. 2</figref> to obtain a network address from a server <b>102</b>.</p>
<p id="p-0053" num="0052">Client <b>112</b> and server <b>102</b> exchange broadcast DHCP messages via switch <b>106</b> and switch <b>104</b>. Prior to receiving the broadcast DHCP messages, switch <b>106</b> has received a port description identifying a set of ports of the switch that are to be associated with a particular domain. Switch <b>106</b> may receive the port description from a management system through a configuration file, a set of SNMP messages, or through another configuration tool well known to those of skill in the art. Alternatively, the port description may be received as part of a firmware or software package that executes on the switch. The port description could also be received through multicast join and/or leave messages.</p>
<p id="p-0054" num="0053">Switch <b>106</b> configures the set of ports, based on the port description, so that the set of ports belong to the domain. Switch <b>106</b> also identifies the server <b>102</b> and the client <b>112</b> as being two parties interested in communicating with each other. Accordingly, switch <b>106</b> configures the set of ports so that broadcast DHCP messages exchanged through switch <b>106</b> by the server <b>102</b> and client <b>112</b> are withheld from (i.e. not forwarded to) the uninterested entities connected to switch <b>106</b>, namely client <b>110</b> and client <b>114</b>. Physical links <b>302</b> and <b>304</b> are shown as dashed lines to indicate that the broadcast DHCP messages are withheld from these links.</p>
<p id="p-0055" num="0054">Withholding the broadcast DHCP messages from clients <b>110</b> and <b>114</b> is contrary to the typical behavior of the switch <b>106</b>. The switch <b>106</b> would typically forward the broadcast DHCP messages to clients <b>110</b> and <b>114</b> because the destination address of the broadcast DHCP messages is the reserved broadcast address.</p>
<p id="p-0056" num="0055">Withholding the broadcast DHCP messages is advantageous since it reduces the number of data packets sent to clients <b>110</b> and <b>114</b>, making room for other data packets, and prevents clients <b>110</b> and <b>114</b> from knowing the network address accepted by client <b>112</b>.</p>
<p id="p-0057" num="0056">Switch <b>106</b> forwards the broadcast DHCP messages to switch <b>104</b>. Switch <b>104</b> also receives a port description and configures its ports accordingly. Switch <b>104</b> identifies the server <b>102</b> and the client <b>112</b> as being two parties interested in communicating and configures its ports so that broadcast DHCP messages exchanged through switch <b>104</b> by the server <b>102</b> and client <b>112</b> are withheld from the uninterested entities connected to the switch <b>104</b>, namely switch <b>108</b>.</p>
<p id="p-0058" num="0057">Physical link <b>306</b> is shown as a dashed line to indicate that the broadcast DHCP messages are withheld from the link. Since the broadcast DHCP messages are withheld from switch <b>108</b>, they are also withheld from clients <b>116</b> and <b>118</b> which are connected to switch <b>108</b>. Physical links <b>308</b> and <b>310</b> are shown as dashed lines to indicate that the broadcast DHCP messages are withheld from these links.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram <b>400</b> illustrating an exemplary switch capable of withholding a data packet from a port despite its destination address. The block diagram <b>400</b> includes a switch <b>402</b> connected to two trusted servers <b>404</b>, <b>406</b>; a rogue server <b>408</b>; a management system <b>410</b>; and a client <b>412</b>. The switch <b>402</b> comprises a plurality of ports <b>414</b>, <b>416</b>, <b>418</b>, <b>420</b>, <b>422</b>, <b>424</b>, <b>426</b>, <b>428</b>. Instances of switch <b>402</b> may be used as switch <b>104</b>, <b>106</b>, and <b>108</b> of <figref idref="DRAWINGS">FIGS. 1 and 3</figref>.</p>
<p id="p-0060" num="0059">The trusted servers <b>404</b>, <b>406</b>, in one embodiment, are DHCP servers. The DHCP servers are trusted because they are legitimate servers controlled by a network operator. The rogue server <b>408</b> is also a DHCP server. The rogue server is not a trusted server because the network operator does not control it. In fact, the network operator may not know that the rogue server is connected to the switch. The client <b>412</b>, in one embodiment, is a DHCP client that acquires a network address from one of the trusted servers using broadcast DHCP messages.</p>
<p id="p-0061" num="0060">The management system <b>410</b> provides configuration communications to the switch that instruct the switch to configure itself in a particular way. For example, the management system may send the switch a configuration communication instructing it to configure ports <b>424</b> and <b>426</b> to be in the same domain. A network operator uses the management system to achieve a desired network configuration.</p>
<p id="p-0062" num="0061">The management system may use a number of methods of providing the configuration communication to the switch such as a Simple Network Management Protocol (SNMP) message, a configuration file, a user-initiated configuration command, a Common Object Request Broker Architecture (CORBA) command, an Application Programming Interface (API) call, or other method of configuring a switch well known to those of skill in the art.</p>
<p id="p-0063" num="0062">The ports of the switch are configured in an exemplary manner. Ports <b>414</b>, <b>418</b>, <b>420</b>, <b>424</b>, <b>426</b>, and <b>428</b> belong to the same domain. These ports are shaded with diagonal lines sloping up and to the right to indicate that they belong to the domain. Ports <b>416</b> and <b>422</b> do not belong to the domain. Ports <b>426</b> and <b>428</b> may be connected to other network devices that are not illustrated.</p>
<p id="p-0064" num="0063">Ports <b>416</b> and <b>422</b> may belong to a different domain. As discussed above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, a switch may accommodate more than one domain simultaneously. For example, the switch may support VLANs as domains such that ports <b>414</b>, <b>418</b>, <b>420</b>, <b>424</b>, <b>426</b>, and <b>428</b> belong to one VLAN and ports <b>416</b> and <b>422</b> belong to a different VLAN.</p>
<p id="p-0065" num="0064">The management system has configured ports <b>414</b> and <b>418</b> as trusted server ports. These ports are additionally shaded with diagonal lines sloping up and to the left to indicate that they are trusted server ports. The two trusted server ports form a subset of the ports that belong to the domain. These ports have been configured as trusted server ports because they are connected to trusted servers.</p>
<p id="p-0066" num="0065">The client <b>412</b>, in an effort to obtain a network address, sends a broadcast DHCP message to the switch that is received on port <b>424</b>. Due to the broadcast destination address of the broadcast DHCP message, the typical behavior of the switch would be to forward the broadcast DHCP message to ports <b>414</b>, <b>418</b>, <b>420</b>, <b>426</b>, and <b>428</b> since these ports belong to the same domain as port <b>424</b>.</p>
<p id="p-0067" num="0066">Instead of following typical behavior, the switch forwards the broadcast DHCP message to the trusted server ports <b>414</b>, <b>418</b>. Consequently, the two trusted servers will each receive the broadcast DHCP message and will be able to reply to the client.</p>
<p id="p-0068" num="0067">The switch prevents the broadcast DHCP message from being forwarded on ports <b>420</b>, <b>426</b>, and <b>428</b> even though they are part of the same domain as port <b>424</b>. This reduces the number of replicated broadcast DHCP messages and makes the network more secure since the broadcast DHCP messages are withheld from devices that do not need to receive them.</p>
<p id="p-0069" num="0068">Withholding the broadcast DHCP message from the rogue server is especially advantageous. The rogue server may be configured to receive broadcast DHCP messages from clients that are intended for a legitimate, trusted DHCP server. If the rogue server receives a broadcast DHCP discover message, the rogue server may reply to the DHCP discover message with a DHCP offer message.</p>
<p id="p-0070" num="0069">If the client replies to the rogue server's DHCP offer message with a DHCP request message, the rogue server will have successfully given an address to the client and will effectively control the client's address. Consequently, the rogue server may conduct various malicious activities such as sending spoof messages, reconfiguring the client, and preventing data packets associated with services to which the client subscribes from reaching their intended destinations. This sequence of events is avoided by withholding broadcast DHCP messages from non-trusted ports, thereby withholding broadcast DHCP messages from the rogue server.</p>
<p id="p-0071" num="0070">Some ports of the switch belonging to the domain may be configured as trusted server ports by the management system. Alternatively, the switch may determine which ports are trusted server ports.</p>
<p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary method <b>500</b> that a switch may use to classify a switch port as a trusted server port. In this exemplary method, the switch receives a configuration communication <b>502</b> identifying a set of trusted devices. The configuration communication may be received from a management system through an SNMP message, configuration file, user command, CORBA command, API call, or other method of configuring a switch well known to those of skill in the art. The configuration communication may identify the trusted devices by name, by their network address, or using some other identifier that enables the switch to distinguish the trusted devices from each other.</p>
<p id="p-0073" num="0072">Next, the switch broadcasts a request data packet <b>504</b>. The switch broadcasts the request data packet so that the switch can determine which of the trusted devices are in the same domain as the switch and which of the switch's ports each trusted device is connected to (either directly or indirectly).</p>
<p id="p-0074" num="0073">The request data packet requests a response from the trusted devices and may be addressed to a reserved broadcast destination address rather than being addressed to an individual trusted device. The use of the reserved broadcast destination address, as discussed above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, effectively addresses the request data packet to all devices within the domain in which the request data packet is sent.</p>
<p id="p-0075" num="0074">The request data packet includes a current identifier that identifies the particular switch that sends the request data packet. The switch uses the request identifier to distinguish request data packets that it sends from request data packets sent by other switches in the domain. In one embodiment, the current identifier is the Medium Access Control (MAC) Address of the switch. The MAC address is a unique number assigned to the switch that is readily identifiable by the switch and by other devices in the domain.</p>
<p id="p-0076" num="0075">Those trusted servers that belong to the domain in which the request data packet is sent receive the request data packet. In response to receiving the request data packet, the trusted servers send a reply data packet. The trusted servers may send the reply data packet directly to the switch or alternatively may broadcast the reply data packet to all devices in the domain using a reserved broadcast address or other method of broadcasting.</p>
<p id="p-0077" num="0076">The switch receives the reply data packets <b>506</b> by trusted servers in the domain. In addition, the switch may receive reply data packets from servers in the domain that are not trusted servers. Since the request data packet may have been sent to all devices in the domain, it may be received by both trusted servers and non-trusted servers that belong to the domain.</p>
<p id="p-0078" num="0077">The switch determines <b>508</b> whether each reply data packet it receives was sent by a trusted server. In one embodiment, each reply data packet includes a source network address that identifies the server that sent the reply data packet. In addition, the configuration communication received by the switch in this embodiment identifies the trusted servers by their network addresses.</p>
<p id="p-0079" num="0078">The switch compares the source network address of the reply data packet to the configuration communication. If the source network address is included in the configuration communication, the server that sent the reply data packet is a trusted server <b>510</b>. If the source network address is not included in the configuration communication, the server that sent the reply data packet is not a trusted server <b>512</b>.</p>
<p id="p-0080" num="0079">Since a plurality of switches may exist within a domain, and each of these switches may be sending request data packets, the switch verifies that a reply data packet it receives was sent in response to a request data packet the switch sent. The switch uses a reply identifier, which is included in the reply data packet, in conjunction with the current identifier to verify that the reply data packet was sent in response to a request data packet sent by the switch.</p>
<p id="p-0081" num="0080">In one embodiment, a server that responds to a request data packet uses the current identifier from the request data packet it received from the switch as its reply identifier. For example, if the current identifier is the MAC address of the switch, the server includes the MAC address of the switch (not the MAC address of the server) in the reply data packet as the reply identifier.</p>
<p id="p-0082" num="0081">When the switch receives the reply data packet, it inspects the reply identifier. If the reply identifier matches the current identifier, the switch knows that the reply data packet was sent in response to a request data packet sent by the switch. If the reply identifier does not match the current identifier, the switch may ignore the reply data packet.</p>
<p id="p-0083" num="0082">Of course, other schemes could be used to determine if a reply data packet is a response to a particular request data packet. For example, the current identifier could be a random number generated by the switch and the reply identifier could be a manipulated version of the random number, for example, the random number plus an offset value. Other schemes well known to those of skill in the art could also be used.</p>
<p id="p-0084" num="0083">The switch keeps track of the port on which it receives each reply data packet. If the switch determines a reply data packet has been sent in response to a request data packet sent by the switch and that the server that sent the reply data packet is a trusted server, the switch marks the port on which the reply data packet was received as a trusted server port. The switch may mark the port as trusted by keeping a list of trusted server ports, setting a flag in a configuration file, or other method well known to those of skill in the art for identifying a port as a trusted server port.</p>
<p id="p-0085" num="0084">In one embodiment, the method <b>500</b> may use DHCP messages to classify a switch port as a trusted server port. For example, the request data packet may comprise a DHCP discover message that is broadcast to all devices in the domain. In response to the DHCP discover message, one or more DHCP servers may send a reply data packet comprising a DHCP offer message.</p>
<p id="p-0086" num="0085">The switch compares the DHCP offer message with the configuration communication and the current identifier to determine whether each DHCP server that responds with a DHCP offer message is a trusted server. The method then marks ports on which it receives DHCP offer messages from trusted servers as trusted server ports.</p>
<p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram <b>600</b> illustrating an exemplary switch capable of withholding a data packet from a port despite its destination address. The block diagram <b>600</b> includes a switch <b>602</b> connected to a server <b>604</b>; two trusted clients <b>606</b>, <b>608</b>; a rogue client <b>610</b>; and a management system <b>612</b>. The switch <b>602</b> comprises a plurality of ports <b>614</b>, <b>616</b>, <b>618</b>, <b>620</b>, <b>622</b>, <b>624</b>, <b>626</b>, <b>628</b>.</p>
<p id="p-0088" num="0087">The server <b>604</b>, in one embodiment, is a DHCP server that provides a network address to one of the trusted clients using broadcast DHCP messages. The trusted clients <b>606</b>, <b>608</b> in one embodiment, are DHCP clients. The DHCP clients are trusted because they are legitimate clients that are known to and controlled by a network operator.</p>
<p id="p-0089" num="0088">The rogue client <b>610</b> may also be a DHCP client. The rogue client is not a trusted client because it is not controlled by the network operator. In fact, the network operator may not know that the rogue client is connected to the switch.</p>
<p id="p-0090" num="0089">The management system <b>612</b> provides a port description to the switch that instructs the switch to configure itself in a particular way. For example, the management system may send the switch a port description instructing it to configure ports <b>616</b> and <b>618</b> to be in the same domain. A network operator may create the port description and use the management system to achieve a desired network configuration.</p>
<p id="p-0091" num="0090">The management system may use a number of methods of providing the port description such as a Simple Network Management Protocol (SNMP) message, a configuration file, a user-initiated configuration command, a Common Object Request Broker Architecture (CORBA) command, an Application Programming Interface (API) call, or other method of configuring a switch well known to those of skill in the art.</p>
<p id="p-0092" num="0091">The ports of switch <b>602</b> are configured in an exemplary manner. Ports <b>616</b>, <b>618</b>, <b>622</b>, <b>626</b>, and <b>628</b> belong to the same domain. These ports are shaded with diagonal lines sloping up and to the right to indicate that they belong to the domain. Ports <b>614</b>, <b>620</b>, and <b>624</b> do not belong to the domain. These ports may belong to a different domain. Port <b>618</b> may be connected to a network device that is not illustrated.</p>
<p id="p-0093" num="0092">The management system has configured ports <b>622</b> and <b>626</b> as trusted client ports. These ports are additionally shaded with diagonal lines sloping up and to the left to indicate that they are trusted client ports. The two trusted client ports form a subset of the ports that belong to the domain. These ports have been configured as trusted client ports because they are connected to trusted clients.</p>
<p id="p-0094" num="0093">Trusted client <b>606</b>, in an effort to obtain a network address, sends a broadcast DHCP message to the switch that is received on port <b>622</b>. Before forwarding the broadcast DHCP message to the switch ports that belong to the same domain as port <b>622</b>, the switch determines whether the broadcast DHCP message was received on a trusted client port. The switch consults the port description and determines that port <b>622</b> is a trusted client port. Since port <b>622</b> is a trusted client port, the switch forwards the broadcast DHCP message to the other ports in the domain <b>616</b>, <b>618</b>, <b>626</b>, and <b>628</b>.</p>
<p id="p-0095" num="0094">The rogue client <b>610</b>, in an effort to obtain a network address, may also send a broadcast DHCP message to the switch. This message is received on port <b>628</b>. Before forwarding the broadcast DHCP message to the switch ports that belong to the same domain as port <b>628</b>, the switch determines whether the broadcast DHCP message was received on a trusted client port.</p>
<p id="p-0096" num="0095">The switch consults the port description and determines that port <b>628</b> is not a trusted client port. Since port <b>628</b> is a not trusted client port, the switch does not forward the broadcast DHCP message to the other ports in the domain <b>616</b>, <b>618</b>, <b>626</b>, and <b>628</b>.</p>
<p id="p-0097" num="0096">Withholding the broadcast DHCP message received from the rogue client may prevent unauthorized use of the network. Since the broadcast DHCP message received from the rogue client is not forwarded to the server, the rogue client may be unable to obtain a network address and consequently will be unable to use the network.</p>
<p id="p-0098" num="0097">Withholding the broadcast DHCP message received from the rogue server may also protect the server from attacks. For example, if the rogue server was allowed to obtain an address from the server, it could repeatedly request additional addresses until the server had given out all of its addresses, thereby preventing trusted clients from obtaining an address.</p>
<p id="p-0099" num="0098">The use of trusted client ports and trusted server ports (described above in relation to <figref idref="DRAWINGS">FIG. 4</figref>) may be combined within a single switch. In such an embodiment, a switch may receive a broadcast DHCP message from trusted client <b>606</b> on port <b>622</b>. The switch determines that port <b>622</b> is a trusted client port based on the port description. The switch then determines which of the other ports in the domain (ports <b>616</b>, <b>618</b>, <b>626</b>, and <b>628</b>) are trusted server ports based on a configuration communication as described above in relation to <figref idref="DRAWINGS">FIG. 4</figref> or based on the method described above in relation to <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0100" num="0099">The switch then forwards the broadcast DHCP message to those ports that belong to the domain and are trusted server ports. For example, if port <b>616</b> was a trusted server port, the switch would forward the broadcast DHCP message to port <b>616</b> and consequently the server <b>604</b> would receive the broadcast DHCP message.</p>
<p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a system <b>700</b> of switches capable of withholding a data packet from a port despite its destination address along with exemplary data packets relayed from a client to a server. The system enables a method used by two switches to relay a broadcast data packet from a client to a server. The system includes a server <b>702</b>; two switches <b>704</b>, <b>706</b>; a client <b>708</b>; and three physical links <b>710</b>, <b>712</b>, <b>714</b>. In addition, three exemplary data packets <b>716</b>, <b>718</b>, <b>720</b> are illustrated.</p>
<p id="p-0102" num="0101">The server and client communicate with each other by exchanging data packets. The switches couple the server to the client through a domain and relay data packets between the server and client. At least a portion of the data packets exchanged by the client and server are broadcast data packets that use a reserved address. The reserved address prompts the switches forward the broadcast data packets to other devices belonging to the domain.</p>
<p id="p-0103" num="0102">Switch <b>704</b> includes six ports <b>722</b>, <b>724</b>, <b>726</b>, <b>728</b>, <b>730</b>, <b>732</b> configured in an exemplary manner. Ports <b>724</b>, <b>726</b>, <b>728</b>, <b>730</b>, and <b>732</b> belong to a common domain. These ports are shaded with diagonal lines sloping up and to the right to indicate that they belong to the domain. Port <b>722</b> does not belong to the domain. Port <b>724</b> is a trusted server port in accordance with the trusted server port described above in relation to <figref idref="DRAWINGS">FIG. 4</figref>. Ports <b>722</b>, <b>726</b>, <b>728</b>, and <b>732</b> may be connected to other network devices not illustrated in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0104" num="0103">Switch <b>706</b> also includes six ports <b>734</b>, <b>736</b>, <b>738</b>, <b>740</b>, <b>742</b>, <b>744</b> configured in an exemplary manner. Ports <b>736</b>, <b>738</b>, <b>740</b>, <b>742</b>, and <b>744</b> belong to the same domain as ports <b>724</b>, <b>726</b>, <b>728</b>, <b>730</b>, and <b>732</b>. These ports are shaded with diagonal lines sloping up and to the right to indicate that they belong to the domain. Port <b>734</b> does not belong to the domain. Port <b>736</b> is a trusted server port. Ports <b>734</b>, <b>738</b>, <b>740</b>, and <b>744</b> may be connected to other network devices not illustrated in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0105" num="0104">The client <b>708</b> sends a broadcast data packet to switch <b>706</b> on link <b>714</b>. Switch <b>706</b> receives the broadcast data packet on port <b>742</b>. Exemplary data packet <b>716</b> represents this broadcast data packet.</p>
<p id="p-0106" num="0105">After receiving the broadcast data packet, switch <b>706</b>, in one embodiment, examines the broadcast data packet to determine if it has been marked with a label. The label aids the switch in identifying a port to which a subsequent response from the server to the broadcast data packet is to be forwarded. A method of using the label to accomplish this objective is discussed below in relation to <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0107" num="0106">Since switch <b>706</b> receives the broadcast data packet directly from the client, it has not yet been marked with a label. Accordingly, switch <b>706</b> marks the broadcast data packet with a label. The label identifies the switch that received the data packet as well as the switch port on which the broadcast data packet was received (port <b>742</b> in the exemplary embodiment of <figref idref="DRAWINGS">FIG. 8</figref>). Exemplary data packet <b>718</b> represents the marked broadcast data packet.</p>
<p id="p-0108" num="0107">Switch <b>706</b> may add the label to the broadcast data packet without displacing the content of the original broadcast data packet. The label <b>746</b> comprises a device identifier <b>748</b> and a receive port identifier <b>750</b>. The device identifier <b>748</b> uniquely identifies switch <b>706</b> as the entity that added the label to the broadcast data packet. The device identifier may be a MAC address <b>752</b> assigned to switch <b>706</b> or another identifier that uniquely identifies switch <b>706</b>.</p>
<p id="p-0109" num="0108">The receive port identifier <b>750</b> identifies the port on which the broadcast data packet was received by switch <b>706</b>. The receive port identifier may be a port number, port name, or other identifier that uniquely identifies the port on which the broadcast data packet was received.</p>
<p id="p-0110" num="0109">As described above in relation to <figref idref="DRAWINGS">FIG. 4</figref>, due to the broadcast destination address of the broadcast DHCP message, the typical behavior of the switch would be to forward the broadcast DHCP message to ports <b>736</b>, <b>738</b>, <b>740</b>, and <b>744</b> since these ports belong to the same domain as port <b>742</b>.</p>
<p id="p-0111" num="0110">Instead of following this typical approach, the switch forwards the broadcast DHCP message to the trusted server port <b>736</b> in accordance with the method described above in relation to <figref idref="DRAWINGS">FIG. 4</figref>. Consequently, the broadcast DHCP message is sent via link <b>712</b> to switch <b>704</b>. Switch <b>704</b> receives the broadcast DHCP message on port <b>730</b>.</p>
<p id="p-0112" num="0111">After receiving the broadcast data packet, switch <b>704</b> examines the broadcast data packet to determine if it has been marked with a label. In one embodiment, switch <b>704</b> recognizes the label that switch <b>706</b> added to the broadcast data packet and consequently does not mark the data packet with its own label.</p>
<p id="p-0113" num="0112">In another embodiment, switch <b>706</b> adds a second label to the broadcast data packet. The second label may include a device identifier and receive port identifier. The second label differs from the first label in that the device identifier of the second label identifies switch <b>704</b> rather than switch <b>706</b>. For example, if the device identifier comprises a MAC address, the device identifier for the second label is the MAC address <b>754</b> for switch <b>704</b> and the device identifier for the first label is the MAC address <b>752</b> for switch <b>706</b>.</p>
<p id="p-0114" num="0113">Switch <b>704</b> then forwards the broadcast data packet to port <b>724</b> since port <b>724</b> is the only trusted server port in the domain. Consequently, the broadcast data packet is relayed by link <b>710</b> to the server. Exemplary data packet <b>720</b> illustrates the format of the broadcast data packet on link <b>710</b> for an embodiment of switch <b>704</b> that does not add a second label to the broadcast data packet.</p>
<p id="p-0115" num="0114">In one embodiment, the server is a DHCP server, the client is a DHCP client, and the broadcast data packet is a DHCP discover message or DHCP request message. In this embodiment, the label may be a relay agent information option field described by Request For Comments (RFC) 3046 published by the Internet Engineering Task Force.</p>
<p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a system <b>800</b> similar to system <b>700</b> of <figref idref="DRAWINGS">FIG. 7</figref>. The ports of <figref idref="DRAWINGS">FIG. 8</figref> differ slightly from the ports of <figref idref="DRAWINGS">FIG. 7</figref> in two aspects. First, ports <b>724</b> and <b>736</b> are no longer trusted server ports. Second, ports <b>728</b>, <b>730</b>, <b>732</b>, <b>740</b>, <b>742</b>, and <b>744</b> are trusted client ports similar to the trusted client port described above in relation to <figref idref="DRAWINGS">FIG. 6</figref>. The system <b>800</b> enables the switches to relay a response to the broadcast data packet of <figref idref="DRAWINGS">FIG. 7</figref> from the server to the client. The system <b>800</b> also illustrates three exemplary data packets <b>802</b>, <b>804</b>, <b>806</b>.</p>
<p id="p-0117" num="0116">Once the server <b>702</b> receives the broadcast data packet from Switch <b>704</b> via link <b>710</b> (described above in relation to <figref idref="DRAWINGS">FIG. 7</figref>), the server responds to the broadcast data packet with a response packet, which is also a broadcast data packet. The server includes the label from the broadcast data packet in the response packet. The server sends the response packet to switch <b>704</b> on link <b>710</b>. Exemplary data packet <b>802</b> illustrates the format of the response packet on link <b>710</b>.</p>
<p id="p-0118" num="0117">After receiving the response packet on port <b>724</b>, switch <b>704</b> examines the response packet label to determine if the device identifier <b>748</b> matches a current identifier for switch <b>704</b>. As described above in relation to <figref idref="DRAWINGS">FIG. 7</figref>, the current identifier may be the MAC address <b>754</b> for switch <b>704</b>. In this case, the device identifier has a value equal to the current identifier of switch <b>706</b>, not switch <b>704</b> since the server used the label from the broadcast data packet sent by the client in the response packet. Consequently, the device identifier <b>748</b> of the response packet and current identifier for switch <b>704</b> do not match.</p>
<p id="p-0119" num="0118">As a result, switch <b>704</b> forwards the response packet to its ports identified as trusted client ports in a manner in accordance with that described above in relation to <figref idref="DRAWINGS">FIG. 6</figref>. In this manner, the number of broadcast data packets forwarded by switch <b>704</b> is reduced since switch <b>704</b> sends the response packet to trusted client ports (a subset of the ports belonging to the domain) instead of forwarding the response packet to all ports in the domain as a typical switch would.</p>
<p id="p-0120" num="0119">If the device identifier of another exemplary response packet and the current identifier for switch <b>706</b> match, switch <b>706</b> forwards the response packet to the port identified by the receive port identifier <b>750</b> portion of the label and does not forward the response packet to other ports in the domain, whether they are trusted client ports or not.</p>
<p id="p-0121" num="0120">Since the current identifier for switch <b>704</b> and the device identifier <b>748</b> of exemplary data packet <b>802</b> do not match, switch <b>706</b> receives the response packet on port <b>736</b> via link <b>712</b>. Exemplary data packet <b>804</b> illustrates the format of the response packet on link <b>712</b>. The label format for exemplary data packets <b>802</b> and <b>804</b> are substantially similar.</p>
<p id="p-0122" num="0121">After receiving the response packet on port <b>736</b>, switch <b>706</b> examines the response packet label to determine if the device identifier matches a current identifier for switch <b>706</b>. As described above in relation to <figref idref="DRAWINGS">FIG. 7</figref>, the current identifier may be the MAC address <b>752</b> for switch <b>706</b>. In this case, the device identifier has a value equal to the current identifier of switch <b>706</b>. Consequently, the device identifier and current identifier for switch <b>706</b> match.</p>
<p id="p-0123" num="0122">In one embodiment, switch <b>706</b> removes the label from the response packet before forwarding the response packet. In another embodiment, switch <b>706</b> leaves the label in the response packet. Switch <b>706</b> forwards the response packet to the port specified by the receive port identifier <b>750</b> portion of the label, in this case port <b>742</b>. Switch <b>706</b> does not forward the response packet to other ports in the domain, whether they are trusted client ports or not. In this manner, the number of broadcast data packet forwarded by switch <b>706</b> is reduced since switch <b>706</b> sends the response packet directly to the client instead of forwarding the response packet to all ports in the domain as a typical switch would.</p>
<p id="p-0124" num="0123">The client receives the response packet via link <b>714</b>. Exemplary data packet <b>806</b> illustrates the format of the response packet on link <b>712</b> for an embodiment of switch <b>706</b> that removes the label from the response packet.</p>
<p id="p-0125" num="0124">In one embodiment, the server is a DHCP server, the client is a DHCP client, and the response packet is a DHCP offer message. In this embodiment, the label may be a relay agent information option field described by RFC 3046:</p>
<p id="h-0008" num="0000">Other Embodiments of the Tools</p>
<p id="p-0126" num="0125">The section above describes exemplary ways in which the tools withhold a data packet from a switch port despite its destination address. The section below describes additional embodiments of the tools, including processes. Each of the processes below may be performed by a switch through computer-executable instructions on computer-readable media, hardware, a combination of both, or otherwise. <figref idref="DRAWINGS">FIG. 9</figref> illustrates a process <b>900</b> as a series of blocks representing individual operations or acts performed by the tools.</p>
<p id="p-0127" num="0126">At block <b>902</b>, the tools receive a port description identifying a set of ports of a data-packet switch associated with a domain. As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the domain may be a LAN, ULAN, multicast group, or other construct that enables a device in one domain to exchange data packets with other devices in the domain but prevents the device from exchanging data packets with devices in a different domain.</p>
<p id="p-0128" num="0127">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the tools may receive the port description from a management system through a configuration file, a set of SNMP messages, or through another configuration tool well known to those of skill in the art. Alternatively, the port description may be received as part of a firmware or software package executed by the tools. The port description could also be received through multicast join and/or leave messages.</p>
<p id="p-0129" num="0128">At block <b>904</b>, the tools configure the set of ports, based on the port description, so that broadcast data packets exchanged through the data-packet switch by two interested entities that would otherwise be forwarded to uninterested entities in the domain are instead withheld from the uninterested entities. The broadcast data packets would otherwise be forwarded to uninterested entities due to a broadcast destination address included in the broadcast data packets.</p>
<p id="p-0130" num="0129">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the broadcast data packets may be Ethernet data packets that use a reserved broadcast address as a destination address. Alternatively, the broadcast data packets may use a different construct to request that the tools forward the broadcast data packet to the other devices belonging to the domain.</p>
<p id="p-0131" num="0130"><figref idref="DRAWINGS">FIG. 10</figref> illustrates another embodiment of the tools as method <b>1000</b>, which is illustrated as a series of blocks representing individual operations or acts performed by the tools. At block <b>1002</b>, the tools receive a data packet on a receive port associated with a domain from a data device. The data packet includes a destination address specifying that the data packet be forwarded to each of a set of ports, each port of the set being associated with the domain. As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the data device may be a server or a client. In addition, the data device may be a device capable of transmitting and receiving data packets.</p>
<p id="p-0132" num="0131">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, in one embodiment, the destination address may be a reserved Ethernet broadcast address. The destination address may also be a multicast address. As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the domain may be a LAN, VLAN, multicast group, or other construct that enables a device in one domain to exchange data packets with other devices in the domain but prevents the device from exchanging data packets with devices in a different domain.</p>
<p id="p-0133" num="0132">At block <b>1004</b>, the tools determine a destination port for the data packet by inspecting a label of the data packet, the destination port belonging to the set of ports. The destination port may be a physical port or the destination may be a logical port comprising a plurality of physical ports as in an Ethernet link aggregation group.</p>
<p id="p-0134" num="0133">In one embodiment, the label includes the device identifier and a receive port identifier described above in relation to <figref idref="DRAWINGS">FIGS. 7 and 8</figref>. The label may also utilize a relay information option field defined by RFC 3046.</p>
<p id="p-0135" num="0134">At block <b>1006</b>, the tools forward the data packet to the destination port specified by the label as described above in relation to <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0136" num="0135">At block <b>1008</b>, the tools prevent the data packet from egressing a port of the set other than the destination port. The tools may prevent the data packet from egressing the port by not forwarding the data packet to the port or may prevent the data packet from egressing the port by forwarding the data packet to the port and then discarding the data packet at the port before it is transmitted by the port. Of course, other methods well known to those of skill in the art may also be used to prevent the data packet from egressing the port.</p>
<p id="p-0137" num="0136"><figref idref="DRAWINGS">FIG. 11</figref> illustrates another embodiment of the tools as method <b>1100</b>, which is illustrated as a series of blocks representing individual operations or acts performed by the tools. At block <b>1102</b>, the tools configure a data-packet switch according to a port description. The port description identifies a set of ports of the data-packet switch associated with a domain and identifies a subset of the set of ports.</p>
<p id="p-0138" num="0137">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the domain may be a LAN, ULAN, multicast group, or other construct that enables a device in one domain to exchange data packets with other devices in the domain but prevents the device from exchanging data packets with devices in a different domain. The subset of ports may be the set of trusted client ports discussed above in relation to <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0139" num="0138">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref> the tools may receive the port description from a management system through a configuration file, a set of SNMP messages, or through another configuration tool well known to those of skill in the art. Alternatively, the port description may be received as part of a firmware or software package executed by the tools. The port description could also be received through multicast join and/or leave messages.</p>
<p id="p-0140" num="0139">At block <b>1104</b>, the tools receive a data packet comprising a broadcast destination address on a receive port. The receive port is a member of the set of ports. As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the broadcast destination address may be a reserved broadcast address such as an Ethernet broadcast address. Alternatively, the broadcast data packets may use a different construct for the broadcast destination address that requests that the tools forward the broadcast data packet to the other devices belonging to the domain.</p>
<p id="p-0141" num="0140">At block <b>1106</b>, the tools determine, based on the port description, whether the receive port belongs to the subset. As discussed above in relation to <figref idref="DRAWINGS">FIG. 6</figref>, the tools may do this by comparing a receive port identifier to the port description.</p>
<p id="p-0142" num="0141">At block <b>1108</b>, the tools withhold the data packet from the other ports in the set if the receive port does not belong to the subset. The data packet is withheld despite a request implicit in the broadcast destination address that the data packet be forwarded to all the ports of the set except the receive port.</p>
<p id="p-0143" num="0142">The tools may withhold the data packet from the other ports in the set by not forwarding the data packet to the other ports or may withhold the data packet by forwarding the data packet to the other ports and discarding the data packet at the other ports before it is transmitted by the other port. Of course, other methods well known to those of skill in the art may also be used to withhold the data packet from the other ports in the set.</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. 12</figref> illustrates another embodiment of the tools as method <b>1200</b>, which is illustrated as a series of blocks representing individual operations or acts performed by the tools. At block <b>1202</b>, the tools receive a data packet on a receive port from a data device. The receive port is associated with a domain. The data packet comprises a destination address specifying that the data packet be forwarded to each of a set of ports, each port of the set being associated with the domain.</p>
<p id="p-0145" num="0144">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the domain may be a LAN, ULAN, multicast group, or other construct that enables a device in one domain to exchange data packets with other devices in the domain but prevents the device from exchanging data packets with devices in a different domain.</p>
<p id="p-0146" num="0145">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the destination address may be a reserved broadcast address such as an Ethernet broadcast address. Alternatively, the broadcast data packets may be a multicast address.</p>
<p id="p-0147" num="0146">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the data device may be a server or a client. In addition, the data device may be a device capable of transmitting and receiving data packets.</p>
<p id="p-0148" num="0147">At block <b>1204</b>, the tools forward the data packet from the receive port to each of a subset of the set of ports. Each of the ports of the subset is a trusted port. The subset of trusted ports may be trusted server ports as discussed above in relation to <figref idref="DRAWINGS">FIG. 4</figref>. At block <b>1206</b>, the tools prevent the data packet from egressing a port of the set that is not part of the subset.</p>
<p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. 13</figref> illustrates another embodiment of the tools as method <b>1300</b>, which is illustrated as a series of blocks representing individual operations or acts performed by the tools.</p>
<p id="p-0150" num="0149">At block <b>1302</b>, the tools receive a Dynamic Host Configuration Protocol (DHCP) broadcast data packet on a receive port from a DHCP client. The receive port is associated with a domain and the DHCP broadcast data packet includes a broadcast destination address specifying that the DHCP broadcast data packet be forwarded to each of a set of ports. Each port of the set is associated with the domain.</p>
<p id="p-0151" num="0150">As discussed above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the DHCP broadcast data packet may be a DHCP discover message or a DHCP request message. As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the destination address may be a reserved broadcast address such as an Ethernet broadcast address.</p>
<p id="p-0152" num="0151">As described above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the domain may be a LAN, VLAN, multicast group, or other construct that enables a device in one domain to exchange data packets with other devices in the domain but prevents the device from exchanging data packets with devices in a different domain.</p>
<p id="p-0153" num="0152">At block <b>1304</b>, the tools forward the DHCP broadcast data packet from the receive port to each of a subset of the set of ports. Each of the ports of the subset is a trusted server port coupled to at least one trusted DHCP server. As discussed above in relation to <figref idref="DRAWINGS">FIG. 1</figref>, the trusted server port may be connected directly to a trusted DHCP server. Alternatively, the trusted server port may be connected indirectly to a trusted server through one or more other network devices as long as data packets can be relayed between the trusted server port and the trusted DHCP server.</p>
<p id="p-0154" num="0153">At block <b>1306</b>, the tools preventing the data packet from egressing any port of the set that is not part of the subset.</p>
<p id="p-0155" num="0154"><figref idref="DRAWINGS">FIG. 14</figref> illustrates another embodiment of the tools as method <b>1400</b>, which is illustrated as a series of blocks representing individual operations or acts performed by the tools.</p>
<p id="p-0156" num="0155">At block <b>1402</b>, the tools receive a configuration communication identifying a set of trusted devices. As described above in relation to <figref idref="DRAWINGS">FIG. 5</figref>, the configuration communication may be received from a management system through an SNMP message, configuration file, user command, CORBA command, API call, or other method of configuring a switch well known to those of skill in the art. The trusted devices may be trusted DHCP servers known to the network operator.</p>
<p id="p-0157" num="0156">At block <b>1404</b>, the tools broadcast a request data packet requesting a response from one or more of the trusted devices identified by the configuration communication. As discussed above in relation to <figref idref="DRAWINGS">FIG. 5</figref>, the request data packet may be a DHCP request message.</p>
<p id="p-0158" num="0157">At block <b>1406</b>, the tools receive a reply data packet in response to the request data packet on a reply port from a reply device. As discussed above in relation to <figref idref="DRAWINGS">FIG. 5</figref>, the request data packet may be a DHCP offer message.</p>
<p id="p-0159" num="0158">At block <b>1408</b>, the tools determine that the reply device is one of the trusted devices identified by the configuration communication. As discussed above in relation to <figref idref="DRAWINGS">FIG. 5</figref>, the tools may compare a network address from the reply data packet to the configuration communication in determining if the reply device is one of the trusted devices.</p>
<p id="p-0160" num="0159">At block <b>1410</b>, the tools mark the reply port as a trusted port. As discussed above in relation to <figref idref="DRAWINGS">FIG. 5</figref>, the tools may mark the port as trusted by keeping a list of trusted server ports, setting a flag in a configuration file, or other method well known to those of skill in the art for identifying a port as a trusted server port.</p>
<heading id="h-0009" level="1">CONCLUSION</heading>
<p id="p-0161" num="0160">The above-described tools enable data-packet switches to withhold a data packet from a switch port despite its destination address. By so doing, the tools may reduce the number of data packets that are unnecessarily forwarded within a network. Although the tools have been described in language specific to structural features and/or methodological acts, it is to be understood that the tools defined in the appended claims are not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the tools.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method implemented at least in part by a computing device comprising:
<claim-text>receiving a port description identifying a set of ports of a data-packet switch associated with a domain comprising the set of ports, wherein the domain is a local area network, virtual local area network, or a multicast group; and</claim-text>
<claim-text>configuring the set of ports, based on the port description, to withhold from uninterested entities in the domain, via ports classified as untrusted through a server identification process, broadcast Dynamic Host Configuration Protocol (DHCP) data packets exchanged through the data-packet switch by interested entities within the domain that would otherwise be forwarded to the uninterested entities through the data-packet switch due to broadcast destination addresses associated with the broadcast DHCP data packets, wherein the uninterested entities are configured to communicate through the set of ports to one another and to the interested entities, and wherein the configuring only withholds the broadcast DHCP data packets from the uninterested entities;</claim-text>
<claim-text>wherein the uninterested entities are uninterested due to being coupled to the untrusted ports;</claim-text>
<claim-text>wherein, when the domain is the multicast group, the broadcast DHCP data packets are withheld from the uninterested entities despite a destination address in the broadcast DHCP data packets indicating delivery to the uninterested entities thereby preventing the uninterested entities from obtaining network address information through the broadcast DHCP data packets and thereby altering functionality of the broadcast DHCP data packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein one of the two interested entities is coupled to a first port belonging to the set of ports and the other interested entity is coupled to a second port belonging to the set of ports.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein one of the interested entities is coupled to one of a subset of the set of ports and each of the uninterested entities is coupled to one of the ports of the set that does not belong to the subset.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the broadcast DHCP data packets, which would normally have broadcast destination addresses that would cause them to be broadcast to all ports associated with the domain, are restricted to only trusted ports associated with the domain in both directions between transmit ports and receive ports thereby reducing a number of data packets sent in the domain and preventing the uninterested entities from participating in broadcast DHCP.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method for reducing a number of ports to which a data packet is forwarded comprising:
<claim-text>receiving a Dynamic Host Configuration Protocol (DHCP) data packet on a receive port associated with a domain from a data device, the DHCP data packet comprising a destination address specifying that the DHCP data packet be forwarded to each of a set of ports, each port of the set of ports being associated with the domain, wherein the domain comprises the set of ports, wherein the domain is a local area network, virtual local area network, or a multicast group;</claim-text>
<claim-text>determining a destination port for the DHCP data packet by inspecting a label of the DHCP data packet, the destination port belonging to the set of ports;</claim-text>
<claim-text>forwarding the DHCP data packet to the destination port specified by the label;</claim-text>
<claim-text>preventing the DHCP data packet from egressing a port of the set other than the destination port thereby reducing a number of data packets sent in the domain and preventing uninterested entities within the domain from participating in DHCP;</claim-text>
<claim-text>receiving a non-DHCP data packet on the receive port; and</claim-text>
<claim-text>forwarding the non-DHCP data packet based on addressing associated therewith;</claim-text>
<claim-text>wherein the DHCP data packet comprises one of a discovery message, an offer message, and a request message that is typically delivered to all ports of the set of ports;</claim-text>
<claim-text>wherein, when the domain is the multicast group, the DHCP data packet is a broadcast DHCP data packet, and wherein the broadcast DHCP data packet is withheld from the uninterested entities within the domain despite a destination address in the broadcast DHCP data packet indicating delivery to the uninterested entities within the domain thereby preventing the uninterested entities within the domain from obtaining network address information through the broadcast DHCP data packet and thereby altering functionality of the broadcast DHCP data packet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the label comprise a device identifier and a destination port identifier.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the DHCP data packet comprises a DHCP offer message and the label comprises a relay agent information option field defined by Request For Comments (RFC) 3046.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the device identifier comprises an Ethernet Media Access Control (MAC) address associated with an entity that added the label to the DHCP data packet.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein determining further comprises comparing the device identifier to a current identifier and determining that the device identifier has a predetermined relationship to the current identifier.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the current identifier comprises a MAC address and the predetermined relationship comprises the device identifier matching the current identifier.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the DHCP data packet comprises a DHCP offer message.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving a broadcast DHCP data packet on one of the set of ports; and</claim-text>
<claim-text>utilizing the configuration to withhold the broadcast DHCP data packet thereby reducing data traffic related to the broadcast DHCP data packet and preventing the uninterested entities from participating therein.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>receiving a non-broadcast DHCP data packet on one of the set of ports; and</claim-text>
<claim-text>forwarding the non-broadcast DHCP data packet to any of the uninterested entities or the interested entities based on addressing associated with the non-broadcast DHCP data packet. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
