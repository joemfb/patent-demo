<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626852-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626852</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12915937</doc-number>
<date>20101029</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>403</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
<further-classification>709207</further-classification>
<further-classification>709204</further-classification>
<further-classification>709205</further-classification>
<further-classification>709203</further-classification>
<further-classification>713152</further-classification>
<further-classification>713400</further-classification>
</classification-national>
<invention-title id="d2e53">Email thread monitoring and automatic forwarding of related email messages</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6965919</doc-number>
<kind>B1</kind>
<name>Woods et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7020688</doc-number>
<kind>B2</kind>
<name>Sykes, Jr.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7149778</doc-number>
<kind>B1</kind>
<name>Patel et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7359948</doc-number>
<kind>B2</kind>
<name>Ralston et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7370277</doc-number>
<kind>B1</kind>
<name>Canfield et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715752</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7421690</doc-number>
<kind>B2</kind>
<name>Forstall et al.</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7609820</doc-number>
<kind>B2</kind>
<name>Bedingfield, Sr.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379 8812</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7900148</doc-number>
<kind>B1</kind>
<name>Canfield et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715752</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2002/0035607</doc-number>
<kind>A1</kind>
<name>Checkoway et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0065784</doc-number>
<kind>A1</kind>
<name>Ranzini et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 64</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2002/0129108</doc-number>
<kind>A1</kind>
<name>Sykes, Jr.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2002/0138586</doc-number>
<kind>A1</kind>
<name>Paleiov et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709207</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2003/0018722</doc-number>
<kind>A1</kind>
<name>Almeda et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2003/0018723</doc-number>
<kind>A1</kind>
<name>Almeda et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2005/0027779</doc-number>
<kind>A1</kind>
<name>Schinner</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2005/0100143</doc-number>
<kind>A1</kind>
<name>Bedingfield, Sr.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379 8812</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2005/0172213</doc-number>
<kind>A1</kind>
<name>Ralston et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715500</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2008/0059586</doc-number>
<kind>A1</kind>
<name>Keohane et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2008/0301245</doc-number>
<kind>A1</kind>
<name>Estrada et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2009/0259725</doc-number>
<kind>A1</kind>
<name>Rabinovich</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2012/0110090</doc-number>
<kind>A1</kind>
<name>Jensen et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>&#x201c;Bells &#x26; Whistles for Outlook: automatically CC or BCC on every email&#x201d;, <i>DS Development Software </i>http://www.emailaddressmanager.com/outlook/bcc.html Obtained from the internet (Sep. 1, 2010). 2004-2010 , 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Kerr, Bernard et al., &#x201c;Designing Remail: Reinventing the Email Client Through Innovation and Integration&#x201d;, <i>CHI 2004</i>, Apr. 24-29, 2004, Vienna, Austria. ACM 1-58113-703-06/0004. Apr. 24-29, 2004, 16 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709219</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709204-207</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709227</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709217</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120110092</doc-number>
<kind>A1</kind>
<date>20120503</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Keohane</last-name>
<first-name>Susann M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McBrearty</last-name>
<first-name>Gerald F.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Mullen</last-name>
<first-name>Shawn P.</first-name>
<address>
<city>Buda</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Murillo</last-name>
<first-name>Jessica K.</first-name>
<address>
<city>Hutto</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shieh</last-name>
<first-name>Johnny M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Keohane</last-name>
<first-name>Susann M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>McBrearty</last-name>
<first-name>Gerald F.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Mullen</last-name>
<first-name>Shawn P.</first-name>
<address>
<city>Buda</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Murillo</last-name>
<first-name>Jessica K.</first-name>
<address>
<city>Hutto</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Shieh</last-name>
<first-name>Johnny M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>DeLizio Gilliam, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gilles</last-name>
<first-name>Jude Jean</first-name>
<department>2447</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer system can implement a mechanism for email thread monitoring and automatic forwarding of related email messages. In one embodiment, a first email message is provided from an email application of a computer system to a plurality of email addresses. An indication is detected, at the email application, that a first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message. Subsequent email messages received at, and transmitted by, the email application are monitored to determine whether one or more of the subsequent email messages are associated with the first email message. In response to determining that a second email message from the subsequent email messages is associated with the first email message, a copy of the second email message is automatically provided to the first email address of the plurality of email addresses.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="262.21mm" wi="187.11mm" file="US08626852-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="269.07mm" wi="188.04mm" file="US08626852-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="258.15mm" wi="181.86mm" file="US08626852-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="259.50mm" wi="175.09mm" file="US08626852-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="256.79mm" wi="168.91mm" file="US08626852-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="245.96mm" wi="162.14mm" file="US08626852-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="249.34mm" wi="172.38mm" file="US08626852-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Embodiments of the inventive subject matter generally relate to the field of email communication systems, and, more particularly, to a mechanism for email thread monitoring and automatic forwarding of related email messages.</p>
<p id="p-0003" num="0002">Electronic mail (or email) systems provide a means for individuals to communicate quickly and efficiently regardless of geographic location. Client email applications allow a user to send an email message to one or more primary email recipients, and provide a carbon copy (&#x201c;Cc&#x201d;) of the email message to one or more secondary email recipients. Furthermore, client email applications allow the user to send a blind carbon copy (&#x201c;Bcc&#x201d;) to one or more additional secondary email recipients. Typically, the primary and second email recipients can see all the email addresses of the other primary and secondary email recipients, with the exception of the email addresses that were sent a blind carbon copy. Each of the primary and secondary email recipients can reply to all the other email recipients (with the exception of the blind carbon copy email addresses that remain hidden), reply to a subset of the email recipients, and/or forward the email message to additional individuals. Typically, when an email message is replied to or forwarded by one or more of the email recipients, an email thread is created by the client email application adding or appending the original email message at the bottom of the new email message when creating the new email message. The email thread continues to grow as more email recipients reply to or forward the email thread, and therefore more email messages are appended to the email thread.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">Various embodiments for implementing email thread monitoring and automatic forwarding of related email messages to interested users are described herein. In one embodiment, a first email message is provided from an email application of a computer system to a plurality of email addresses. An indication is detected, at the email application, that a first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message. Subsequent email messages received at the email application and transmitted by the email application are monitored, at the email application, to determine whether one or more of the subsequent email messages are associated with the first email message. In response to determining that a second email message from the subsequent email messages is associated with the first email message, a copy of the second email message is automatically provided to the first email address of the plurality of email addresses.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004">The present embodiments may be better understood, and numerous objects, features, and advantages made apparent to those skilled in the art by referencing the accompanying drawings.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is an example conceptual diagram illustrating example operations for monitoring email messages at a client computer system and automatically sending copies of related email messages to interested users, according to some embodiments.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is an example conceptual diagram illustrating example operations for monitoring email messages at a server system and automatically sending copies of related email messages to interested users, according to some embodiments.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram illustrating example operations for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating additional example operations for implementing email thread monitoring and automatic forwarding of related email messages in email communication systems, according to some embodiments.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram illustrating additional example operations for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram of one embodiment of a computer system including a mechanism for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF EMBODIMENT(S)</heading>
<p id="p-0012" num="0011">The description that follows includes example systems, methods, techniques, instruction sequences and computer program products that embody techniques of the present inventive subject matter. However, it is understood that the described embodiments may be practiced without these specific details. For instance, some examples described herein refer to an email application monitoring subsequent email messages for an interested user that was blind copied with an original email message, and automatically providing a copy of any subsequent email messages that are related to the original email message to the interested user. However, in other implementations, operations described herein can also be implemented for other interested users that were sent or forwarded the original email message or the corresponding email thread, as will be further described below. In other instances, well-known instruction instances, protocols, structures and techniques have not been shown in detail in order not to obfuscate the description.</p>
<p id="p-0013" num="0012">Secondary email recipients that are blind carbon copied (&#x201c;blind copied&#x201d;) an email message, or email recipients that are forwarded the email message, typically do not have a practical way to follow a corresponding email thread that may be of interest to them. These email recipients may not have been included in the &#x201c;To&#x201d; or &#x201c;Cc&#x201d; fields of the email message, and therefore will usually not be sent replies to the email thread. One impractical option is for these email recipients to ask the originator of the email thread to continually forward (or send them a blind copy of) subsequent email messages associated with the email thread.</p>
<p id="p-0014" num="0013">In some embodiments, functionality can be implemented in email systems to allow email recipients that are interested in a particular email thread to request authorization from the originator of the email thread to automatically receive subsequent email messages that are related to the email thread. If the originator of the email thread (or the user that originally forwarded the email message) grants the authorization request, the email system can continually monitor subsequent email messages to identify related email messages, and automatically provide a copy of the related email messages to the interested user(s). In some embodiments, a client email application on a client computer system (e.g., the computer system of the email thread originator) can monitor subsequent email messages and automatically forward related email messages to the interested user(s). In some embodiments, a server email application on a server computer system (e.g., that routes email messages to the intended email addresses) can perform the monitoring and automatic forwarding of related email messages to the interested user(s). The client-based and the server-based embodiments can utilize email message identifiers to detect related email messages, as will be further described below with reference to <figref idref="DRAWINGS">FIGS. 1-4</figref>. In other embodiments, an encrypted auto-copy file can be embedded to an email thread to automatically provide a copy of related email messages to the interested user(s) in a machine-independent manner, as will be further described below with reference to <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is an example conceptual diagram illustrating example operations for monitoring email messages at a client computer system and automatically sending copies of related email messages to interested users, according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, a client computer system <b>101</b> can comprise a client email application <b>100</b>. For example, the client email application <b>100</b> can be a client-based email program such as IBM&#xae; Lotus Notes&#xae; and Microsoft&#xae; Outlook&#xae;. The client email application <b>100</b> can include an email management unit <b>110</b> and an email thread monitoring unit <b>120</b>. The email management unit <b>110</b> can communicate with one or more email servers to send and receive email messages. The email thread monitoring unit <b>120</b> can monitor email messages and automatically forward related email messages to interested users, as will be further described below.</p>
<p id="p-0016" num="0015">At stage A, the client email application <b>100</b> of the computer system <b>101</b> provides, based on input from User <b>1</b>, a first email message to an email address associated with User <b>2</b> (&#x201c;User <b>2</b> email address&#x201d;) and an email address associated with User <b>3</b> (&#x201c;User <b>3</b> email address&#x201d;). In the same communication, the client email application <b>100</b> also blind copies the first email message to an email address associated with User <b>4</b> (&#x201c;User <b>4</b> email address&#x201d;). In one embodiment, the client email application <b>100</b> can cause the computer system <b>101</b> to present a graphical user interface, and User <b>1</b> may provide input via the graphical user interface of the email application <b>100</b> to create the first email message and to add the email addresses associated with User <b>2</b>, User <b>3</b>, and User <b>4</b> to the first email message. For example, User <b>1</b> may add the User <b>2</b> and User <b>3</b> email addresses in the &#x201c;To&#x201d; field of the first email message, and add the User <b>4</b> email address in the &#x201c;Bcc&#x201d; of the first email message. After User <b>1</b> provides input to send the first email message, the email management unit <b>110</b> of the email application <b>100</b> sends the first email message to the User <b>2</b>, User <b>3</b>, and User <b>4</b> email addresses. It is noted, however, that in other examples the first email message can be provided to User <b>4</b> in the same communication by adding the User <b>4</b> email address in any of the other email fields, such as the &#x201c;To&#x201d; field or the &#x201c;Cc&#x201d; field. Also, the first email message can be provided to User <b>4</b> in a separate communication by forwarding the first email message via a new email message.</p>
<p id="p-0017" num="0016">At stage B, the client email application <b>100</b> detects an indication that the User <b>4</b> email address should be sent a copy of subsequent email messages that are associated with the first email message. In one embodiment, after User <b>1</b> blind copies the first email message to the User <b>4</b> email address, the client-based email application of User <b>4</b> provides User <b>4</b> the option to send an authorization request to an email address associated with User <b>1</b> (&#x201c;User <b>1</b> email address&#x201d;). The authorization request indicates that User <b>4</b> is interested in the subject matter of the first email message, and requests to be sent a copy of subsequent email messages that are associated with the first email message. For example, the graphical user interface of the client-based email application can offer a &#x201c;follow&#x201d; or &#x201c;track&#x201d; email option that the User <b>4</b> can select via the graphical user interface. When the User <b>4</b> selects the &#x201c;follow&#x201d; or &#x201c;track&#x201d; email option, the client-based email application of User <b>4</b> can send the authorization request to the User <b>1</b> email address. In one example, the authorization request can be an email message sent from the client-based email application of User <b>4</b> to the client-based email application of User <b>1</b>. In response to receiving the authorization request email, the graphical user interface associated with the email management unit <b>110</b> of the client email application <b>100</b> provides User <b>1</b> the option to select whether to &#x201c;approve&#x201d; or &#x201c;reject&#x201d; the authorization request. It is noted, however, that the authorization request can be provided to User <b>1</b> by other techniques; for example, the authorization request can be another type of message sent from the client-based email application of User <b>4</b> that cause the client email application <b>100</b> associated with User <b>1</b> to provide User <b>1</b> the option to select whether to &#x201c;approve&#x201d; or &#x201c;reject&#x201d; the authorization request. In one embodiment, the email thread monitoring unit <b>120</b> can detect an indication of whether User <b>1</b> approves the authorization request received from User <b>4</b>. For example, the email thread monitoring unit <b>120</b> can detect whether the User <b>1</b> selected the &#x201c;approve&#x201d; option in the graphical user interface. If the email thread monitoring unit <b>120</b> detects that the User <b>1</b> approves the authorization request, the email thread monitoring unit <b>120</b> creates and stores an indication to monitor subsequent email messages, and to send a copy of related email messages to User <b>4</b>, as will be further described below. In some examples, the email application <b>100</b> can also send a notification message to the User <b>4</b> email address if the User <b>1</b> approves the authorization request. If the client email application <b>100</b> detects that User <b>1</b> rejects the authorization request received from User <b>4</b>, then the client email application <b>100</b> can send a notification message to the User <b>4</b> email address indicating that User <b>1</b> rejected the authorization request. In some implementations, the client-based email application used by User <b>4</b> is the same client-based email program (or, if not the same, a compatible email program) as the client email application <b>100</b> used by User <b>1</b>.</p>
<p id="p-0018" num="0017">At stage C, the client email application <b>100</b> scans the first email message to identify one or more message identifiers associated with the first email message. In some embodiments, in response to detecting that User <b>1</b> approves the authorization request from User <b>4</b> to monitor subsequent email messages, the email thread monitoring unit <b>120</b> scans the first email message to determine one or more message identifiers associated with the first email message. The email thread monitoring unit <b>120</b> can associate the User <b>4</b> email address with the one or more message identifiers associated with the first email message and store the information in a table (or other type of data structure) maintained at the client computer system <b>101</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, the email thread monitoring unit <b>120</b> can create a new entry <b>151</b> in an email thread monitoring table <b>150</b> and store the User <b>4</b> email address and the associated message identifiers (e.g., the message identifier X). It is noted, however, if the first email message is an email thread comprising two or more email messages, the email thread monitoring unit <b>120</b> may detect multiple message identifiers when it scans the first email message, and therefore store multiple message identifiers in the table <b>150</b>. In some embodiments, each message identifier can be a randomly generated number that is embedded within each email message (e.g., when the email message is created) to distinguish the email message from other email messages (and otherwise process and manage the message). The message identifiers can be randomly generated N-digit numbers, where N can be predefined (e.g., by the email protocol) and/or configurable. It is noted, however, that the message identifiers can be other suitable types of identifiers, e.g., randomly generated combination of numbers and letters, hexadecimal numbers, etc. The message identifiers can be visible (e.g., embedded in the subject line) or hidden (e.g., embedded as metadata) to the user. The new entry <b>151</b> in the email thread monitoring table <b>150</b> can register the interested user and define the criteria (i.e., the message identifier(s)) to determine which subsequent email messages are related email messages.</p>
<p id="p-0019" num="0018">At stage D, the email thread monitoring unit <b>120</b> monitors subsequent email messages received at, and transmitted by, the client email application <b>100</b> to determine whether the subsequent email messages include the at least one of the one or more message identifiers associated with the first email message. The subsequent email messages that include the at least one of the one or more message identifiers associated with the first email message are considered to be related to the first email message. As described above, in one example, the one or more message identifiers associated with the first email message can comprise the message identifier X. In this example, the subsequent email messages that include the message identifier X can be an email thread that includes the first email message. In some embodiments, the email thread monitoring unit <b>120</b> scans each subsequent email message to determine whether the email message includes at least one of the one or more message identifiers associated with the first email message (i.e., the message identifier(s) stored in the table <b>150</b>). For example, for each subsequent email message, the email thread monitoring unit <b>120</b> compares the message identifier(s) embedded in the email message to the message identifier X to determine whether the subsequent email message is related to the first email message. The subsequent emails can either be emails that the client email application <b>100</b> receives, or emails that the client email application is going to send out. When the client email application <b>100</b> receives a subsequent email message, the email thread monitoring unit <b>120</b> scans the received email message to determine whether it includes the message identifier X. When the client email application <b>100</b> is preparing to send out a subsequent email message (e.g., in response to the user selecting the reply or forward options), the email thread monitoring unit <b>120</b> scans the email message before the email message is sent out to determine whether it includes the message identifier X. If a subsequent email message includes the message identifier X, the email thread monitoring unit <b>120</b> automatically forwards a copy of the subsequent email message to User <b>4</b>, as will be further described below.</p>
<p id="p-0020" num="0019">At stage E, in response to identifying a subsequent email message that includes at least one of the one or more message identifiers associated with the first email message, the email thread monitoring unit <b>120</b> automatically provides a copy of the email message to the User <b>4</b> email address. For example, the subsequent email message can be an email thread received at the client email application <b>100</b> that includes the first email message (and, therefore, includes the message identifier X). In this example, the email thread monitoring unit <b>120</b> automatically forwards the email thread to the User <b>4</b> email address. In another example, the subsequent email message can be an email thread that the client email application <b>100</b> is going to send out, which includes the first email message. For instance, the subsequent email message can be an email thread that User <b>1</b> wants to forward or reply to certain email addresses. In this example, the email thread monitoring unit <b>120</b> can automatically provide a copy of the subsequent email message (that the client email application <b>100</b> is going to send out) to User <b>4</b>. For example, the email thread monitoring unit <b>120</b> can automatically blind copy User <b>4</b> before sending out the email message. In another example, the email thread monitoring unit <b>120</b> can automatically send a copy of the email message to User <b>4</b> after the email message is sent out to the desired email addresses. Furthermore, in response to providing a copy of the subsequent email message to User <b>4</b>, the email thread monitoring unit <b>120</b> scans the subsequent email message to identify one or more additional message identifiers associated with the subsequent email message that are embedded within the email thread (in addition to the message identifier X), as will be further described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>. The email thread monitoring unit <b>120</b> then begins to monitor subsequent email messages for the one or more additional message identifiers in addition to the message identifier X.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 2</figref> is an example conceptual diagram illustrating example operations for monitoring email messages at a server system and automatically sending copies of related email messages to interested users, according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, a server computer system <b>201</b> can comprise a server-based email application <b>200</b>. For example, the server email application can be an email application on the server side that routes email messages to the corresponding destination user mailboxes (within the same server, a different local server, or a different remote server) to store the email messages (e.g., for future retrieval by the users). The server email application can receive email messages from a client email application and route the email messages to the corresponding destination user mailboxes. The server email application may also receive and store email messages (e.g., created using browsers on the client side) for a web-based email server system, such as Yahoo!&#xae; Mail and Google&#xae; Mail. Similar to the embodiment described in <figref idref="DRAWINGS">FIG. 1</figref>, the server-based email application <b>200</b> can include an email management unit <b>210</b> and an email thread monitoring unit <b>220</b>. The email management unit <b>210</b> can communicate with client computer systems (e.g., the client computer system <b>202</b> of User <b>1</b>), and in some cases, with one or more additional email server systems, to route email messages to the destination user mailboxes. The email thread monitoring unit <b>220</b> can monitor email messages that are routed via the server email application <b>200</b> and automatically forward related email messages to interested users, as will be further described below.</p>
<p id="p-0022" num="0021">At stage A, the server-based email application <b>200</b> of the computer system <b>201</b> provides a first email message to the User <b>2</b> email address and to the User <b>3</b> email address. In the same communication, the server-based email application <b>200</b> also blind copies the first email message to the User <b>4</b> email address. In one embodiment, the email management unit <b>210</b> of the email application <b>200</b> can receive the first email message from the client email application <b>205</b> client computer system <b>202</b> (e.g., created and sent by User <b>1</b>) and route the first email message to the User <b>2</b>, User <b>3</b>, and User <b>4</b> email addresses. The first email message can be routed to the user email addresses in order to route the message to the corresponding destination user mailboxes associated with the user email addresses. As described above, the destination user mailboxes can be located within the same server, a different local server, or a different remote server, and are used to store the email messages (e.g., for future retrieval by the users).</p>
<p id="p-0023" num="0022">At stage B, the server-based email application <b>200</b> detects an indication that the User <b>4</b> email address should be sent a copy of subsequent email messages that are associated with the first email message. As described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, User <b>4</b> may send an authorization request to User <b>1</b>, and User <b>1</b> may either approve or reject the authorization request. In one embodiment, the email thread monitoring unit <b>220</b> of the server-based email application <b>200</b> can detect an indication of whether User <b>1</b> approves the authorization request from User <b>4</b>. For example, the client email application <b>205</b> can provide an indication to the server-based email application <b>200</b> if User <b>1</b> approves the authorization request to monitor subsequent email messages. In one example, the email thread monitoring unit <b>220</b> can receive a notification message (e.g., one or more packets) indicating User <b>1</b> approved the authorization request from the client email application. In another example, for web-based email servers, the email thread monitoring unit <b>220</b> can receive an indication that User <b>1</b> approved the authorization request from a web browser of the client computer system <b>202</b> (instead of a client email application). In this embodiment, the monitoring of subsequent email messages that are related to the first email message takes place on the server side, instead of at the client side. Furthermore, in response to the email thread monitoring unit <b>220</b> detecting the indication that the User <b>1</b> approved the authorization request, the email thread monitoring unit <b>220</b> creates and stores an indication to monitor subsequent email messages and to send a copy of related email messages to User <b>4</b>, as will be further described below. In some implementations, the server-based email application <b>200</b> can also send a notification message to the User <b>4</b> email address indicating whether User <b>1</b> approved or rejected the authorization request.</p>
<p id="p-0024" num="0023">At stage C, the server-based email application <b>200</b> scans the first email message to identify one or more message identifiers associated with the first email message. Similarly as described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, the email thread monitoring unit <b>220</b> may scan the first email message to identify the one or more message identifiers. The email thread monitoring unit <b>220</b> may then associate the User <b>4</b> email address with the one or more message identifiers associated with the first email message and store the information in an email thread monitoring table (or other data structure) maintained at the server computer system <b>201</b> (e.g., a table similar to the email thread monitoring table <b>150</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>). The new entry in the email thread monitoring table can register the interested user and define the criteria (i.e., the message identifier(s)) to determine which subsequent email messages are related email messages.</p>
<p id="p-0025" num="0024">At stage D, the email thread monitoring unit <b>220</b> monitors subsequent email messages received at the server-based email application <b>200</b> to determine whether the subsequent email messages include at least one of the one or more message identifiers associated with the first email message. The subsequent email messages that include at least one of the one or more message identifiers associated with the first email message are considered to be related to the first email message. As described above, in one example, the one or more message identifiers associated with the first email message can comprise the message identifier X. In this example, the subsequent email messages that include the message identifier X can be an email thread that includes the first email message. In some embodiments, the email thread monitoring unit <b>220</b> scans each subsequent email message to determine whether the email message includes at least one of the one or more message identifiers associated with the first email message. For example, for each subsequent email message, the email thread monitoring unit <b>220</b> compares the message identifier(s) embedded in the email message to the message identifier X to determine whether the subsequent email message is related to the first email message. The email thread monitoring unit <b>220</b> can monitor and scan all subsequent email messages that are routed via the server computer system <b>201</b>, regardless of whether User <b>1</b> is copied or not, and determine whether the messages are related to the first email message. If a subsequent email message includes the message identifier X, the email thread monitoring unit <b>220</b> automatically forwards a copy of the subsequent email message to User <b>4</b>, as will be further described below.</p>
<p id="p-0026" num="0025">At stage E, in response to identifying a subsequent email message that includes at least one of the one or more message identifiers associated with the first email message, the email thread monitoring unit <b>220</b> automatically provides a copy of the email message to the User <b>4</b> email address. For example, the subsequent email message can be an email thread received at the server-based email application <b>200</b> that includes the first email message (and, therefore, includes the message identifier X). In one implementation, the email thread monitoring unit <b>220</b> can automatically blind copy the User <b>4</b> email address, and then route the email message to the user email addresses. In another implementation, the email thread monitoring unit <b>220</b> can automatically send a copy of the email message to the User <b>4</b> email address after the email message is routed to the intended user email addresses. It is noted that, in the server-based embodiment, the subsequent emails that are related to the first email message can either be emails that the server-based email application <b>200</b> receives from User <b>1</b> (i.e., from the client computer system <b>202</b>), or emails that the server-based email application <b>200</b> receives from other users (e.g., Users <b>2</b> and/or <b>3</b>). The original email thread can be forwarded to other users without copying User <b>1</b>, but the first email identifier will still be embedded within the email message. The email thread monitoring unit <b>220</b> can identify any email message that is routed via the server computer system <b>201</b> that includes the email identifier X (or other email identifiers associated with the original email thread). For example, if User <b>2</b> forwards an email message, which is part of the original email thread, to the User <b>3</b> email address, at least one of the message identifiers associated with the original email thread will be embedded in the email communication to the User <b>3</b> email address. Therefore, the server-based email application <b>200</b> can determine the email message sent to the User <b>3</b> email address is a related email message, and provide a copy of the email message to the User <b>4</b> email address. Furthermore, in response to providing a copy of the subsequent email message to User <b>4</b>, the email thread monitoring unit <b>220</b> scans the subsequent email message to identify one or more additional message identifiers associated with the subsequent email message that are embedded within the email thread (in addition to the message identifier X), as will be further described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0027" num="0026">In both the client-based embodiment and the server-based embodiment, the email application can continue to monitor subsequent email messages (to determine if they are related to the original email message) until a default or configurable message monitoring time period expires. For example, the default time period can be 6 months. In some examples, users can customize the message monitoring time period; for example, User <b>1</b> can change the message monitoring time period from 6 months to one year. The users can also cause the email application to stop monitoring email messages prior to the expiration of the default or configurable time period. For example, User <b>1</b> can select an option in the graphical user interface associated with the client email application to terminate the monitoring of email messages. In another example, User <b>4</b> may provide a termination notification (e.g., via the graphical user interface) to the User <b>1</b> email address to stop the monitoring of the email messages. In the client-based embodiment, the client email application can remove the corresponding entry from the email thread monitoring table (e.g., table <b>150</b>) in response to detecting an indication to stop monitoring the email messages. In the server-based embodiment, the server-based email application can receive an indication to stop monitoring the email messages either from User <b>1</b> or User <b>4</b>. In response to receiving the indication to stop monitoring the email messages, the server-based email application can remove the corresponding entry from the email thread monitoring table.</p>
<p id="p-0028" num="0027">In other embodiments of both client-based and server-based implementations, instead of continuing to scan email messages to determine the message identifiers related to the email thread, the client-based or server-based email application can embed or attach an encrypted auto-copy file (that is hidden to users) to the email thread. The encrypted auto-copy file can cause the corresponding email application to automatically forward a copy of related email message to the interested user (e.g., User <b>4</b>), as will be further described below with reference to <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram (&#x201c;flow&#x201d;) <b>300</b> illustrating example operations for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments. The flow begins at block <b>302</b>.</p>
<p id="p-0030" num="0029">A first email message is provided from an email application to a plurality of email addresses (<b>302</b>). For example, in the client-based embodiment, client email application <b>100</b> of client computer system <b>101</b> provides the first email message (originating from User <b>1</b>) to the User <b>2</b> email address and the User <b>3</b> email address, and blind copies the first email message to the User <b>4</b> email address. In another example, for the server-based embodiment, server email application <b>200</b> of server computer system <b>201</b> routes the first email message to the User <b>2</b> email address, the User <b>3</b> email address, and the User <b>4</b> email address. The flow continues at block <b>304</b>.</p>
<p id="p-0031" num="0030">An authorization request is received from a first email address of the plurality of email addresses requesting the email application to provide a copy of subsequent email messages that are associated with the first email message to the first email address (<b>304</b>). For example, in the client-based embodiment, client email application <b>100</b> receives the authorization request from the User <b>4</b> email address, and notifies User <b>1</b>. In the server-based embodiment, server email application <b>200</b> receives the authorization request from the User <b>4</b> email address, and then provides the authorization request to the User <b>1</b> email address. The flow continues at block <b>306</b>.</p>
<p id="p-0032" num="0031">It is determined whether the authorization request is granted (<b>306</b>). For example, in the client-based embodiment, client email application <b>100</b> detects an indication of whether User <b>1</b> granted or rejected the authorization request. For example, client email application <b>100</b> detects an indication from the graphical user interface associated with client email application <b>100</b> of whether User <b>1</b> approved or rejected the authorization request. In the server-based embodiment, server email application <b>200</b> receives an indication (from the client email application associated with User <b>1</b>) of whether User <b>1</b> accepted or rejected the authorization request. If the authorization request is not granted, the flow ends. Otherwise, if the authorization request is granted, the flow continues at block <b>308</b>.</p>
<p id="p-0033" num="0032">The first email message is scanned to identify and store one or more message identifiers associated with the first email message (<b>308</b>). For example, in both the client-based and the server-based embodiments, the corresponding email application scans the first email message to identify the one or more message identifiers embedded within the first email message. The email application then stores the email address of the interested user (e.g., the User <b>4</b> email address) and the one or more message identifiers associated with the first email message in a table (e.g., email thread monitoring table <b>150</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>) or other data structure. The email address of the interested user is associated with the one or more message identifiers associated with the first email message. This information is used to register the User <b>4</b> email address and define the criteria by which the email application will monitor subsequent email messages and automatically forward related email messages. The flow continues at block <b>310</b>.</p>
<p id="p-0034" num="0033">Subsequent email messages received at, and transmitted by, the email application are monitored to determine whether one or more of the subsequent email messages include at least one of the one or more message identifiers associated with the first email message (<b>310</b>). For example, in both the client-based and the server-based embodiments, the corresponding email application scans each subsequent email message to identify the one or more message identifiers associated with the subsequent email message. The email application then compares the one or more message identifiers associated with the subsequent email message to the one or more message identifiers associated with the first email message. If the subsequent email message includes at least one of the one or more message identifiers associated with the first email message, the email application determines that the subsequent email message is related to the first email message, as will be further described below. The flow continues at block <b>312</b> of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating additional example operations for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments. The flow diagram of <figref idref="DRAWINGS">FIG. 4</figref> is a continuation of the flow diagram shown in <figref idref="DRAWINGS">FIG. 3</figref>, and begins at block <b>312</b>.</p>
<p id="p-0036" num="0035">It is determined whether a subsequent email message is detected that includes at least one of the one or more message identifiers associated with the first email message (<b>312</b>). For example, in both the client-based and the server-based embodiments, the email application scans the subsequent email message and determines whether the subsequent email message includes at least one of the one or more message identifiers associated with the first email message. If the email application determines that the subsequent email message does not include at least one of the one or more message identifiers associated with the first email message, the flow loops back and continues at block <b>310</b>, where the email application continues to monitor subsequent email messages. Otherwise, if the email application determines that the subsequent email message includes at least one of the one or more message identifiers associated with the first email message, the flow continues at block <b>314</b>.</p>
<p id="p-0037" num="0036">A copy of the subsequent email message that includes at least one of the one or more message identifiers associated with the first email message is provided to the first email address of the plurality of email addresses (<b>314</b>). For example, in the client-based embodiment, if client email application <b>100</b> received the subsequent email message that includes at least one of the one or more message identifiers associated with the first email message, client email application <b>100</b> forwards a copy of the subsequent email message to the email address of the interested user (e.g., the User <b>4</b> email address). If the subsequent email message is an email message client email application <b>100</b> is scheduled to send out, client email application <b>100</b> blind copies the email address of the interested user in the same email communication scheduled to be sent out. In another implementation, if the subsequent email message is an email message client email application <b>100</b> is scheduled to send out, client email application <b>100</b> forwards a copy of the subsequent email message to the email address of the interested user in a separate email communication. In the server-based embodiment, if the subsequent email message that includes at least one of the one or more message identifiers associated with the first email message is an email message server email application <b>200</b> received and routed to the corresponding email addresses, server email application <b>200</b> forwards a copy of the subsequent email message to the email address of the interested user (e.g., the User <b>4</b> email address). In both the client-based and the server-based embodiments, the corresponding email application may access email thread monitoring table <b>150</b> (or other data structure) to determine the email address of the interested user that is associated with the one or more message identifiers associated with the first email message. The flow continues at block <b>316</b>.</p>
<p id="p-0038" num="0037">The subsequent email message is scanned to identify and store one or more additional message identifiers associated with the subsequent email message (<b>316</b>). For example, in both the client-based and the server-based embodiments, the corresponding email application scans the subsequent email message that includes at least one of the one or more message identifiers associated with the first email message to identify one or more additional message identifiers that are embedded within the subsequent email message. In some embodiments, each time a new email message is created, a new message identifier is embedded within the new email message. If the new email is part of an email thread, the new email may have embedded one or more email identifiers associated with the previous emails that comprise the email thread, and also a new message identifier for the new email message. In one example, the subsequent email message may be an email thread that includes the first email message with the message identifier X, a second email message with a message identifier Y, and a third email message with a message identifier Z. In this example, after scanning the subsequent email message, the email application can determine that the message identifier Y and the message identifier Z are related to the email thread that comprises the first email message (and the message identifier X). Therefore, in this example, the email application can store the message identifier Y and the message identifier Z in the same table entry <b>151</b> of the email thread monitoring table <b>150</b>. After the email application stores the message identifier Y and the message identifier Z and associates these message identifiers with the email address of the interested user (e.g., the User <b>4</b> email address), the email application can continue monitoring subsequent email messages according to the updated monitoring criteria. In other words, the email application can scan each subsequent email message to determine whether the message includes either the message identifier X, the message identifier Y, or the message identifier Z. If a subsequent email message includes either of these message identifiers, the email application can determine that the email message is related to the email thread associated with the first email message, and therefore provide a copy of the email message to the interested user. The flow continues at block <b>318</b>.</p>
<p id="p-0039" num="0038">It is determined whether a predefined message monitoring time period expired (<b>318</b>). For example, in both the client-based and server-based embodiment, the corresponding email application can determine whether the default or customized message monitoring time period has expired. The predefined message monitoring time period defines when to terminate the monitoring of subsequent email messages, and automatic forwarding of related email messages. If the predefined message monitoring time period has not expired, the flow loops back and continues at block <b>310</b> of <figref idref="DRAWINGS">FIG. 3</figref>, where the email application continues to monitor subsequent email messages. If the predefined message monitoring time period has expired, the flow ends.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram illustrating additional example operations for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments. The flow diagram of <figref idref="DRAWINGS">FIG. 5</figref> may begin with the operations described above in blocks <b>302</b>-<b>312</b> of <figref idref="DRAWINGS">FIGS. 3 and 4</figref>, and then follow a different path of operations described below in blocks <b>514</b>-<b>522</b>. After the &#x201c;Yes&#x201d; path of block <b>312</b> of <figref idref="DRAWINGS">FIG. 4</figref>, the flow continues at block <b>514</b>.</p>
<p id="p-0041" num="0040">In response to detecting a subsequent email message including at least one of the one or more message identifiers associated with the first email message, an encrypted auto-copy file is embedded in the subsequent email message (<b>514</b>). For example, in both the client-based and server-based embodiments, the email thread monitoring unit of the corresponding email application can embed the encrypted auto-copy file into the subsequent email message. The encrypted auto-copy file can be a file with text and/or code that causes an email application that is scheduled to send out an email message (with the encrypted auto-copy file) to automatically provide a copy of the email message to the email address of the interested user (e.g., the User <b>4</b> email address). The encrypted auto-copy file can also store the email address of the interested user (or in some cases two or more email addresses of interested users). By embedding the encrypted auto-copy file within the email thread, the monitoring and automatic forwarding of related email messages can be performed in a machine-independent manner (i.e., the process is both client-independent and server-independent). Furthermore, with this technique, the client or server computer system may not have to continue to track and store message identifiers of email messages after the encrypted auto-copy file is embedded to the email thread. In some embodiments, the encrypted auto-copy file can be an executable file, as will be further described below. The flow continues at block <b>516</b>.</p>
<p id="p-0042" num="0041">A copy of the subsequent email message with the encrypted auto-copy file is provided to at least the first email address of the plurality of email addresses (<b>516</b>). For example, in both the client-based and server-based embodiments, if the email application is preparing to send the subsequent email message to one or more intended email addresses (e.g., the User <b>2</b> and User <b>3</b> email addresses), the email application can automatically send the subsequent email message (with the encrypted auto-copy file) to the intended recipients, and also blind copy the email address of the interested user (e.g., the User <b>4</b> email address). In the client-based embodiment, if the client email application has received the subsequent email message, the client email application can automatically forward a copy of the subsequent email message (with the encrypted auto-copy file) to the email address of the interested user. At a later time, when the user that received the subsequent email message (e.g. User <b>1</b>) decides to reply to the message, the client email application can also send the email message with the encrypted auto-copy file to the intended recipients.</p>
<p id="p-0043" num="0042">After the subsequent email message with the embedded auto-copy file is sent out, the monitoring and automatic forwarding of subsequent related email messages is performed at any compatible email application (located in any geographic location) that is configured with the functionality to detect (and decrypt) the embedded auto-copy file, and automatically forward a copy of the email message to the email address of the interested user (stored within the embedded auto-copy file). For example, in a client-based embodiment, if User <b>2</b> sends the email message with the encrypted auto-copy file to an email address of a User <b>5</b>, the client email application at the client computer system of User <b>2</b> can detect the email message includes the encrypted auto-copy file. After detecting the embedded auto-copy file, the client email application of User <b>2</b> obtains the User <b>4</b> email address (i.e., the email address of the interested user) that is stored within (or referenced by) the embedded auto-copy file, and then automatically blind copies the User <b>4</b> email address when sending out the email message to User <b>5</b> (since the process is machine-independent). If User <b>5</b> forwards a copy of the email thread to the email address of a User <b>6</b> (e.g., located in a different country), the client application of User <b>5</b> can detect the embedded auto-copy file and automatically blind copy the User <b>4</b> email address when sending out the email message to User <b>6</b>. The monitoring and automatic forwarding of related email messages to the interested user can continue without involvement of the client email application of User <b>1</b> and without having to track message identifiers. This process can be similarly applied in a server-based embodiment. In a server-based embodiment, the monitoring and automatic forwarding can be implemented by any compatible server computer system that is involved in routing email messages worldwide, as long as the server computer system has the functionality to detect the embedded auto-copy file and automatically forward a copy of the email thread to the email address of the interested user. The flow continues at block <b>518</b>.</p>
<p id="p-0044" num="0043">Subsequent email messages transmitted by the email application are monitored to determine whether the email messages include the encrypted auto-copy file (<b>518</b>). After sending out the email message with the encrypted auto-copy file, the email application continues to monitor whether subsequent email message that are scheduled to be transmitted include the encrypted auto-copy file, or other encrypted auto-copy files associated with different interested users. The flow continues at block <b>520</b>.</p>
<p id="p-0045" num="0044">It is determined whether an embedded auto-copy file has been detected in a subsequent email message to be transmitted by the email application (<b>520</b>). If an embedded auto-copy file is not detected, the flow loops back to block <b>518</b> to continue monitoring subsequent email messages. Otherwise, if an embedded auto-copy file is detected, the flow continues at block <b>522</b>.</p>
<p id="p-0046" num="0045">An email address of an interested user stored within the encrypted auto-copy file is identified and a copy of the subsequent email message that includes the encrypted auto-copy file is provided to the email address of the interested user (<b>522</b>), in addition to the other intended recipients. The flow then loops back and continues at block <b>518</b>.</p>
<p id="p-0047" num="0046">In some embodiments, the encrypted auto-copy file can be an executable file that is executed when the email message is sent out (e.g., using a &#x201c;forward&#x201d; or &#x201c;reply&#x201d; email option). In other words, the trigger for execution of the encrypted auto-copy file is the user selecting one of the forward or reply options. For example, in response to detecting that the email message is going to be sent out, the encrypted auto-copy file is detected and executed. The encrypted auto-copy file can work in conjunction with the email application to provide a copy of the email message to the interested user. For example, when the encrypted auto-copy file is executed, it can detect and communicate with the email application, and provide the email address of the interested user to the email application. The email application can then blind copy the email address of the interested user to provide a copy of the email message (or otherwise forward the email message) to the interested user. In some implementations, the auto-copy file can be a Dynamic HTML (DHTML) or an Ajax (Asynchronous JavaScript and XML) file embedded in an HTML email message. Furthermore, as described above, in some embodiments, the encrypted auto-copy file can be text file that includes the email address of the interested user (or in some cases two or more email addresses of interested users). In one example, the text file may be embedded in an email message that an email application is scheduled to send out. In response to detecting the embedded text file (e.g., during email scan), the email application can read the email address of the interested user and automatically provide a copy of the email message to the email address of the interested user.</p>
<p id="p-0048" num="0047">It should be understood that the depicted diagrams (<figref idref="DRAWINGS">FIGS. 1-5</figref>) are examples meant to aid in understanding embodiments and should not be used to limit embodiments or limit scope of the claims. Embodiments may perform additional operations, fewer operations, operations in a different order, operations in parallel, and some operations differently. In other embodiments, when the originator of the email thread receives an authorization request from an interested user to provide a copy of subsequent email messages that are associated with the email thread (e.g., as described with reference to <figref idref="DRAWINGS">FIG. 3</figref>), the originator of the email tread may have other options besides accepting or rejecting the authorization request. In one example, the originator of the email thread may conditionally accept to forward related email messages to the interested user based on the message identifiers and one or more additional conditions. For example, besides including one or more message identifiers that are associated with the email thread, subsequent email message may be scanned to determine whether the email messages include certain keywords or phrases to determine whether to forward the messages to the interested user. In one example, the keywords or phrases may be provided to the originator of the email thread in the original authorization request. In another example, after receiving the authorization request, the originator of the email thread may send a response message indicating that the authorization request will be conditionally accepted as long as the interested user specifies certain keywords or phrases. In other embodiments, the originator of the email thread may only accept the authorization request if at least a majority of the email addressees associated with the email thread accept the request. For example, in response to receiving the authorization request, the originator of the email thread can forward the request to all the email addressees associated with the email thread to accept or reject the request. In other implementations, the originator of the email thread may only accept the authorization request if all of the email addressees associated with the email thread accept the request.</p>
<p id="p-0049" num="0048">As will be appreciated by one skilled in the art, aspects of the present inventive subject matter may be embodied as a system, method, or computer program product. Accordingly, aspects of the present inventive subject matter may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, aspects of the present inventive subject matter may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.</p>
<p id="p-0050" num="0049">Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0051" num="0050">A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0052" num="0051">Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.</p>
<p id="p-0053" num="0052">Computer program code for carrying out operations for aspects of the present inventive subject matter may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).</p>
<p id="p-0054" num="0053">Aspects of the present inventive subject matter are described with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the inventive subject matter. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0055" num="0054">These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0056" num="0055">The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram of one embodiment of a computer system <b>600</b> including a mechanism for implementing email thread monitoring and automatic forwarding of related email messages to interested users, according to some embodiments. In some examples, the computer system may be a personal computer, a laptop, a mobile phone, a workstation, a server, or other machine that can communicate and exchange email messages in a client-server network. The computer system <b>600</b> includes a processor unit <b>602</b> (possibly including multiple processors, multiple cores, multiple nodes, and/or implementing multi-threading, etc.). The computer system <b>600</b> includes a memory unit <b>606</b>. The memory unit <b>606</b> may be system memory (e.g., one or more of cache, SRAM, DRAM, zero capacitor RAM, Twin Transistor RAM, eDRAM, EDO RAM, DDR RAM, EEPROM, NRAM, RRAM, SONOS, PRAM, etc.) or any one or more of the above already described possible realizations of machine-readable media. The computer system <b>600</b> also includes a bus <b>610</b> (e.g., PCI, ISA, PCI-Express, HyperTransport, InfiniBand, NuBus, AHB, AXI, etc.), and network interfaces <b>604</b> that include at least one wireless and/or wired network interface (e.g., a WLAN interface, a Bluetooth&#xae; interface, a WiMAX interface, a ZigBee&#xae; interface, a Wireless USB interface, USB interface, Ethernet interface, etc.). The memory unit <b>606</b> embodies functionality to implement embodiments described above. For example, the memory unit <b>606</b> may comprise an email application <b>608</b> (a client-based email application or a server-based email application) that implements the functionality described above with reference to <figref idref="DRAWINGS">FIGS. 1-5</figref>.</p>
<p id="p-0058" num="0057">Any one of these functionalities may be partially (or entirely) implemented in hardware and/or on the processor unit <b>602</b>. For example, the functionality may be implemented with an application specific integrated circuit, in logic implemented in the processor unit <b>602</b>, in a co-processor on a peripheral device or card, etc. Further, realizations may include fewer or additional components not illustrated in <figref idref="DRAWINGS">FIG. 6</figref> (e.g., video cards, audio cards, additional network interfaces, peripheral devices, etc.). The processor unit <b>602</b>, the memory unit <b>606</b>, and the network interfaces <b>604</b> are coupled to the bus <b>610</b>. Although illustrated as being coupled to the bus <b>610</b>, the memory unit <b>606</b> may be coupled to the processor unit <b>602</b>.</p>
<p id="p-0059" num="0058">While the embodiments are described with reference to various implementations and exploitations, it will be understood that these embodiments are illustrative and that the scope of the inventive subject matter is not limited to them. In general, techniques for implementing email thread monitoring and automatic forwarding of related email messages as described herein may be implemented with facilities consistent with any hardware system or hardware systems. Many variations, modifications, additions, and improvements are possible.</p>
<p id="p-0060" num="0059">Plural instances may be provided for components, operations, or structures described herein as a single instance. Finally, boundaries between various components, operations, and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the inventive subject matter. In general, structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements may fall within the scope of the inventive subject matter.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method comprising:
<claim-text>providing a first email message from an email application of a computer system to a plurality of email addresses;</claim-text>
<claim-text>detecting, at the email application, an indication that a first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message;</claim-text>
<claim-text>monitoring, at the email application, subsequent email messages received at the email application and transmitted by the email application to determine whether one or more of the subsequent email messages are associated with the first email message; and</claim-text>
<claim-text>in response to determining that a second email message from the subsequent email messages is associated with the first email message, automatically providing a copy of the second email message to the first email address of the plurality of email addresses.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the email application of the computer system comprises a client-based email application of a client computer system or a server-based email application of a server computer system.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said detecting, at the email application, the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message comprises:
<claim-text>receiving, at a client email application of a client computer system, an authorization request from the first email address of the plurality of email addresses;</claim-text>
<claim-text>determining, at the client email application, whether the authorization request is granted; and</claim-text>
<claim-text>in response to determining that the authorization request is granted, detecting, at the client email application, the indication that the first email address of the plurality of email addresses is to be provided the copy of subsequent email messages associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said detecting, at the email application, the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message comprises:
<claim-text>detecting, at a server email application of a server computer system, an indication of whether an authorization request from the first email address of the plurality of email addresses is granted at a client email application associated with an originator of the first email message; and</claim-text>
<claim-text>in response to detecting an indication that the authorization request is granted, detecting, at the server email application, the indication that the first email address of the plurality of email addresses is to be provided the copy of subsequent email messages associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>in response to detecting, at the email application, the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message, scanning the first email message to identify one or more message identifiers associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>associating the first email address and the one or more message identifiers associated with the first email message; and</claim-text>
<claim-text>storing the first email address and the one or more message identifiers associated with the first email message in an email thread monitoring data structure associated with the email application of the computer system to define a criteria for monitoring subsequent email messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said monitoring, at the email application, subsequent email messages received at the email application and transmitted by the email application to determine whether one or more of the subsequent email messages are associated with the first email message comprises:
<claim-text>scanning each subsequent email message to identify one or more message identifiers associated with the subsequent email message;</claim-text>
<claim-text>comparing each of the one or more message identifiers associated with the subsequent email message to the one or more message identifiers associated with the first email message to determine whether the subsequent email message includes at least one of the one or more message identifiers associated with the first email message; and</claim-text>
<claim-text>in response to determining that the subsequent email message includes at least one of the one or more message identifiers associated with the first email message, determining that the subsequent email message is associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said determining that the subsequent email message is associated with the first email message comprises:
<claim-text>associating the first email address and the one or more message identifiers of the subsequent email message; and</claim-text>
<claim-text>storing the first email address and the one or more message identifiers of the subsequent email message in an email thread monitoring data structure associated with the email application of the computer system to define a criteria for monitoring subsequent email messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said automatically providing the copy of the second email message to the first email address of the plurality of email addresses, in response to determining that the second email message from the subsequent email messages is associated with the first email message, comprises:
<claim-text>in response to determining that the second email message from the subsequent email messages includes at least one of the one or more message identifiers associated with the first email message, automatically providing the copy of the second email message to the first email address of the plurality of email addresses by forwarding the second email message to the first email address or by blind copying the first email address when sending the second email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said providing the first email message from the email application of the computer system to the plurality of email addresses comprises one of:
<claim-text>sending the first email message from a client email application of a client computer system to the plurality of email addresses; or</claim-text>
<claim-text>sending the first email message from a server email application of a server computer system to route the first email message to the plurality of email addresses.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>in response to detecting, at the email application, the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message, scanning the first email message to identify one or more message identifiers associated with the first email message; and</claim-text>
<claim-text>in response to determining that the second email message from the subsequent email messages includes at least one of the one or more message identifiers associated with the first email message,
<claim-text>embedding an encrypted auto-copy file within the second email message that causes email applications that transmit an email thread associated with the first and second email messages to automatically provide a copy of the email thread to the first email address of the plurality of email addresses;</claim-text>
<claim-text>if the second email message is one of the subsequent email messages that is to be transmitted by the email application, transmitting the second email message with the embedded encrypted auto-copy file to one or more intended email addresses, and providing a copy of the second email message to the first email address of the plurality of email addresses; and</claim-text>
<claim-text>if the second email message is one of the subsequent email messages that is received by the email application, and it is determined that the email thread associated with the first and second email messages is to be transmitted by the email application to one or more intended email addresses, transmitting the email thread with the embedded encrypted auto-copy file to the one or more intended email addresses, and providing a copy of the email thread to the first email address of the plurality of email addresses.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer-implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:
<claim-text>monitoring email messages subsequent to the second email message that are transmitted by the email application to determine whether the subsequent email messages include the encrypted auto-copy file; and</claim-text>
<claim-text>if a third email message from the subsequent email messages to be transmitted by the email application includes the encrypted auto-copy file, transmitting the third email message with the embedded encrypted auto-copy file to one or more intended email addresses, and providing a copy of the third email message to the first email address of the plurality of email addresses.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computer system comprising:
<claim-text>a processor;</claim-text>
<claim-text>a network interface coupled with the processor;</claim-text>
<claim-text>a email management unit coupled with the processor and the network interface, the email management unit operable to provide a first email message to a plurality of email addresses; and</claim-text>
<claim-text>an email thread monitoring unit coupled with the processor and the network interface, the email thread monitoring unit operable to,
<claim-text>detect an indication that a first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message;</claim-text>
<claim-text>monitor subsequent email messages received at the email management unit and transmitted by the email management unit to determine whether one or more of the subsequent email messages are associated with the first email message; and</claim-text>
<claim-text>in response to the email thread monitoring unit determining that a second email message from the subsequent email messages is associated with the first email message, automatically provide a copy of the second email message to the first email address of the plurality of email addresses.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the computer system is a client computer system, and the email thread monitoring unit operable to detect the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message comprises the email thread monitoring unit operable to:
<claim-text>receive an authorization request from the first email address of the plurality of email addresses;</claim-text>
<claim-text>determine whether the authorization request is granted; and</claim-text>
<claim-text>in response to the email thread monitoring unit determining that the authorization request is granted, detect the indication that the first email address of the plurality of email addresses is to be provided the copy of subsequent email messages associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the computer system is a server computer system, and the email thread monitoring unit operable to detect the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message comprises the email thread monitoring unit operable to:
<claim-text>detect an indication of whether an authorization request from the first email address of the plurality of email addresses is granted at a client email application associated with an originator of the first email message; and</claim-text>
<claim-text>in response to the email thread monitoring unit detecting an indication that the authorization request is granted, detect the indication that the first email address of the plurality of email addresses is to be provided the copy of subsequent email messages associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the email thread monitoring unit is further operable to:
<claim-text>in response to the email thread monitoring unit detecting the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message, scan the first email message to identify one or more message identifiers associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the email thread monitoring unit operable to monitor subsequent email messages received at the email management unit and transmitted by the email management unit to determine whether one or more of the subsequent email messages are associated with the first email message comprises the email thread monitoring unit operable to:
<claim-text>scan each subsequent email message to identify one or more message identifiers associated with the subsequent email message;</claim-text>
<claim-text>compare each of the one or more message identifiers associated with the subsequent email message to the one or more message identifiers associated with the first email message to determine whether the subsequent email message includes at least one of the one or more message identifiers associated with the first email message; and</claim-text>
<claim-text>in response to the email thread monitoring unit determining that the subsequent email message includes at least one of the one or more message identifiers associated with the first email message, determine that the subsequent email message is associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A computer program product for implementing email message monitoring and automatic forwarding of related email messages, the computer program product comprising:
<claim-text>a non-transitory computer readable storage medium having computer readable program code embodied therewith, the computer readable program code configured to,</claim-text>
<claim-text>provide a first email message from an email application of a computer system to a plurality of email addresses;</claim-text>
<claim-text>detect an indication that a first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message;</claim-text>
<claim-text>monitor subsequent email messages received at the email application and transmitted by the email application to determine whether one or more of the subsequent email messages are associated with the first email message; and</claim-text>
<claim-text>in response to determining that a second email message from the subsequent email messages is associated with the first email message, automatically provide a copy of the second email message to the first email address of the plurality of email addresses.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer program product of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the computer readable program code is further configured to:
<claim-text>in response to detecting the indication that the first email address of the plurality of email addresses is to be provided a copy of subsequent email messages associated with the first email message, scan the first email message to identify one or more message identifiers associated with the first email message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer program product of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the computer readable program code configured to monitor subsequent email messages received at the email application and transmitted by the email application to determine whether one or more of the subsequent email messages are associated with the first email message comprises the computer readable program code configured to:
<claim-text>scan each subsequent email message to identify one or more message identifiers associated with the subsequent email message;</claim-text>
<claim-text>compare each of the one or more message identifiers associated with the subsequent email message to the one or more message identifiers associated with the first email message to determine whether the subsequent email message includes at least one of the one or more message identifiers associated with the first email message; and</claim-text>
<claim-text>in response to determining that the subsequent email message includes at least one of the one or more message identifiers associated with the first email message, determine that the subsequent email message is associated with the first email message. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
