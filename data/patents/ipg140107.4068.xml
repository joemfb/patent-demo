<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625137-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625137</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13116153</doc-number>
<date>20110526</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-230411</doc-number>
<date>20101013</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>404</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
<further-classification>709201</further-classification>
</classification-national>
<invention-title id="d2e71">Job execution management apparatus, job execution apparatus, job execution system and computer-readable medium</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2006/0215185</doc-number>
<kind>A1</kind>
<name>Van Den Tillaart</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  11</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>JP</country>
<doc-number>2005-352699</doc-number>
<kind>A</kind>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>JP</country>
<doc-number>2006-252131</doc-number>
<kind>A</kind>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120092704</doc-number>
<kind>A1</kind>
<date>20120419</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kumazawa</last-name>
<first-name>Yukio</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Kumazawa</last-name>
<first-name>Yukio</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Sughrue Mion, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Fuji Xerox Co., Ltd.</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Haskins</last-name>
<first-name>Twyler</first-name>
<department>2672</department>
</primary-examiner>
<assistant-examiner>
<last-name>RodriguezGonzalez</last-name>
<first-name>Lennin</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A job execution apparatus includes a partial job allocation processing section and a partial job execution instruction section. The partial job allocation processing section allocates each partial job formed by segmenting a received job to a data processing apparatus capable of executing the partial job. The partial job execution instruction section instructs the data processing apparatus to execute the partial job. The partial job allocation processing section reallocates a partial job, which execution was not completed by the data processing apparatus to which the partial job is allocated until a preset end time, to a data processing apparatus capable of executing the unfinished partial job, other than the data processing apparatus to which the unfinished partial job is allocated. The partial job execution instruction section transmits an instruction for executing the unfinished partial job to the reallocated data processing apparatus.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="179.58mm" wi="240.28mm" file="US08625137-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="181.44mm" wi="89.92mm" orientation="landscape" file="US08625137-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="205.66mm" wi="123.19mm" orientation="landscape" file="US08625137-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="98.72mm" wi="158.67mm" file="US08625137-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="265.60mm" wi="178.39mm" orientation="landscape" file="US08625137-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="111.08mm" wi="159.68mm" file="US08625137-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="96.35mm" wi="182.71mm" file="US08625137-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="257.30mm" wi="134.70mm" file="US08625137-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="191.35mm" wi="180.51mm" file="US08625137-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="260.86mm" wi="185.17mm" file="US08625137-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="253.32mm" wi="117.18mm" orientation="landscape" file="US08625137-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="201.42mm" wi="92.88mm" orientation="landscape" file="US08625137-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="270.00mm" wi="184.57mm" file="US08625137-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application is based on and claims priority under 35 USC 119 from Japanese Patent Application No. 2010-230411 filed on Oct. 13, 2010.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<heading id="h-0003" level="1">Technical Field</heading>
<p id="p-0003" num="0002">The present invention relates to a job execution management apparatus, a job execution apparatus, a job execution system and a computer-readable medium.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">According to an aspect of the invention, a job execution management apparatus includes a receiving unit, a storage unit, an allocation unit, a setting unit, an execution instruction unit and a reallocation unit. The receiving unit receives an allocation request for allocating a plurality of partial jobs formed by segmenting a job to a plurality of data processing apparatuses. The storage unit stores apparatus function information in which functions executable by the respective data processing apparatuses are defined. The allocation unit allocates the respective plurality of partial jobs to the data processing apparatuses which are capable of executing the plurality of partial jobs by referring to the apparatus function information according to the allocation request. The setting unit sets so that, when a partial job is allocated to one of the data processing apparatuses, information for specifying the data processing apparatus allocated to the partial job, start time information for specifying the time when the execution of the partial job is started and end time information for specifying the end time of the execution of the partial job are made correspondence with the partial job. The execution instruction unit instructs the execution of a partial job to the corresponding data processing apparatus according to the setting of the setting unit. The reallocation unit, after the instruction from the execution instruction unit, (i) specifies partial jobs among the partial jobs which are instructed to be executed, the execution of the specified partial jobs being not finished until the times specified by the end time information corresponding to the partial jobs, and (ii) reallocates at least one of the data processing apparatuses which is capable of executing the unfinished partial jobs, excluding the data processing apparatuses to which the unfinished partial jobs are allocated by the allocation unit, to each of the specified unfinished partial jobs by referring to the apparatus function information. The execution instruction unit instructs the data processing apparatuses reallocated by the reallocation unit to execute the unfinished partial jobs.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004">Exemplary embodiments of the invention will be described in detail based on the following figures, wherein:</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a view illustrating the relationship between a &#x201c;job&#x201d; and a &#x201c;partial job&#x201d; according to an embodiment of the present invention;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is an overall configuration drawing showing an embodiment of a job execution system according to the present invention;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a view showing a hardware configuration of a computer constituting the job execution apparatus according to Embodiment 1;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> is a block configuration diagram showing the job execution apparatus according to Embodiment 1;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a view showing an example of the data configuration of apparatus function information stored in an apparatus function information storage section according to Embodiment 1;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> is a view showing an example of the data structure of allocation information stored in an allocation information storage section according to Embodiment 1;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating the processing of the job execution apparatus according to Embodiment 1, from the allocation of partial jobs to data processing apparatuses to the issue of execution instructions;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating the processing of the job execution apparatus according to Embodiment 1, for monitoring the execution of the partial jobs;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating the processing of the job execution apparatus according to Embodiment 1, for reallocating unfinished partial jobs to the data processing apparatuses, for issuing execution instructions and for monitoring the execution of the partial jobs;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 10</figref> is a view illustrating reallocation processing performed in Embodiment 1;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 11</figref> is a view showing an example of the data configuration of allocation information stored in the allocation information storage section after the reallocation processing was performed in Embodiment 1; and</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 12</figref> is a block configuration diagram showing a job execution system according to Embodiment 2.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0018" num="0017">Preferable embodiments according to the present invention will be described below on the basis of the accompanying drawings.</p>
<p id="p-0019" num="0018">In the following descriptions, the term &#x201c;job&#x201d; is defined as an executable unit of processing that uses a function provided by some sort of information processing performed using software and hardware, for example, processing executed using a copying function, a printing function, a facsimile transmission function, etc. in a multifunctional copier. This kind of function is sometimes referred to as &#x201c;service&#x201d; or &#x201c;task.&#x201d;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1</figref> is a view illustrating the relationship between a &#x201c;job&#x201d; and a &#x201c;partial job.&#x201d; The job shown in <figref idref="DRAWINGS">FIG. 1</figref> is a job for printing a five-page document in particular. Each page on which a character portion and a picture portion are mixedly disposed is generally represented in a page-description language (PDL). <figref idref="DRAWINGS">FIG. 1</figref> shows that the character portions on pages 1, 2, 4 and 5 of the five-page document are written in Japanese and that the character portion on page 3 is written in English. In the case that the term &#x201c;job&#x201d; is simply used, the job is defined as a series of processing in which five-page document data represented in the PDL is converted into image data through the interpretation of the PDL representing each page and the image data is visualized and fixed on recording paper using a printer, such as an ink-jet printer. Partial jobs are formed by segmenting a job into a plurality of portions. Processing in which the term &#x201c;partial job&#x201d; is used is defined as processing relating to a portion of the &#x201c;job,&#x201d; that is, processing in which any one of the five pages is printed or processing in which the character portion and the picture portion constituting a given page are processed separately, for example, processing in which the picture portion is converted so that halftone dots suited to represent halftone for an output printer are obtained or processing in which page 3 containing a character portion written in English is translated into Japanese and printed.</p>
<p id="h-0007" num="0000">Embodiment 1</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 2</figref> is an overall configuration drawing showing an embodiment of a job execution system according to the present invention. <figref idref="DRAWINGS">FIG. 2</figref> shows a configuration in which a personal computer (PC) <b>2</b>, a job execution apparatus <b>10</b> and a cloud <b>4</b> are connected to a network <b>6</b>. The job execution apparatus <b>10</b> according to this embodiment executes a job or part thereof in response to a request from the PC <b>2</b>. The cloud <b>4</b> is an abbreviation of cloud computing and has a plurality of data processing apparatuses <b>40</b>. Each of the data processing apparatuses <b>40</b> has one or more service processing functions. Jobs handled in this embodiment are executed by a combination of one or more service processing functions, such as character/picture separation, OCR and translation. The data processing apparatus <b>40</b> executes one or more service processing operations according to instructions from the job execution apparatus <b>10</b> having received the job. Although one PC <b>2</b> and one job execution apparatus <b>10</b> are shown in <figref idref="DRAWINGS">FIG. 2</figref>, the number of each of the apparatuses is not limited to one.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 3</figref> is a view showing a hardware configuration of a computer constituting the job execution apparatus <b>10</b> according to this embodiment. The computer according to this embodiment can be accomplished using a conventional general-purpose hardware configuration. More specifically, as shown in <figref idref="DRAWINGS">FIG. 3</figref>, the computer has a CPU <b>11</b>, a ROM <b>12</b>, a RAM <b>13</b>, an HDD controller <b>15</b> to which a hard disk drive (HDD) <b>14</b> for storing, for example, software for accomplishing the service processing functions is connected, an input/output controller <b>19</b> to which a mouse <b>16</b> and a keyboard <b>17</b> provided as input means and a display <b>18</b> provided as a display device are connected, and a network controller <b>20</b> provided as communication means, these being connected to an internal bus <b>9</b>. In addition to these, a scanner, a printer, etc. may also be connected to form the configuration. Alternatively, the job execution apparatus <b>10</b> may be formed of an image forming apparatus having a plurality of functions, such as a scanner function and a printing function. The computer having the above-mentioned configuration is mounted on the image forming apparatus. Furthermore, an operation panel, a scanner, a printer, etc. are also mounted.</p>
<p id="p-0023" num="0022">The data processing apparatus <b>40</b> may be accomplished using a conventional general-purpose computer hardware configuration. In other words, the data processing apparatus <b>40</b> may be formed of the computer having the hardware configuration shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 4</figref> is a block configuration diagram showing the job execution apparatus <b>10</b> according to this embodiment. The job execution apparatus <b>10</b> according to this embodiment has a communication processing section <b>21</b>, a job receiving section <b>22</b>, a job segmentation processing section <b>23</b>, a partial job allocation processing section <b>24</b>, a job execution section <b>25</b>, a partial job execution instruction section <b>26</b>, a time monitoring section <b>27</b>, an execution result receiving section <b>28</b>, a job integration processing section <b>29</b>, an execution control section <b>30</b>, an apparatus function information storage section <b>31</b>, and an allocation information storage section <b>32</b>. The communication processing section <b>21</b> performs communication with the PC <b>2</b> and the cloud <b>4</b> and distributes received data to the job receiving section <b>22</b> or the execution result receiving section <b>28</b> depending on the contents of the data. The job receiving section <b>22</b> receives a job execution request transmitted from the PC <b>2</b>. In the case that the job execution apparatus <b>10</b> is formed of an image processing apparatus, jobs may also be received through the input from the operation panel. The job segmentation processing section <b>23</b> judges whether a job requested for execution should be segmented. In the case that the job segmentation processing section <b>23</b> judges that the job should be segmented, the section executes segmentation processing by segmenting the job into a plurality of partial jobs. The judgment as to whether the job should be segmented is made by examining whether a function that cannot be executed by the job execution apparatus <b>10</b> is required when the job is executed, for example, by examining whether a translation function, such as, a translation function between Japanese and English, for translating text data obtained by analyzing the PDL into another language is required. When a page requiring a function that cannot be executed by the job execution apparatus <b>10</b> is detected by the examination described above, the page is extracted and generated as a partial job. In this way, the job segmentation processing section <b>23</b> segments a job into a plurality of partial jobs. However, in the case that the job segmentation processing section <b>23</b> judges that it is not necessary to segment the job into partial jobs, the section does not perform the segmentation processing. The partial job allocation processing section <b>24</b> performs allocation processing for allocating the plurality of the generated partial jobs to the data processing apparatuses <b>40</b> capable of executing the partial jobs by referring to apparatus function information registered in the apparatus function information storage section <b>31</b>. A partial job that can be executed by the job execution apparatus <b>10</b> may also be allocated to the job execution apparatus <b>10</b> as a matter of course. Furthermore, the partial job allocation processing section <b>24</b> executes reallocation processing for allocating a partial job not completed by the time specified according to end time information made correspondence with the partial job, to at least one of the data processing apparatuses <b>40</b> capable of executing the partial job. Furthermore, the partial job allocation processing section <b>24</b> sets, for example, information for specifying the data processing apparatus <b>40</b> to which each partial job is allocated, to the allocation information storage section <b>32</b>. The job execution section <b>25</b> executes the received job or one or more partial jobs contained in the job. The partial job execution instruction section <b>26</b> transmits an execution instruction request to the data processing apparatus <b>40</b> to which the partial job is allocated, thereby instructing the data processing apparatus <b>40</b> to execute the partial job. The time monitoring section <b>27</b> monitors the execution status of the partial job of each data processing apparatus <b>40</b> according to the reception state of a message transmitted from each data processing apparatus <b>40</b> and the content of the message on the basis of allocation information being set in the allocation information storage section <b>32</b>. Moreover, the time monitoring section <b>27</b> renews part of the information stored in the allocation information storage section <b>32</b>. When the execution of the partial job by the data processing apparatus <b>40</b> is completed, the execution result receiving section <b>28</b> receives status information indicating the completion of the execution of the partial job and the result of the execution. The job integration processing section <b>29</b> generates the execution result of the job by integrating the execution results of the partial jobs received from the data processing apparatuses <b>40</b>, or in the case that there is a partial job executed by the job execution apparatus <b>10</b> itself, the job integration processing section <b>29</b> generates the execution result of the job by also integrating the execution result of the partial job, and then return the execution result to the execution request source of the job. The execution control section <b>30</b> performs the execution control of the job in cooperation with the respective components <b>21</b> to <b>29</b>. The apparatus function information storage section <b>31</b> and the allocation information storage section <b>32</b> will be described later.</p>
<p id="p-0025" num="0024">The components <b>21</b> to <b>30</b> of the job execution apparatus <b>10</b> are accomplished by cooperation between the computer constituting the job execution apparatus <b>10</b> and programs operating on the CPU <b>11</b> mounted on the computer. Furthermore, the apparatus function information storage section <b>31</b> and the allocation information storage section <b>32</b> may be accomplished by the HDD <b>14</b>.</p>
<p id="p-0026" num="0025">Furthermore, programs to be used in this embodiment can be provided through the communication means as a matter of course and can also be provided as being stored in computer-readable recording media, such as CD-ROMs and DVD-ROMS. The programs provided by the communication means or recording media are installed in the computer, and the installed programs are executed sequentially by the CPU of the computer to execute various kinds of processing.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 5</figref> is a view showing an example of the data configuration of the apparatus function information stored in the apparatus function information storage section <b>31</b> according to this embodiment. The apparatus function information is formed so that &#x201c;location,&#x201d; &#x201c;executable functions&#x201d; and &#x201c;specialty function&#x201d; are made correspondence with &#x201c;apparatus ID&#x201d; being set as identification information for identifying each data processing apparatus <b>40</b>. &#x201c;Location&#x201d; is information for specifying the location in which the data processing apparatus <b>40</b> exists, and in this embodiment, URL (uniform resource locator) is set. Information for specifying functions that can be executed by the data processing apparatus is set in &#x201c;executable functions.&#x201d; Although A, B, C, etc. are described in <figref idref="DRAWINGS">FIG. 5</figref>, the executable functions are, for example, Japanese-English translation processing and structural analysis processing for analyzing headers, ruled line portions, etc. contained in document/image data. In &#x201c;specialty function,&#x201d; a function in which the data processing apparatus specializes is selected from among &#x201c;executable functions&#x201d; and set. Examples of the specialty functions include a function that can be processed at high speed by incorporating a hardware accelerator and a special function that cannot be executed by the other data processing apparatuses owing to license restrictions, for example. In the case that a plurality of data processing apparatuses <b>40</b> to which the execution of one partial job is requested are detected, the indication of this kind of specialty function serves as a guide when selecting which data processing apparatus <b>40</b> should be requested preferentially for the execution of the partial job.</p>
<p id="p-0028" num="0027">The job execution apparatus <b>10</b> itself can be used as an apparatus for executing a partial job as in the case of the data processing apparatus <b>40</b>. Hence, it may also be possible that the job execution apparatus <b>10</b> manages information regarding functions mounted thereon and its specialty function using the apparatus function information storage section <b>31</b> as in the case of the data processing apparatus <b>40</b>.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 6</figref> is a view showing an example of the data structure of allocation information stored in the allocation information storage section <b>32</b> according to this embodiment. In the allocation information, &#x201c;execution instruction destination,&#x201d; &#x201c;requested function,&#x201d; &#x201c;start time,&#x201d; &#x201c;end time&#x201d; and &#x201c;status&#x201d; are made correspondence with &#x201c;partial job ID&#x201d; that is set as identification information for identifying each partial job formed by job segmentation. In &#x201c;execution instruction destination,&#x201d; information for specifying the data processing apparatus <b>40</b> to which the partial job is allocated is set as information for specifying the transmission destination of the partial job. In this embodiment, the URL that is set in the location corresponding to the data processing apparatus <b>40</b> is set by referring to the information stored in the apparatus function information storage section <b>31</b>. However, information, such as apparatus ID, may also be used if the information can specify the data processing apparatus <b>40</b>. In &#x201c;requested function,&#x201d; information for specifying a function that is used to execute the partial job using the data processing apparatus <b>40</b> is set. In &#x201c;start time,&#x201d; the time when the execution of the partial job is started is set. In this embodiment, &#x201c;start time&#x201d; to be set is not the time when the data processing apparatus <b>40</b> actually starts the execution of the partial job but the time when the partial job execution instruction section <b>26</b> issues an execution instruction to the data processing apparatus <b>40</b>. Although the time of day is shown in <figref idref="DRAWINGS">FIG. 6</figref> for convenience, information containing date, month and year may be added thereto. Furthermore, for example, in the case of a partial job that is executed using the execution result of the partial job executed immediately before, information indicating the elapsed time after the reception of the execution result of the partial job executed immediately before, instead of a specific time, may be set in &#x201c;start time.&#x201d; The &#x201c;end time&#x201d; is the maximum waiting time required until the execution of the partial job is completed. In this embodiment, the waiting time until the execution result receiving section <b>28</b> receives the execution result of the partial job is set. Although the time of day is shown in <figref idref="DRAWINGS">FIG. 6</figref> for convenience, information containing date, month and year may be added thereto. Furthermore, for example, the elapsed time from &#x201c;start time,&#x201d; instead of a specific time, may also be set in &#x201c;end time.&#x201d; &#x201c;End time&#x201d; is set to avoid a situation in which the execution of the job corresponding to the total of the partial jobs cannot be completed eventually because the execution result receiving section <b>28</b> keeps waiting for the result of the execution of the partial job requested to the data processing apparatus <b>40</b>. In &#x201c;status,&#x201d; information indicating the status of the partial job is set. In this embodiment, for example, any one of the following statuses is set: &#x201c;before start&#x201d; indicating a status obtained before the partial job execution instruction section <b>26</b> issues an execution instruction to the data processing apparatus <b>40</b>, &#x201c;under processing&#x201d; indicating that the partial job is being executed since the partial job execution instruction section <b>26</b> has issued an execution instruction to the data processing apparatus <b>40</b>, &#x201c;normal end&#x201d; indicating that it is confirmed that the execution of the partial job has been completed normally, and &#x201c;unfinished&#x201d; indicating that a normal end notice was not transmitted from the data processing apparatus <b>40</b> even when the end time was reached.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating the processing of the job execution apparatus <b>10</b> according to this embodiment, from the allocation of partial jobs to the data processing apparatuses <b>40</b> to the issue of execution instructions. <figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating the processing of the job execution apparatus <b>10</b> according to this embodiment, for monitoring the execution of the partial jobs. <figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating the processing of the job execution apparatus <b>10</b> according to this embodiment, for reallocating unfinished partial jobs to the data processing apparatuses <b>40</b>, for issuing execution instructions and for monitoring the execution of the partial jobs. The operations according to this embodiment will be described below referring to these flowcharts.</p>
<p id="p-0031" num="0030">Referring to <figref idref="DRAWINGS">FIG. 7</figref>, when the job receiving section <b>22</b> of the job execution apparatus <b>10</b> receives a job requested for execution from the PC <b>2</b>, for example (at step <b>101</b>), the job segmentation processing section <b>23</b> segments the job into N (N is a natural number of 2 or more) partial jobs (at step <b>102</b>). When the segmentation is judged to be unnecessary, only the job execution section <b>25</b> of the job execution apparatus <b>10</b> executes the received job.</p>
<p id="p-0032" num="0031">When a plurality of partial jobs are formed by the segmentation of the job, the partial job allocation processing section <b>24</b> allocates, to each partial job, a data processing apparatus <b>40</b> to which the execution of the partial job is requested, by recognizing the function required for the execution of the partial job through analysis and by verifying the required function against the executable functions and the specialty function contained in the apparatus function information stored in the apparatus function information storage section <b>31</b> (at step <b>103</b>). The partial job allocation processing section <b>24</b> registers the URL of the allocated data processing apparatus <b>40</b> in &#x201c;location&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> and registers the function to be executed by the data processing apparatus <b>40</b> in &#x201c;requested function&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> for each partial job. At this time, the start time and the end time are set at NULL, and &#x201c;before start&#x201d; is set as the initial value of the status. In the case that the job execution apparatus <b>10</b> has the function required for the execution of a partial job among the partial jobs generated by the segmentation of the job, the partial job is basically executed by the job execution apparatus <b>10</b>, and the other partial jobs are executed instead by the data processing apparatuses <b>40</b>. However, even if the job execution apparatus <b>10</b> has the function required for the execution of the partial job, in the case that it is judged that the execution of the partial job can be done more efficiently when the execution is requested to a data processing apparatus <b>40</b> than when the execution is done by the job execution apparatus <b>10</b>, in view of load reduction, processing time reduction, etc. of the apparatus, the execution of the partial job may be requested to the data processing apparatus <b>40</b>.</p>
<p id="p-0033" num="0032">When the data processing apparatuses Cj requested to execute the partial jobs are allocated to all the partial jobs Sj (1&#x2266;j&#x2266;N), the partial job execution instruction section <b>26</b> transmits an execution request containing, for example, information for specifying partial job data and the job execution apparatus <b>10</b> serving as a request source, thereby sequentially instructing the data processing apparatuses Cj to execute the partial jobs Sj (at steps <b>104</b>, <b>105</b> and <b>106</b>). When it is detected that the partial job execution instruction section <b>26</b> has transmitted the execution request, the time monitoring section <b>27</b> records the time when the execution was instructed as &#x201c;start time&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> (at step <b>107</b>). Furthermore, the time monitoring section <b>27</b> sets the limit time obtained by adding a preset allowable waiting time to the start time obtained from the content set in &#x201c;start time&#x201d; as &#x201c;end time&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> (at step <b>108</b>). A value preset in correspondence with the function to be used for the execution of the partial job may be used as the allowable waiting time. Alternatively, the allowable waiting time may be calculated in consideration of the function to be used for the execution and the performance of the data processing apparatus <b>40</b> serving as an execution request destination. Moreover, a delay time calculated by periodically monitoring the transmission speed of the network may be added. Alternatively, a uniform allowable waiting time P<b>1</b> may be set regardless of the type of the partial job. Furthermore, when the execution of the partial job Sj starts, the time monitoring section <b>27</b> renews the &#x201c;status&#x201d; of the partial job Sj to &#x201c;under processing&#x201d; (at step <b>109</b>).</p>
<p id="p-0034" num="0033">The execution instruction processing for this series of partial jobs is repeated sequentially for the partial jobs ranging from the partial job S<b>1</b> to the partial job SN (at step <b>110</b>).</p>
<p id="p-0035" num="0034">After or when the execution instructions for all the partial jobs are issued as described above, the time monitoring section <b>27</b> starts the monitoring of execution of the partial jobs. The monitoring processing will be described below referring to the flowchart shown in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0036" num="0035">The time monitoring section <b>27</b> waits for a message from any one of the data processing apparatuses <b>40</b> via the communication processing section <b>21</b> and the execution result receiving section <b>28</b>. When a message is transmitted from any one of the data processing apparatuses <b>40</b>, the time monitoring section <b>27</b> receives the message (at step <b>111</b>). In the case that the received message is &#x201c;normal end&#x201d; indicating the completion of the execution of the partial job (Y at step <b>112</b>), the time monitoring section <b>27</b> judges that the partial job executed by the data processing apparatus <b>40</b> has been completed normally and renews &#x201c;status&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> corresponding to the partial job to &#x201c;normal end&#x201d; (at step <b>113</b>). Then, the time monitoring section <b>27</b> stops monitoring by excluding the partial job from the monitoring target of the execution status (at step <b>114</b>).</p>
<p id="p-0037" num="0036">On the other hand, in the case that the received message is not &#x201c;normal end&#x201d; (N at step <b>112</b>), the time monitoring section <b>27</b> judges whether the current time has passed the end time that is set for the partial job being executed by the data processing apparatus <b>40</b> serving as the message transmission source. In the case that the current time has not passed the end time (N at step <b>115</b>), the processing returns to step <b>111</b>, and the time monitoring section <b>27</b> waits for the input of the next message. In addition to the message indicating &#x201c;normal end&#x201d; described above, a hardware failure notice, a notice indicating that the partial job is not executable owing to the inoperability of the designated function or other reasons, etc. are regarded as the types of messages to be transmitted from the data processing apparatuses <b>40</b>. Even in the case that no message is transmitted, the time monitoring section <b>27</b> may periodically monitor the current time and judge whether the current time has passed the end time.</p>
<p id="p-0038" num="0037">In the case that the current time has passed the end time (Y at step <b>115</b>), the partial job to which the end time was set is specified as an unfinished partial job, the time monitoring section <b>27</b> renews the &#x201c;status&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> corresponding to the partial job to &#x201c;unfinished&#x201d; (at step <b>116</b>). Then, the time monitoring section <b>27</b> stops monitoring by excluding the partial job from the monitoring target of the execution status (at step <b>117</b>).</p>
<p id="p-0039" num="0038">Next, in the case that the monitoring of all the partial jobs has not been completed (N at step <b>118</b>), the processing returns to step <b>111</b>, and the time monitoring section <b>27</b> continues the monitoring of the remaining partial jobs. In the case that the monitoring of all the partial jobs has been completed (Y at step <b>118</b>), the time monitoring section <b>27</b> stops its monitoring operation.</p>
<p id="p-0040" num="0039">By virtue of the above-mentioned processing, &#x201c;status&#x201d; of each partial job in the allocation information is renewed from &#x201c;under processing&#x201d; to &#x201c;normal end&#x201d; or &#x201c;unfinished.&#x201d;</p>
<p id="p-0041" num="0040">An operation to be executed in the case that a partial job, &#x201c;status&#x201d; of which is set to &#x201c;unfinished&#x201d; by the above-mentioned processing, exists will be described below referring to the flowchart shown in <figref idref="DRAWINGS">FIG. 9</figref>. Since the processing shown in <figref idref="DRAWINGS">FIG. 9</figref> is a combination of the processing steps described referring to <figref idref="DRAWINGS">FIGS. 7 and 8</figref>, processing steps similar to those shown in <figref idref="DRAWINGS">FIGS. 7 and 8</figref> are designated by the same reference codes, and their descriptions are omitted as necessary.</p>
<p id="p-0042" num="0041">After the monitoring processing described referring to <figref idref="DRAWINGS">FIG. 8</figref> has been completed, in the case that even one partial job, &#x201c;status&#x201d; of which is set to &#x201c;unfinished,&#x201d; exists in the allocation information as the result of the monitoring processing by referring to the allocation information stored in the allocation information storage section <b>32</b>, the execution of the unfinished partial job is required to be performed again and completed normally so that the execution of the job containing the partial job can be completed.</p>
<p id="p-0043" num="0042">Hence, the partial job allocation processing section <b>24</b> according to this embodiment executes again the processing for allocating the unfinished partial job to any one of the data processing apparatuses <b>40</b> by referring to the apparatus function information stored in the apparatus function information storage section <b>31</b> (at step <b>121</b>). The reallocation processing of the data processing apparatuses <b>40</b> for the unfinished job will be described below in detail referring to <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 10</figref> shows unfinished partial jobs Jx, Jy and Jz and data processing apparatuses Pa to Pg. F<b>1</b> to F<b>3</b> designate functions. According to <figref idref="DRAWINGS">FIG. 10</figref>, F<b>1</b> and F<b>2</b> are mounted on the data processing apparatus Pa, F<b>1</b> is mounted on the data processing apparatus Pb, F<b>1</b> is mounted on the data processing apparatus Pc, F<b>2</b> is mounted on the data processing apparatus Pd, F<b>3</b> is mounted on the data processing apparatus Pe, F<b>1</b>, F<b>2</b> and F<b>3</b> are mounted on the data processing apparatus Pf, and F<b>2</b> and F<b>3</b> are mounted on the data processing apparatus Pg. In the first allocation processing, as indicated by arrows drawn in broken lines in <figref idref="DRAWINGS">FIG. 10</figref>, the data processing apparatus Pc was allocated to the partial job Jx, the data processing apparatus Pg was allocated to the partial job Jy, and the data processing apparatus Pe was allocated to the partial job Jz. However, <figref idref="DRAWINGS">FIG. 10</figref> shows that the execution of the partial jobs was unable to be completed until the end times in all the data processing apparatuses Pc, Pg and Pe. In this state, the partial job allocation processing section <b>24</b> executes again the reallocation processing as described below referring to the apparatus function information.</p>
<p id="p-0045" num="0044">First, it is desired that the data processing apparatuses Pc, Pg and Pe in which the execution of the partial jobs Jx, Jy and Jz was unable to be completed until the end times should be excluded from candidates to which all the unfinished partial jobs Jx, Jy and Jz are allocated. It is predictable that these data processing apparatuses PC, Pg and Pe are operating under high load states because the apparatuses have already received job execution requests from other job execution apparatuses <b>10</b> or that the data processing apparatuses are inoperative owing to failure of hardware, trouble of software, etc. Hence, it is assumed to be highly possible that even if the execution of the partial jobs is requested again to the data processing apparatuses, the partial jobs cannot be completed until the end time.</p>
<p id="p-0046" num="0045">After the data processing apparatuses PC, Pg and Pe are excluded from the available candidates, data processing apparatuses respectively capable of executing the partial jobs Jx, Jy and Jz are attempted to be selected. First, the execution of the partial job Jx can be requested to the data processing apparatuses Pa, Pb and Pf on which the function F<b>1</b> is mounted. The execution of the partial job Jy can be requested to the data processing apparatuses Pa, Pd and Pf on which the function F<b>2</b> is mounted. The execution of the partial job Jz can be requested to only the data processing apparatus Pf on which the function F<b>3</b> is mounted. In other words, since the execution of the partial job Jz can be requested to only the data processing apparatus Pf in this situation, the data processing apparatus Pf is preferentially allocated to the partial job Jz. Next, for example, in the case that the partial job Jy is required to be executed more preferentially than the partial job Jx, all the data processing apparatuses capable of executing the partial job Jy, that is, Pa and Pd, are preferentially allocated to the partial job Jy on the premise that a data processing apparatus that can be allocated to the partial job Jx remains available. A plurality of data processing apparatuses may be selected from among all the data processing apparatuses capable of executing the partial job, instead of selecting all the data processing apparatuses. Furthermore, the data processing apparatus Pb that is not allocated to the partial jobs Jy and Jz and can execute the function F<b>1</b> is allocated to the partial job jx.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 11</figref> shows a data setting example of apparatus function information obtained as the result of the reallocation processing. Data is set in the items of job ID, requested function, apparatus ID and execution instruction destination in <figref idref="DRAWINGS">FIG. 11</figref> at this time. As understood by referring to <figref idref="DRAWINGS">FIG. 11</figref>, a plurality of execution destinations are designated to the partial job Jy. Furthermore, &#x201c;apparatus ID&#x201d; not contained in the allocation information shown in <figref idref="DRAWINGS">FIG. 6</figref> is contained in <figref idref="DRAWINGS">FIG. 11</figref> so that the correspondence relationship between each partial job and the data processing apparatus allocated thereto can be visually recognized easily.</p>
<p id="p-0048" num="0047">In this embodiment, the data processing apparatuses are allocated to unfinished partial jobs, for example, according to predetermined conditions that the data processing apparatuses that generated unfinished partial jobs should be excluded from the candidates of the data processing apparatuses for the reallocation and that partial job allocation should not be overlapped. Furthermore, for example, it may be possible to use reallocation conditions that data processing apparatuses having high performance should be allocated preferentially and that data processing apparatuses featuring a short execution result transmission time should be allocated preferentially. In this embodiment, although a plurality of execution destinations are designated to the partial job Jy, it may be possible that only one data processing apparatus is selected as a reallocation destination according to the above-mentioned predetermined conditions, for example, and the data processing apparatus is allocated to the unfinished job.</p>
<p id="p-0049" num="0048">In this embodiment, the data processing apparatuses that generated unfinished partial jobs are excluded from the candidates and the reallocation of the remaining data processing apparatuses is carried out. The reason for the reallocation is as described above. However, it is assumed that the reason why the data processing apparatuses that generated the unfinished partial jobs were allocated to the partial jobs in the first allocation processing is because not only the data processing apparatuses have functions required for the execution of the partial jobs, but also the data processing apparatuses have functions required for the execution of the partial jobs as specialty functions or the data processing apparatuses are superior to the other data processing apparatuses in some respects, such as performance, transmission cost and billing cost. Moreover, the reason why the execution of the partial jobs is unfinished is because when the execution of the partial jobs are instructed, the data processing apparatuses are executing other jobs and are in a high load state temporarily. Hence, even if the data processing apparatuses generated the unfinished partial jobs, it may be worth trying to carry out the execution of the partial jobs again in the same data processing apparatuses. Consequently, at the time of the reallocation, it may be possible that execution requests are issued once again to the data processing apparatuses that generated the unfinished partial jobs, in addition to the data processing apparatuses selected as the reallocation destinations according to the procedure described above.</p>
<p id="p-0050" num="0049">Furthermore, in the case that the execution result receiving section <b>28</b> receives, during the above-mentioned reallocation processing, a message indicating &#x201c;normal end&#x201d; from a data processing apparatus <b>40</b> to which an unfinished partial job was allocated, the execution result obtained together with this message &#x201c;normal end&#x201d; may be used at the time of job integration. In other words, although the execution of the partial job is judged &#x201c;unfinished&#x201d; because of the expiration of the end time, this corresponds to a case in which the data processing apparatus <b>40</b> transmitted the execution result after the expiration of the end time. In this case, although &#x201c;normal end&#x201d; was not attained within the end time, since the use of the execution result obtained as the result of the normal end is more efficient than the use of the execution result obtained newly after the execution of the partial job is requested again, the corresponding partial job may be excluded from the target of the reallocation.</p>
<p id="p-0051" num="0050">Returning to <figref idref="DRAWINGS">FIG. 9</figref>, when the data processing apparatus <b>40</b> for executing again the unfinished partial job is specified at step <b>121</b> as described above, the partial job execution instruction section <b>26</b> instructs the data processing apparatus <b>40</b> to execute the partial job by transmitting an execution request thereto (at step <b>106</b>). After detecting that the partial job execution instruction section <b>26</b> has transmitted the execution request, the time monitoring section <b>27</b> records the time when the execution was instructed in &#x201c;start time&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> (at step <b>107</b>), and sets an end time in &#x201c;end time&#x201d; (at step <b>108</b>). Then, when the execution of the unfinished partial job is started, the time monitoring section <b>27</b> renews the &#x201c;status&#x201d; of the unfinished partial job to &#x201c;under processing&#x201d; (at step <b>109</b>). Although <figref idref="DRAWINGS">FIG. 9</figref> does not show that this processing is executed repeatedly, the processing for this execution instruction is carried out repeatedly for the respective partial jobs as in the case of <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0052" num="0051">Then, the partial job execution monitoring processing (at steps <b>111</b> to <b>118</b>) of the time monitoring section <b>27</b> is started. Since this processing is similar to that shown in <figref idref="DRAWINGS">FIG. 8</figref>, its destination is omitted. However, in the case of the reallocation, there is a case in which a plurality of data processing apparatuses <b>40</b> are designated as the execution instruction destinations of an unfinished partial job. Hence, in the case that the execution result receiving section <b>28</b> receives the message &#x201c;normal end&#x201d; (Y at step <b>112</b>), the time monitoring section <b>27</b> renews the &#x201c;status&#x201d; of the allocation information stored in the allocation information storage section <b>32</b> corresponding to the partial job to &#x201c;normal end&#x201d; (at step <b>113</b>), and the time monitoring section <b>27</b> instructs the data processing apparatuses <b>40</b> to which the execution of the partial job was instructed to stop the execution of the partial job via the partial job execution instruction section <b>26</b> and the communication processing section <b>21</b> (at step <b>122</b>). Then, the time monitoring section <b>27</b> excludes the partial job from the monitoring target of the execution status and completes the monitoring (at step <b>114</b>).</p>
<p id="p-0053" num="0052">The above-mentioned monitoring processing (steps <b>111</b> to <b>118</b>) are repeated until the monitoring of all the partial jobs is completed. By this processing, the &#x201c;status&#x201d; of each partial job in the allocation information is renewed from &#x201c;under processing&#x201d; to &#x201c;normal end&#x201d; or &#x201c;unfinished.&#x201d;</p>
<p id="p-0054" num="0053">After the monitoring of all the partial jobs has been completed (Y at step <b>118</b>), the time monitoring section <b>27</b> confirms whether all the partial jobs have been completed normally by referring to the &#x201c;status&#x201d; of each partial job in the allocation information. In the case that all the partial jobs have been completed normally (Y at step <b>123</b>), the reallocation processing is completed. In the case that even one unfinished partial job exists (N at step <b>123</b>), the reallocation of the data processing apparatus <b>40</b> to such unfinished partial jobs is carried out repeatedly.</p>
<p id="p-0055" num="0054">When it is confirmed that all the partial jobs have been completed normally, the job integration processing section <b>29</b> obtains the execution results of the respective partial jobs that were received by the execution result receiving section <b>28</b> at the time of the completion of the partial jobs. Furthermore, in the case that a partial job is also executed by the job execution apparatus <b>10</b>, the job integration processing section <b>29</b> also obtains the execution result of the partial job. Then, the job integration processing section <b>29</b> integrates these execution results to restore the execution result of the job. Then, the job integration processing section <b>29</b> returns the execution result of the job generated by the restoration to the PC <b>2</b> used as a job execution request source via the communication processing section <b>21</b>.</p>
<p id="p-0056" num="0055">In this embodiment, an example is described in which the job execution apparatus <b>10</b> executes a job using the data processing apparatuses <b>40</b> contained in the cloud <b>4</b>. However, the present invention is not necessarily limited to a system configuration that uses the cloud <b>4</b>. For example, it may be possible to use a configuration in which a plurality of computers are connected to the network <b>6</b>, any one of the computers is used as the job execution apparatus <b>10</b>, and the other computers are used as the data processing apparatuses <b>40</b>. Furthermore, since the job execution apparatus <b>10</b> has processing functions required for job execution, the job execution apparatus <b>10</b> may also function as the data processing apparatus <b>40</b> so as to serve for another job execution apparatus. Moreover, the data processing apparatus <b>40</b> may be provided with the configuration of the job execution apparatus <b>10</b> so as to serve as the job execution apparatus <b>10</b>. In other words, in this embodiment, the computers are classified into a computer serving as the job execution apparatus <b>10</b> to which the execution of a job is requested and computers serving as the data processing apparatuses <b>40</b> to which the execution of partial jobs are requested, for the convenience of description. However, a computer connected to the network <b>6</b> may also be configured as a data processing apparatus having both the function of the job execution apparatus <b>10</b> and the function of the data processing apparatus <b>40</b>. In other words, in the case that each computer is provided with the functions of both the apparatuses, the computer operates as the job execution apparatus <b>10</b> when a job is received and operates as the data processing apparatus <b>40</b> in the other cases. This modified example of the system is also applicable to an embodiment described below.</p>
<p id="h-0008" num="0000">Embodiment 2</p>
<p id="p-0057" num="0056">In Embodiment 1 described above, the job execution apparatus <b>10</b> is provided with the function for managing the information of the data processing apparatuses <b>40</b> and the function for monitoring the execution statuses of partial jobs. However, Embodiment 2 is characterized in that a system configuration is provided in which a job execution management apparatus is provided separately so that these functions are executed by the job execution management apparatus.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 12</figref> is a block configuration diagram showing a job execution system according to this embodiment. The job execution system according to this embodiment has a configuration in which, in addition to the job execution apparatus <b>10</b> and the data processing apparatuses <b>40</b>, a job execution management apparatus <b>60</b> is connected to the network <b>6</b>. For the sake of convenience, only one data processing apparatus <b>40</b> is shown. Among the components shown in <figref idref="DRAWINGS">FIG. 12</figref>, the same components as those according to Embodiment 1 are designated by the same reference codes, and their descriptions are omitted as necessary.</p>
<p id="p-0059" num="0058">In Embodiment 1 described above, the job execution apparatus <b>10</b> is provided with the function for allocating partial jobs to the data processing apparatuses <b>40</b>, the function for monitoring the execution statuses of the partial jobs, the function for managing the information of the data processing apparatuses <b>40</b>, etc. However, Embodiment 2 is characterized in that a system configuration is provided in which components for accomplishing these functions are disposed in the job execution management apparatus <b>60</b> that is newly provided, and the job execution management apparatus <b>60</b> uniformly carry out partial job allocation processing and reallocation processing inside the system. The job execution management apparatus <b>60</b> may be accomplished by the hardware configuration of the general-purpose computer shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0060" num="0059">The job execution apparatus <b>10</b> has the communication processing section <b>21</b>, the job receiving section <b>22</b>, the job segmentation processing section <b>23</b>, and the job execution section <b>25</b> as in the case of Embodiment 1, and also has a partial job distribution section <b>51</b>, an allocation request transmission section <b>52</b>, and an execution result receiving section <b>53</b>. The partial job distribution section <b>51</b> distributes partial jobs formed by segmenting a job using the job segmentation processing section <b>23</b> to a partial job to be executed by the job execution section <b>25</b> of the job execution apparatus <b>10</b> itself and to partial jobs, the execution of which is requested to the data processing apparatuses <b>40</b>. As described in Embodiment 1, for example, a condition as to whether functions are mounted or not on the job execution apparatus <b>10</b> itself may be used as a distribution condition. The allocation request transmission section <b>52</b> transmits, to the job execution management apparatus <b>60</b>, an allocation request for allocating any one of the data processing apparatuses <b>40</b> to a partial job that is selected by the partial job distribution section <b>51</b> so that the execution of the partial job is requested to the data processing apparatus <b>40</b>. The execution result receiving section <b>53</b> receives the execution result of the partial job transmitted from the data processing apparatus <b>40</b> as in the case of Embodiment 1. However, Embodiment 2 differs from Embodiment 1 in that the execution result receiving section <b>53</b> does not receive messages, such as &#x201c;normal end.&#x201d;</p>
<p id="p-0061" num="0060">The components <b>21</b> to <b>23</b>, <b>25</b> and <b>51</b> to <b>53</b> of the job execution apparatus <b>10</b> are accomplished by the cooperation between the computer constituting the job execution apparatus <b>10</b> and programs operating on the CPU <b>11</b> mounted on the computer. Furthermore, the apparatus function information storage section <b>31</b> and the allocation information storage section <b>32</b> may be accomplished by the HDD <b>14</b>.</p>
<p id="p-0062" num="0061">The job execution management apparatus <b>60</b> has the partial job allocation processing section <b>24</b>, the partial job execution instruction section <b>26</b>, the time monitoring section <b>27</b>, the execution control section <b>30</b>, the apparatus function information storage section <b>31</b>, and the allocation information storage section <b>32</b>, these being described in Embodiment 1. Furthermore, the job execution management apparatus <b>60</b> has a communication processing section <b>61</b>, an allocation request receiving section <b>62</b>, and a status information receiving section <b>63</b>. The communication processing section <b>61</b> has a function basically equivalent to that of the communication processing section <b>21</b> and performs communication between the job execution apparatus <b>10</b> and the data processing apparatuses <b>40</b>. Furthermore, the communication processing section <b>61</b> distributes received data to the allocation request receiving section <b>62</b> or the status information receiving section <b>63</b> depending on the contents of the data. The allocation request receiving section <b>62</b> receives and accepts an allocation request transmitted from the job execution apparatus <b>10</b>. The status information receiving section <b>63</b> receives, for example, status information indicating the message &#x201c;normal end&#x201d; transmitted from each data processing apparatus <b>40</b> when the execution of a partial job has been completed, as a function of the execution result receiving section <b>28</b> according to Embodiment 1. Notices regarding hardware failure, etc. are taken as examples of the other status information, as described in Embodiment 1.</p>
<p id="p-0063" num="0062">The components <b>24</b>, <b>26</b>, <b>27</b>, <b>30</b> and <b>61</b> to <b>63</b> of the job execution management apparatus <b>60</b> are accomplished by the cooperation between the computer constituting the job execution management apparatus <b>60</b> and programs operating on the CPU <b>11</b> mounted on the computer. Furthermore, the apparatus function information storage section <b>31</b> and the allocation information storage section <b>32</b> may be accomplished by the HDD <b>14</b>.</p>
<p id="p-0064" num="0063">The data processing apparatus <b>40</b> has a communication processing section <b>41</b>, an execution instruction receiving section <b>42</b>, a partial job execution section <b>43</b>, an execution result transmission section <b>44</b>, and an execution completion notification section <b>45</b>. The communication processing section <b>41</b> performs communication between the job execution apparatus <b>10</b> and the data processing apparatuses <b>40</b> and receives a partial job execution instruction and real data transmitted from the job execution management apparatus <b>60</b>. The execution instruction receiving section <b>42</b> receives the execution instruction from the job execution management apparatus <b>60</b>. The partial job execution section <b>43</b> executes the partial job that is designated by the execution instruction. The execution result transmission section <b>44</b> transmits the execution result of the partial job executed by the partial job execution section <b>43</b> to the job execution apparatus <b>10</b>. The execution completion notification section <b>45</b> transmits status information indicating that the execution of the partial job by the partial job execution section <b>43</b> has been completed normally to the job execution management apparatus <b>60</b>.</p>
<p id="p-0065" num="0064">The components <b>41</b> to <b>45</b> of the data processing apparatus <b>40</b> are accomplished by the cooperation between the computer constituting the data processing apparatus <b>40</b> and programs operating on the CPU <b>11</b> mounted on the computer.</p>
<p id="p-0066" num="0065">Next, the operation according to this embodiment will be described below. Since the flow of the basic processing according to this embodiment is the same as that according to Embodiment 1 described referring to <figref idref="DRAWINGS">FIGS. 7 to 9</figref>, its description is omitted as necessary. Since the apparatus function information, the allocation information and the allocation processing function provided for the job execution apparatus <b>10</b> in Embodiment 1 are transferred to the job execution management apparatus <b>60</b> in Embodiment 2, information to be transmitted between the apparatuses in Embodiment 2 is slightly different from that in Embodiment 1.</p>
<p id="p-0067" num="0066">More specifically, in the job execution apparatus <b>10</b>, when the job receiving section <b>22</b> receives a request for executing a job from the PC <b>2</b>, for example, the job segmentation processing section <b>23</b> segments the job into N partial jobs. The partial job distribution section <b>51</b> distributes the segmented partial jobs into a partial job to be executed by the job execution apparatus <b>10</b> itself and partial jobs to be executed by the data processing apparatuses <b>40</b>. The allocation request transmission section <b>52</b> transmits an allocation request containing information for specifying the job execution apparatus <b>10</b> itself and partial jobs to be executed by the corresponding data processing apparatuses <b>40</b> to the job execution management apparatus <b>60</b> via the communication processing section <b>21</b>.</p>
<p id="p-0068" num="0067">In the job execution management apparatus <b>60</b>, when the allocation request receiving section <b>62</b> receives the allocation request transmitted from the job execution apparatus <b>10</b> via the communication processing section <b>61</b>, the partial job allocation processing section <b>24</b> allocates the data processing apparatuses <b>40</b> to respective partial jobs, the execution of which is requested, according to the procedure described in Embodiment 1. Then, the partial job execution instruction section <b>26</b> transmits a request for instructing the execution of each partial job to the corresponding data processing apparatus <b>40</b>. This execution instruction request contains the real data of the partial job to be executed, contained in the allocation request from the job execution apparatus <b>10</b>, and information for specifying the job execution apparatus <b>10</b>, such as a URL, serving as the transmission destination of the execution result of the partial job and an execution completion notice. Then, the processing in the job execution management apparatus <b>60</b> is shifted to the processing shown in <figref idref="DRAWINGS">FIG. 8</figref>, and the job execution management apparatus <b>60</b> waits for the transmission of a status from each data processing apparatus <b>40</b>.</p>
<p id="p-0069" num="0068">In the data processing apparatus <b>40</b>, when the execution instruction receiving section <b>42</b> receives the request for instructing the execution of the partial job transmitted from the job execution management apparatus <b>60</b> via the communication processing section <b>41</b>, the partial job execution section <b>43</b> executes the received partial job. When the execution of the partial job is completed, the execution result transmission section <b>44</b> transmits the execution result of the partial job to the job execution apparatus <b>10</b> specified by the transmission destination designated by the execution instruction request. The execution result transmission section <b>44</b> may indirectly transmit the execution result of the partial job to the job execution apparatus <b>10</b> via the job execution management apparatus <b>60</b>. However, in this embodiment, the execution result transmission section <b>44</b> directly transmits the execution result as described above in consideration of processing efficiency. On the other hand, the execution completion notification section <b>45</b> transmits a message indicating that the execution of the partial job has been completed normally to the job execution management apparatus <b>60</b>.</p>
<p id="p-0070" num="0069">In the job execution management apparatus <b>60</b>, in the case that the &#x201c;status&#x201d; of any one of the partial jobs in the allocation information is &#x201c;unfinished&#x201d; as the execution result of the monitoring processing (<figref idref="DRAWINGS">FIG. 8</figref>) of the data processing apparatuses <b>40</b>, the reallocation processing shown in <figref idref="DRAWINGS">FIG. 9</figref> is executed. In the case that it is confirmed that all the partial jobs have been completed normally as the result of the reallocation processing, the job execution management apparatus <b>60</b> transmits a notice indicating normal end to the job execution apparatus <b>10</b>.</p>
<p id="p-0071" num="0070">When the execution result receiving section <b>53</b> confirms that the execution of all the partial jobs requested to the data processing apparatuses <b>40</b> has been completed normally according to the notice from the job execution management apparatus <b>60</b>, the execution result receiving section <b>53</b> transfers the execution results of the partial jobs having already been received at this time to the job integration processing section <b>29</b>. The job integration processing section <b>29</b> integrates the execution results of the respective partial jobs received by the execution result receiving section <b>53</b> and the execution result of the partial job executed by the job execution apparatus <b>10</b> in the case that the partial job was executed by the apparatus, thereby restoring the execution result of the job. Then, the job integration processing section <b>29</b> returns the execution result of the job generated by the restoration to the PC <b>2</b> used as a job execution request source via the communication processing section <b>21</b>.</p>
<p id="p-0072" num="0071">In this embodiment, the job execution apparatus <b>10</b> executes the received job through interaction among the job execution apparatus <b>10</b>, the job execution management apparatus <b>60</b> and the data processing apparatuses <b>40</b> as described above. With this configuration, the job execution management apparatus <b>60</b> performs job execution control for the entire system. However, for example, it may also be possible to use a configuration in which the job execution management apparatus <b>60</b> is provided with means for monitoring the load states of the respective data processing apparatuses <b>40</b> and determines appropriate data processing apparatuses <b>40</b> to which partial jobs should be allocated in consideration of the load states of the respective data processing apparatuses <b>40</b>, such as the number of the allocated partial jobs.</p>
<p id="p-0073" num="0072">Although the real data of a partial job, the execution of which is requested to a data processing apparatus <b>40</b> is transmitted from the job execution apparatus <b>10</b> to the data processing apparatus <b>40</b> via the job execution management apparatus <b>60</b> in the above description, it may also be possible that the job execution apparatus <b>10</b> generates an allocation request containing only the information required for the allocation processing to be executed by the job execution management apparatus <b>60</b>, such as the ID of each partial job and a function required for the execution of the partial job and then transmits the allocation request to the job execution management apparatus <b>60</b>. In this case, the job execution management apparatus <b>60</b> returns the result of the allocation processing indicating the correspondence relationship between the partial job and the data processing apparatus <b>40</b> to the job execution apparatus <b>10</b>, and the job execution apparatus <b>10</b> refers to the result of the allocation processing and transmits, to each data processing apparatus, the partial job corresponding thereto.</p>
<p id="p-0074" num="0073">Furthermore, in this embodiment, although the destination to which the execution result of a partial job is transmitted is informed to the corresponding data processing apparatus <b>40</b> by containing the URL of the job execution apparatus <b>10</b> in an allocation request, it may also be possible that information in which the identification information (ID) of the job execution apparatus <b>10</b> contained inside the system is made correspondence with its URL is uniformly managed by the job execution management apparatus <b>60</b>, and that the ID of the job execution apparatus <b>10</b> is contained in the allocation request that is transmitted to the job execution management apparatus <b>60</b>.</p>
<p id="p-0075" num="0074">The foregoing description of the exemplary embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations will be apparent to practitioners skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, thereby enabling others skilled in the art to understand the invention for various embodiments and with the various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A job execution management apparatus comprising:
<claim-text>a receiving unit that receives an allocation request for allocating a plurality of partial jobs formed by segmenting a job to a plurality of data processing apparatuses;</claim-text>
<claim-text>a storage unit that stores apparatus function information in which functions executable by the respective data processing apparatuses are defined;</claim-text>
<claim-text>an allocation unit that allocates the respective plurality of partial jobs to the data processing apparatuses which are capable of executing the plurality of partial jobs by referring to the apparatus function information according to the allocation request;</claim-text>
<claim-text>a setting unit that sets so that, when a partial job is allocated to one of the data processing apparatuses, information for specifying the data processing apparatus allocated to the partial job, start time information for specifying the time when the execution of the partial job is started and end time information for specifying the end time of the execution of the partial job are made correspondence with the partial job;</claim-text>
<claim-text>an execution instruction unit that instructs the execution of a partial job to the corresponding data processing apparatus according to the setting of the setting unit; and</claim-text>
<claim-text>a reallocation unit, after the instruction from the execution instruction unit, (i) that specifies partial jobs among the partial jobs which are instructed to be executed, the execution of the specified partial jobs being not finished until the times specified by the end time information corresponding to the partial jobs, and (ii) that reallocates at least one of the data processing apparatuses which is capable of executing the unfinished partial jobs, excluding the data processing apparatuses to which the unfinished partial jobs are allocated by the allocation unit, to each of the specified unfinished partial jobs by referring to the apparatus function information, wherein</claim-text>
<claim-text>the execution instruction unit instructs the data processing apparatuses reallocated by the reallocation unit to execute the unfinished partial jobs.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The job execution management apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the reallocation unit reallocates the unfinished partial jobs to the data processing apparatuses to which the unfinished partial jobs are allocated by the allocation unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The job execution management apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>in the case that the number of the data processing apparatuses which are capable of executing the unfinished partial job is plural, the reallocation unit selects one of the data processing apparatuses based on a preset selection standard and reallocates the unfinished partial job to the selected data processing apparatus.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The job execution management apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the reallocation unit reallocates the unfinished partial job to the plurality of data processing apparatuses capable of executing the unfinished partial job.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The job execution management apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising;
<claim-text>a stop instruction unit, in the case that the reallocation unit reallocated the unfinished partial job to the plurality of data processing apparatuses and in the case that a notice indicating an normal end of the unfinished partial job was issued from one of the plurality of data processing apparatuses, the stop instruction unit that instructs a stop of the execution of the unfinished partial job to the data processing apparatuses other than the data processing apparatus which issues the notice among the plurality of data processing apparatuses to which the unfinished partial job was reallocated.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A job execution apparatus comprising:
<claim-text>a receiving unit that receives a request for executing a job;</claim-text>
<claim-text>a forming unit that segments a received job into a plurality of partial jobs;</claim-text>
<claim-text>a storage unit that stores apparatus function information in which functions executable by the respective data processing apparatuses are defined;</claim-text>
<claim-text>an allocation unit that allocates the respective plurality of partial jobs to the data processing apparatuses which are capable of executing the plurality of partial jobs by referring to the apparatus function information;</claim-text>
<claim-text>a setting unit that sets so that, when a partial job is allocated to one of the data processing apparatuses, information for specifying the data processing apparatus allocated to the partial job, start time information for specifying the time when the execution of the partial job is started and end time information for specifying the end time of the execution of the partial job are made correspondence with the partial job;</claim-text>
<claim-text>a execution instruction unit that instructs the execution of a partial job, to which the data processing apparatus is allocated, to the corresponding data processing apparatus according to the setting of the setting unit; and</claim-text>
<claim-text>a reallocation unit, after the instruction from the execution instruction unit, (i) that specifies partial jobs among the partial jobs which are instructed to be executed, the execution of the specified partial jobs being not finished until the times specified by the end time information corresponding to the partial jobs, and (ii) that reallocates at least one of the data processing apparatuses which is capable of executing the unfinished partial jobs, excluding the data processing apparatuses to which the unfinished partial jobs are allocated by the allocation unit, to each of the specified unfinished partial jobs by referring to the apparatus function information, wherein</claim-text>
<claim-text>the execution instruction unit instructs the data processing apparatuses reallocated by the reallocation unit to execute the unfinished partial jobs.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A job execution system comprising:
<claim-text>a job execution apparatus that executes all or part of a plurality of partial jobs formed by segmenting a received job;</claim-text>
<claim-text>a job execution management apparatus that manages an execution of the job; and</claim-text>
<claim-text>a plurality of data processing apparatuses that executes one or more partial jobs instead of the job execution apparatus, wherein</claim-text>
<claim-text>the job execution apparatus includes:
<claim-text>an execution request receiving unit that receives a request for executing a job;</claim-text>
<claim-text>a forming unit that segments a received job into a plurality of partial jobs;</claim-text>
<claim-text>an allocation request transmission unit that transmits an allocation request for allocating the execution of the partial job to any one of the data processing apparatuses to the job execution management apparatus; and</claim-text>
<claim-text>a returning unit that generates an execution result of the job according to an execution results of the plurality of partial jobs and returns the execution result to the execution request source of the job,</claim-text>
</claim-text>
<claim-text>the job execution management apparatus includes:
<claim-text>an allocation request receiving unit that receives the allocation request transmitted from the job execution apparatus;</claim-text>
<claim-text>a storage unit stores apparatus function information in which functions executable by the respective data processing apparatuses are defined;</claim-text>
<claim-text>an allocation unit that allocates the respective plurality of partial jobs to the data processing apparatuses which are capable of executing the plurality of partial jobs by referring to the apparatus function information according to the allocation request;</claim-text>
<claim-text>a setting unit that sets so that, when a partial job is allocated to one of the data processing apparatuses, information for specifying the data processing apparatus allocated to the partial job, start time information for specifying the time when the execution of the partial job is started and end time information for specifying the end time of the execution of the partial job are made correspondence with the partial job;</claim-text>
<claim-text>an execution instruction unit that instructs the execution of a partial job to the corresponding data processing apparatus according to the setting of the setting unit;</claim-text>
<claim-text>a receiving unit that receives a notice indicating the end of the execution of the partial job from the data processing apparatus; and</claim-text>
<claim-text>a reallocation unit, after the instruction from the execution instruction unit, (i) that specifies partial jobs among the partial jobs which are instructed to be executed, the execution of specified partial jobs being not finished until the times specified by the end time information corresponding to the partial jobs, and (ii) that reallocates at least one of the data processing apparatuses which is capable of executing the unfinished partial jobs, excluding the data processing apparatuses to which the unfinished partial jobs are allocated by the allocation unit, to each of the specified unfinished partial jobs by referring to the apparatus function information, wherein</claim-text>
<claim-text>the execution instruction unit instructs the data processing apparatuses reallocated by the reallocation unit to execute the unfinished partial jobs, and</claim-text>
</claim-text>
<claim-text>the data processing apparatus includes:
<claim-text>an executing unit that executes the allocated partial job according to the execution instruction from the job execution management apparatus;</claim-text>
<claim-text>an end notice transmission unit that transmits a notice indicating the end of the execution of a partial job when the execution of the partial job is finished; and</claim-text>
<claim-text>an execution result transmission unit that transmits the execution result of the partial job to the job execution apparatus directly or indirectly.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory computer-readable medium storing a program that causes a computer to execute job execution management, the job execution management comprising:
<claim-text>receiving an allocation request for allocating a plurality of partial jobs formed by segmenting a job to a plurality of data processing apparatuses;</claim-text>
<claim-text>allocating the respective plurality of partial jobs to the data processing apparatuses which are capable of executing the plurality of partial jobs by referring to the apparatus function information according to the allocation request, the apparatus function information defining functions executable by the respective data processing apparatuses;</claim-text>
<claim-text>setting so that, when a partial job is allocated to one of the data processing apparatuses, information for specifying the data processing apparatus allocated to the partial job, start time information for specifying the time when the execution of the partial job is started and end time information for specifying the end time of the execution of the partial job are made correspondence with the partial job;</claim-text>
<claim-text>instructing the execution of a partial job to the corresponding data processing apparatus according to the setting; and</claim-text>
<claim-text>specifying partial jobs among the partial jobs which are instructed to be executed after the instruction, the execution of the specified partial jobs being not finished until the times specified by the end time information corresponding to the partial jobs;</claim-text>
<claim-text>reallocating at least one of the data processing apparatuses which is capable of executing the unfinished partial jobs, excluding the data processing apparatuses to which the unfinished partial jobs are allocated, to each of the specified unfinished partial jobs by referring to the apparatus function information; and</claim-text>
<claim-text>instructing the reallocated data processing apparatuses to execute the unfinished partial jobs. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
