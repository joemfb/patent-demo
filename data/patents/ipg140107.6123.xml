<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627247-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627247</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13546562</doc-number>
<date>20120711</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>50</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>716103</main-classification>
<further-classification>716132</further-classification>
<further-classification>716123</further-classification>
</classification-national>
<invention-title id="d2e43">Systems and methods for fixing pin mismatch in layout migration</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6189132</doc-number>
<kind>B1</kind>
<name>Heng et al.</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6360352</doc-number>
<kind>B2</kind>
<name>Wallace</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6473885</doc-number>
<kind>B1</kind>
<name>Wallace</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716107</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6756242</doc-number>
<kind>B1</kind>
<name>Regan</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>438 14</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6986109</doc-number>
<kind>B2</kind>
<name>Allen et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7039881</doc-number>
<kind>B2</kind>
<name>Regan</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7568173</doc-number>
<kind>B2</kind>
<name>Gernhoefer et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7774735</doc-number>
<kind>B1</kind>
<name>Sood</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7882463</doc-number>
<kind>B2</kind>
<name>Heng et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2003/0084418</doc-number>
<kind>A1</kind>
<name>Regan</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0091627</doc-number>
<kind>A1</kind>
<name>Satapathy et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2008/0092089</doc-number>
<kind>A1</kind>
<name>Kobayashi</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2008/0134109</doc-number>
<kind>A1</kind>
<name>Hammouda et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2008/0222578</doc-number>
<kind>A1</kind>
<name>Joshi</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2011/0161907</doc-number>
<kind>A1</kind>
<name>Cheng et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716119</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>WO</country>
<doc-number>2009007311</doc-number>
<kind>A1</kind>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>WO</country>
<doc-number>2011072038</doc-number>
<kind>A2</kind>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Dessouky, M., &#x201c;Analog Design Migration:Aan Overview&#x201d;, IEEE, 2009, pp. 992-995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McCullen</last-name>
<first-name>Kevin W.</first-name>
<address>
<city>EssexJunction</city>
<state>VT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Guzowski</last-name>
<first-name>Matthew T.</first-name>
<address>
<city>Essex Junction</city>
<state>VT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Narayan</last-name>
<first-name>Rani</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tang</last-name>
<first-name>Xiaoping</first-name>
<address>
<city>Mohegan Lake</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yuan</last-name>
<first-name>Xin</first-name>
<address>
<city>Roseville</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>McCullen</last-name>
<first-name>Kevin W.</first-name>
<address>
<city>EssexJunction</city>
<state>VT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Guzowski</last-name>
<first-name>Matthew T.</first-name>
<address>
<city>Essex Junction</city>
<state>VT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Narayan</last-name>
<first-name>Rani</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Tang</last-name>
<first-name>Xiaoping</first-name>
<address>
<city>Mohegan Lake</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Yuan</last-name>
<first-name>Xin</first-name>
<address>
<city>Roseville</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Kotulak</last-name>
<first-name>Richard</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Roberts Mlotowski Safran &#x26; Cole, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Garbowski</last-name>
<first-name>Leigh</first-name>
<department>2825</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Approaches are provided for fixing pin mismatches from swapping library cells in layout migration. Specifically, a method is provided that includes collecting information about a first technology pin from a library cell in a first technology. The method further includes swapping the library cell in the first technology with a library cell in a second technology. The method further includes collecting information about a second technology pin from the library cell in the second technology. The method further includes building a pin-mapping table that is configured to map the first technology pin to the second technology pin. The method further includes scaling a layout from the first technology to the second technology. The method further includes modifying the layout based on the pin-mapping table to match the at least one first technology pin to the at least one second technology pin while satisfying ground rules of the second technology.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="192.36mm" wi="188.04mm" file="US08627247-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="255.27mm" wi="145.03mm" orientation="landscape" file="US08627247-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="235.20mm" wi="193.97mm" orientation="landscape" file="US08627247-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="266.62mm" wi="137.33mm" orientation="landscape" file="US08627247-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="222.08mm" wi="185.93mm" orientation="landscape" file="US08627247-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="226.06mm" wi="196.51mm" orientation="landscape" file="US08627247-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="205.66mm" wi="195.75mm" orientation="landscape" file="US08627247-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="247.65mm" wi="182.63mm" orientation="landscape" file="US08627247-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="259.67mm" wi="193.55mm" orientation="landscape" file="US08627247-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="128.95mm" wi="179.66mm" orientation="landscape" file="US08627247-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The invention relates to circuit design and, more particularly, to systems and methods for fixing pin mismatches from swapping library cells in layout migration.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Semiconductor chip layout is subject to complex rules governing, among other things, geometry of shapes on process layers. These complex rules may include, for example, width requirements, spacing requirements, overlap requirements, etc. Compliance with these design rules is important to chip functionality and manufacturability.</p>
<p id="p-0004" num="0003">Many processes used to create or alter layouts can introduce design rule violations. Manual layout, for example, inevitably introduces violations due to the difficulty of satisfying a large number of complex design rules by hand. These violations are generally corrected via tedious iterations between design rule checking tool runs and manual layout modifications.</p>
<p id="p-0005" num="0004">Technology migration is another process which gives rise to a large number of design rule violations. Migration is the process, which transforms layouts in one technology to a layout in another technology with different design rules. The migration process begins with scaling, using commercially available programs, and is sufficient to produce a design-rule-correct layout. However, in many cases, non-scalable differences in the design rules result in the introduction of design rules violations, which must again be corrected by tedious manual iteration.</p>
<p id="p-0006" num="0005">For example, due to the technology difference in technology migration, many library cells grow bigger in terms of pitch. This difference in pitch may potentially create pin mismatches in the new integrated circuit layout. The pin mismatches, if not corrected, may cause the wiring of the integrated circuit to be misaligned.</p>
<p id="p-0007" num="0006">Conventional layout migration methodology can perform the placement of grown library cells, but does not address the issue of pin mismatches. Specifically, pin mismatches pose a severe challenge in technology migration, which causes difficulty in reusing the wiring connections during layout migration.</p>
<p id="p-0008" num="0007">Accordingly, there exists a need in the art to overcome the deficiencies and limitations described hereinabove.</p>
<heading id="h-0003" level="1">BRIEF SUMMARY</heading>
<p id="p-0009" num="0008">In a first aspect of the invention, a method is provided that includes collecting information about at least one first technology pin from at least one library cell in a first technology. The method further includes swapping the at least one library cell in the first technology with at least one library cell in a second technology. The method further includes collecting information about at least one second technology pin from the at least one library cell in the second technology. The method further includes building a pin-mapping table that is configured to map the at least one first technology pin to the at least one second technology pin. The method further includes scaling a layout from the first technology to the second technology. The method further includes modifying the layout based on the pin-mapping table to match the at least one first technology pin to the at least one second technology pin while satisfying the ground rules of the second technology.</p>
<p id="p-0010" num="0009">In another aspect of the invention, a method implemented in an infrastructure is provided that includes collecting information about first technology pins from a first technology. The method further includes collecting information about second technology pins from a second technology. The method further includes building a pin-mapping table that is configured to map at least one first technology pin to at least one second technology pin, wherein the pin-mapping table is built based on a mapping cost between a first rectangle representative of the at least one first technology pin and a second rectangle representative of the at least one second technology pin. The method further includes scaling a layout from the first technology to the second technology. The method further includes modifying the layout based on the pin-mapping table to match the at least one first technology pin to the at least one second technology pin while satisfying the ground rules of the second technology.</p>
<p id="p-0011" num="0010">In yet another aspect of the invention, a computer system is provided that includes a CPU, a computer readable memory and a computer readable storage media. The system further includes first program instructions to pair each rectangle representative of a pin from a first technology to at least one rectangle representative of at least one pin from a second technology. The system further includes second program instructions to calculate a shift in a &#x201c;y&#x201d; direction for each of the pairs of rectangles. The system further includes third program instructions to compare the calculated shifts in the &#x201c;y&#x201d; direction for each pair of rectangles. The system further includes fourth program instructions to select a calculated shift with a minimum absolute value as an overall shift in the &#x201c;y&#x201d; direction from the compared pairs of rectangles. The system further includes fifth program instructions to adjusting coordinates of each rectangle from the first technology based on the selected overall shift in the &#x201c;y&#x201d; direction. The system further includes sixth program instructions to calculate a mapping cost for each rectangle from the first technology to each rectangle of the second technology using the adjusted coordinates of each rectangle from the first technology. The system further includes seventh program instructions to map each rectangle from the first technology to a rectangle from the second technology such that the mapped rectangles comprise a lowest calculated mapping cost. The first through seventh program instructions are stored on the computer readable storage media for execution by the CPU via the computer readable memory.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading>
<p id="p-0012" num="0011">The present invention is described in the detailed description, which follows, in reference to the noted plurality of drawings by way of non-limiting examples of exemplary embodiments of the present invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. 1-3</figref> show examples of pin mismatches that may occur during technology migration;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4</figref> is an illustrative external environment for implementing the invention in accordance with aspects of the invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. 5 and 6</figref> are flow diagrams of processes in accordance with aspects of the invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIGS. 7 and 8</figref> show examples of calculating mapping costs between two different layouts or technologies in accordance with aspects of the invention; and</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram of a design process used in semiconductor design, manufacture, and/or test.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0018" num="0017">The invention relates to circuit design and, more particularly, to systems and methods for fixing pin mismatches from swapping library cells in layout migration. More specifically, implementations of the invention provide a system and method to collect pin information for library cells in a first technology, collect pin information for library cells in a second technology, build a pin-mapping table from the collected pin information between the first technology and the second technology, scale the integrated circuit layout with respect to the second technology, and modify the pins in the second technology based on the pin-mapping table.</p>
<p id="p-0019" num="0018">In embodiments, geometric relationships are defined on the layout of the integrated circuit utilizing the first technology. The defined geometric relationships accurately capture the wire connections with respect to the pins of the library cells for the first technology. Subsequently, the pins of the library cells are modified to match pin shapes and locations within the layout of the integrated circuit utilizing the second technology. During the layout migration geometric constraints and linear program (LP) solving may modify the interconnect wires to connect the pins with respect to the library cell of the second technology. Advantageously, the systems and methods of the present invention use the original topography of the first technology to reconnect the pins in the second technology.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIGS. 1-3</figref> show multiple examples of pin mismatches that may occur between library cells of a first technology and library cells of a second technology. The pin mismatches may be caused by location, dimension, and/or topography changes introduced to the pins during the scaling and/or layout migration from the first technology to the second technology. For example, <figref idref="DRAWINGS">FIG. 1</figref> shows a library cell <b>5</b>, e.g., a local clock buffer, designed using a first technology, e.g., 32 nm technology. The library cell <b>5</b> comprises multiple pins <b>15</b> for connecting the devices of the library cell <b>5</b> to interconnect wiring and or other devices of an integrated circuit. <figref idref="DRAWINGS">FIG. 1</figref> also shows a corresponding library cell <b>10</b> designed using the second technology, e.g., 22 nm technology. As can be seen between library cells <b>5</b> and <b>10</b>, the pin <b>20</b> has changed location and dimension due to the scaling and/or layout migration of the library cell between the first technology and the second technology. This change in the location and the dimension of pin <b>20</b> between the first technology and the second technology may cause a misalignment of interconnect wiring if the changes in the location and the dimension of pin <b>20</b> are not accounted for during the layout design phase for the second technology.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 2</figref> shows a library cell <b>25</b>, e.g., a local clock buffer, designed using a first technology, e.g., 32 nm technology. The library cell <b>25</b> comprises multiple pins <b>30</b> for connecting the devices of the library cell <b>25</b> to interconnect wiring and/or devices of the integrated circuit. <figref idref="DRAWINGS">FIG. 2</figref> also shows a corresponding library cell <b>35</b> designed using the second technology, e.g., 22 nm. As can be seen between library cells <b>25</b> and <b>35</b>, the pin <b>40</b> has changed location and the pin <b>45</b> has changed location and topology due to the scaling and/or layout migration of the library cell between the first technology and the second technology. These changes in the location of pin <b>40</b> and the location and the topology of pin <b>45</b> between the first technology and the second technology may cause a misalignment of interconnect wiring if the changes are not accounted for during the layout design phase for the second technology.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 3</figref> shows a library cell <b>50</b>, e.g., a logic cell, designed using a first technology, e.g., 32 nm technology. The library cell <b>50</b> comprises multiple pins <b>55</b> for connecting the devices of the library cell <b>50</b> to interconnect wiring and/or devices of the integrated circuit. <figref idref="DRAWINGS">FIG. 3</figref> also shows a corresponding library cell <b>60</b> designed using the second technology, e.g., 22 nm. As can be seen between library cells <b>50</b> and <b>60</b>, the pin <b>65</b> has changed location and topology due to the scaling and/or layout migration of the library cell between the first technology and the second technology. These changes in the location and the topology of pin <b>65</b> between the first technology and the second technology may cause a misalignment of interconnect wiring if the changes in the location and the topology of pin <b>65</b> are not accounted for during the layout design phase for the second technology.</p>
<p id="p-0023" num="0022">Implementations of the present invention can fix the pin mismatches shown in <figref idref="DRAWINGS">FIGS. 1-3</figref>. As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.</p>
<p id="p-0024" num="0023">Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0025" num="0024">Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.</p>
<p id="p-0026" num="0025">Computer program instructions may also be stored in the computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0027" num="0026">The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 4</figref> shows an illustrative environment <b>100</b> for managing the processes in accordance with the invention. To this extent, the environment <b>100</b> includes a server or other computing system <b>112</b> that can perform the processes described herein. In particular, the server <b>112</b> includes a computing device <b>114</b>. The computing device <b>114</b> can be resident on a network infrastructure or computing device of a third party service provider (any of which is generally represented in <figref idref="DRAWINGS">FIG. 4</figref>).</p>
<p id="p-0029" num="0028">The computing device <b>114</b> also includes a processor <b>120</b>, memory <b>122</b>A, an I/O interface <b>124</b>, and a bus <b>126</b>. The memory <b>122</b>A can include local memory employed during actual execution of program code, bulk storage, and cache memories, which provide temporary storage of at least some program code, in order to reduce the number of times code should be retrieved from bulk storage during execution. In addition, the computing device includes random access memory (RAM), a read-only memory (ROM), and an operating system (O/S).</p>
<p id="p-0030" num="0029">The computing device <b>114</b> is in communication with the external I/O device/resource <b>128</b> and the storage system <b>122</b>B. For example, the I/O device <b>128</b> can comprise any device that enables an individual to interact with the computing device <b>114</b> (e.g., user interface) or any device that enables the computing device <b>114</b> to communicate with one or more other computing devices using any type of communications link. The external I/O device/resource <b>128</b> may be for example, a handheld device, PDA, handset, keyboard, etc.</p>
<p id="p-0031" num="0030">In general, the processor <b>120</b> executes computer program code (e.g., program control <b>144</b>), which can be stored in the memory <b>122</b>A and/or storage system <b>122</b>B. Moreover, in accordance with aspects of the invention, the program control <b>144</b> controls an electronic design automation (EDA) tool <b>150</b> to perform the processes described herein. The EDA tool <b>150</b> can be implemented as one or more program code in the program control <b>144</b> stored in memory <b>122</b>A as separate or combined modules. Additionally, the EDA tool <b>150</b> may be implemented as a separate dedicated processor or several processors to provide the function of this tool. While executing the computer program code, the processor <b>120</b> can read and/or write data to/from memory <b>122</b>A, storage system <b>122</b>B, and/or I/O interface <b>124</b>. The program code executes the processes of the invention. The bus <b>126</b> provides a communications link between each of the components in the computing device <b>114</b>.</p>
<p id="p-0032" num="0031">In embodiments, the EDA tool <b>150</b> can fix pin mismatches caused from swapping library cells during a layout migration. For example, in accordance with aspects of the invention, the EDA tool <b>150</b> can collect pin information for library cells in a first technology, collect pin information for library cells in a second technology, build a pin-mapping table from the collected pin information between the first technology and the second technology, scale the integrated circuit layout with respect to the second technology, and modify the pins in the second technology based on the pin-mapping table.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIGS. 5 and 6</figref> show exemplary flows for performing aspects of the present invention. The steps of <figref idref="DRAWINGS">FIGS. 5 and 6</figref> may be implemented to solve the problem of pin mismatches between different technologies during layout migration. The flowcharts and block diagrams in <figref idref="DRAWINGS">FIGS. 5 and 6</figref> illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowcharts or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the blocks may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustrations, and combinations of blocks in the block diagrams and/or flowchart illustrations, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> depicts an exemplary flow <b>500</b> for a layout migration of library cells from a first technology to a second technology. At step <b>505</b>, an input comprising a netlist or other formatted listing of components and/or circuits and their positions in a first layout (e.g., a first technology layout or an old layout) and ground rules of the second technology is provided. At step <b>510</b>, pin information for library cells in the netlist of the first layout are collected. In embodiments, the pin information includes the name of each pin and the rectangle in a given pin layer that represents each pin. The rectangles are then sorted in a pin-list. In embodiments, the rectangles for each of the pins may be sorted in the pin-list based on a center point of each rectangle, and the sorting criteria can be either from left to right (i.e., non-descending order of the &#x201c;x&#x201d; coordinate of the center points), or from bottom to top (i.e., non-descending order of the &#x201c;y&#x201d; coordinate of the center points), or the non-descending order of the summation of &#x201c;x&#x201d; and &#x201c;y&#x201d; coordinates of the center points.</p>
<p id="p-0035" num="0034">At step <b>515</b>, the library cells of the first layout are converted in an initial pass to a second layout (e.g., a second technology layout or a new layout). In embodiments, this is performed by swapping of library cells of the second technology to convert the library cells of the first layout to the second layout. At step <b>520</b>, pin information for library cells in the second layout is collected. In embodiments, the pin information includes the name of each pin, e.g., two matching pins between the library cell in the first layout and its swapped cell in the second layout may have a same name, and the rectangles in a given pin layer that represent each pin. The rectangles are then sorted in a pin-list, as described above with respect to the first layout.</p>
<p id="p-0036" num="0035">At step <b>525</b>, a pin-mapping table is built to map the pins in library cells of the first layout to pins in library cells of the second layout. In embodiments, the number of rectangles for each pin may be different between the library cells of first technology and the library cells of the second technology because of shifts in topology between corresponding library cells. For example, the number of rectangles for each library cell of the first technology may increase, decrease, or remain equal as compared to each corresponding library cell of the second technology.</p>
<p id="p-0037" num="0036">In embodiments, the rectangles in the first layout are mapped to the rectangles in the second layout based on a mapping cost, e.g., a minimum mapping cost, while taking into consideration an overall shift &#x394; in the &#x201c;y&#x201d; direction with respect to the gates of each library cell, as discussed in further detail below with respect to <figref idref="DRAWINGS">FIG. 6</figref>. The overall shift &#x394; in the &#x201c;y&#x201d; direction may be caused by library cell growth during the scaling process in step <b>515</b>. Advantageously, using the mapping cost and the overall shift &#x394; in the &#x201c;y&#x201d; direction provides an efficient and effective approach to mapping the pins between the two layouts.</p>
<p id="p-0038" num="0037">At step <b>530</b>, all the shapes are deleted except for the pins and representative boundary box of the library cell such that only the pins and the representative boundary box are visible in subsequent steps. At step <b>535</b>, geometric relationships are built for the first layout. In embodiments, a geometry database may be built that provides geometrical relationship information regarding elements (e.g., tiles or rectangles) of the first layout. For example, an integrated circuit is generally composed of multiple layers, and each layer typically includes a collection of shapes (e.g., tiles or rectangles). The shapes may be wires on a routing layer or may be active regions in a diffusion area. On a given layer, two shapes generally overlap one another only if those two shapes are electrically connected. The function of the geometric database is to create an appropriate data structure for each collection of shapes. Advantageously the geometric database allows the wire connections to be captured correctly with respect to the pins of the library cells in the first layout.</p>
<p id="p-0039" num="0038">At step <b>540</b>, all components in the first layout are scaled with respect to the second layout using a predetermined scaling factor. Now the pin-mapping table generated in step <b>525</b> is used to modify the pins from the first layout to match the pin shapes and locations in the second layout.</p>
<p id="p-0040" num="0039">At step <b>545</b>, hierarchical constraints are generated in mathematical form. In embodiments, the first layout and the ground rule files of the second technology are used to define hierarchical constraints of the first layout in mathematical form. Typical ground rules may include spacing rules specifying minimum space between objects, width rules specifying minimum width of some objects, and methodology rules specifying design requirements for assembling library cells. The ground rules ensure manufacturability of the integrated circuit.</p>
<p id="p-0041" num="0040">At step <b>550</b>, an LP problem is generated and solved, and the first layout is modified based on the LP problem. Generating and solving LP problems is a mathematical method for determining a way to achieve a best outcome (e.g., an integrated circuit running with a specified speed or delay) in a given mathematical model for some list of requirements represented as linear relationships. In embodiments, generating the LP problem may comprise building the hierarchical constraints in the form of an initial inequality expression and then deriving the LP problem from the inequality expression by relaxing integer constraints and using relaxation variables on infeasible constraints. As used herein, relaxing integer constraints means that certain constraints are not applied and infeasible constraints means constraints that are not satisfied for the given layout.</p>
<p id="p-0042" num="0041">The LP problem is then solved to obtain an LP solution. For example, the LP problem may be solved by using traditional LP solvers, e.g., interior-point methods or simplex algorithms. Once the LP problem is solved, then a modified first layout is outputted. The modified first layout meets the ground rules and is optimal in terms of predetermined objectives for the second layout.</p>
<p id="p-0043" num="0042">At step <b>555</b>, the library cells of the first layout are replaced with the corresponding library cells of the second technology. In embodiments, each library cell in the first layout is swapped with a new library cell from the second technology. The library cells of the first layout are removed from the layout and the new library cells are placed in the layout to generate the second layout. The new library cells are placed in the layout with same coordinates, orientation, and magnification. Once the new library cells are in position in the layout, the pins are automatically connected to the external wires, as the hierarchical constraints and the LP problem solving in step <b>550</b> are configured to modify the wires to connect to the new locations of the modified pins with respect to the library cells in the new layout. Therefore, the library cell swapping is no longer disruptive to reconnecting the wires to the pins. The swapping of the library cells results in achievement of the second layout for the integrated circuit at step <b>560</b>.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> depicts an exemplary flow <b>600</b> for building a pin-mapping table that takes into consideration a minimum mapping cost and an overall shift &#x394; in the &#x201c;y&#x201d; direction. At step <b>605</b>, the rectangles from the pin-list generated for the first layout at step <b>510</b> (as discussed above with respect to <figref idref="DRAWINGS">FIG. 5</figref>) are paired with the rectangles or a set of rectangles in the pin-list generated for the second layout at step <b>520</b> (as discussed above with respect to <figref idref="DRAWINGS">FIG. 5</figref>). In embodiments, the rectangles are compared according to the order in which the rectangles are sorted within each pin-list, e.g., based on a center point of each rectangle or set of rectangles. At step <b>610</b>, the shift &#x394; in the &#x201c;y&#x201d; direction for all pairs of rectangles is computed or calculated. The shift &#x394; in the &#x201c;y&#x201d; direction may be caused by library cell growth during the scaling process in step <b>515</b> (as discussed above with respect to <figref idref="DRAWINGS">FIG. 5</figref>). In embodiments, the shift &#x394; in the &#x201c;y&#x201d; direction for each pair of rectangles may be calculated using equation (1) with respect to the gate(s) of each library cell.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x394; in <i>y</i>=(center <i>Y </i>location of <i>n</i><sub>1 </sub>rectangle of pin-list for second layout)&#x2212;(center <i>Y </i>location of <i>n</i><sub>1 </sub>rectangle of pin-list for first layout)*the scaling factor&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0045" num="0044">At step <b>615</b>, the calculated shifts &#x394; in the &#x201c;y&#x201d; direction for each pair of rectangles are then compared, and the calculated shift &#x394; with the minimum absolute value is selected as the overall shift &#x394; in the &#x201c;y&#x201d; direction. At step <b>620</b>, the position or coordinates of the rectangles from the pin-list generated for the first layout are adjusted based on the scaling factor and the selected overall shift &#x394; using equation (2).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(center <i>Y </i>location of <i>n</i><sub>1 </sub>rectangle of pin-list for first layout)*the scaling factor+overall shift &#x394; in <i>y</i>&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0046" num="0045">At step <b>625</b>, the mapping costs are computed or calculated for each rectangle in the first layout to each rectangle in the second layout. The mapping cost is defined as the amount of minimum movement (e.g., movement in a two dimensional space) that it would take to place a rectangle from the first layout (in embodiments the position of the rectangle being the adjusted position calculated based on equation (2)) over a new rectangle from the second layout. In embodiments, the mapping cost may be calculated as a cost in the &#x201c;x&#x201d; direction plus a cost in the &#x201c;y&#x201d; direction. In accordance with aspects of the invention, the two dimensions can be treated as independent of one another.</p>
<p id="p-0047" num="0046">The rectangle (e.g., a first layout rectangle) may be expressed as (r1: xl1, yl1&#x2666;xh1, yh1), where xl1 is the &#x201c;x&#x201d; coordinate or position of the left bottom corner of the rectangle, yl1 is the &#x201c;y&#x201d; coordinate or position of the left bottom corner of the rectangle, xh1 is the &#x201c;x&#x201d; coordinate or position of the top right corner of the rectangle, and yh1 is the &#x201c;y&#x201d; coordinate or position of the top right corner of the rectangle. The new rectangle (e.g., a second layout rectangle) may be expressed as (r2: xl2, yl2&#x2666;xh2, yh2), where xl2 is the &#x201c;x&#x201d; coordinate or position of the left bottom corner of the new rectangle, yl2 is the &#x201c;y&#x201d; coordinate or position of the left bottom corner of the new rectangle, xh2 is the &#x201c;x&#x201d; coordinate or position of the top right corner of the new rectangle, and yh2 is the &#x201c;y&#x201d; coordinate or position of the top right corner of the new rectangle.</p>
<p id="p-0048" num="0047">In embodiments, the cost in the &#x201c;x&#x201d; direction may be calculated using equation (3). Assuming the coordinates or position of the rectangle (e.g., a first layout rectangle) is already adjusted (e.g., adjusted with respect to the scaling factors) based on equation (2).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>If (<i>xl</i>2<i>&#x2212;xl</i>1) and (<i>xh</i>2<i>&#x2212;xh</i>1) have the same sign (+/&#x2212;), then<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=max(|<i>xl</i>2<i>&#x2212;xl</i>1<i>|,|xh</i>2<i>&#x2212;xh</i>1|), else<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=|<i>xl</i>2<i>&#x2212;xl</i>1<i>|+|xh</i>2<i>&#x2212;xh</i>1|<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where <i>|a&#x2212;b| </i>denotes the absolute value of (<i>a&#x2212;b</i>).&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0049" num="0048">In embodiments, the cost in the &#x201c;y&#x201d; direction may be calculated using equation (4). Assuming the coordinates or position of the rectangle (e.g., a first layout rectangle) is already adjusted (e.g., adjusted with respect to the scaling factors) based on equation (2).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>If (<i>yl</i>2<i>&#x2212;yl</i>1) and (<i>yh</i>2<i>&#x2212;yh</i>1) have the same sign (+/&#x2212;), then<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=max(|<i>yl</i>2<i>&#x2212;yl</i>1<i>|,|yh</i>2<i>&#x2212;yh</i>1|), else<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=|<i>yl</i>2<i>&#x2212;yl</i>1<i>|+|yh</i>2<i>&#x2212;yh</i>1|<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where |<i>a&#x2212;b</i>| denotes the absolute value of (<i>a&#x2212;b</i>).&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0050" num="0049">In embodiments, the calculated cost in the &#x201c;x&#x201d; direction from equation (3) may then be added to the calculated cost in the &#x201c;y&#x201d; direction from equation (4) to calculate the mapping cost.</p>
<p id="p-0051" num="0050">At step <b>630</b>, each rectangle in the pin-list for the first layout is mapped to each rectangle in the pin-list for the second layout based on calculated mapping costs while taking into consideration the calculated overall shift &#x394; in the &#x201c;y&#x201d; direction. For example, the pair of rectangles with the minimum mapping cost may be mapped together. At step <b>635</b>, the mappings for each rectangle are added to a mapping table.</p>
<p id="p-0052" num="0051">For example, as shown in <figref idref="DRAWINGS">FIG. 7</figref>, the rectangle <b>700</b> from the pin-list generated for the first layout <b>705</b> is paired with a set of rectangles <b>710</b> from the pin-list generated for the second layout <b>715</b>. The shift &#x394; <b>720</b> in the &#x201c;y&#x201d; direction for each pair of rectangles is calculated using equation (1). The calculated shifts &#x394; in the &#x201c;y&#x201d; direction for each pair of rectangles are then compared, and the calculated shift &#x394; with the minimum absolute value is selected as the overall shift &#x394; <b>725</b> in the &#x201c;y&#x201d; direction. The mapping location or coordinates of the rectangle <b>700</b> is then adjusted based on the scaling factor and the overall shift &#x394; <b>725</b> using equation (2).</p>
<p id="p-0053" num="0052">The mapping cost from adjusted location of rectangle <b>700</b> to each rectangle in the set of rectangles <b>710</b> is then calculated using equations (3) and (4). For example, the mapping cost of moving the rectangle <b>700</b> from the adjusted position of (468,3897&#x2666;892,3952) to the position of (420,3880&#x2666;480,3970) for the rectangle <b>730</b> is calculated as 447, the mapping cost of moving the rectangle <b>700</b> from the adjusted position of (468,3897&#x2666;892,3952) to the position of (420,3820&#x2666;880,3880) for the rectangle <b>735</b> is calculated as 125, and the mapping cost of moving the rectangle <b>700</b> from the adjusted position of (468,3897&#x2666;892,3952) to the position of (420,3970&#x2666;880,4030) for the rectangle <b>740</b> is calculated as 126.</p>
<p id="p-0054" num="0053">The rectangle <b>700</b> is then mapped <b>745</b> to the rectangle <b>735</b> based on the mapping cost calculated for each pair of rectangles while taking into consideration the calculated overall shift &#x394; in the &#x201c;y&#x201d; direction. For example, the lowest calculated mapping cost may be used to identify the corresponding rectangle <b>735</b> in the set of rectangles <b>710</b> that corresponds with the rectangle <b>700</b>. The mapping <b>745</b> for rectangles <b>700</b> and <b>735</b> is then added to the mapping table.</p>
<p id="p-0055" num="0054">By way of additional example, as shown in <figref idref="DRAWINGS">FIG. 8</figref>, a set of rectangles <b>800</b> from the pin-list generated for the first layout <b>805</b> are paired with a set of rectangles <b>810</b> from the pin-list generated for the second layout <b>815</b>. The shift &#x394; <b>820</b> in the &#x201c;y&#x201d; direction for each pair of rectangles is calculated using equation (1). The calculated shifts &#x394; in the &#x201c;y&#x201d; direction for each pair of rectangles are then compared, and the calculated shift &#x394; with the minimum absolute value is selected as the overall shift &#x394; <b>825</b> in the &#x201c;y&#x201d; direction. The mapping location or coordinates of each rectangle in the set of rectangles <b>800</b> is then adjusted based on the scaling factor and the overall shift &#x394; <b>825</b> using equation (2). For example, the mapping location or coordinates of rectangle <b>827</b> are adjusted based on the scaling factor and the overall shift &#x394; <b>825</b> using equation (2).</p>
<p id="p-0056" num="0055">The mapping cost from each rectangle in the set of rectangles <b>800</b> to each rectangle in the set of rectangles <b>810</b> is then calculated using equations (3) and (4). For example, the mapping cost of moving the rectangle <b>827</b> from the adjusted position of (200,3822&#x2666;412,3878) to the position of (270,3820&#x2666;420,3880) for the rectangle <b>830</b> is calculated as 74.</p>
<p id="p-0057" num="0056">The rectangle <b>827</b> is then mapped <b>835</b> to the rectangle <b>830</b> from the set of rectangles <b>810</b> based on the mapping cost calculated for each pair of rectangles while taking into consideration the calculated overall shift &#x394; in the &#x201c;y&#x201d; direction. For example, the lowest calculated mapping cost may be used to identify the corresponding rectangle <b>830</b> in the set of rectangles <b>810</b> that corresponds with the rectangle <b>827</b>. The mapping <b>835</b> for rectangles <b>827</b> and <b>830</b> is then added to the mapping table.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram of a design process used in semiconductor design, manufacture, and/or test used with the system and method of the present invention. <figref idref="DRAWINGS">FIG. 9</figref> shows a block diagram of an exemplary design flow <b>900</b> used for example, in semiconductor IC logic design, simulation, test, layout, and manufacture. Design flow <b>900</b> includes processes, machines and/or mechanisms for processing design structures or devices to generate logically or otherwise functionally equivalent representations of the design structures and/or devices. The design structures processed and/or generated by design flow <b>900</b> may be encoded on machine-readable transmission or storage media to include data and/or instructions that when executed or otherwise processed on a data processing system generate a logically, structurally, mechanically, or otherwise functionally equivalent representation of hardware components, circuits, devices, or systems. Machines include, but are not limited to, any machine used in an IC design process, such as designing, manufacturing, or simulating a circuit, component, device, or system. For example, machines may include: lithography machines, machines and/or equipment for generating masks (e.g. e-beam writers), computers or equipment for simulating design structures, any apparatus used in the manufacturing or test process, or any machines for programming functionally equivalent representations of the design structures into any medium (e.g. a machine for programming a programmable gate array).</p>
<p id="p-0059" num="0058">Design flow <b>900</b> may vary depending on the type of representation being designed. For example, a design flow <b>900</b> for building an application specific IC (ASIC) may differ from a design flow <b>900</b> for designing a standard component or from a design flow <b>900</b> for instantiating the design into a programmable array, for example a programmable gate array (PGA) or a field programmable gate array (FPGA) offered by Altera&#xae; Inc. or Xilinx&#xae; Inc.</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 9</figref> illustrates multiple such design structures including an input design structure <b>920</b> that is preferably processed by a design process <b>910</b>. Design structure <b>920</b> may be a logical simulation design structure generated and processed by design process <b>910</b> to produce a logically equivalent functional representation of a hardware device. Design structure <b>920</b> may also or alternatively comprise data and/or program instructions that when processed by design process <b>910</b>, generate a functional representation of the physical structure of a hardware device. Whether representing functional and/or structural design features, design structure <b>920</b> may be generated using electronic computer-aided design (ECAD) such as implemented by a core developer/designer. When encoded on a machine-readable data transmission, gate array, or storage medium, design structure <b>920</b> may be accessed and processed by one or more hardware and/or software modules within design process <b>910</b> to simulate or otherwise functionally represent an electronic component, circuit, electronic or logic module, apparatus, device, or system, which can be implemented with the method and system of the present invention. As such, design structure <b>920</b> may comprise files or other data structures including human and/or machine-readable source code, compiled structures, and computer-executable code structures that when processed by a design or simulation data processing system functionally simulate or otherwise represent circuits or other levels of hardware logic design. Such data structures may include hardware-description language (HDL) design entities or other data structures conforming to and/or compatible with lower-level HDL design languages such as Verilog and VHDL, and/or higher level design languages such as C or C++.</p>
<p id="p-0061" num="0060">Design process <b>910</b> preferably employs and incorporates hardware and/or software modules for synthesizing, translating, or otherwise processing a design/simulation functional equivalent of the components, circuits, devices, or logic structures to generate a netlist <b>980</b> which may contain design structures such as design structure <b>920</b>. Netlist <b>980</b> may comprise, for example, compiled or otherwise processed data structures representing a list of wires, discrete components, logic gates, control circuits, I/O devices, models, etc. that describes the connections to other elements and circuits in an integrated circuit design. Netlist <b>980</b> may be synthesized using an iterative process in which netlist <b>980</b> is resynthesized one or more times depending on design specifications and parameters for the device. As with other design structure types described herein, netlist <b>980</b> may be recorded on a machine-readable data storage medium or programmed into a programmable gate array. The medium may be a non-volatile storage medium such as a magnetic or optical disk drive, a programmable gate array, a compact flash, or other flash memory. Additionally, or in the alternative, the medium may be a system or cache memory, buffer space, or electrically or optically conductive devices and materials on which data packets may be transmitted and intermediately stored via the Internet, or other networking suitable means.</p>
<p id="p-0062" num="0061">Design process <b>910</b> may include hardware and software modules for processing a variety of input data structure types including netlist <b>980</b>. Such data structure types may reside, for example, within library elements <b>930</b> and include a set of commonly used elements, circuits, and devices, including models, layouts, and symbolic representations, for a given manufacturing technology (e.g., different technology nodes, 32 nm, 45 nm, 90 nm, etc.). The data structure types may further include design specifications <b>940</b>, characterization data <b>950</b>, verification data <b>960</b>, design rules <b>970</b>, and test data files <b>985</b> that may include input test patterns, output test results, and other testing information. Design process <b>910</b> may further include, for example, standard mechanical design processes such as stress analysis, thermal analysis, mechanical event simulation, process simulation for operations such as casting, molding, and die press forming, etc. One of ordinary skill in the art of mechanical design can appreciate the extent of possible mechanical design tools and applications used in design process <b>910</b> without deviating from the scope and spirit of the invention. Design process <b>910</b> may also include modules for performing standard circuit design processes such as timing analysis, verification, design rule checking, place and route operations, etc.</p>
<p id="p-0063" num="0062">Design process <b>910</b> employs and incorporates logic and physical design tools such as HDL compilers and simulation model build tools to process design structure <b>920</b> together with some or all of the depicted supporting data structures along with any additional mechanical design or data (if applicable), to generate a second design structure <b>990</b>.</p>
<p id="p-0064" num="0063">Design structure <b>990</b> resides on a storage medium or programmable gate array in a data format used for the exchange of data of mechanical devices and structures (e.g. information stored in an IGES, DXF, Parasolid XT, JT, DRG, or any other suitable format for storing or rendering such mechanical design structures). Similar to design structure <b>920</b>, design structure <b>990</b> preferably comprises one or more files, data structures, or other computer-encoded data or instructions that reside on transmission or data storage media and that when processed by an ECAD system generate a logically or otherwise functionally equivalent form of one or more devices. In one embodiment, design structure <b>990</b> may comprise a compiled, executable HDL simulation model that functionally simulates the devices.</p>
<p id="p-0065" num="0064">Design structure <b>990</b> may also employ a data format used for the exchange of layout data of integrated circuits and/or symbolic data format (e.g. information stored in a GDSII (GDS2), GL1, OASIS, map files, or any other suitable format for storing such design data structures). Design structure <b>990</b> may comprise information such as, for example, symbolic data, map files, test data files, design content files, manufacturing data, layout parameters, wires, levels of metal, vias, shapes, data for routing through the manufacturing line, and any other data required by a manufacturer or other designer/developer to produce a device or structure. Design structure <b>990</b> may then proceed to a stage <b>995</b> where, for example, design structure <b>990</b>: proceeds to tape-out, is released to manufacturing, is released to a mask house, is sent to another design house, is sent back to the customer, etc.</p>
<p id="p-0066" num="0065">The methods as described above are used in the fabrication of integrated circuit chips. The resulting integrated circuit chips can be distributed by the fabricator in raw wafer form (that is, as a single wafer that has multiple unpackaged chips), as a bare die, or in a packaged form. In the latter case the chip is mounted in a single chip package (such as a plastic carrier, with leads that are affixed to a motherboard or other higher level carrier) or in a multichip package (such as a ceramic carrier that has either or both surface interconnections or buried interconnections). In any case, the chip is then integrated with other chips, discrete circuit elements, and/or other signal processing devices as part of either (a) an intermediate product, such as a motherboard, or (b) an end product. The end product can be any product that includes integrated circuit chips, ranging from toys and other low-end applications to advanced computer products having a display, a keyboard or other input device, and a central processor.</p>
<p id="p-0067" num="0066">The descriptions of the various embodiments of the present invention have been presented for purposes of illustration, but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments, the practical application or technical improvement over technologies found in the marketplace, or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>collecting information about at least one first technology pin from at least one library cell in a first technology;</claim-text>
<claim-text>swapping the at least one library cell in the first technology with at least one library cell in a second technology;</claim-text>
<claim-text>collecting information about at least one second technology pin from the at least one library cell in the second technology;</claim-text>
<claim-text>building a pin-mapping table that is configured to map the at least one first technology pin to the at least one second technology pin;</claim-text>
<claim-text>scaling a layout from the first technology to the second technology; and</claim-text>
<claim-text>modifying the layout based on the pin-mapping table to match the at least one first technology pin to the at least one second technology pin while satisfying ground rules of the second technology,</claim-text>
<claim-text>wherein at least the step of modifying the layout is performed using a processor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>information about the at least one first technology pin includes a name of the at least one first technology pin and a first rectangle in a given pin layer that represents the at least one first technology pin; and</claim-text>
<claim-text>the information about the at least one second technology pin includes a name of the at least one second technology pin and a second rectangle in a given pin layer that represents the at least one second technology pin.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein:
<claim-text>the pin-mapping table is built based on a mapping cost between the first rectangle and the second rectangle; and</claim-text>
<claim-text>the mapping cost is based at least on an overall shift in a &#x201c;y&#x201d; direction of the first rectangle.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising sorting the first rectangle with other first technology rectangles representative of other first technology pins in a first pin-list based on center points of the first rectangle and the other first technology rectangles.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising sorting the second rectangle with other second technology rectangles representative of other second technology pins in a second pin-list based on center points of the second rectangle and the other second technology rectangles.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the modifying comprises using a predetermined scaling factor to scale the layout from the first technology to the second technology and swapping in library cells of the second technology.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising deleting all shapes except pins and a representative boundary box of the at least one first technology pin prior to scaling the first technology to the second technology,
<claim-text>wherein the scaling comprises scaling the pins and the representative boundary box with respect to the second technology using a predetermined scaling factor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>generating hierarchical constraints based on the layout of the first technology and a corresponding ground rules file of the second technology;</claim-text>
<claim-text>generating and solving a linear program (LP) problem;</claim-text>
<claim-text>modifying the layout of the first technology based on the solved LP program; and</claim-text>
<claim-text>swapping the at least one library cell in the first technology with at least one library cell in the second technology.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method implemented in a computer infrastructure comprising:
<claim-text>collecting information about first technology pins from a first technology;</claim-text>
<claim-text>collecting information about second technology pins from a second technology;</claim-text>
<claim-text>building a pin-mapping table that is configured to map at least one first technology pin to at least one second technology pin, wherein the pin-mapping table is built based on a mapping cost between a first rectangle representative of the at least one first technology pin and a second rectangle representative of the at least one second technology pin;</claim-text>
<claim-text>scaling a layout from the first technology to the second technology; and</claim-text>
<claim-text>modifying the layout based on the pin-mapping table to match the at least one first technology pin to the at least one second technology pin while satisfying ground rules of the second technology,</claim-text>
<claim-text>wherein at least the step of modifying the layout is performed using a processor of the computer infrastructure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the mapping cost is based at least on an overall shift in a &#x201c;y&#x201d; direction of the first rectangle.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the mapping cost is an amount of minimum movement that it would take to place the first rectangle over the second rectangle.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising performing an initial scaling of the first technology to the second technology prior to collecting information about the second technology pins from the second technology.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the overall shift in the &#x201c;y&#x201d; direction represents library cell growth for the first technology during the initial scaling.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A computer system comprising:
<claim-text>a CPU, a computer readable memory and a computer readable storage media;</claim-text>
<claim-text>first program instructions to pair each rectangle representative of a pin from a first technology to at least one rectangle representative of at least one pin from a second technology;</claim-text>
<claim-text>second program instructions to calculate a shift in a &#x201c;y&#x201d; direction for each of the pairs of rectangles;</claim-text>
<claim-text>third program instructions to compare the calculated shifts in the &#x201c;y&#x201d; direction for each pair of rectangles;</claim-text>
<claim-text>fourth program instructions to select a calculated shift with a minimum absolute value as an overall shift in the &#x201c;y&#x201d; direction from the compared pairs of rectangles;</claim-text>
<claim-text>fifth program instructions to adjusting coordinates of each rectangle from the first technology based on the selected overall shift in the &#x201c;y&#x201d; direction;</claim-text>
<claim-text>sixth program instructions to calculate a mapping cost for each rectangle from the first technology to each rectangle of the second technology using the adjusted coordinates of each rectangle from the first technology; and</claim-text>
<claim-text>seventh program instructions to map each rectangle from the first technology to a rectangle from the second technology such that the mapped rectangles comprise a lowest calculated mapping cost,</claim-text>
<claim-text>wherein the first through seventh program instructions are stored on the computer readable storage media for execution by the CPU via the computer readable memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:
<claim-text>eighth program instructions to add the mappings of each rectangle from the first technology to a mapping table; and</claim-text>
<claim-text>ninth program instructions to modify each pin represented by each rectangle from the first technology based on the pin-mapping table to match the mapped pin represented by each rectangle from the second technology.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the mapping cost is an amount of minimum movement that it would take to place each rectangle from the first technology over each rectangle of the second technology.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein mapping cost comprises a mapping cost in a &#x201c;x&#x201d; direction and a mapping cost in the &#x201c;y&#x201d; direction.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the mapping cost in the &#x201c;x&#x201d; direction is calculated using an equation including:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>If (<i>xl</i>2<i>&#x2212;xl</i>1) and (<i>xh</i>2<i>&#x2212;xh</i>1) have the same sign (+/&#x2212;), then<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=max(|<i>xl</i>2<i>&#x2212;xl</i>1<i>|,|xh</i>2<i>&#x2212;xh</i>1|), else<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=|<i>xl</i>2<i>&#x2212;xl</i>1<i>|+|xh</i>2<i>&#x2212;xh</i>1|<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
</claim-text>
<claim-text>wherein xl1 is an &#x201c;x&#x201d; coordinate or position of a left bottom corner of a rectangle, yl1 is a &#x201c;y&#x201d; coordinate or position of a left bottom corner of the rectangle, xh1 is an &#x201c;x&#x201d; coordinate or position of a top right corner of the rectangle, and yh1 is a &#x201c;y&#x201d; coordinate or position of a top right corner of the rectangle, and |a&#x2212;b| denotes the absolute value of (a&#x2212;b).</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the mapping cost in the &#x201c;y&#x201d; direction is calculated using an equation including:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>If (<i>yl</i>2<i>&#x2212;yl</i>1) and (<i>yh</i>2<i>&#x2212;yh</i>1) have the same sign (+/&#x2212;), then<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=max(|<i>yl</i>2<i>&#x2212;yl</i>1<i>|,|yh</i>2<i>&#x2212;yh</i>1|), else<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Cost=|<i>yl</i>2<i>&#x2212;yl</i>1<i>|+|yh</i>2<i>&#x2212;yh</i>1|<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
</claim-text>
<claim-text>wherein xl2 is an &#x201c;x&#x201d; coordinate or position of a left bottom corner of a new rectangle, yl2 is a &#x201c;y&#x201d; coordinate or position of a left bottom corner of the new rectangle, xh2 is an &#x201c;x&#x201d; coordinate or position of a top right corner of the new rectangle, and yh2 is a &#x201c;y&#x201d; coordinate or position of a top right corner of the new rectangle, and |a&#x2212;b| denotes the absolute value of (a&#x2212;b).</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the shift in the &#x201c;y&#x201d; direction is calculated using an equation including:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>the shift in the &#x201c;<i>y</i>&#x201d; direction=(a center <i>Y </i>location of a <i>n</i><sub>1 </sub>rectangle for the second technology)&#x2212;(a center <i>Y </i>location of a <i>n</i><sub>1 </sub>rectangle for first technology)*a scaling factor between the first technology and the second technology.<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
