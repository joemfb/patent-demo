<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625414-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625414</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13360867</doc-number>
<date>20120130</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370228</main-classification>
<further-classification>370392</further-classification>
<further-classification>709226</further-classification>
</classification-national>
<invention-title id="d2e51">Method for accelerating failover of VPN traffic in an MPLS provider network</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6687245</doc-number>
<kind>B2</kind>
<name>Fangman et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7149917</doc-number>
<kind>B2</kind>
<name>Huang et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7369772</doc-number>
<kind>B2</kind>
<name>Gerstel et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>398 79</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>8107363</doc-number>
<kind>B1</kind>
<name>Saluja</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2002/0191247</doc-number>
<kind>A1</kind>
<name>Lu et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2003/0095554</doc-number>
<kind>A1</kind>
<name>Shimizu</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2005/0083928</doc-number>
<kind>A1</kind>
<name>Sivabalan et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Anderson, L., Framework for Layer 2 Virtual Private Networks (L2VPNs), Network Working Group, Internet Draft, Mar. 2004, 43 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Lassere, M. et al., &#x201c;Virtual Private LAN Services over MPLS,&#x201d; Internet Draft Document, Jun. 2003, 25 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Martini, L et al., &#x201c;Encapsulation Methods for Transport of Ethernet Frames Over IP/MPLS Networks,&#x201d; Network Working Group, Internet Draft, Apr. 2004, 21 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Martini, L et al., &#x201c;Pseudowire Setup and Maintenance using LDP,&#x201d; Network Working Group, Internet Draft, Mar. 2004, 33 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Notice of Allowance for U.S. Appl. No. 10/851,032 mailed Sep. 26, 2011, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Non-final Office Action for U.S. Appl. No. 10/851,032 mailed May 3, 2011, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Notice of Panel Decision from Pre-Appeal Brief Review for U.S. Appl. No. 10/851,032 mailed Feb. 1, 2011, 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Advisory Action for U.S. Appl. No. 10/851,032 mailed Apr. 14, 2010, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Non-final Office Action for U.S. Appl. No. 10/851,032 mailed Aug. 20, 2010, 8 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Final Office Action for U.S. Appl. No. 10/851,032 mailed Jan. 25, 2010, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Non-final Office Action for U.S. Appl. No. 10/851,032 mailed Jun. 11, 2009, 6 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Advisory Action for U.S. Appl. No. 10/851,032 mailed Oct. 10, 2008, 5 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Final Office Action for U.S. Appl. No. 10/851,032 mailed Apr. 18, 2008, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Non-final Office Action for U.S. Appl. No. 10/851,032 mailed Nov. 7, 2007, 6 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Non-final Office Action for U.S. Appl. No. 10/851,032 mailed Sep. 20, 2007, 25 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Non-final Office Action for U.S. Appl. No. 13/360,860 mailed Nov. 20, 2012, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>2</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10851032</doc-number>
<date>20040521</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8107363</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13360867</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Saluja</last-name>
<first-name>Rajesh</first-name>
<address>
<city>Nashua</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Saluja</last-name>
<first-name>Rajesh</first-name>
<address>
<city>Nashua</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Withrow &#x26; Terranova, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Rockstar Consortium US LP</orgname>
<role>02</role>
<address>
<city>Plano</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wu</last-name>
<first-name>Jianye</first-name>
<department>2462</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Failover of VPN traffic between MPLS tunnels may be accelerated by determining a main and a standby MPLS tunnel for each VPN and passing both the main and standby MPLS tunnel information to the forwarding plane of a network element configured to implement the VPN. In the event of failover of a main MPLS tunnel interface, the forwarding plane may be instructed to use the standby MPLS tunnel instead of the main MPLS tunnel. Since the standby MPLS tunnel has already been determined, and information associated with the standby MPLS tunnel has already been provided to the forwarding plane, it is not necessary to recompute a new MPLS tunnel or reprogram the forwarding plane using the new MPLS tunnel information. By removing control plane operations and control plane-forwarding plane interaction from the handling of failovers, the failover recovery time may be accelerated to under 50 ms, to thereby enable VPN connections to handle time sensitive traffic.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="93.13mm" wi="191.01mm" file="US08625414-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="252.14mm" wi="199.56mm" file="US08625414-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.25mm" wi="170.26mm" file="US08625414-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 10/851,032, entitled &#x201c;Method and Apparatus for Accelerating Failover of VPN Traffic in an MPLS Provider Network,&#x201d; which was filed on May 21, 2004, and which is hereby incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to communication networks and, more particularly, to a method and apparatus for accelerating failover of VPN traffic in an MPLS provider network.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Data communication networks may include various computers, servers, nodes, routers, switches, bridges, hubs, proxies, and other network devices coupled together and configured to pass data to one another. These devices will be referred to herein as &#x201c;network elements.&#x201d; Data is communicated through the data communication network by passing protocol data units, such as data frames, packets, cells, or segments, between the network elements by utilizing one or more communication links. A particular protocol data unit may be handled by multiple network elements and cross multiple communication links as it travels between its source and its destination over the network.</p>
<p id="p-0007" num="0006">The various network elements on the communication network communicate with each other using predefined sets of rules, referred to herein as protocols. Different protocols are used to govern different aspects of the communication, such as how signals should be formed for transmission between network elements, various aspects of what the protocol data units should look like, how packets should be handled or routed through the network by the network elements, and how information associated with routing information should be exchanged between the network elements.</p>
<p id="p-0008" num="0007">A Virtual Private Network (VPN) may be formed by securing communications between two or more networks or network elements to form a VPN connection, such as by encrypting or encapsulating transmissions between the networks or network elements. Using VPN connections enables information to be exchanged securely between geographically dispersed sites without obtaining dedicated resources through the network.</p>
<p id="p-0009" num="0008">There are several commonly utilized methods of establishing VPN connections on a network. For example, VPNs may be established by customers through the deployment of network elements configured with VPN software. Another way of establishing VPNs is to configure the VPN at the Provider Edge (PE) network elements to allow the service provider to provision VPN services on behalf of the customer. The service provider also provisions the tunnels between provider edge (PE) elements which are shared by many VPN sites attached to PE. The tunnels traverse through provider (P) network elements which are completely unaware of presence of any VPN. One common way to do this is described in Internet Engineering Task Force (IETF) Request For Comments (RFC) 2547, the content of which is hereby incorporated herein by reference. RFC 2547 describes a Layer 3 VPN architecture in which MultiProtocol Label Switching (MPLS)&#x2014;based tunnels are used to forward VPN packets over the provider network backbone. Another common way to do this is described in IETF Internet Draft (ID) entitled &#x201c;Framework for Layer 2 Virtual Private Networks (L2VPNs), by Eric Rosen, which allows for the creation of Layer 2 VPNs (L2VPNs), the content of which is hereby incorporated herein by reference. Once established, the provider tunnels may be used to pass data between the VPN sites attached to the PE elements on either end of the VPN connection.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a simplified example of a network topology <b>10</b>. In <figref idref="DRAWINGS">FIG. 1</figref>, traffic from a Customer Edge (CE) network element <b>12</b> associated with a first VPN site <b>14</b> is output to a Provider Edge (PE) network element <b>16</b>. The PE <b>16</b> may be a separate device/machine on the network or, alternatively, may be instantiated as a process on another network element. MPLS tunnels <b>18</b>A and <b>18</b>B are determined by the PE network element <b>16</b> and implemented on the network <b>20</b> in a conventional manner. The MPLS tunnels terminate at a second PE network element <b>16</b> which interfaces a CE network element <b>12</b> associated with a second VPN site <b>14</b>. Numerous protocols like RSVP-TE or LDP may be used to establish the MPLS tunnels on the network in a conventional manner.</p>
<p id="p-0011" num="0010">When an end-point of an MPLS tunnel fails, such as when a card or port in the PE network element hosting the MPLS tunnel fails, it is necessary to switch the VPN traffic going over that tunnel to another MPLS tunnel between the same pair of PE elements. Where only one MPLS tunnel has been established between the end points, a new MPLS tunnel will need to be determined. Generally, however, to enable rapid failover of a VPN traffic between MPLS tunnels, multiple MPLS tunnels are set up between pairs of PE elements so that upon failure of one MPLS tunnel (e.g. MPLS tunnel <b>18</b>A), the traffic may be quickly switched to another MPLS tunnel (e.g. MPLS tunnel <b>18</b>B). Selection between available MPLS tunnels occurs via a tunnel selection algorithm.</p>
<p id="p-0012" num="0011">To enable traffic to be transferred at very high data rates, network elements are constructed conventionally with a control plane configured to handle signaling, configuration, and other control information, and a forwarding plane configured to forward data based on lookup tables set in the forwarding plane by the control plane. For example, establishment of MPLS tunnels and mapping of a VPN traffic over an MPLS tunnel or a group of MPLS tunnels is handled by the control plane. MPLS tunnel information for the selected VPN connection is then passed from the control plane to the forwarding plane, which uses that information to program the processors and circuitry forming the forwarding plane to enable it to forward packets associated with the VPN onto the selected MPLS tunnel on the network.</p>
<p id="p-0013" num="0012">When a port or card hosting the MPLS tunnel fails, the control plane needs to detect the failure, choose another MPLS tunnel using a tunnel selection algorithm, and program the forwarding plane with new MPLS tunnel information for the affected VPN connections. Since a given port or card in a PE network element may handle tens of thousands of VPNs, determining new MPLS tunnels for those VPNs and communicating that information from the control plane to the forwarding plane may take between hundreds of milliseconds to well over a second. While this may be an acceptable rate for particular types of traffic, the failover rate must be reduced to the order of 50 milliseconds if the VPN connections are to be able to be used to carry time-sensitive traffic, such as voice, and video traffic.</p>
<p id="p-0014" num="0013">There have been attempts to reduce the failover rate using mechanisms included in the protocols already in use on the network. RSVP-TE is the most commonly used protocol to establish MPLS tunnels in an MPLS network. In RSVP-TE, one mechanism that may be used to reduce the failover rate is to reduce an interval associated with optional RSVP hello messages used to check integrity of the RSVP neighbor for the tunnel to as little as 5 ms, to thereby provide fast notification of a failed link or card. However, this solution is very processor intensive, requiring the generation and transmission of 200 hello messages per RSVP neighbor per second. Additionally, while this provides fast notification of a problem, it does not accelerate the manner in which the network element handles the problem once notified. Thus, where there are thousands or tens of thousands of VPN connections affected, the control plane may be incapable of reprogramming the forwarding plane with new MPLS tunnel information for the affected VPNs within a 50 ms failover period, even if it is notified of the problem in a timely manner.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0015" num="0014">The present invention overcomes these and other drawbacks by providing a method and apparatus for accelerating failover of VPN traffic between MPLS tunnels in a PE network element. According to an embodiment of the invention, a main and a standby MPLS tunnel are determined for each VPN endpoint by a control plane of the network element handling the VPN connection, and main and standby tunnel information is then passed from the control plane to the forwarding plane of the network element. In the event of failover of a main MPLS tunnel, the forwarding plane may be instructed to use the standby MPLS tunnel instead of the main MPLS tunnel. Since the standby tunnel has already been determined, and the standby information has already been provided to the forwarding plane, handling of failovers may be accelerated to under 50 ms to thereby enable VPN connections to handle time sensitive traffic.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0016" num="0015">Aspects of the present invention are pointed out with particularity in the appended claims. The present invention is illustrated by way of example in the following drawings in which like references indicate similar elements. The following drawings disclose various embodiments of the present invention for purposes of illustration only and are not intended to limit the scope of the invention. For purposes of clarity, not every component may be labeled in every figure. In the figures:</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> is a functional block diagram of an example of a communication network;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 2</figref> is a functional block diagram of a network element according to an embodiment of the invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 3</figref> is a functional block diagram illustrating a VPN forwarding table to be used by the forwarding plane of a network element such as the network element of <figref idref="DRAWINGS">FIG. 2</figref> according to an embodiment of the invention; and</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4</figref> is a state diagram illustrating a process of handling failover events according to an embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">The following detailed description sets forth numerous specific details to provide a thorough understanding of the invention. However, those skilled in the art will appreciate that the invention may be practiced without these specific details. In other instances, well-known methods, procedures, components, protocols, algorithms, and circuits have not been described in detail so as not to obscure the invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a PE network element <b>16</b> according to an embodiment of the invention, which is configured to operate on a network such as the network <b>10</b> illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the network element includes a forwarding plane <b>30</b> and a control plane <b>32</b>. The forwarding plane is optimized to make forwarding decisions and handle transmission of packets of data on the network. In the embodiment illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, I/O cards <b>34</b> are interconnected by a switch fabric <b>36</b> to enable data received at a port on one of the I/O cards to be output at another port on the same I/O card or on a different I/O card. The invention is not limited by the particular structure in which the I/O cards are interconnected or a particular architecture in the forwarding plane <b>30</b>.</p>
<p id="p-0023" num="0022">The I/O cards are programmed by the control plane <b>32</b> to forward traffic on particular VPNs over designated MPLS tunnels. Each MPLS tunnel is associated with a particular interface provisioned over one or more of the ports hosted by the I/O cards <b>34</b>. Upon failure of an MPLS tunnel, traffic for that MPLS tunnel will need to be forwarded over another MPLS tunnel going to the same destination PE. According to an embodiment of the invention, the I/O cards may be programmed with standby MPLS tunnel information as well as main MPLS tunnel information, such that upon failure of the main MPLS tunnel, traffic may be switched quickly to the standby MPLS tunnel without requiring the control plane to reprogram that information into the forwarding plane. This enables failover between MPLS tunnels to be accomplished in a very rapid manner to enable the tunnels to carry time sensitive VPN traffic such as voice transmissions and video transmissions.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> also illustrates an embodiment of an I/O card in greater detail. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the I/O card includes a plurality of ports <b>38</b> configured to interface with optical fibers or other physical transmission mediums. For example, the ports <b>38</b> may be gigabit optical interfaces such as gigabit Ethernet ports, or multi-gigabit optical interfaces, although the invention is not limited in this regard.</p>
<p id="p-0025" num="0024">Traffic received over the ports <b>38</b> is passed to a network processing unit <b>40</b> associated with that port. The network processing unit interfaces with a memory <b>42</b> to enable it to perform a service label lookup, IP lookup, or other processing operations on the protocol data units received over the port. A MIPS processor <b>44</b> receives instructions from the control plane <b>32</b> and uses the instructions to program the network processors. Thus, for example, when main and standby MPLS tunnels for a VPN are determined, configuration information as well as main and standby MPLS tunnel information is passed to the MIPS processor <b>44</b>, which then programs the network processing units <b>40</b> with the new information to allow them to handle VPN traffic. Optionally, the main and standby MPLS tunnel information may be stored in tables in memories <b>42</b>, although the invention is not limited in this regard as the memory may be used by the network processing units <b>40</b> in many different ways.</p>
<p id="p-0026" num="0025">The control plane of the network element is configured to implement MPLS tunnels on the network, map a VPN to a set of MPLS tunnels and to program the forwarding plane to enable the forwarding plane to handle traffic on the VPN connections on the network. Although an example of a control plane is illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, the invention is not limited to this particular control plane architecture as numerous control plane architectures may be utilized in connection with embodiments of the invention.</p>
<p id="p-0027" num="0026">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the control plane includes a control processor <b>50</b> containing control logic <b>52</b> configured to implement the functions ascribed to the network element discussed herein. A memory <b>54</b> may be provided including data and instructions to enable the control processor to create VPN connections for the sites attached to this PE <b>56</b>, create MPLS tunnels originating on this PE <b>57</b>, select MPLS tunnels for a VPN using a tunnel selection algorithm <b>58</b>, and manage the VPN connections and MPLS tunnels once created <b>60</b>. Creation, selection, and management of MPLS tunnels on a network is well known in the art and the invention is not limited to any particular manner of implementing these functions in the network element.</p>
<p id="p-0028" num="0027">Optionally, the network element may also include additional software to enable the network element to operate on the network or to perform additional services on the network. For example, the network element may include a protocol stack <b>62</b> containing data and instructions relating to protocols in use on the network to enable the network element to engage in protocol exchanges associated with establishing, maintaining, and terminating MPLS tunnels on the network.</p>
<p id="p-0029" num="0028">Additionally, an Authentication, Authorization, and Accounting (AAA) service <b>64</b> may be implemented on the network element to enable operations on the network associated with MPLS tunnels to take place in a secure environment. The invention is not limited to an embodiment including all or some of these particular features.</p>
<p id="p-0030" num="0029">The control processor <b>50</b> may also have access to store of data, for example for use in connection with creation of VPN connections and MPLS tunnels on the network and mapping of a VPN connection to a set of MPLS tunnels. In the embodiment illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, the control processor has access to a memory <b>66</b> containing VPN tables <b>68</b>, and network topology information <b>70</b>. The memory <b>66</b> may be part of memory <b>54</b> or may be separate, as illustrated. The invention is not limited to how the memory is implemented in the control plane or interfaced to the control plane.</p>
<p id="p-0031" num="0030">The VPN table information <b>68</b> may associate particular VPNs with particular MPLS tunnels determined by a tunnel selection algorithm. Frequently, a PE will maintain a VPN topology that includes multiple sites in multiple locations, and may specify which sites are able to communicate with which other sites. The VPN tables maintain datasets to enable the PE network element to determine how VPN services should be provisioned on the network.</p>
<p id="p-0032" num="0031">The memory <b>66</b> also includes network topology information <b>70</b> to enable it to maintain an understanding of the overall topology of the network. This is advantageous, for example, in the creation of MPLS tunnels on the network and may be obtained in a conventional manner, such as by running OSPF or another routing protocol on the network. The invention is not limited to the manner in which the network topology is created. Other data may be maintained by the network element as well and the invention is not limited to the embodiment illustrated in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one embodiment of a data structure that may be passed to the MIPS to program the forwarding plane according to an embodiment of the invention. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the data structure <b>40</b> includes information associating various VPN connections being handled by the network element with main and standby MPLS tunnels that have been selected to handle traffic of that VPN connection. For example, in the embodiment illustrated in <figref idref="DRAWINGS">FIG. 3</figref>, the forwarding tables include a column of VPN-ID information <b>42</b>, and associated information indicative of the main MPLS tunnel identification <b>44</b> and the standby MPLS tunnel identification <b>46</b>. Optionally, other MPLS tunnel information may be included as well, such as tertiary MPLS tunnel information or other higher order MPLS tunnel information, and the invention is not limited to using only two MPLS tunnel designations.</p>
<p id="p-0034" num="0033">The MPLS tunnel information may take many forms and the invention is not limited to a particular embodiment. For example, the MPLS tunnel information may include an MPLS tunnel ID which may be associated with other information specific to the forwarding plane, such as outgoing port and label information. This information may be maintained in a table <b>40</b>, in another table, or in any other type of data structure. The invention is not limited to the manner in which the forwarding plane implements storage of the information or association of the MPLS tunnel information with physical ports on the network element or MPLS tunnels on the network. Thus, the manner in which the information is stored in the forwarding plane may depend on the implementation details associated with the design of the particular network element.</p>
<p id="p-0035" num="0034">In the embodiment shown in <figref idref="DRAWINGS">FIG. 3</figref>, the main MPLS tunnel associated with VPN-A is Tunnel <b>10</b>, and the standby MPLS tunnel associated with VPN-A is Tunnel <b>23</b>. VPN traffic received for VPN-A will thus be output over Tunnel <b>10</b> unless the control plane receives notification that Tunnel <b>10</b> is down. Upon failover from Tunnel <b>10</b>, the forwarding plane will be instructed to use the standby MPLS tunnel for VPN-A, and traffic for VPN-A will automatically be forwarded over standby Tunnel <b>23</b>. By storing this information in the forwarding plane, the control plane does not need to make a determination as to which MPLS tunnel should be used for the traffic on VPN-A and does not need to communicate the new MPLS tunnel information to the forwarding plane, as the forwarding plane has been pre-programmed with the standby MPLS tunnel information.</p>
<p id="p-0036" num="0035">Upon failover to the standby MPLS tunnel, the previous standby MPLS tunnel will become the new main MPLS tunnel for that VPN and the standby MPLS tunnel will be set to null until reprogrammed by the control plane. Thus, for example in the example illustrated in <figref idref="DRAWINGS">FIG. 3</figref>, upon failover from Tunnel <b>10</b> to Tunnel <b>23</b>, Tunnel <b>23</b> would become the new main MPLS tunnel for VPN-A and, since there is no standby MPLS tunnel, the standby MPLS tunnel value would be set to null until new MPLS tunnel information is supplied by the control plane.</p>
<p id="p-0037" num="0036">The forwarding tables may contain main and standby MPLS tunnel information for all VPNs being handled by the network element or, as illustrated in <figref idref="DRAWINGS">FIG. 3</figref>, standby tunnel information for some of the VPNs may be unpopulated. For example, in <figref idref="DRAWINGS">FIG. 3</figref> there is no standby MPLS tunnel designated for VPN-B. A less than fully populated forwarding table may occur for several reasons. For example, a network operator may choose to specify the implementation and designation of a standby MPLS tunnel only for particular classes of VPN connections, such as where the VPN customer has specified the use of fast failover protection in its Service Level Agreement (SLA). Additionally, a less than fully populated table may occur where a failover has just occurred for the VPN and the control plane is in the process of generating new standby MPLS tunnel information to be downloaded to the forwarding plane. Numerous other reasons may cause the forwarding table to be less than fully populated and the invention is not limited to these two particular examples.</p>
<p id="p-0038" num="0037">By enabling VPN connection information associated with redundant MPLS tunnels to be stored in the forwarding plane, such as main MPLS tunnel information and standby MPLS tunnel information, fast failover from a main MPLS tunnel to a standby MPLS tunnel may be achieved. Specifically, by enabling selection of a failover MPLS tunnel to take place before the failover event occurs, failover is not delayed while the control plane selects a new MPLS tunnel for the failed VPN connection. Additionally, by enabling this selection to be passed to the forwarding plane and maintained in the forwarding plane, reprogramming of the forwarding plane may take place without transmitting the new information to the forwarding plane from the control plane. This further accelerates failover recovery, especially where multiple VPN connections are affected by a given failure.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a process of determining and implementing main and standby MPLS tunnel information in a network element. In the process of <figref idref="DRAWINGS">FIG. 4</figref>, it will be assumed that a suite of MPLS tunnels have been created between the network elements and that VPN services are to be provisioned over the MPLS tunnels. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, when a new VPN service is to be initialized <b>100</b>, the control plane of the network element determines a main MPLS tunnel and at least one standby MPLS tunnel for the VPN <b>102</b>. An MPLS tunnel selection algorithm based on bandwidth load balancing, configured policies and/or another metric may be used to select the MPLS tunnels for the VPN, although the invention is not limited to any particular selection algorithm. Optionally, the standby MPLS tunnel may be selected preferentially to be interfaced to the network element over a different I/O card than the I/O card hosting the main MPLS tunnel, although the invention is not limited in this manner either. Selecting the standby and main MPLS tunnels to be hosted by a different I/O card enhances resiliency by not exposing both MPLS tunnels to a single I/O card failure.</p>
<p id="p-0040" num="0039">The control plane will then pass the main and standby MPLS tunnel information to the forwarding plane <b>104</b> to enable the forwarding plane to be programmed to handle traffic for the new VPN. The information passed to the forwarding plane may include the VPN ID, the main and standby MPLS tunnel IDs, the outgoing port, MAC addresses, and many other pieces of information. Once the information has been passed to the forwarding plane, the process returns <b>106</b>.</p>
<p id="p-0041" num="0040">The control plane will always maintain the main and standby tunnel information for each VPN connection based on the tunnel selection algorithm. Whenever new MPLS tunnels are activated or active tunnels are deactivated between two PE elements, the tunnel selection algorithm may choose a new main and/or standby tunnel for a VPN <b>107</b>. The control plane will then pass the new information to the forwarding plane <b>108</b> and return <b>109</b>.</p>
<p id="p-0042" num="0041">If the control plane receives notice that the main MPLS tunnel is down, or that the I/O port or card hosting the main MPLS tunnel has affected the ability to transport VPN traffic over the outgoing port <b>110</b>, the control plane will instruct the forwarding plane to forward the VPN traffic over the standby MPLS tunnel <b>111</b>. This may be done by sending a high priority message to the MIPS processors <b>44</b> on the relevant I/O cards instructing the MIPS processors to cause the standby MPLS tunnel to be used instead of the main MPLS tunnel. Since the standby MPLS tunnels have already been determined, the control plane does not need to select a new MPLS tunnel for each VPN affected by the failure. Additionally, since this information has been passed to the forwarding plane, it is not necessary to repopulate the forwarding plane tables with the new MPLS tunnel information. Thus, a very fast failover may be achieved in the forwarding plane.</p>
<p id="p-0043" num="0042">Once the failover from the main MPLS tunnel to a standby MPLS tunnel has occurred, the standby MPLS tunnel becomes the new main MPLS tunnel for the affected VPNs and the process returns <b>112</b>. At this point, the control plane may select new standby MPLS tunnel for the affected VPNs. Alternatively, the control plane may select new main and standby MPLS tunnels for the affected VPNs and pass the new MPLS tunnel information to the forwarding plane in due course. Since VPN traffic is being handled by the forwarding plane while the new MPLS tunnel selection takes place, it is not necessary to perform this new MPLS tunnel selection as fast as would have been required if the standby MPLS tunnel information were not available.</p>
<p id="p-0044" num="0043">If a failure associated with the main MPLS tunnel occurs and a standby tunnel has not been designated, either because a standby couldn't be found or because the standby is currently experiencing failure as well, the VPN traffic will be dropped until the control plane can select a new MPLS tunnel to handle the traffic and program the forwarding plane with that information.</p>
<p id="p-0045" num="0044">If the standby MPLS tunnel goes down while traffic for a VPN is being handled by the main MPLS tunnel <b>114</b>, the forwarding plane will continue to handle the traffic using the main MPLS tunnel. Thus, no failover need occur and the control plane can simply find a new standby MPLS tunnel for the VPN. The control plane will select a new MPLS tunnel for the VPN traffic <b>116</b> and will pass that MPLS tunnel information to the forwarding plane to program the forwarding plane with the new standby MPLS tunnel information. Other operations may take place as well and the invention is not limited to these several states or to a process that implements these particular states</p>
<p id="p-0046" num="0045">The control logic described herein may be implemented as a set of program instructions that are stored in a computer readable memory within the network element and executed on a microprocessor. However, it will be apparent to a skilled artisan that all logic described herein can be embodied using discrete components, integrated circuitry, programmable logic used in conjunction with a programmable logic device such as a Field Programmable Gate Array (FPGA) or microprocessor, or any other device including any combination thereof. Programmable logic can be fixed temporarily or permanently in a tangible medium such as a read-only memory chip, a computer memory, a disk, or other storage medium. Programmable logic can also be fixed in a computer data signal embodied in a carrier wave, allowing the programmable logic to be transmitted over an interface such as a computer bus or communication network. All such embodiments are intended to fall within the scope of the present invention.</p>
<p id="p-0047" num="0046">It should be understood that all functional statements made herein describing the functions to be performed by the methods of the invention may be performed by software programs implemented utilizing subroutines and other programming techniques known to those of ordinary skill in the art. It also should be understood that various changes and modifications of the embodiments shown in the drawings and described in the specification may be made within the spirit and scope of the present invention. Accordingly, it is intended that all matter contained in the above description and shown in the accompanying drawings be interpreted in an illustrative and not in a limiting sense. The invention is limited only as defined in the following claims and the equivalents thereto.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of operating a provider edge network element, the provider edge network element comprising a forwarding plane configured to forward packets on a packet network and a control plane configured to control forwarding of packets by the forwarding plane, the method comprising configuring the control plane:
<claim-text>to determine a primary Multiprotocol Label Switching (MPLS) tunnel to a destination provider edge network element for a Virtual Private Network (VPN), the primary MPLS tunnel traversing a first input/output (I/O) card;</claim-text>
<claim-text>to determine a secondary MPLS tunnel to the destination provider edge network element for the VPN, the secondary MPLS tunnel traversing a second I/O card different from the first I/O card; and</claim-text>
<claim-text>after determination of the primary and the secondary MPLS tunnels:
<claim-text>to signal the forwarding plane to forward packets associated with the VPN over the primary MPLS tunnel;</claim-text>
<claim-text>to detect a failure associated with the primary MPLS tunnel; and</claim-text>
<claim-text>in response to detection of the failure, to signal the forwarding plane to forward the packets associated with the VPN over the secondary MPLS tunnel.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising operating the control plane, after signaling the forwarding plane to forward the packets associated with the VPN over the secondary MPLS tunnel, to determine a new secondary MPLS tunnel to the destination provider edge network element for the VPN, the new secondary MPLS tunnel avoiding the detected failure.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising operating the control plane:
<claim-text>after signaling the forwarding plane to forward the packets associated with the VPN over the secondary MPLS tunnel, to designate the secondary MPLS tunnel as the primary MPLS tunnel for the VPN; and</claim-text>
<claim-text>after determining the new secondary MPLS tunnel to the destination provider edge network element for the VPN, to designate the new secondary MPLS tunnel as the secondary MPLS tunnel for the VPN.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising operating the control plane, after determination of the primary and the secondary MPLS tunnels:
<claim-text>to detect a failure associated with the secondary MPLS tunnel; and</claim-text>
<claim-text>in response to detection of the failure, to determine a new secondary MPLS tunnel to the destination provider edge network element for the VPN, the new secondary MPLS tunnel avoiding the failure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the primary MPLS tunnel traverses at least a first provider network element and the secondary MPLS tunnel does not traverse the at least a first provider network element.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the secondary MPLS tunnel traverses at least a second intermediate provider network element different from the at least a first provider network element.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the primary MPLS tunnel traverses a first plurality of intermediate provider network elements; and</claim-text>
<claim-text>the secondary MPLS tunnel traverses a second plurality of intermediate provider network elements, the second plurality of intermediate provider network elements not including the intermediate provider network elements of the first plurality of intermediate provider network elements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the control plane is configured to determine a plurality of respective primary MPLS tunnels and respective secondary MPLS tunnels for a plurality of VPNs.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising operating the control plane to maintain a table associating the plurality of VPNs with the plurality of respective primary MPLS tunnels and the respective secondary MPLS tunnels.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the control plane has access to network topology information for use in determining the plurality of respective primary MPLS tunnels and the respective secondary MPLS tunnels.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the control plane is configured to program the first I/O card with primary MPLS tunnel information and the second I/O card with secondary MPLS tunnel information prior to detecting a failure associated with the primary MPLS tunnel.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the control plane is configured to re-program the first I/O card with new secondary MPLS tunnel information after determining a new secondary MPLS tunnel to the destination provider edge network element for the VPN, the new secondary MPLS tunnel avoiding the detected failure.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the control plane is configured to program a third I/O card with new secondary MPLS tunnel information after determining a new secondary MPLS tunnel to the destination provider edge network element for the VPN, the new secondary MPLS tunnel avoiding the detected failure.</claim-text>
</claim>
</claims>
</us-patent-grant>
