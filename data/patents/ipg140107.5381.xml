<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626481-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626481</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12756775</doc-number>
<date>20100408</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>944</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>50</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>703 14</main-classification>
<further-classification>703 13</further-classification>
</classification-national>
<invention-title id="d2e53">Signal tagging during simulation</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5155836</doc-number>
<kind>A</kind>
<name>Jordan et al.</name>
<date>19921000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 23</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5367468</doc-number>
<kind>A</kind>
<name>Fukasawa et al.</name>
<date>19941100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716102</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2007/0271499</doc-number>
<kind>A1</kind>
<name>Feng et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715502</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>U.S. Appl. No. 12/337,901, filed Dec. 18, 2008, Esser et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sundararajan</last-name>
<first-name>Arvind</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ou</last-name>
<first-name>Jingzhao</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Sundararajan</last-name>
<first-name>Arvind</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Ou</last-name>
<first-name>Jingzhao</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Maunu</last-name>
<first-name>LeRoy D.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Xilinx, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Phan</last-name>
<first-name>Thai</first-name>
<department>2128</department>
</primary-examiner>
<assistant-examiner>
<last-name>Day</last-name>
<first-name>Herng-Der</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Approaches for simulating a circuit design. A block diagram of the circuit design is displayed. Each block has at least one input and at least one output, and at least one of the input or output of each block is connected to another block. Simulation data are input to a simulation model of the circuit design. During simulation of each of a plurality of the sub-circuits with the simulation model, an output data value is determined from one or more input data values to the simulated sub-circuit. Concurrent with determining the output data value, an output tag value corresponding to the output data value is determined. Concurrent with output of the output data value from the simulated sub-circuit, each output tag value is displayed proximate an output signal line from the block corresponding to the sub-circuit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="124.12mm" wi="135.81mm" file="US08626481-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="138.68mm" wi="136.06mm" file="US08626481-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="171.37mm" wi="183.56mm" file="US08626481-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="256.62mm" wi="176.95mm" orientation="landscape" file="US08626481-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="257.64mm" wi="182.20mm" orientation="landscape" file="US08626481-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="256.37mm" wi="182.20mm" orientation="landscape" file="US08626481-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="255.35mm" wi="181.86mm" orientation="landscape" file="US08626481-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="255.02mm" wi="193.04mm" orientation="landscape" file="US08626481-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention generally relates to simulating an electronic circuit design and providing a view of tagged signals relative to a bock diagram of the circuit design.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Electronic circuits are simulated during the design process for purposes of verifying correct behavior and debugging the design if errors are found. The data generated during simulation of the design is typically depicted with a wave form viewer. A waveform viewer generally shows how the value of a signal changes relative to clock cycles during the simulation. The information provided by the waveform viewer is helpful and perhaps necessary to tracing the source of a problem in a design. Debugging the design may require measurement of signal latency and determining the flow and effect of data through the system. However, cross-referencing the signals and relating signal values in a waveform viewer to the logic blocks of the design may be challenging and time-consuming.</p>
<p id="p-0004" num="0003">The present invention may address one or more of the above issues.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">The embodiments of the present invention provide methods and apparatus for simulating a circuit design. In one embodiment, a method includes displaying a block diagram of the circuit design. Each block corresponds to one of a plurality of sub-circuits of the circuit design, and each block has at least one input and at least one output. At least one of the input or output of each block is connected to another block. Simulation data are input to a simulation model of the circuit design. During simulation on a computer system of each of a plurality of the sub-circuits with the simulation model, an output data value is determined from one or more input data values to the simulated sub-circuit. Concurrent with determining the output data value, the method determines an output tag value corresponding to the output data value. Concurrent with output of the output data value from the simulated sub-circuit, each output tag value is displayed proximate an output signal line from the block corresponding to the sub-circuit.</p>
<p id="p-0006" num="0005">In another embodiment, the determining of the output tag value determines the output tag value as a function of one or more input tag values associated with the one or more input data values.</p>
<p id="p-0007" num="0006">For a sub-circuit that is a data storage element, in another embodiment the determining of the output tag value includes assigning a NULL value to the output tag value in response to a reset of the simulated data storage element. For an output tag value that is NULL, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the data storage element.</p>
<p id="p-0008" num="0007">The determining of the output tag value, in another embodiment, determines the output tag value to be a union of two or more input tag values associated with the one or more input data values.</p>
<p id="p-0009" num="0008">In another embodiment, the outputs of the plurality of sub-circuits have associated output tag values. The method further includes initializing the output tag values associated with the outputs of the plurality of sub-circuits to NULL values. An output tag value from a first simulated sub-circuit is an input tag value to a second simulated sub-circuit that is connected to the first simulated sub-circuit. For an output tag value that is NULL for a simulated sub-circuit, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the simulated sub-circuit.</p>
<p id="p-0010" num="0009">The union of a first input tag value that is non-NULL and a second input tag value that is NULL is the non-NULL value in another embodiment.</p>
<p id="p-0011" num="0010">In yet another embodiment, the union of a third input tag value that is non-NULL and a fourth input tag value that is non-NULL is a fifth non-NULL value that is not equal to either the third or fourth non-NULL values. A mapping of the fifth non-NULL value to the third and fourth non-NULL values is stored.</p>
<p id="p-0012" num="0011">The determining of the output tag value, in another embodiment, includes invoking a function associated with the output of the sub-circuit when the output data value is determined during simulation. The associated function generates the output tag value as a function of at least one of the input data values.</p>
<p id="p-0013" num="0012">In another embodiment, the determining of the output tag value for an output designated with default tag handling, determines the output tag value to be a union of two or more input tag values associated with the one or more input data values. The determining of the output tag value for an output of at least one simulated sub-circuit designated with user-defined tag handling, determines the output tag value to be a user-specified value in response to at least one input data value.</p>
<p id="p-0014" num="0013">A system for simulating a circuit design is provided in another embodiment. The system includes a processor and a memory arrangement coupled to the processor. The memory arrangement is configured with instructions that are executable by the processor. When executed by the processor the instructions cause the processor to perform the operations including displaying a block diagram of the circuit design. Each block corresponds to one of a plurality of sub-circuits of the circuit design, and each block has at least one input and at least one output. At least one of the input or output of each block is connected to another block. Simulation data are input to a simulation model of the circuit design. During simulation of each of a plurality of the sub-circuits with the simulation model, an output data value is determined from one or more input data values to the simulated sub-circuit. Concurrent with determining the output data value, an output tag value corresponding to the output data value is determined. Concurrent with output of the output data value from the simulated sub-circuit, each output tag value is displayed proximate an output signal line from the block corresponding to the sub-circuit.</p>
<p id="p-0015" num="0014">In another embodiment, an article of manufacture is provided. The article of manufacture includes a processor-readable storage device configured with program instructions that when executed by one or more processors cause the processors to perform operations including displaying a block diagram of the circuit design. Each block corresponds to one of a plurality of sub-circuits of the circuit design, and each block has at least one input and at least one output. At least one of the input or output of each block is connected to another block. Simulation data are input to a simulation model of the circuit design. During simulation of each of a plurality of the sub-circuits with the simulation model, an output data value is determined from one or more input data values to the simulated sub-circuit. Concurrent with determining the output data value, an output tag value corresponding to the output data value is determined. Concurrent with output of the output data value from the simulated sub-circuit, each output tag value is displayed proximate an output signal line from the block corresponding to the sub-circuit.</p>
<p id="p-0016" num="0015">It will be appreciated that various other embodiments are set forth in the Detailed Description and Claims which follow.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016">Various aspects and advantages of the invention will become apparent upon review of the following detailed description and upon reference to the drawings, in which:</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram that shows a simulation arrangement in accordance with an embodiment of the invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart of a process for simulating a circuit design in accordance with one or more embodiments of the invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 3</figref> shows the block diagram during the simulation at time step n;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 4</figref> shows the block diagram during the simulation at time step n+4;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 5</figref> shows the block diagram during the simulation at time step n+5;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6</figref> shows a waveform view of the simulation depicted in <figref idref="DRAWINGS">FIGS. 3-5</figref>; and</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 7</figref> is a screen shot that shows an example interface for selecting the scheme for defining a tag for a selected signal.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0025" num="0024">Most designs that are specified in a hardware description language (HDL) contain signal elements and state elements. Signal elements describe the logic and connectivity of the design, and state elements are used to temporally partition the design. In a cycle-accurate simulation, the data associated with the state elements are updated with each clock cycle. The embodiments of the present invention provide methods and systems for simulating a circuit design using tags that are associated with the signal and state elements of the design. The values of the tags are displayed during simulation in combination with a block diagram of the circuit design. As an output value from a block is determined and changed during the simulation, a tag value is displayed near the corresponding signal line of the block diagram. The tagging of signals may be used to observe latency from the occurrence of one signal value to the effect on another signal in the design in the context of a block diagram of the design. The tagging also allows the viewer to observe the occurrence of a wavefront of signal states resulting from a selected signal.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram that shows a simulation arrangement <b>100</b> in accordance with an embodiment of the invention. The simulation arrangement <b>100</b> includes simulation system <b>102</b>, which is coupled to a display device <b>104</b>. The simulation system constructs a simulation model <b>106</b> from an input circuit design <b>108</b>. During simulation, the simulation system displays a block diagram of the circuit design. The example block diagram includes multiple logic blocks, such as blocks <b>112</b>, <b>114</b>, and <b>116</b>. The simulation is driven with simulation input data <b>118</b>.</p>
<p id="p-0027" num="0026">The embodiments of the invention use tags that are associated with signals of the design. The values of the tags are updated during the simulation as the signal states are updated, and the tag values are displayed in combination with a line that represents the associated signal in the block diagram. In the example block diagram, a tag x is displayed near the signal line output from block <b>112</b>, and the tag y is displayed near the output signal line from block <b>114</b>. The times at which the tags are displayed correspond to the times during the simulation at which the signal states are updated.</p>
<p id="p-0028" num="0027">The definition of a tag is accompanied by an algebra for updating the value of the tag, consistent with updating the data field during the simulation. One of three alternatives may be used in updating a tag. One approach is a hand-off scheme, another approach is a data-based application programming interface (API), and a third approach is an object oriented scheme.</p>
<p id="p-0029" num="0028">According to the hand-off scheme, the tag value associated with an output signal of a block is updated with data that describe the source signals input to the block. This scheme can be used to monitor wavefronts associated with a particular signal. This data tagging approach may also be used to control a debugger to freeze simulation and for debugging data synchronization issues.</p>
<p id="p-0030" num="0029">In the hand-off scheme, &#x3c;NULL&#x3e; is the initial value of all tags. In order to introduce a tag value, a particular block in the design may be configured to generate a tag value based on parameters associated with the block and on the signal values. Alternatively, a tag and tag value could be associated with a signal based on the time of simulation and value of the signal.</p>
<p id="p-0031" num="0030">A union operation on the tag values associated with two or more input data values to a binary logic operation is performed to produce the output tag value. For example, if the tag values tag_a and tag_b are associated with the two input data values to a logic operation, the output tag value is {tag_a, tag_b}. In order to reduce the memory overhead associated with the tags, the simulation system automatically generates a unique tag value, for example tag_c, and maintains an associative map of the unique tag values and the associated set of tag values. For example, the map would map tag_c to {tag_a, tag_b}. Operations that involve a &#x3c;NULL&#x3e; tag value and a non-&#x3c;NULL&#x3e; tag value result in a hand-off of the non-&#x3c;NULL&#x3e; tag value. For example, if the tag values tag_a and &#x3c;NULL&#x3e; are associated with the two input data values to a logic operation, the output tag value is {tag_a, &#x3c;NULL&#x3e;}=tag_a. It will be appreciated that the hand-off scheme may be extended for use with operations having more than two inputs so long as n algebra is defined to handle the input tag values. The particular algebra may be selected according to simulation requirements.</p>
<p id="p-0032" num="0031">In the hand-off scheme, tag values are handed off across storage elements upon either a rising or falling edge of each clock cycle, depending on the simulation environment and whether the start of each cycle of the simulation environment is mapped to the rising edge or falling of a clock. For cycle-accurate simulation, the hand-off of a tag value accounts for any latency of a storage element. For example, if three cycles are required for reading from a RAM memory, the tag hand-off takes a corresponding three cycles. Reset or initialization of a storage element causes the associated tag value to be reset to &#x3c;NULL&#x3e;.</p>
<p id="p-0033" num="0032">In another embodiment, the updating of tag values may use an API approach. In the API approach, an API function is associated with signal and state elements of the design. The API function is called in response to the data representing the signal value or state information being updated by the simulation system over the course of simulation. The API approach may be used to inject a tag value during the simulation by way of dynamically marking a data element with a tag value which can be monitored during simulation. An example use is to detect the presence of an invalid data value and its progression in a feedback loop. In some instances a feedback loop may become unstable when data are processed by the feedback loop multiple times, and an invalid value is generated at certain iteration. It may be extremely difficult to observe when and where this kind of instability occurs using traditional techniques, especially if the number of iterations is large before the next invalid value is generated. Using a data tagging technique, a tag value can be conditionally generated based on whether the value is invalid or not. When the tag value is generated, one can trace back to the original block in the design that generated the invalid value.</p>
<p id="p-0034" num="0033">Control signals may be dynamically tagged, and the propagation of the tags could be used to observe the activity of parts of a system through the flow of the injected tags. In addition, the existence of such tags may be used to trigger other debugging operations such as simulation freeze.</p>
<p id="p-0035" num="0034">In the object-oriented approach, the designer specifies an expression that is associated with a signal and that is parsed with each simulation cycle. A tag value is injected into the simulation for the signal based on the evaluation of the expression. The expression may include input and output tag values of the block in combination with input and output data values of the block.</p>
<p id="p-0036" num="0035">In another embodiment, the simulation system may define a default tag handling scheme, where the user can override the default scheme on selected ones of the state and signal elements. For example, the default scheme could be the hand-off scheme with &#x3c;NULL&#x3e; tag values, and the user could define a non-&#x3c;NULL&#x3e; tag value on one of the signals. During simulation, the propagation of the non-&#x3c;NULL&#x3e; tag value and display on the block diagram would depict the data flow resulting from the tagged signal.</p>
<p id="p-0037" num="0036">Those skilled in the art will appreciate that various alternative computing arrangements, including one or more processors and a memory arrangement configured with program code, would be suitable for hosting the processes and data structures and implementing the various embodiments of the simulation system <b>102</b>. In addition, program code that implements the processes may be provided via a variety of computer-readable storage media or delivery channels such as magnetic or optical disks or tapes, electronic storage devices, or as application services over a network.</p>
<p id="p-0038" num="0037">The simulation system may include one or more processors (not shown) coupled to a memory/storage arrangement (not shown). The architecture of the computing arrangement depends on implementation requirements, as would be recognized by those skilled in the art. The processor may be one or more general purpose processors, or a combination of one or more general purpose processors and suitable co-processors, or one or more specialized processors (e.g., RISC, pipelined, etc.).</p>
<p id="p-0039" num="0038">The memory/storage arrangement may be hierarchical storage, for example, as is commonly found in computing arrangements. Such hierarchical storage typically includes multiple levels of cache memory, a main memory, and local and/or remote persistent storage such as provided by magnetic disks (not shown). The memory/storage arrangement may include one or both of local and remote memory/storage, remote storage being coupled to the processor arrangement via a local area network, for example.</p>
<p id="p-0040" num="0039">The processor arrangement executes the software stored in memory/storage arrangement, and reads data from and stores data to the memory/storage arrangement according to the processes described above. An operating system (not shown) manages the resources of the computing arrangement.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart of a process for simulating a circuit design in accordance with one or more embodiments of the invention. At step <b>202</b>, a simulation model is prepared from an input circuit design. The simulation model may be generated using conventional tools adapted to handle tagged signals as described herein. The input specification may include annotations that specify which elements are to be tagged. Alternatively, the elements may be tagged after the simulation model is generated via a graphical user interface, for example.</p>
<p id="p-0042" num="0041">As part of the simulation, a block diagram of the circuit design is displayed at step <b>204</b>, and the displaying of the block diagram is concurrent with the running of the simulation at step <b>206</b>. Each block corresponds to a sub-circuit of the design, and the displayed blocks are connected with lines that represent the signals that pass from one block to another.</p>
<p id="p-0043" num="0042">As with most simulations, the running of the simulation is event driven. That is, steps <b>208</b> and <b>214</b> are performed in response to the scheduling of a simulation event. Step <b>208</b> illustrates concurrent computation of the output data values (step <b>210</b>) for one or more sub-circuits of the design and computation of tag values for the sub-circuits (step <b>212</b>). The computing of a tag value is by one of the methods described above. That is, the tag value may be a hand-off of one or more tag values input to a block, the tag value may be injected by way of an API function that is invoked in response to the state of the simulation at occurrence of the event, or the tag value may be derived from an expression associated with the signal.</p>
<p id="p-0044" num="0043">Step <b>214</b> illustrates concurrent output of data values from one or more simulated sub-circuits of the design and the display of output tag values from the simulated sub-circuits. Output of data and tag values during the simulation are performed in response to a simulation event. At step <b>216</b> the simulation provides the output data as an input data value to one or more blocks that are connected to the block providing the output data value. At step <b>217</b>, the simulation provides the output tag value as an input tag value to the connected blocks. The tag value is displayed near the output signal line of the block providing the output at step <b>218</b>. The processing of steps <b>208</b> and <b>214</b> is repeated for subsequently scheduled events of the simulation.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIGS. 3-5</figref> contain screen shots taken at three times during simulation of an example circuit. The example screen shots show tagging of output data from simulated sub-circuits of the design. <figref idref="DRAWINGS">FIG. 3</figref> shows the block diagram during the simulation at time step n, <figref idref="DRAWINGS">FIG. 4</figref> shows the block diagram during the simulation at time step n+4, and <figref idref="DRAWINGS">FIG. 5</figref> shows the block diagram during the simulation at time step n+5.</p>
<p id="p-0046" num="0045">The block diagram shows a circuit having input ports <b>302</b>, <b>304</b>, and <b>306</b>. The input ports are connected to respective delay circuits <b>308</b>, <b>310</b>, and <b>312</b>. Delay circuits <b>308</b> and <b>310</b> provide inputs to adder <b>314</b>, and the outputs of adder <b>314</b> and delay circuit <b>312</b> provide inputs to multiplier <b>316</b>. The output of multiplier <b>316</b> provides the input to gain circuit <b>318</b>, which in turn provides output to output port <b>324</b>. The output of multiplier <b>316</b> is also provided as one of the inputs to adder <b>320</b>, which receives its other input as feedback from delay register <b>322</b>. Delay register has its data input connected to the output of the adder <b>320</b> and a reset port connected to a register held at 0. The output of the register <b>322</b> is connected to output port <b>326</b>, which along with output port <b>324</b>, provides results <b>328</b>.</p>
<p id="p-0047" num="0046">During simulation at time step n, the output value of adder <b>314</b> is computed and provided to multiplier <b>316</b>. Concurrent with computing the output data value of adder <b>314</b>, the associated tag value is generated. In one embodiment, tags can be programmatically inserted by any of the blocks based on certain conditions. For example, the condition set could be quantization overflow and the tagging would permit the user to temporally observe the effect of the overflow as the overflow data moves through the design. In another example embodiment in which the hand-off scheme is used, the computed tag value is the union of the tag values associated with the signals at input ports a and b of the adder <b>314</b>. Concurrent with providing the data value to the multiplier <b>316</b>, the tag value tag_a is displayed near the signal line connecting the adder and multiplier. In this manner the user is able to observe the flow of data through the block diagram. While actual signal values could be displayed in association with block outputs, displaying actual signal values at all locations could slow down the simulation. Also, limiting the display to tag values allows one to focus on specific areas of interest as marked by non-null tag values.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 4</figref> shows the block diagram of <figref idref="DRAWINGS">FIG. 3</figref> at time step n+4 in the simulation. Since the multiplier <b>316</b> incurs a delay of 4 time steps from the input of data to the output of value data, tag_a is not displayed at the output of the multiplier until time step n+4. Note that the tag value tag_a is also displayed at the output of adder <b>320</b> during time step n+4. Since the adder does not incur any delay in computing the sum, the tag value is available at the output of adder <b>320</b> during the same simulation time step as the tag value is available at the output of the multiplier <b>316</b>.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 5</figref> shows the block diagram of <figref idref="DRAWINGS">FIG. 3</figref> at time step n+5 in the simulation. At time step n+5, the tag value tag_a is displayed at the output of register <b>322</b>, which introduced a delay of one time step in the data path.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 6</figref> shows a waveform view of the simulation depicted in <figref idref="DRAWINGS">FIGS. 3-5</figref> and illustrates how the simulation views presented in the embodiments of the present invention aid in observing circuit behavior during simulation. In simulating complex circuits it may be difficult to trace the flow of data through the different components of a design when relying on a waveform view such as that illustrated in <figref idref="DRAWINGS">FIG. 6</figref>. The designer may have to cross reference between the waveform view and the system design to perform diagnostics and debugging.</p>
<p id="p-0051" num="0050">Correlating the data in the waveform with design blocks may be difficult since the names of the data values in the waveform may not explicitly indicate the logic blocks from which the data were generated. For example, the data values are labeled a1, m1, a2, and r1. Though these labels correspond to the outputs of adder <b>314</b>, multiplier <b>316</b>, adder <b>320</b>, and register <b>322</b>, respectively, it may be difficult in many cases to draw the correspondences and then correlate the output values to the flow of data through the design.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 7</figref> is a screen shot that shows an example interface for selecting the scheme for defining a tag for a selected signal. In the example, the signal b of adder <b>314</b> has been chosen. According to one embodiment, there are three options for defining the tag on a signal. Each option is selectable with an association selection button.</p>
<p id="p-0053" num="0052">In the default approach (block <b>704</b>), the input tag value is handed off or carried forward to the next instance where a tag is to be determined. In the example adder <b>314</b>, the tag is carried forward and used in determining the value of the tag for the output signal (a+b) from the adder.</p>
<p id="p-0054" num="0053">In the routine call approach (block <b>706</b>), the designer specifies a routine to be called when a signal is updated. For an input signal, such as b, the routine call approach may not be applicable. The routine call would be applicable for the output signal a+b of the adder. The routine may be specified as a path name of the routine to be called.</p>
<p id="p-0055" num="0054">In the tag injection approach (block <b>708</b>), the designer specifies an expression that is parsed with each simulation cycle. A tag is injected into the simulation for the signal based on the evaluation of the expression. The expression may include input and output tag values of the block in combination with input and output data values of the block.</p>
<p id="p-0056" num="0055">In another embodiment, the display of individual tags during simulation may be controlled. The user can specify which tag values are to be displayed in different portions of the block diagram and design. For example, the user may designate tag_a to be visible and tag_b to be hidden in a first portion of the block diagram, and designate tag_b to be visible and tag_a to be hidden in a first portion of the block diagram. The visualization property is selectable with buttons associated with on and off selections (<b>710</b> and <b>712</b>).</p>
<p id="p-0057" num="0056">The present invention is thought to be applicable to a variety of systems for simulating electronic circuit designs. Other aspects and embodiments of the present invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and illustrated embodiments be considered as examples only, with a true scope and spirit of the invention being indicated by the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of simulating a circuit design, comprising:
<claim-text>displaying a block diagram of the circuit design, each block corresponding to one of a plurality of sub-circuits of the circuit design, each block having at least one input and at least one output, and at least one of the input or output of each block being connected to another block;</claim-text>
<claim-text>inputting simulation input data to a simulation model of the circuit design; and</claim-text>
<claim-text>during simulation on a computer system of each of a plurality of the sub-circuits with the simulation model, performing steps including:
<claim-text>determining an output data value from one or more input data values to the simulated sub-circuit;</claim-text>
<claim-text>concurrent with determining the output data value, determining an output tag value corresponding to the output data value; and</claim-text>
<claim-text>displaying each output tag value proximate an output signal line from the block corresponding to the sub-circuit and concurrent with output of the output data value from the simulated sub-circuit;</claim-text>
<claim-text>wherein each output tag value is displayed at a time responsive to the corresponding output data value being changed during simulation.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining of the output tag value determines the output tag value as a function of one or more input tag values associated with the one or more input data values.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein for a sub-circuit that is a data storage element, the determining of the output tag value includes assigning a NULL value to the output tag value in response to a reset of the simulated data storage element, and for an output tag value that is NULL, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the data storage element.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more input data values include two or more input data values, and the determining of the output tag value determines the output tag value to be a union of two or more input tag values associated with the two or more input data values.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:
<claim-text>wherein the outputs of the plurality of sub-circuits have associated output tag values;</claim-text>
<claim-text>initializing the output tag values associated with the outputs of the plurality of sub-circuits to NULL values;</claim-text>
<claim-text>wherein an output tag value from a first simulated sub-circuit is an input tag value to a second simulated sub-circuit that is connected to the first simulated sub-circuit; and</claim-text>
<claim-text>wherein for an output tag value that is NULL for a simulated sub-circuit, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the simulated sub-circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>wherein the union of a first input tag value that is non-NULL and a second input tag value that is NULL is the non-NULL value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:
<claim-text>wherein the union of a third input tag value that is non-NULL and a fourth input tag value that is non-NULL is a fifth non-NULL value that is not equal to either the third or fourth non-NULL values; and</claim-text>
<claim-text>storing a mapping of the fifth non-NULL value to the third and fourth non-NULL values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>wherein the determining of the output tag value includes invoking a function associated with the output of the sub-circuit when the output data value is determined during simulation; and</claim-text>
<claim-text>the associated function generates the output tag value as a function of at least one of the input data values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the one or more input data values include two or more input data values;</claim-text>
<claim-text>the determining of the output tag value for an output designated with default tag handling, determines the output tag value to be a union of two or more input tag values associated with the two or more input data values; and</claim-text>
<claim-text>the determining of the output tag value for an output of at least one simulated sub-circuit designated with user-defined tag handling, determines the output tag value to be a user-specified value in response to at least one input data value to the at least one simulated sub-circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system for simulating a circuit design, comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a memory arrangement coupled to the processor, wherein the memory is configured with instructions that are executable by the processor, and when executed by the processor the instructions causing the processor to perform operations including:
<claim-text>displaying a block diagram of the circuit design, each block corresponding to one of a plurality of sub-circuits of the circuit design, each block having at least one input and at least one output, and at least one of the input or output of each block being connected to another block;</claim-text>
<claim-text>inputting simulation input data to a simulation model of the circuit design; and</claim-text>
<claim-text>during simulation of each of a plurality of the sub-circuits with the simulation model, performing steps including:
<claim-text>determining an output data value from one or more input data values to the simulated sub-circuit;</claim-text>
<claim-text>concurrent with determining the output data value, determining an output tag value corresponding to the output data value; and</claim-text>
<claim-text>displaying each output tag value proximate an output signal line from the block corresponding to the sub-circuit and concurrent with output of the output data value from the simulated sub-circuit;</claim-text>
<claim-text>wherein each output tag value is displayed at a time responsive to the corresponding output data value being changed during simulation.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the determining of the output tag value determines the output tag value as a function of one or more input tag values associated with the one or more input data values.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein for a sub-circuit that is a data storage element, the determining of the output tag value includes assigning a NULL value to the output tag value in response to a reset of the simulated data storage element, and for an output tag value that is NULL, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the data storage element.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the one or more input data values include two or more input data values, and the determining of the output tag value determines the output tag value to be a union of two or more input tag values associated with the two or more input data values.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, the operations further including:
<claim-text>wherein the outputs of the plurality of sub-circuits have associated output tag values;</claim-text>
<claim-text>initializing the output tag values associated with the outputs of the plurality of sub-circuits to NULL values;</claim-text>
<claim-text>wherein an output tag value from a first simulated sub-circuit is an input tag value to a second simulated sub-circuit that is connected to the first simulated sub-circuit; and</claim-text>
<claim-text>wherein for an output tag value that is NULL for a simulated sub-circuit, the displaying includes not displaying an output tag value proximate the output signal line from the block corresponding to the simulated sub-circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the operations further including:
<claim-text>wherein the union of a first input tag value that is non-NULL and a second input tag value that is NULL is the non-NULL value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the operations further including:
<claim-text>wherein the union of a third input tag value that is non-NULL and a fourth input tag value that is non-NULL is a fifth non-NULL value that is not equal to either the third or fourth non-NULL values; and</claim-text>
<claim-text>storing a mapping of the fifth non-NULL value to the third and fourth non-NULL values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, the operations further including:
<claim-text>wherein the determining of the output tag value includes invoking a function associated with the output of the sub-circuit when the output data value is determined during simulation; and</claim-text>
<claim-text>the associated function generates the output tag value as a function of at least one of the input data values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, the operations further including:
<claim-text>wherein the determining of the output tag value for an output designated with default tag handling, determines the output tag value to be a union of two or more input tag values associated with the one or more input data values; and</claim-text>
<claim-text>wherein the determining of the output tag value for an output of at least one simulated sub-circuit designated with user-defined tag handling, determines the output tag value to be a user-specified value in response to at least one input data value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. An article of manufacture, comprising:
<claim-text>a non-transitory processor-readable storage device configured with program instructions that when executed by one or more processors cause the one or more processors to perform operations including:</claim-text>
<claim-text>displaying a block diagram of the circuit design, each block corresponding to one of a plurality of sub-circuits of the circuit design, each block having at least one input and at least one output, and at least one of the input or output of each block being connected to another block;</claim-text>
<claim-text>inputting simulation input data to a simulation model of the circuit design; and</claim-text>
<claim-text>during simulation of each of a plurality of the sub-circuits with the simulation model, performing steps including:
<claim-text>determining an output data value from one or more input data values to the simulated sub-circuit;</claim-text>
<claim-text>concurrent with determining the output data value, determining an output tag value corresponding to the output data value; and</claim-text>
<claim-text>displaying each output tag value proximate an output signal line from the block corresponding to the sub-circuit and concurrent with output of the output data value from the simulated sub-circuit;</claim-text>
</claim-text>
<claim-text>wherein each output tag value is displayed at a time responsive to the corresponding output data value being changed during simulation. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
