<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626491-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626491</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13655337</doc-number>
<date>20121018</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>27</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>704  9</main-classification>
<further-classification>704  4</further-classification>
<further-classification>704  5</further-classification>
<further-classification>704  7</further-classification>
<further-classification>704  8</further-classification>
<further-classification>704 10</further-classification>
</classification-national>
<invention-title id="d2e51">Selecting terms in a document</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>8122016</doc-number>
<kind>B1</kind>
<name>Lamba et al.</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707723</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2007/0073678</doc-number>
<kind>A1</kind>
<name>Scott et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2007/0073745</doc-number>
<kind>A1</kind>
<name>Scott et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2010/0049703</doc-number>
<kind>A1</kind>
<name>Coiera</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>22</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>37</number-of-drawing-sheets>
<number-of-figures>43</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12757899</doc-number>
<date>20100409</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8315849</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13655337</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130103389</doc-number>
<kind>A1</kind>
<date>20130425</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>Wal-Mart Stores, Inc.</orgname>
<address>
<city>Bentonville</city>
<state>AR</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Gattani</last-name>
<first-name>Abhishek</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Rajaraman</last-name>
<first-name>Anand</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Stevens</last-name>
<first-name>David R.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Stevens Law Group</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Wal-Mart Stores, Inc.</orgname>
<role>02</role>
<address>
<city>Bentonville</city>
<state>AR</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Saint Cyr</last-name>
<first-name>Leonard</first-name>
<department>2658</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Determining a mapping between a textual representation in a document and a concept is disclosed. A document is received. A set of candidate textual representations in the document is identified. For at least one candidate textual representation included in the set, an associated concept included in a taxonomy of concepts is determined. The candidate textual representation and the associated concept are provided as output.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="175.43mm" wi="223.52mm" file="US08626491-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="223.18mm" wi="176.11mm" orientation="landscape" file="US08626491-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="227.58mm" wi="177.38mm" file="US08626491-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="241.81mm" wi="171.37mm" file="US08626491-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="235.20mm" wi="162.22mm" orientation="landscape" file="US08626491-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="126.15mm" wi="142.07mm" file="US08626491-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="128.52mm" wi="130.98mm" file="US08626491-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="125.39mm" wi="155.28mm" file="US08626491-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.26mm" wi="146.39mm" orientation="landscape" file="US08626491-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="196.43mm" wi="120.82mm" file="US08626491-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="172.13mm" wi="128.61mm" file="US08626491-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="222.59mm" wi="178.99mm" orientation="landscape" file="US08626491-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="147.83mm" wi="93.47mm" file="US08626491-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="141.05mm" wi="121.58mm" file="US08626491-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="215.31mm" wi="173.65mm" orientation="landscape" file="US08626491-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="226.48mm" wi="169.25mm" orientation="landscape" file="US08626491-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="213.36mm" wi="129.96mm" file="US08626491-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="231.22mm" wi="181.53mm" file="US08626491-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="224.71mm" wi="151.55mm" file="US08626491-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="185.76mm" wi="140.89mm" file="US08626491-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="231.90mm" wi="59.69mm" orientation="landscape" file="US08626491-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="226.57mm" wi="148.51mm" file="US08626491-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="211.67mm" wi="175.94mm" orientation="landscape" file="US08626491-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="242.40mm" wi="175.94mm" orientation="landscape" file="US08626491-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="190.67mm" wi="114.38mm" file="US08626491-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="198.97mm" wi="154.77mm" file="US08626491-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="182.71mm" wi="178.99mm" file="US08626491-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="153.92mm" wi="160.70mm" file="US08626491-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="209.80mm" wi="174.07mm" orientation="landscape" file="US08626491-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="211.07mm" wi="171.37mm" file="US08626491-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="183.13mm" wi="142.58mm" file="US08626491-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="154.43mm" wi="150.71mm" file="US08626491-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="205.99mm" wi="186.77mm" file="US08626491-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="237.49mm" wi="183.98mm" file="US08626491-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="155.96mm" wi="150.96mm" file="US08626491-20140107-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="228.43mm" wi="163.24mm" file="US08626491-20140107-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="227.67mm" wi="172.72mm" orientation="landscape" file="US08626491-20140107-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="159.26mm" wi="141.14mm" file="US08626491-20140107-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED U.S. APPLICATIONS DATA</heading>
<p id="p-0002" num="0001">This application is a continuation to U.S. application Ser. No. 12/757,899, filed Apr. 9, 2010. The application is incorporated herein by reference for all purposes.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Manually determining which words in a document are keywords or are otherwise of more relevance and/or interest than other words in the document is typically a time consuming process and is thus generally not appropriate when used in conjunction with a large corpus of documents. Attempts to automatically determine such words are also problematic. For example, one automated approach is to count the number of occurrences of each word in the document and designate as &#x201c;key&#x201d; words those occurring the most frequently. Unfortunately, the most frequently occurring words may not be what a human would consider to be the most important. Automatic attempts to select particular words are generally further exacerbated if the document includes complexities such as contractions, slang usages, and acronyms.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003">Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of an environment in which documents are processed.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2A</figref> illustrates an embodiment of a portion of a web page as rendered in a browser.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates an embodiment of a portion of a web page as rendered in a browser.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of a data processing engine.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a mapping between a set of textual representations and a set of concepts.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a process for resolving an ambiguity.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an updated mapping between a set of textual representations and a set of concepts.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a portion of output generated by a document processing engine.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an embodiment of a process for determining a mapping between a textual representation in a document and a concept.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an embodiment of a process for categorizing a document.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 11</figref> is a chart illustrating the distance between textual representations.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an embodiment of a process for including a hyperlink in a document.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 15</figref> illustrates an embodiment of a process for delivering an article.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an embodiment of a system for creating a hierarchy of concepts from a corpus of documents.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 17A</figref> is a portion of an arc list according to one embodiment.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 17B</figref> is a portion of a vertex list according to one embodiment.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 17C</figref> is a portion of an arc list according to one embodiment.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 17D</figref> is a portion of a subtree preferences list according to one embodiment.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 18</figref> is a flow chart illustrating an embodiment of a process for creating a hierarchy of concepts from a corpus of documents.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 19</figref> illustrates an example of a vector of weights according to one embodiment.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 20</figref> is a flow chart illustrating an embodiment of a process for creating a hierarchy of concepts from a corpus of documents.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an example of a portion of a concept hierarchy.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an example of a hierarchy of information types according to some embodiments.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 23</figref> illustrates an example of a system for categorizing a query.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 24</figref> illustrates an example of a process for categorizing a query.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 25</figref> illustrates an example of scores determined as part of a process for associating a query with a concept.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 26</figref> illustrates an example of a process for cleaning concepts.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 27</figref> illustrates an example of a concept hierarchy and scores associated with a query.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 28</figref> illustrates an example of a system for categorizing a query.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 29</figref> illustrates an example of a process for categorizing a query.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 30</figref> illustrates an example of a portion of a process for categorizing a query.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 31</figref> illustrates an example of a page that includes dynamically selected components, as rendered in a browser.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 32</figref> illustrates an example of a system for delivering a page that includes a plurality of modules.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 33</figref> is a flow chart illustrating an embodiment of a process for delivering a page that includes a plurality of modules.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 34</figref> is a flow chart illustrating an embodiment of a process for delivering a page that includes a plurality of modules.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 35A</figref> illustrates an example of a page layout.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 35B</figref> illustrates an example of a page layout.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 35C</figref> illustrates an example of a page layout.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 35D</figref> illustrates an example of a page layout.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 36</figref> illustrates an embodiment of a process for providing information to a module.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0048" num="0047">The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and/or a processor, such as a processor configured to execute instructions stored on and/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term &#x2018;processor&#x2019; refers to one or more devices, circuits, and/or processing cores configured to process data, such as computer program instructions.</p>
<p id="p-0049" num="0048">A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of an environment in which documents are processed. In the example shown, a user of client <b>116</b> (hereinafter &#x201c;Alice&#x201d;) uses a web browser to access a variety of sites <b>118</b>-<b>124</b>. Site <b>118</b> hosts a blog that belongs to Alice's friend, Joe. Joe uses site <b>118</b> to make astronomy-related blog posts and to engage in discussions with readers of his blog via a commenting feature. Site <b>120</b> is a medically-themed message board on which users discuss various medical conditions and other topics with one another. Site <b>122</b> is a news aggregation service. Visitors to site <b>122</b> provide information about their interests and are provided with personalized news feeds. Site <b>124</b> belongs to the company for which Alice works, Acme Corporation. Site <b>124</b> securely makes available internal documents to users such as Alice that have appropriate credentials.</p>
<p id="p-0051" num="0050">In the example shown, documents, such as document <b>102</b>, are provided to document processing system <b>104</b> for processing. Examples of documents include blog posts made on site <b>118</b>, forum messages exchanged on site <b>120</b>, news articles made available through site <b>122</b>, the various types of documents served by site <b>124</b>, and any other text (in formats such as HTML, TXT, PDF, etc.) as applicable.</p>
<p id="p-0052" num="0051">In various embodiments, for a given document <b>102</b>, document processing engine <b>106</b> produces two types of output&#x2014;a list of entities <b>110</b> and a document vector <b>112</b>. As used herein, an entity is a pair of items&#x2014;a textual representation (i.e., a string of text appearing in the document) and a concept associated with the textual representation. Unlike the textual representation (which is literally present in the document), the associated concept need not be literally present in the document. Instead, the concept is present in a taxonomy, such as is stored in database <b>108</b>.</p>
<p id="p-0053" num="0052">As one example, suppose a news article describes the saving of a baby from a fire by a dog. An excerpt from the article reads &#x201c;The small, heroic sheltie saved baby Fred on Tuesday.&#x201d; When the article is provided to system <b>104</b>, one example of an entity <b>110</b> that is generated is (&#x201c;sheltie&#x201d;,&#x201c;Shetland Sheepdog&#x201d;). The first portion of the pair (the textual representation) is the fourth word of the excerpt. The second portion of the pair is the associated concept that is included in a taxonomy of concepts&#x2014;the canonical name of the breed of dog also known as a &#x201c;sheltie.&#x201d; Document vector <b>112</b> is a ranked list of concepts associated with the document. An example of a document vector <b>112</b> for the dog article is: (pets:10, dogs:6, Shetland Sheepdog:4, arson:2) with each concept having an associated score. In various embodiments, the associated scores are normalized between 0 and 1.</p>
<p id="p-0054" num="0053">The administrators of sites <b>118</b>-<b>122</b> (also referred to herein as &#x201c;publishers&#x201d;) each communicate with system <b>104</b> via portal <b>114</b>. Through the portal, they configure information about their respective sites and also specify preferences for how the processing of system <b>104</b> is performed with respect to their documents. Joe (the owner of site <b>118</b>) has specified that system <b>104</b> should automatically tag the blog posts that he writes with appropriate keywords and should also insert hyperlinks into the posts that lead to informative topical pages. He is too busy to include such links in his posts when he writes them and uses system <b>104</b> to improve the experience of his readers. In some embodiments, if advertisements are displayed on the topical pages to which Joe's pages link, he is afforded a share of the revenue generated from the advertisements. Tags and links are generated by Joe's blog software, in conjunction with an application program interface (API) provided by system <b>104</b>, when he submits a new entry.</p>
<p id="p-0055" num="0054">The administrator of site <b>120</b> has configured the site to prohibit, for security and spam minimization reasons, message board contributors from including hyperlinks in their messages. When viewers access site <b>120</b>, however, posts appear to include relevant, informative links. As with Joe's blog, many of the links direct users to custom generated topical pages. In addition, for concepts that monetize well (e.g., diet drugs), a small number of links to advertising sites (or sites other than the topical pages) are included. Links can also direct users to other pages within the publisher's site or network of sites.</p>
<p id="p-0056" num="0055">The administrator of site <b>120</b> provides various configuration information to system <b>104</b>. System <b>104</b> makes available to the administrator a snippet of JavaScript code that is embedded in each page of site <b>120</b>. When visitors to site <b>120</b> retrieve content from the site, execution of the embedded JavaScript results in the text of the page being viewed (i.e. a page of message board posts) being provided to system <b>104</b>, a set of entities determined, and an appropriate set of hyperlinks being included in the page as rendered. The links can be configured to appear as any other links that might be present (i.e., using the same color scheme) but can also be made to appear different from other links. Behavior such as whether following a link should open the new page in the same window or a new window can also be specified. Unlike the approach used by site <b>118</b> (in which static links are generated once, at the time the article is created), which terms are linked and the destination pages associated with those links can change over time. Links can also open an overlay on hover, or on click, which displays content and/or advertisements that are relevant to the linked concept. For example, if a famous rock musician is selected for linking, on the click of a user, an overlay can be created that includes music videos associated with that rock musician.</p>
<p id="p-0057" num="0056">When users of site <b>122</b> first visit the site, they provide a list of topics that are of interest to them. Examples include &#x201c;entrepreneurism&#x201d; and &#x201c;dog health.&#x201d; When new news articles are detected by site <b>122</b>, they are processed (via an API) by system <b>104</b>. System <b>104</b> provides back to site <b>122</b> a document vector <b>112</b>. As will be described in more detail below, articles are selectively provided to users based on the user's interests and the concepts included in the articles' document vectors.</p>
<p id="p-0058" num="0057">In the environment shown, Acme Corporation owns a document processing system <b>126</b> that provides functionality similar to that of system <b>104</b>. System <b>126</b> is configured to receive as input various internal documents and to categorize and summarize those documents in accordance with the techniques described herein.</p>
<p id="p-0059" num="0058">The techniques described herein can also be used to process documents without the explicit cooperation of a publisher or other document source. For example, client <b>130</b> includes a web browser application that is configured to use a plugin <b>132</b> that is in communication with site <b>104</b>. When a user of client <b>130</b> visits a page on website <b>128</b>, the plugin provides a copy of the page to system <b>104</b>. System <b>104</b> processes the document in accordance with the techniques described herein and provides information to plugin <b>132</b> that is used when the browser application renders the page for the user. Plugin <b>132</b> can be configured to provide a variety of enhancements to the user's viewing experience pages. As one example, the browser can include additional links in the rendered page (similar to the functionality of site <b>120</b>). The browser can also provide a separate window, frame, or sidebar into which information, such as a summary of the page, key terms in the page, concepts related to the page, and even custom widgets/modules, are displayed, without altering the rendering of the page itself.</p>
<p id="p-0060" num="0059">In the example shown in <figref idref="DRAWINGS">FIG. 1</figref>, system <b>104</b> comprises standard commercially available server hardware (e.g., having a multi-core processor, 4G+ of RAM, and Gigabit network interface adaptors) running a typical server-class operating system (e.g., Linux). In various embodiments, system <b>104</b> is implemented across a scalable infrastructure comprising multiple such servers, solid state drives, and other applicable high-performance hardware.</p>
<p id="p-0061" num="0060">Whenever system <b>104</b> is described as performing a task (such as communicating with a client or accessing information in a database), either a single component or a subset of components or all components of system <b>104</b> may cooperate to perform the task. Similarly, whenever a component of system <b>104</b> is described as performing a task, a subcomponent may perform the task and/or the component may perform the task in conjunction with other components. In various embodiments, portions of system <b>104</b> are provided by one or more third parties. As one example, database <b>108</b> stores a taxonomy comprising millions of concepts. The taxonomy can be created by system <b>104</b> (using techniques described in more detail below) and can also be supplied to system <b>104</b> by a separate component, or by a third party. As another example, database <b>108</b> also includes various statistical information, such as inverse document frequency information, that can be periodically computed by system <b>104</b>, supplied by a separate component, or provided by a third party.</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 2A</figref> illustrates an embodiment of a portion of a web page as rendered in a browser. In the example shown, Joe is preparing to make a new blog post. He is asked to supply a title for the post in region <b>202</b> and to provide the body of the post in region <b>204</b>. By selecting box <b>206</b>, Joe is indicating that he would like system <b>104</b> to automatically select portions of the body of his post and generate hyperlinks for those portions. Joe may choose to select this box because he is too busy to carefully annotate his post. Another reason Joe may choose to select this box is because he is unsure of which terms he should select to link and/or which destination pages would be best to link to for a given term. By selecting box <b>208</b>, Joe is indicating that he would like system <b>104</b> to automatically tag the post with a few key concepts.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates an embodiment of a portion of a web page as rendered in a browser. The page shown in <figref idref="DRAWINGS">FIG. 2B</figref> was created as a result of Joe supplying a title <b>252</b> and a body of text <b>256</b> to the interface shown in <figref idref="DRAWINGS">FIG. 2A</figref>. When Joe selected submit button <b>210</b>, title <b>252</b> and body <b>256</b> were transmitted by Joe's blog server software to system <b>104</b>. System <b>104</b> processed the received title and body (collectively, a document) and returned to site <b>118</b> a set of tags to be included in region <b>254</b> and instructions on which phrases in body <b>256</b> should have associated hyperlinks, as well as URL information for each such hyperlink.</p>
<p id="p-0064" num="0063">Using techniques described in more detail below, system <b>104</b> was able to determine that Joe's post pertains to the Lunar Reconnaissance Orbiter, as well as to cameras, as indicated in region <b>254</b>. System <b>104</b> also determined that a total of ten hyperlinks should be included and that those ten hyperlinks should be distributed with a higher concentration of links toward the top portion of the body and a more sparse distribution of links toward the bottom.</p>
<p id="p-0065" num="0064">As mentioned above, system <b>104</b> allows Joe to configure, via portal <b>114</b>, a variety of preferences for how system <b>104</b> processes his documents. As one example, Joe can specify constraints on where visitors will be directed by the inserted hyperlinks. In the example shown in <figref idref="DRAWINGS">FIG. 2B</figref>, Joe has made the following customization choices: (1) When businesses or organizations mentioned in his articles are selected by system <b>104</b>, Joe would like visitors to be directed to the canonical websites of those locations. Thus, if a visitor such as Alice were to click on link <b>258</b>, she would be directed to www.agu.org, the main site of the American Geophysical Union. In various embodiments, this is made possible by the taxonomy stored in database <b>108</b>, including information such as an associated website for each concept, or for some subset of concepts. The associated website can be scraped and can also be manually included in the taxonomy by an administrator of system <b>104</b> and/or by a representative of the business/organization, such as via portal <b>114</b>. (2) When a phrase selected (that is not a business or organization) has a corresponding entry in Wikipedia, Joe would like visitors to be directed to the appropriate Wikipedia page. Thus, if a visitor were to click on link <b>260</b>, he would be directed to http://en.wikipedia.org/wiki/Lunar_Reconnaissance_Orbiter, a Wikipedia entry about the orbiter. (3) Finally, for any phrases selected by system <b>104</b> which do not match either of the aforementioned situations, Joe would like visitors to be directed to an automatically generated topic page (described in more detail below). When Joe's visitors are directed to the automatically generated topic page, Joe will receive a portion of any advertising revenue generated by those visitors as they encounter advertisements on the automatically generated topic page.</p>
<p id="p-0066" num="0065">Joe has selected three different types of destination URLs because he believes that the customizations he has made will result in the most appealing experience for his visitors. Joe can also leave the URL selection up to system <b>104</b> entirely, can specify that only phrases with corresponding Wikipedia pages be linked (even if it results in fewer than ten hyperlinks being inserted), can specify that links to those topic pages generating the most revenue be preferred over other links, etc.</p>
<p id="p-0067" num="0066">Joe can also customize how and which tags (<b>254</b>) are selected. One purpose of tagging a post is to allow visitors who are interested in one of the tagged subjects to quickly find other blog posts on the site that pertain to that subject by clicking on the appropriate tag. Rather than selecting tags <b>254</b> from among all of the potentially millions of concepts stored in database <b>108</b>, Joe has specified that system <b>104</b> should select tags only from those tags already in use on his site. If he chooses, Joe can instead specify that tags be selected from a list of 50 subjects he has previously specified as being acceptable, can specify that he be prompted by site <b>118</b> to approve any tags selected by system <b>104</b> that have not previously be used on site <b>118</b>, or other any other appropriate configuration.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of a data processing engine. Data processing engine <b>106</b> is of a modular design and employs a blackboard architecture in which various modules (if included) contribute to computation and refinement of various calculations (such as the computation of vectors <b>310</b>-<b>314</b>) as applicable. Some of the processing performed by the modules of data processing engine <b>106</b> is parallelizable, such as natural language processing and textual representation detection. Further, the processing performed by engine <b>106</b> is customizable through the use of configuration file <b>318</b> (e.g., allowing documents from different publishers to be processed differently). Additional detail on various aspects of data processing engine <b>106</b> will now be provided.</p>
<p id="p-0069" num="0068">Conversion/Preprocessing</p>
<p id="p-0070" num="0069">When a document, such as document <b>102</b>, is received, if applicable, preprocessor <b>302</b> converts the document (e.g. from a DOC or PDF file) or otherwise extracts (e.g. from HTML or XML) a plaintext representation of the content of the document. Preprocessor <b>302</b> is also configured to handle special characters, such as by converting occurrences of the &#x201c;&#x26;&#x201d; sign into whitespace or into the word &#x201c;and.&#x201d;</p>
<p id="p-0071" num="0070">Boundary Processing/Position Information</p>
<p id="p-0072" num="0071">Boundary processor <b>304</b> is configured to recognize certain types of boundaries within a document based on the format of the document (e.g., &#x3c;head&#x3e;, &#x3c;body&#x3e;, &#x3c;h1&#x3e;, and &#x3c;p&#x3e; HTML tags) and can also parse configuration information supplied by publishers regarding the formatting of documents on their sites. Documents provided to processor <b>106</b> by the interface shown in <figref idref="DRAWINGS">FIG. 2A</figref> include two sections&#x2014;a title section and a body section. In some embodiments, document boundaries are ignored and the processing of boundary processor <b>304</b> is omitted. In various embodiments, boundary processor <b>304</b> is also configured to store, for each term in the document, the position of the term. As one example, the first word in the document would have a position <b>0</b>, the second word in the document would have a position <b>1</b>, and so on. As will be described in more detail below, terms that appear in one section of a document (such as a title) may be scored or otherwise treated differently than terms that appear in another section (such as in the comments). In addition, publishers can use sections to enforce preferences, such as that all terms appearing in a document be used to categorize the document, but that only terms appearing in the main body (and not the title or comments sections) be able to be associated with hyperlinks. Such preferences can be provided by the publisher via configuration <b>318</b>.</p>
<p id="p-0073" num="0072">Natural Language Processing</p>
<p id="p-0074" num="0073">Natural language processor <b>306</b> is configured to determine part-of-speech information for each term in the document. In various embodiments, natural language processor <b>306</b> uses part-of-speech tags, such as are provided by the Brown corpus, to tag each term in the document. Using the article shown in <figref idref="DRAWINGS">FIG. 2B</figref> as an example, &#x201c;NASA's&#x201d; would be tagged &#x201c;NP$,&#x201d; meaning that it is a possessive proper noun. As will be described in more detail below, in various embodiments, different parts of speech are assigned different scores and those scores can be used in evaluating textual representations.</p>
<p id="p-0075" num="0074">Textual Representation Detection</p>
<p id="p-0076" num="0075">Whitelist <b>320</b>, extracted from the taxonomy stored in database <b>108</b>, is a list of all of the concepts that are included in the taxonomy. Textual representation detector <b>308</b> is configured to perform a greedy match against the document using whitelist <b>320</b>. Each match is included in a list of candidate textual representations <b>324</b>. Using the first line of the article shown in <figref idref="DRAWINGS">FIG. 2B</figref> as an example &#x201c;NASA,&#x201d; &#x201c;mission,&#x201d; &#x201c;orbit,&#x201d; and &#x201c;moon,&#x201d; would each be included in the list of candidate textual representations <b>324</b>. Suppose &#x201c;Lunar&#x201d; and &#x201c;Lunar Reconnaissance Orbiter&#x201d; are both phrases that are included in whitelist <b>320</b> but &#x201c;Lunar Reconnaissance&#x201d; is not. Because detector <b>308</b> is configured to perform a greedy match, &#x201c;Lunar Reconnaissance Orbiter&#x201d; will be added to the list of candidate textual representations <b>324</b> while the other two terms will not. In various embodiments, detector <b>308</b> is configured to perform other types of matches, instead of or in addition to greedy matches. In some embodiments, all matches (e.g. both &#x201c;Lunar&#x201d; and &#x201c;Lunar Reconnaissance Orbiter&#x201d;) are added to list <b>324</b>.</p>
<p id="p-0077" num="0076">Leading Prepositions</p>
<p id="p-0078" num="0077">Suppose &#x201c;The American&#x201d; and &#x201c;American Pie&#x201d; are both concepts included in whitelist <b>320</b>, but that &#x201c;The American Pie&#x201d; is not. Also suppose that document <b>102</b> includes the string &#x201c;The American Pie movie is showing at the Downtown Theatre tomorrow.&#x201d; When performing its greedy match, detector <b>308</b> might add to list <b>324</b> two entries, &#x201c;The American&#x201d; and &#x201c;Pie,&#x201d; erroneously omitting &#x201c;American Pie.&#x201d; To address this problem, in some embodiments, detector <b>308</b> employs a prepositional rule in which, when a match that includes at its start a preposition is detected, the preposition is temporarily ignored and the greedy match continues using the next word in the document. If a match is found, the preposition is discarded and the phrase that does not include it is used. In this example, because &#x201c;The American&#x201d; includes a leading preposition, &#x201c;The&#x201d; would be temporarily ignored, and a match of &#x201c;American Pie&#x201d; would be detected. From the three words, &#x201c;The American Pie,&#x201d; only one entry would be added to list <b>324</b>&#x2014;&#x201c;American Pie.&#x201d;</p>
<p id="p-0079" num="0078">Without further refinement, the list of candidate textual representations <b>324</b> might include virtually every word in document <b>102</b>. Accordingly, in various embodiments, textual representation detector <b>308</b> employs additional logic to refine the list of candidate textual representations. As will be described in more detail below, the candidate list can be refined/pruned both before and after feature vectors for items on the candidate list are populated.</p>
<p id="p-0080" num="0079">Static And Runtime Blacklists</p>
<p id="p-0081" num="0080">In various embodiments, textual representation detector <b>308</b> is configured to exclude from inclusion in list <b>324</b> those textual representations that match a blacklist <b>316</b>. Stop words (such as &#x201c;a,&#x201d; &#x201c;about,&#x201d; &#x201c;again,&#x201d; and &#x201c;would&#x201d;) are one example of terms that can be included in a static blacklist. A publisher can also provide custom blacklists (referred to herein as &#x201c;runtime&#x201d; blacklists) that should be considered by engine <b>106</b> when processing that particular publisher's documents. As one example, a publisher may blacklist the names of competitors. As another example, the publisher may have an agreement with a third-party advertising company that certain words be directed to that advertising company. By employing a blacklist, the publisher can prevent the already-contracted-for words from being considered by engine <b>106</b>. Publishers can also specify constraints such as requiring that all textual representations belong to one or more verticals (also referred to herein as &#x201c;top level categories&#x201d;) specified by the publisher, which will be described in more detail below.</p>
<p id="p-0082" num="0081">Concept-Based Blacklists</p>
<p id="p-0083" num="0082">Concepts included in a taxonomy can be used to bias/prune candidate textual representations, as will be described in more detail below. As with the examples described in the previous section, concept-based blacklists can be static (e.g., applied to all documents) or runtime (e.g., used according to a configuration supplied by a publisher or other runtime clue). For example, an administrator of engine <b>106</b> can configure as blacklisted concepts &#x201c;chronology&#x201d; and &#x201c;days of the week.&#x201d; Child topics such as &#x201c;Monday&#x201d; and &#x201c;1997&#x201d; would be blacklisted as a result. As another example, message board publisher <b>120</b> can indicate a preference for health-themed textual representations by specifying the vertical, &#x201c;Health,&#x201d; as a whitelisted concept in configuration <b>318</b>. Publisher <b>122</b> can indicate a preference against adult-themed textual representations by specifying the vertical &#x201c;Adult Entertainment&#x201d; as a blacklisted concept. Instead of supplying whitelists/blacklists, in some embodiments publishers assign weights to various categories, so that higher weighted categories are given preference over lower weighted categories by engine <b>106</b>. As one example, publisher <b>122</b> could provide the following: &#x201c;Health(1); Sports(0.5)&#x201d; indicating a preference for health-related concepts but also indicating that sports concepts should be considered. In yet another embodiment, plugin <b>132</b> can be configured to provide a concept &#x201c;signature&#x201d; for Alice&#x2014;a customized list of Alice's topical preferences, such as: &#x201c;Science(1); Animals(0.5); Entertainment(0.4); Travel(0.4); Sports(&#x2212;1).&#x201d;</p>
<p id="p-0084" num="0083">In various embodiments, concept whitelist/blacklist information is passed in at runtime via the provider of document <b>102</b> instead of or in addition to being supplied via configuration <b>318</b>. Whitelist information can also be collected on behalf of a publisher, without requiring the publisher to manually specify category preferences. One way of accomplishing this is as follows. When a publisher initially decides to use the services provided by system <b>106</b>, system <b>106</b> performs the document categorization techniques described herein across the corpus of documents included in the publisher's site and collects together the dominant concepts into a concept whitelist.</p>
<p id="p-0085" num="0084">Regular Expression Patterns</p>
<p id="p-0086" num="0085">In various embodiments, textual representation detector <b>308</b> is configured to exclude from inclusion in list <b>324</b> those textual representations that match a regular expression. As one example, as a result of converter/preprocessor <b>302</b> manipulating document <b>102</b>, a term such as &#x201c;AT&#x26;T GSM&#x201d; may be converted to &#x201c;AT T GSM.&#x201d; Suppose &#x201c;TGSM&#x201d; is a concept included in whitelist <b>320</b>. During the greedy match portion, &#x201c;TGSM&#x201d; may be erroneously added to candidate list <b>324</b>. A regular expression pattern that discards matches that begin with a lone &#x201c;T&#x201d; or a lone &#x201c;S&#x201d; can be used to prevent the erroneous match from being included.</p>
<p id="p-0087" num="0086">Proper Noun Sequences</p>
<p id="p-0088" num="0087">In various embodiments, textual representation detector <b>308</b> is configured to evaluate proper nouns included in list <b>324</b> and remove from the list those proper nouns that have an adjacent proper noun that was not selected. One purpose of this rule is to prevent one person that has a famous last name (but is not that famous person) from being erroneously recognized as the famous person. Suppose an article discusses a chemist named John Mozart and that &#x201c;Mozart&#x201d; is added to list <b>324</b> as a result of the greedy match. Since &#x201c;John Mozart&#x201d; is not included in whitelist <b>320</b>, it is not included in list <b>324</b>. Detector <b>308</b> is configured to recognize that Mozart was added, has an adjacent proper noun (&#x201c;John&#x201d;) and to remove &#x201c;Mozart&#x201d; from list <b>324</b>.</p>
<p id="p-0089" num="0088">Initial Feature Vector Population</p>
<p id="p-0090" num="0089">Vector populator <b>326</b> is configured to populate a feature vector <b>310</b> for each candidate textual representation included in list <b>324</b>. A feature vector comprises a set of various signals associated with the textual representation. The signals can be used in various ways, as will be described in more detail below. Some of the signal information is obtained from analyzing document <b>102</b> and other information is obtained from data included in database <b>108</b>.</p>
<p id="p-0091" num="0090">One signal, denoted herein as &#x201c;TitleTF,&#x201d; indicates the number of times that the term appears in the title section of the document. Using the textual representation, &#x201c;Lunar Reconnaissance Orbiter,&#x201d; as shown at <b>260</b> in <figref idref="DRAWINGS">FIG. 2</figref> as an example, that term is not present in the title section of the document and thus has a TitleTF=0. &#x201c;BodyTF&#x201d; is a signal that indicates the number of times that the term appears in the body section of the document. The term, &#x201c;Lunar Reconnaissance Orbiter&#x201d; has a BodyTF=1 because it is present once in the body section of the document. Another textual representation, &#x201c;LRO,&#x201d; also has a TitleTF=0, but has a BodyTF=3. Other term frequency counts can also be used instead of or in addition to TitleTF and BodyTF, as applicable. For example, the term's frequencies with respect to meta tags, bold/strong tags, H3-H6 tags, H1-H2 tags, and anchor classes can all be included in its feature vector. As another example, a CommentTF signal can be used to indicate the number of times a term appears in the comment section of a blog. Arbitrary section frequency counts can also be used, such as Section0TF, Section1TF, Section2TF, etc., indicating the number of times the term appears, respectively, in the 0<sup>th</sup>, 1<sup>st</sup>, and 2<sup>nd </sup>sections of the document. One way that section frequency signal information can be used is to allow words occurring in the comments to be considered when categorizing a document, but also to prevent those words from being selected for automated hyperlinking.</p>
<p id="p-0092" num="0091">As mentioned above, a score (the &#x201c;NLP score&#x201d;) can be assigned to a textual representation based on its part of speech. As one example, proper nouns are assigned a score of &#x201c;1,&#x201d; common nouns are assigned a score of &#x201c;0.75,&#x201d; and verbs are assigned a score of &#x201c;0.&#x201d; For multi-word textual representations, the NLP score can be computed as the average of each constituent word's score, the sum of each constituent word's score, or in accordance with any other appropriate calculation. The &#x201c;Case&#x201d; signal scores the number of capitalized words in the textual representation. In the example of &#x201c;Lunar Reconnaissance Orbiter,&#x201d; the Case score is 3 because each component of the term is capitalized. In the example of &#x201c;Apollo landing sites,&#x201d; as shown at <b>262</b> in <figref idref="DRAWINGS">FIG. 2</figref>, the Case score is 1.</p>
<p id="p-0093" num="0092">Both the NLP score and the Case score can be used to resolve whether particular textual representations included in document are proper nouns or common nouns and also to resolve ambiguities, as described in more detail below. As one example, the occurrence of the words &#x201c;Simply hired&#x201d; in a document could refer to the author's explanation of how easy it was to be hired at a job and could also refer to the jobs website, www.simplyhired.com. The Case score of &#x201c;Simply hired&#x201d; is 1. The Case score of the canonical name of the jobs website, Simply Hired, is 2. As another example, &#x201c;it's it&#x201d; in a document could refer to something the author thinks is &#x201c;it,&#x201d; but could also refer to It's-It brand ice cream sandwiches. The Case score of &#x201c;it's it&#x201d; as written is 0. The Case score of the canonical form of the ice cream sandwich product is 2.</p>
<p id="p-0094" num="0093">The Position signal indicates the relative location of the textual representation in the document. &#x201c;Lunar Reconnaissance Orbiter&#x201d; occurs once in document <b>102</b>, at position <b>154</b>. In various embodiments, if the textual representation occurs multiple times, the position of each occurrence is included in a list (e.g., Position=100,202,554). In various embodiments, the position of the term can be used to bias various processing. For example, links to terms occurring earlier in the document can be preferred over ones occurring later.</p>
<p id="p-0095" num="0094">The NumWords signal indicates the number of words included in the textual representation. &#x201c;Lunar Reconnaissance Orbiter&#x201d; includes three words, and thus has NumWords=3.</p>
<p id="p-0096" num="0095">The signals described herein are examples of signals and particular signals can be omitted and/or accompanied by additional signals based on factors such as availability of data/information, preferences, and other implementation choices.</p>
<p id="p-0097" num="0096">Transforming Candidate Textual Representations into the Taxonomy Space</p>
<p id="p-0098" num="0097">Mapper <b>328</b> is configured to map candidate textual representations to nodes in the taxonomy stored in database <b>108</b>. As explained above, the whitelist <b>320</b> used to identify textual representations is extracted from a taxonomy stored in database <b>108</b>. Each node in the taxonomy has an associated ID. As one example, the concept &#x201c;Lunar Reconnaissance Orbiter&#x201d; has a ConceptID of 2381014. The concept &#x201c;academic conference&#x201d; has a ConceptID of 118760. In some cases (such as with &#x201c;Lunar Reconnaissance Orbiter&#x201d;), the textual representation unambiguously corresponds to a single node in the taxonomy (i.e., node 2381014). In other cases, the textual representation's meaning may be ambiguous. For example, a textual representation of &#x201c;jaguar&#x201d; occurring in a document could correspond to the concept &#x201c;Jaguar Cars Ltd.,&#x201d; to the concept &#x201c;Panthera onca,&#x201d; to the concept &#x201c;Mac OS X v10.2,&#x201d; or one of several other concepts. A textual representation of &#x201c;apple&#x201d; occurring in a document could correspond to the concept &#x201c;Malus domestica,&#x201d; to the concept &#x201c;Apple Inc.,&#x201d; or one of several other concepts.</p>
<p id="p-0099" num="0098">In various embodiments, mapper <b>328</b> determines the set of all concepts to which a particular textual representation maps. Each mapping is associated with a mapping vector. Mapping vectors (<b>332</b>) are either of type &#x201c;unambiguous&#x201d; or type &#x201c;ambiguous.&#x201d; A mapping vector is of type &#x201c;unambiguous&#x201d; only if a given textual representation maps to a single concept. Otherwise, it is of type ambiguous. A mapping vector also stores additional information, such as a pointer to the textual representation in the document, the conceptID of the mapped concept, the feature vector of the textual representation, and a strength value that indicates a confidence in the mapping. As will be described in more detail below, in some embodiments the mappings <b>332</b> initially created by mapper <b>328</b> are pruned through a series of refining actions.</p>
<p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a mapping between a set of textual representations (<b>402</b>) and a set of concepts (<b>404</b>). In the example shown, the first textual representation (tr<sub>1</sub>) unambiguously maps to concept c<sub>1</sub>. The unambiguous mapping between the two is denoted as &#x201c;u&#x201d; along line <b>406</b>. As one example, tr<sub>1 </sub>is &#x201c;Lunar Reconnaissance Module&#x201d; and c<sub>1 </sub>is the concept &#x201c;Lunar Reconnaissance Orbiter.&#x201d; Suppose tr<sub>2 </sub>is the acronym, &#x201c;LRO.&#x201d; LRO could be short for &#x201c;Lunar Reconnaissance Orbiter&#x201d; but could also be short for &#x201c;large receive offload,&#x201d; (c<sub>3</sub>) which is a technique in computer networking for increasing inbound throughput. As shown in <figref idref="DRAWINGS">FIG. 4A</figref>, tr<sub>2 </sub>can thus be mapped both to c<sub>1 </sub>and c<sub>3</sub>. The ambiguous nature of the mappings is denoted as &#x201c;a&#x201d; along lines <b>408</b> and <b>410</b>.</p>
<p id="p-0101" num="0100">Mapper <b>328</b> sorts a document's textual representations into a set of unambiguous textual representations (e.g., tr<sub>1</sub>) and a set of ambiguous textual representations (e.g., tr<sub>2</sub>, tr<sub>3</sub>, and tr<sub>n</sub>). For each ambiguous textual representation, the mapper determines whether a concept to which it is mapped is also a concept to which a textual representation that is unambiguous is mapped. If so, the ambiguous textual representation is reclassified as an unambiguous textual representation and is mapped solely to the concept to which the unambiguous concept is mapped.</p>
<p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a process for resolving an ambiguity. In various embodiments, the process shown in <figref idref="DRAWINGS">FIG. 5</figref> is performed by mapper <b>328</b>. The process begins at <b>502</b> when a set of textual representations is received. At <b>504</b>, the textual representations are divided into sets based on whether they unambiguously or ambiguously map to a concept. Finally, at <b>506</b>, an attempt to resolve ambiguities is made. One technique for attempting to resolve an ambiguity is presented in the preceding paragraph.</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. 6</figref> illustrates the mapping depicted in <figref idref="DRAWINGS">FIG. 4</figref> after the processing described in conjunction with <figref idref="DRAWINGS">FIG. 5</figref> has been performed. As explained above, textual representation t<sub>2 </sub>was initially mapped to two concepts&#x2014;c<sub>1 </sub>and c<sub>3</sub>. Since unambiguous textual representation tr<sub>1 </sub>mapped to concept c<sub>1</sub>, mapper <b>328</b> removed the mapping vector corresponding to <b>410</b> and changed the type of the mapping vector corresponding to <b>408</b> from ambiguous to unambiguous. Two textual representations that map to the same concept (such as tr<sub>1 </sub>and tr<sub>2 </sub>as shown in <figref idref="DRAWINGS">FIG. 6</figref>) are examples of synonyms. Both textual representations (&#x201c;Lunar Reconnaissance Orbiter&#x201d; and &#x201c;LRO&#x201d;) refer to the concept &#x201c;Lunar Reconnaissance Orbiter.&#x201d; In the example shown in <figref idref="DRAWINGS">FIG. 6</figref>, if another textual representation, &#x201c;tr<sub>4</sub>,&#x201d; also mapped to c<sub>1</sub>, it would also be considered a synonym of tr<sub>1 </sub>and tr<sub>2</sub>.</p>
<p id="p-0104" num="0103">The process of <figref idref="DRAWINGS">FIG. 5</figref> can also be used to resolve ambiguities for textual representations which are not synonyms of one another but share related concepts. As one example, suppose &#x201c;Steve Jobs&#x201d; is a textual representation included in a document and unambiguously resolves to the concept of businessman, Steven Paul Jones. The textual representation &#x201c;apple&#x201d; is also present in the document, in the sentence, &#x201c;I would like to buy an apple.&#x201d; The term, &#x201c;apple&#x201d; is not synonymous with &#x201c;Steve Jobs,&#x201d; however, its potential meaning as a fruit can be disambiguated by the presence of Steve Jobs in the document. One approach for accomplishing this is for mapper <b>328</b>, when performing portion <b>506</b> of the process shown in <figref idref="DRAWINGS">FIG. 5</figref>, to examine the nearest neighbors of concepts in the taxonomy. Another approach is to use the concept blacklist/whitelist signals described in more detail below. Yet another approach is to use a document similarity score described in more detail below.</p>
<p id="p-0105" num="0104">In some embodiments, for any remaining textual representations in the ambiguous textual representation set (e.g., four meanings of &#x201c;jaguar&#x201d;), a mapping between the textual representation and the concept corresponding to each possible meaning is added to the unambiguous set (e.g., four different unambiguous mappings), and the textual representation (&#x201c;jaguar&#x201d;) is removed from the ambiguous set. Engine <b>106</b> is configured to remember that the meaning of the textual representation was not resolved (i.e., that jaguar could mean one of four things). As will be described in more detail below, pruning of three of the four different unambiguous mapping vectors is performed after a document vector is computed and a document similarity score generated.</p>
<p id="p-0106" num="0105">Creating a Concept Feature Vector</p>
<p id="p-0107" num="0106">In addition to the processing described above, vector populator <b>326</b> is also configured to populate a set of concept feature vectors <b>312</b>. One way of accomplishing this is as follows. For each concept remaining after the processing of <figref idref="DRAWINGS">FIG. 5</figref>, vector populator <b>326</b> merges the feature vector scores of any textual representations mapped to respective concept (e.g., by adding the values together) and includes additional information (described in more detail below).</p>
<p id="p-0108" num="0107">Using the example of the representations &#x201c;Lunar Reconnaissance Orbiter&#x201d; and &#x201c;LRO,&#x201d; a concept feature vector for &#x201c;Lunar Reconnaissance Orbiter&#x201d; is formed by summing the respective feature vectors of the two textual representations and adding additional information. The concept &#x201c;Lunar Reconnaissance Orbiter&#x201d; would accordingly have a TitleTF=0+0=0, a BodyTF=1+3=4, and so on.</p>
<p id="p-0109" num="0108">Inverse Document Frequency Signal</p>
<p id="p-0110" num="0109">One additional piece of information that is included in the concept feature vector is the inverse document frequency (&#x201c;IDF&#x201d;) of a canonical textual representation associated with the concept. As one example, &#x201c;JFK,&#x201d; &#x201c;John F. Kennedy,&#x201d; and &#x201c;Jack Kennedy&#x201d; all refer to the 35<sup>th </sup>president of the United States. The canonical textual representation is &#x201c;John F. Kennedy&#x201d; and the IDF included in a concept feature vector for the president would be determined using &#x201c;John F. Kennedy.&#x201d; The canonical textual representation is stored in the taxonomy in database <b>108</b> and is in some embodiments the title of the concept as it appears in a third party corpus such as Wikipedia. In some embodiments the IDF is computed for all textual representations occurring in the document instead of or in addition to the canonical textual representation.</p>
<p id="p-0111" num="0110">The IDF is a statistical measure that can be used to evaluate how important a word is to a particular document included in a corpus of documents (e.g., the world wide web, documents on an enterprise server, etc). For a given term &#x201c;i,&#x201d; one way to compute the IDF of i is as follows:</p>
<p id="p-0112" num="0111">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <msub>
    <mi>IDF</mi>
    <mi>i</mi>
  </msub>
  <mo>=</mo>
  <mrow>
    <mi>log</mi>
    <mo>&#x2062;</mo>
    <mfrac>
      <mrow>
        <mo>&#xf603;</mo>
        <mi>D</mi>
        <mo>&#xf604;</mo>
      </mrow>
      <mrow>
        <mo>&#xf603;</mo>
        <mrow>
          <mo>{</mo>
          <mrow>
            <mi>d</mi>
            <mo>:</mo>
            <mrow>
              <msub>
                <mi>t</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2208;</mo>
              <mi>d</mi>
            </mrow>
          </mrow>
          <mo>}</mo>
        </mrow>
        <mo>&#xf604;</mo>
      </mrow>
    </mfrac>
  </mrow>
</mrow>
</math>
</maths>
<br/>
with |D| being the number of documents in the corpus, and |{d:t<sub>i</sub>&#x3b5;d}| being the number of documents where the term t<sub>i </sub>appears.
</p>
<p id="p-0113" num="0112">Number of Homonyms Signal</p>
<p id="p-0114" num="0113">Another piece of information that can be included in the concept feature vector is the Homonyms signal. This signal indicates the number of homonyms for the concept and can be used to weight against (or toward) the selection of concepts that can easily be confused with other concepts. The number of homonyms associated with a concept is, in some embodiments, included in the taxonomy stored in database <b>108</b>.</p>
<p id="p-0115" num="0114">Concept Whitelist/Blacklist Signals</p>
<p id="p-0116" num="0115">Yet another piece of information that can be included in the concept feature vector is whether or not the concept is present in a concept whitelist (or concept blacklist, as applicable). For example, in configuration <b>318</b>, publishers can specify concept whitelists (concepts they prefer to bias toward) and concept blacklists (concepts they have a bias against). If the concept is present in the concept whitelist, in some embodiments a Whitelist=1 signal is included in the concept feature vector (and has a &#x201c;0&#x201d; value otherwise). If the concept is present in the concept blacklist, in some embodiments a Blacklist=1 signal is included in the concept feature vector (and has a &#x201c;0&#x201d; value otherwise). The whitelist/blacklist signals can be used as weights and can also be used to prune concepts.</p>
<p id="p-0117" num="0116">Linkworthiness, Popularity, and Freshness Signals</p>
<p id="p-0118" num="0117">&#x201c;Linkworthiness&#x201d; is another signal that can be precomputed for a concept in the taxonomy and included in a concept feature vector. One example of a linkworthiness signal is a measure of how frequently the concept is included in a hyperlink in a corpus. As one example, suppose &#x201c;bottled water&#x201d; occurs 4,543 times within the corpus of documents that comprise the Wikipedia site. However, the term is linked a single time. Bottled water would accordingly have a linkworthiness score of 1/4,543=0.00022. As another example, suppose &#x201c;carpe diem&#x201d; occurs 200 times and is linked to 88 times. Carpe diem would accordingly have a linkworthiness score of 88/200=0.44. A corpus including multiple sites and/or the entire World Wide Web can also be parsed in determining linkworthiness instead of or in addition to Wikipedia. In some embodiments, the documents used to perform the linkworthiness determination are selected based on a pagerank or other measure of their quality. For example, links included in highly rated newspaper sites might be parsed, while links included in domain parked sites would not. The measure of quality can also be factored into the linkworthiness score itself.</p>
<p id="p-0119" num="0118">For ambiguous concepts, such as &#x201c;jaguar,&#x201d; in addition to determining the number of times a concept is linked, the meaning to which it is linked is also examined. For example, suppose that within Wikipedia, &#x201c;jaguar&#x201d; appears 500 times. Of those 500 instances, 300 have associated hyperlinks. Of the 300 hyperlinks, 60% direct the viewer to a page about Panthera onca, 30% direct the viewer to a page about the car company, and the remaining 10% of links direct viewers to other (even less common) meanings of the word. In this example, a popularity score can be associated with each of the meanings and used as a signal (described in more detail below), such as the cat meaning having a popularity score of 0.6, the car meaning having a popularity score of 0.3, and so on. In the case where the Wikipedia corpus is used, whether or not a particular ambiguous concept is designated as the default can also be used as a measure of popularity.</p>
<p id="p-0120" num="0119">The &#x201c;freshness&#x201d; of a topic can also be used as a signal. Such information can be gleaned by scraping Twitter feeds, news aggregation sites, and other indicators of current topics, stored in the taxonomy and included by vector populator <b>326</b> in the concept feature vector. One example of a change in a concept's freshness is the concept &#x201c;cupola.&#x201d; Prior to the STS-130 shuttle mission, the term rarely appeared in news articles and Twitter messages. The inclusion in the payload of a cupola for the International Space Station however, resulted in considerably more use of the term and thus its freshness score rose.</p>
<p id="p-0121" num="0120">In various embodiments, the linkworthiness, popularity, and freshness signals are combined together into a single signal. The values may be binary (e.g., fresh=0 or fresh=1) or any other appropriate value, typically normalized between 0 and 1.</p>
<p id="p-0122" num="0121">Additional Signals</p>
<p id="p-0123" num="0122">A capitalization signal can be used to indicate how often a concept is capitalized in documents appearing in a corpus such as the World Wide Web. As one example, the n-gram data made available by Google can be used to estimate the percentage of times a concept is capitalized.</p>
<p id="p-0124" num="0123">In some embodiments, rules are used to weight various signals on a category basis. For example, if a topic such as &#x201c;Hired&#x201d; belongs to the category &#x201c;Film,&#x201d; a category-based rule can be used to give higher weight to the Case signal accordingly.</p>
<p id="p-0125" num="0124">Pruning Concepts</p>
<p id="p-0126" num="0125">In various embodiments, once vector populator <b>326</b> has completed populating concept feature vectors <b>312</b>, some of the concepts are pruned. For example, concepts having a non-zero TitleTF score and a BodyTF=0, having NLP scores of 0, or having very low IDF scores (e.g., a term such as &#x201c;shopping&#x201d;) are dropped. As another example, concepts that are orphans (e.g., nodes in the taxonomy without at least one parent or child) are also dropped.</p>
<p id="p-0127" num="0126">As explained above, the &#x201c;Case&#x201d; score of a textual representation can be used when determining whether the textual representation maps to a particular concept. Suppose &#x201c;Has Been&#x201d; is the name of a musical album (a concept) and &#x201c;has been&#x201d; appears in a document <b>102</b>. The Case score of the concept is 2, because the musical album's title is capitalized. The Case score of the textual representation is 0. In some embodiments, the musical album is pruned due to the mismatch in case scores.</p>
<p id="p-0128" num="0127">As another example, if concept whitelist/blacklist information has been provided to engine <b>106</b>, the information can be used to resolve ambiguous meanings. For example, suppose medically themed site <b>120</b> has specified either the vertical &#x201c;Health&#x201d; or a series of lower level concepts such as &#x201c;nutrition&#x201d; and &#x201c;organic foods&#x201d; in whitelist <b>320</b>. Also suppose that document <b>102</b> includes an ambiguous occurrence of the textual representation &#x201c;apple&#x201d; which is mapped by mapper <b>328</b> in accordance with the techniques described above to two concepts&#x2014;a fruit and a computer company. The ambiguity can be resolved (and one of the two concepts pruned) by detecting that the Whitelist signal for the fruit concept has a value of 1 and the Whitelist signal for the computer concept has a value of 0.</p>
<p id="p-0129" num="0128">In some embodiments, filtering is performed by various components of document processing engine at various stages of processing. For example, in some embodiments orphan concepts are omitted from whitelist <b>320</b>. As another example, in some embodiments filtering based on scores such as NLP scores and IDF scores occurs prior to the processing described in conjunction with portion <b>506</b> of the process shown in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0130" num="0129">Category Vectors</p>
<p id="p-0131" num="0130">Each concept &#x201c;c&#x201d; in the taxonomy stored in database <b>108</b> has an associated category vector <b>322</b>. In various embodiments, the category vector is precomputed (i.e., prior to the processing of document <b>102</b>) and is also stored in database <b>108</b>. For a particular concept c in the taxonomy, the category vector is a set of categories/concepts that are related to that concept c, along with a weight for each of the included categories/concepts. A variety of techniques can be used to compute the category vector.</p>
<p id="p-0132" num="0131">One way to populate the category vector is to use the up-lineage of the concept (e.g., parents, grandparents, etc.), and assign a decreasing score based on distance (e.g., parents have a score of 0.9, grandparents have a score of 0.8, etc.). A second way to populate the category vector is to use the down-lineage of the concept (e.g., children). A third way to populate the category vector is to use a predetermined list of concepts designated as being &#x201c;related&#x201d; to the concept (e.g., including siblings), or to use the concept lighting techniques described in more detail below.</p>
<p id="p-0133" num="0132">A fourth way to populate the category vector is to use membership in a subset &#x201c;K&#x201d; of a taxonomy &#x201c;T,&#x201d; where |K|&#x3c;&#x3c;|C|. For example, K can include only verticals and entity classes. Further, elements within K should not have parent-child relationship, meaning that all members of a given k in K should not automatically be members of another k.</p>
<p id="p-0134" num="0133">Document Vector</p>
<p id="p-0135" num="0134">Vector populator <b>326</b> is configured to populate a document vector <b>314</b> for each document <b>102</b>. In some embodiments this is accomplished by computing the average of all category vectors implicated by the concepts associated with document <b>102</b> remaining after the pruning described above. Document vector <b>314</b> can thus be denoted as follows:</p>
<p id="p-0136" num="0135">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <mi>dv</mi>
  <mo>=</mo>
  <mrow>
    <mfrac>
      <mrow>
        <munder>
          <mo>&#x2211;</mo>
          <mi>n</mi>
        </munder>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <msub>
          <mi>cv</mi>
          <mi>i</mi>
        </msub>
      </mrow>
      <mi>n</mi>
    </mfrac>
    <mo>.</mo>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0137" num="0136">In some embodiments, the document vector is normalized so that the sum of the components of cv<sub>i </sub>is 1. Other techniques can also be used to compute a document vector, as applicable. For example, a weight value on an exponent can be included in the computation such that top level concepts (like &#x201c;health&#x201d; and &#x201c;sports&#x201d;) are favored or disfavored, as indicated by a publisher, over bottom level concepts (like &#x201c;Sungold Tomato&#x201d;). As another example, the computation of the document vector can take into account rules such as that concepts that have ambiguous parents be excluded from the document vector, that concepts associated with terms appearing in the title be weighted significantly more than other concepts, etc. Document vector <b>314</b> is one example of output that can be provided by engine <b>106</b> to various applications described in more detail below.</p>
<p id="p-0138" num="0137">Document Similarity and Further Disambiguation</p>
<p id="p-0139" num="0138">In some embodiments, vector populator <b>326</b> is configured to use document vector <b>314</b> to compute a set of document similarity scores. For a given concept, the document similarity score is computed as: ds<sub>i</sub>= <o ostyle="single">dv</o>&#x2218; <o ostyle="single">cv<sub>i</sub></o>. It provides an indication of how similar the concept vector is to the document vector. Once computed, the document similarity score is included in the concept's feature vector <b>312</b>. In various embodiments, other similarity scores, such as a site similarity score can also be computed (e.g., by computing the similarity of a concept over all the documents from a given site) and included in feature vector <b>312</b>.</p>
<p id="p-0140" num="0139">The document similarity score can be used to resolve remaining ambiguities. For example, suppose document <b>102</b> includes the statement, &#x201c;Jaguar prices are climbing.&#x201d; Absent additional information, the textual representation &#x201c;Jaguar,&#x201d; could plausibly refer to either an animal or an automobile. By examining the document similarity scores of both the Panthera onca and the Jaguar Cars Ltd. concepts, disambiguation can be performed. For example, if the document is an article about the cost of zoo exhibits, concepts such as &#x201c;zoo&#x201d; and &#x201c;wildlife&#x201d; and &#x201c;park&#x201d; will likely be included in the document vector, while concepts such as &#x201c;luxury cars&#x201d; and &#x201c;high performance engine&#x201d; will likely not (or will have considerably lower scores). Accordingly, the document similarity score of &#x201c;Panthera onca&#x201d; will be considerably higher than the score for &#x201c;Jaguar Cars Ltd.&#x201d; and the ambiguity can be finally resolved by pruning the second concept.</p>
<p id="p-0141" num="0140">In some embodiments, additional information is employed to resolve remaining ambiguities. For example, the textual representation, &#x201c;Michael Jackson&#x201d; most frequently refers to the American musician. However, the taxonomy also includes other individuals of note that are also named &#x201c;Michael Jackson&#x201d; (e.g., a civil war soldier, a British television executive, etc.). It is possible that a document could be referring to a Michael Jackson that is not the musician. In various embodiments, the popularity of a particular concept is used as one consideration (e.g., with the musician meaning being more popular than the civil war solider) and concept's document similarity score is used as another. Based on customizable weights, engine <b>106</b> can be configured to disambiguate concepts such as &#x201c;Michael Jackson&#x201d; by preferring the popular meaning (and pruning the others), except when the document similarity score overwhelmingly indicates (e.g., having a document similarity score exceeding 0.7) that an alternate meaning should be selected. As another example, the freshness of a topic can be considered.</p>
<p id="p-0142" num="0141">Ranking Results</p>
<p id="p-0143" num="0142">Even after the scoring and pruning actions described above have been performed, for a given document <b>102</b>, it is possible that hundreds (or more) of textual representations and associated concepts remain as candidates. Typically, only a handful of the top textual representations and/or concepts are needed.</p>
<p id="p-0144" num="0143">Ranker <b>330</b> is configured to rank the concepts remaining in consideration after the above processing/pruning has been performed. One approach is to use a scoring function s that computes a score given a concept feature vector. In various embodiments, what weights to apply to the various signals included in the concept feature vector are empirically determined and then tunes using linear regression. In various embodiments, only a subset of the signals is used (e.g., a combination of the document similarity score and linkworthiness/popularity/freshness signals). For a given document <b>102</b>, a threshold/cutoff is applied to limit the final list of concepts to an appropriately manageable size for consumption by an application. Concepts having a score above the threshold (and their corresponding textual representations) are provided as output (i.e., &#x201c;entities&#x201d;).</p>
<p id="p-0145" num="0144">Publishers can, through configuration <b>318</b>, specify customized rules for the combination function used to calculate final concept scores. For example, publisher <b>120</b> can specify as a rule that while all medical concepts should be considered by engine <b>106</b> when generating the document vector <b>314</b>, disease symptoms should not be output as entities. As another example, publisher <b>120</b> might choose to weight the values of the Whitelist/Blacklist signals more heavily than publisher <b>118</b>, who might in turn prefer another signal, such as by preferring concepts with the higher freshness scores, or a monetization signal that measures how well a given concept monetizes. One benefit of using category-based monetization is that an extrapolation can be made as to the monetization of a very specific textual representation based on the concept (or higher level category/vertical) with which it is associated. It may be the case that pharmaceuticals monetize well but names of diseases do not. When a new pharmaceutical is introduced to market, the publisher need not take any action to indicate a preference toward textual representations of the new pharmaceutical as a candidate term. As another example, if specific words are empirically determined to monetize well on a given publisher's website (e.g., &#x201c;golden retriever,&#x201d; &#x201c;collie,&#x201d;), the categorization of those words (e.g., &#x201c;breeds of dog&#x201d;) within the taxonomy can be used by engine <b>106</b> to bias the selection of other words belonging the category (e.g., &#x201c;beagle&#x201d;) even absent historic data for those other words.</p>
<p id="p-0146" num="0145">In some embodiments the threshold/cutoff is manually selected, such as by a publisher specifying in configuration <b>318</b> that a maximum number of 10 entities be returned. In other embodiments, engine <b>106</b> applies a dynamically generated threshold based on factors such as the document length. For example, the publisher can specify a link density, such as that up to 5% of the number of words in a document be included in entities. In some embodiments, the number of textual representations remaining in candidate list <b>324</b> is used as a proxy for the document length. Other information, such as click-through rate data, can also be used to determine the cutoff number of entities and also as an additional, site-specific signal that can be stored (e.g., in database <b>108</b>) and used while processing other documents (e.g., as an additional concept feature vector signal).</p>
<p id="p-0147" num="0146"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a portion of output generated by a document processing engine. The example shown illustrates the first and twenty-fourth ranked entities determined from the document shown in <figref idref="DRAWINGS">FIG. 2B</figref>. The concept &#x201c;Lunar Reconnaissance Orbiter&#x201d; (and corresponding textual representation &#x201c;Lunar Reconnaissance Orbiter&#x201d;) has the highest score as indicated in region <b>702</b>. The concept &#x201c;academic conference&#x201d; (and corresponding textual representation &#x201c;scientific meeting&#x201d;) has a considerably lower score as indicated in region <b>704</b>.</p>
<p id="p-0148" num="0147">Example Process for Detecting an Entity</p>
<p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an embodiment of a process for determining a mapping between a textual representation in a document and a concept. In various embodiments, the process shown in <figref idref="DRAWINGS">FIG. 8</figref> is performed by document processing engine <b>106</b>. The process begins at <b>802</b> when a document is received. As one example, a document is received at <b>802</b> when Joe submits a blog post to site <b>118</b> and site <b>118</b> provides the post to system <b>106</b> via an API. At <b>804</b>, candidate textual representations are identified, such as by textual representation detector <b>308</b>. At <b>806</b>, concepts associated with the candidate textual representations are determined, such as by mapper <b>328</b>. As explained above, various refinements (e.g., disambiguation) and pruning of the candidate textual representations and associated concepts can be performed.</p>
<p id="p-0150" num="0149">Finally, at <b>808</b> pairs of textual representations and associated concepts are provided as output. As one example, at <b>808</b>, entities <b>110</b> are provided to hyperlink generator <b>134</b>, which provides to site <b>118</b> instructions for generating links such as from &#x201c;American Geophysical Union&#x201d; to www.agu.org. In various embodiments, the instructions include properly formed HTML. In others, a list comprising the textual representation and a destination URL (but no HTML) is generated by generator <b>134</b> and provided to site <b>118</b>. As another example, at <b>808</b>, entities <b>110</b> are provided to plugin <b>132</b> which determines additional information that should be displayed to Alice in a separate window.</p>
<p id="p-0151" num="0150">In various embodiments, plugin <b>132</b> leverages additional information to which it has access, such as cookies, passwords, and other information stored within a browser, when including additional links in the rendered page. For example, suppose Alice is currently viewing a document that includes mention of a company, Beta Corporation. Engine <b>106</b> determines that the textual representation &#x201c;Beta Corporation&#x201d; should be linked. Plugin <b>132</b> is aware that Alice is &#x201c;friends,&#x201d; on a social networking site, with a person that works at Beta Corporation (as gleaned from his profile). Accordingly, rather than linking to Beta Corporation's website, plugin <b>132</b> instead decides to direct Alice to the social networking site. As another example, instead of inserting a hyperlink into the document, plugin <b>132</b> could also provide a popup text or other notification for Alice that her friend works at Beta Corporation.</p>
<p id="p-0152" num="0151"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an embodiment of a process for categorizing a document. In various embodiments, the process shown in <figref idref="DRAWINGS">FIG. 9</figref> is performed by document processing engine <b>106</b>. The process begins at <b>902</b> when a document is received. As one example, a document is received at <b>902</b> when Joe submits a blog post to site <b>118</b> and site <b>118</b> provides the post to system <b>106</b> via an API. At <b>904</b>, entity pairs are determined, such as in accordance with the processing shown at portions <b>804</b>-<b>808</b> of the process shown in <figref idref="DRAWINGS">FIG. 8</figref>. Finally, at <b>906</b> a categorization of the document is determined. In some embodiments this is document vector <b>314</b>. The tags shown at <b>254</b> in <figref idref="DRAWINGS">FIG. 2B</figref> are an example of output that is generated as a result of the determination made at <b>906</b>. In various embodiments, the categorization determined at <b>906</b> is thresholded prior to output, such as by being limited to the top three categories of the document vector.</p>
<heading id="h-0005" level="1">Example Embodiment</heading>
<heading id="h-0006" level="1">Including Hyperlinks in a Web Forum</heading>
<p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser. The example shown is a portion of site <b>120</b>, which provides a forum in which users discuss various medical conditions and other topics with one another. In the example shown, a user, &#x201c;Fred22,&#x201d; has recently discovered that he has diabetes and is exchanging messages with other users, such as &#x201c;JanetQ,&#x201d; about his diagnosis.</p>
<p id="p-0154" num="0153">An administrator of site <b>120</b> has provided to system <b>104</b> configuration information pertaining to site <b>120</b>. Specifically, the administrator has indicated that site <b>120</b> is a health site (e.g., by listing &#x201c;Health&#x201d; as a vertical to which it pertains). As mentioned above, users of site <b>120</b> are unable to insert hyperlinks into their posts for security reasons. However, the administrator of site <b>120</b> would like visitors to have as positive an experience as possible and thus would like them to benefit from the techniques described herein by having various hyperlinks automatically included in forum posts. The administrator has specified, in configuration <b>318</b>, that any textual representations selected by engine <b>106</b> that are associated with pharmaceuticals be hyperlinked to entries in an online pharmaceutical encyclopedia. The administrator has further specified that selected textual representations for which site <b>318</b> has informational pages (e.g., basic medical concepts) be hyperlinked to those pages. One way of accomplishing this is to, as a periodic process, crawl all or some subset of the pages on site <b>120</b> and categorize them (e.g., by determining their respective document vectors). Pages on site <b>120</b> with appropriate document vectors can be used for linking Finally, the administrator has specified that any textual representations selected by engine <b>106</b> which are not covered by the two previous specifications be hyperlinked to topic pages automatically generated for those concepts (e.g., based on techniques described below).</p>
<p id="p-0155" num="0154">In the example shown, engine <b>106</b> has determined that the textual representation, &#x201c;Type 2 Diabetes&#x201d; be hyperlinked to a page about diabetes that is also hosted by site <b>118</b> (<b>1002</b>). Using the techniques herein, engine <b>106</b> is able to disambiguate &#x201c;T1&#x201d; to mean the concept &#x201c;type 1 diabetes&#x201d; and has also hyperlinked it to the page about diabetes (<b>1004</b>). Engine <b>106</b> determined that the textual representation &#x201c;glucose meter&#x201d; should be hyperlinked to an automatically generated topic page. Glucose meter is a concept that monetizes well, and so, during the scoring performed by engine <b>106</b>, textual representation <b>1006</b> was selected over other candidate representations. Engine <b>106</b> has determined that the textual representation, &#x201c;Metformin,&#x201d; should be hyperlinked to an entry for that pharmaceutical in an online pharmaceutical encyclopedia.</p>
<p id="p-0156" num="0155">Link Distribution</p>
<p id="p-0157" num="0156">In the example shown in <figref idref="DRAWINGS">FIG. 10</figref>, the hyperlinks generated by system <b>104</b> are concentrated within the first post, at the top of the page. Publishers can specify which regions of the page should be considered for hyperlinking and which should not. Publishers can also indicate their preferences for how the links should be distributed, such as evenly throughout the page, or concentrated in various areas. In some embodiments, information such as click-through information is used by system <b>104</b> to automatically determine whether the users of a given site tend to concentrate their clicking activity in particular regions or whether their clicking activities are evenly spread throughout a given page. One way of accomplishing this is for system <b>104</b> to record, for each click event, the position of the text being clicked. The positions are discretized (e.g., into the first tenth of the document, the next tenth of the document, and so on) and a determination is made as to what, if any, impact the position of a link has on a visitor's odds of activating the link. The position of the textual representation can be compared against the historical click-through information and used as yet another signal that can be used by engine <b>106</b> when selecting entities. For example, if visitors tend to click on links appearing at the beginning of an article, textual representations toward the end of the article may not be selected by ranker <b>330</b>. However, if a textual representation appearing toward the end of an article has sufficiently high scores for other signals, it may nonetheless be selected over earlier appearing textual representations.</p>
<p id="p-0158" num="0157"><figref idref="DRAWINGS">FIG. 11</figref> is a chart illustrating the distance between textual representations. In the example shown, textual representations are arranged in one axis and sorted according to position. The first selected textual representation appearing in a document is shown in <figref idref="DRAWINGS">FIG. 11</figref> as item 0, the second selected textual representation appearing in the document is shown as item 1, and so on. On the y axis is the letter distance between a given link and the next link appearing after it. Link <b>1104</b> is relatively far in letter distance from link <b>1102</b>. Link <b>1106</b> is very close to link <b>1104</b>. In some embodiments, engine <b>106</b> is configured to minimize the low values (e.g., link <b>1106</b>) in the graph and to maximize the high values (e.g., link <b>1104</b>). The letter distance between candidate links can be used as yet another signal by ranker <b>330</b> when selecting entities for output. In some cases, such as with lists of items (e.g., the names of the Seven Dwarves), engine <b>106</b> may select all seven textual representations despite all seven names being adjacent to one another. Such lists of items can be determined based on the document similarity score and can also be based on information stored in the taxonomy.</p>
<p id="p-0159" num="0158">Intents</p>
<p id="p-0160" num="0159">As explained above, a variety of destination URLs can be selected as the destination of hyperlinks of textual representations based on various configuration preferences and the available inventory of destination pages for a given topic. In some embodiments, additional information such as an intent of a visitor (e.g., &#x201c;shopping&#x201d;) or the context of the original page (e.g., &#x201c;health&#x201d;) can be used to influence the destination to which the visitor will be directed when activating a link.</p>
<p id="p-0161" num="0160">Examples of intents include &#x201c;shopping&#x201d; and &#x201c;symptoms.&#x201d; To fully understand the intent, a companion subject is required, such as &#x201c;shopping for shoes&#x201d; or &#x201c;symptoms of the measles.&#x201d; Without a companion subject, an intent is unlikely to be a worthwhile entity. However, the combination of an intent with its companion subject is potentially of significant interest. Accordingly, in various embodiments, engine <b>106</b> is configured with a list of intents and, as applicable, concepts that are appropriate companions for the respective intents. Textual representations associated with an intent will have an Intent=1 signal set.</p>
<p id="p-0162" num="0161">One way of determining a companion subject of an intent is as follows. For a given textual representation, compute a score by multiplying the TitleTF, BodyTF, NLP score, IDF score, and a Proximity score by a series of respective weights. The Proximity score is a measure of the distance from the position of the textual representation to the position of the intent, normalized by the length of the document. The weight values are configured such that textual representations appearing very in close proximity to an intent will receive a high Proximity score and little or no value will be given to textual representations that are less close. Suppose &#x201c;diabetes&#x201d; is selected as a textual representation in a document that includes the phrase &#x201c;Are cold toes a symptom of diabetes?&#x201d; The phrase, &#x201c;symptom of diabetes,&#x201d; is not included in whitelist <b>320</b>. However, &#x201c;symptom&#x201d; has been indicated as an intent in database <b>108</b>. The term, &#x201c;diabetes&#x201d; is the intent of &#x201c;symptom&#x201d; and is detectable by engine <b>106</b> because of their close proximity. While a &#x201c;cold&#x201d; can also have symptoms, in this case, NLP processor <b>306</b> is able to determine that cold is used as an adjective and not as a noun, thus disambiguating the term. When choosing a destination for the textual representation of &#x201c;diabetes,&#x201d; when activated, engine <b>106</b> can select a more precise destination for the user, such as by directing the user to the &#x201c;symptoms&#x201d; portion of a Wikipedia page article (en.wikipedia.org/wiki/Diabetes_mellitus#Signs_and_symptoms) instead of the main diabetes page. In various embodiments, when an intent such as shopping is detected, the hyperlink generated by hyperlink generator <b>134</b> is formed as a query to a search engine and includes the textual representation (or concept) and the intent as arguments.</p>
<p id="p-0163" num="0162">Context</p>
<p id="p-0164" num="0163">When selecting an applicable destination to link a textual representation with, in some embodiments, engine <b>106</b> takes into account a context. One example of a context is the main subject (or highest rated concept in the document vector). In the page shown in <figref idref="DRAWINGS">FIG. 10</figref>, the main subject is likely to be determined to be &#x201c;diabetes.&#x201d; Another example of a context is the vertical to which the origin site (e.g., site <b>120</b>) belongs, according to configuration <b>318</b>. Without context, when a user activates link <b>1010</b>, he might be directed to a Wikipedia article generally about testosterone. However, if the context (&#x201c;diabetes&#x201d;) is included in the determination of where to link the &#x201c;testosterone&#x201d; textual representation, the user can instead be directed to a customized topic page (created, e.g., using the techniques described below) for the combined topic of &#x201c;diabetes+testosterone&#x201d; or to a typical search engine with &#x201c;diabetes AND testosterone&#x201d; passed in as arguments. In various embodiments, rather than a single concept being used as a context, the document vector of the document (including multiple concepts and their respective weights) is used. The customized topic page will emphasize the intersection of the concept associated with the textual representation and various concepts in the document vector and deemphasize more general information about the concept associated with the textual representation. In various embodiments, the concepts passed in as arguments to the topic page generator are also displayed to the user.</p>
<heading id="h-0007" level="1">Example Process</heading>
<p id="p-0165" num="0164"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an embodiment of a process for including a hyperlink in a document. In various embodiments, the process shown in <figref idref="DRAWINGS">FIG. 12</figref> is performed by document processing engine <b>106</b>. The process begins at <b>1202</b> when a document is received. As one example, a document is received at <b>1202</b> when a visitor to website <b>120</b> accesses the page shown in <figref idref="DRAWINGS">FIG. 10</figref> (without the depicted hyperlinks) and a client-side script included in the page causes information to be sent to system <b>104</b>. At <b>1204</b>, entity pairs are determined, such as in accordance with the processing shown at portions <b>804</b>-<b>808</b> of the process shown in <figref idref="DRAWINGS">FIG. 8</figref>. In other embodiments, other techniques for determining entity pairs are used, such as by consulting a table provided by a third party that lists terms and associated concepts. Finally, at <b>1206</b>, one or more hyperlinks are output based on the entity pairs determined at <b>1204</b>. For example, at <b>1206</b>, hyperlink generator <b>134</b> determines that textual representation <b>1008</b> should be hyperlinked to an online pharmaceutical encyclopedia entry for the pharmaceutical &#x201c;Metformin.&#x201d;</p>
<heading id="h-0008" level="1">Example Embodiment</heading>
<heading id="h-0009" level="1">Topic Expansion</heading>
<p id="p-0166" num="0165"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser. In the example shown in <figref idref="DRAWINGS">FIG. 10</figref>, a total of three posts were made in a thread in the diabetes portion of the medical forum. In <figref idref="DRAWINGS">FIG. 13</figref>, a user, Billy00, has made post <b>1302</b> and no additional posts have yet been made. In various embodiments, instead of or in addition to inserting hyperlinks such as hyperlink <b>1002</b> into his posts, additional elements are included in the page (e.g., via JavaScript) to enhance the experience of a visitor. One way to include additional content on a page such as is shown in <figref idref="DRAWINGS">FIG. 13</figref> is to obtain key concepts of the post (such as &#x201c;dog&#x201d; and &#x201c;rash&#x201d;) using the techniques described above and to pass them as arguments to a mashup engine described in more detail below. The mashup engine selects one or more modules for dynamic inclusion in page <b>1300</b>. In the example shown in <figref idref="DRAWINGS">FIG. 13</figref>, the concepts &#x201c;dog&#x201d; and &#x201c;rash&#x201d; led to the categorization of post <b>1302</b> as being about dog skin disorders. The concept, dog skin disorders, has an associated module (a list of types of skin disorders), which was selected for inclusion in page <b>1300</b>.</p>
<p id="p-0167" num="0166">The dynamic inclusion of modules such as module <b>1306</b> need not be limited to pages with sparse content such as page <b>1300</b>. Suppose a document is many pages in length. In various embodiments, a summarization module can be dynamically included (e.g., as a floating element) that extracts various concepts from the document based on the techniques described herein and lists them as an at-a-glance summary. Further, modules can be dynamically provided by a plugin such as plugin <b>132</b>, without the cooperation of the publisher of the page being augmented with modules.</p>
<heading id="h-0010" level="1">Example Embodiment</heading>
<heading id="h-0011" level="1">Selectively Delivering an Article</heading>
<p id="p-0168" num="0167"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an embodiment of a portion of a webpage as rendered in a browser. The example shown is a portion of site <b>122</b>, which provides customized news feeds to users based on preferences they specify through the interface shown in <figref idref="DRAWINGS">FIG. 14</figref>. Interface <b>1400</b> allows users to select from popular, preselected concepts and also to provide arbitrary concepts through form fields. In the example shown, Alice has indicated an interest in the concepts of &#x201c;Internet Industry&#x201d; and &#x201c;Stock Market,&#x201d; the company &#x201c;Acme Corp.,&#x201d; and the price of gold. &#x201c;Internet Industry&#x201d; and &#x201c;Stock Market&#x201d; are topics included in the taxonomy stored in database <b>108</b> and have various children. For example, in some embodiments the &#x201c;Internet Industry&#x201d; concept includes as children various Internet companies, famous scientists responsible for improving Internet technology, and various Internet-related products and websites. The &#x201c;Stock Market&#x201d; concept includes as children individual stocks, as well as various indices such as the Dow Jones Industrial Average and the Nikkei <b>225</b>. Acme Corp. is also present as a node in the taxonomy. The price of gold is not a taxonomy node. However, using the categorization techniques described herein, &#x201c;price of gold&#x201d; is determined to correspond to the concept of &#x201c;precious metals&#x201d; when found in conjunction with a business intent. By selecting various other verticals, such as by selecting tab <b>1402</b>, Alice can specify additional preferences for concepts, such as a preference for news articles about &#x201c;diet drinks&#x201d;</p>
<p id="p-0169" num="0168">In a traditional news aggregation site, articles are made available to users through keyword searches. In contrast, engine <b>106</b> is configured, for each news article it receives, to categorize the news article using the techniques described above. When articles matching the interests of users are detected, they can be sent to the users and/or otherwise made available to the appropriate users through a customized news page, RSS feed, etc.</p>
<p id="p-0170" num="0169">Suppose a new diet drink is brought to market. A purely keyword-based analysis of articles about the drink may fail to detect announcements made related to the launch of the product because such articles may not explicitly use the term, &#x201c;diet drink.&#x201d; Further, Alice may be unaware of the name of the new drink (e.g., &#x201c;WonderDrink&#x201d;) and thus is unable to specify it in a keyword search. In contrast, system <b>104</b> will be able to detect articles about the new drink as being of interest to Alice and provide them to her, either because of the inclusion of the drink in the taxonomy or because the document vector for the article will implicate the concept, &#x201c;diet drinks.&#x201d; As another example, suppose Alice is interested in the television show &#x201c;Lost.&#x201d; In a purely keyword-based analysis of articles, Alice would likely be overwhelmed with articles about lost pets, missing persons, sports teams that have lost games, etc. In contrast, using the classification techniques described herein, only those articles pertaining to &#x201c;Lost&#x201d; when it refers to the television show will be provided to Alice.</p>
<heading id="h-0012" level="1">Example Process</heading>
<p id="p-0171" num="0170"><figref idref="DRAWINGS">FIG. 15</figref> illustrates an embodiment of a process for delivering an article. In various embodiments, the process shown in <figref idref="DRAWINGS">FIG. 15</figref> is performed by document processing engine <b>106</b>. The process begins at <b>1502</b> when a user preference is received. As one example, suppose Alice selects region <b>1404</b> of interface <b>1400</b>. Her preferences (e.g., for news articles pertaining to the Internet industry) are received by system <b>104</b> at <b>1502</b>. As necessary, additional processing can be performed on the received preferences, such as determining appropriate concepts associated with the entries made in fill-in forms <b>1406</b>-<b>1410</b>. One approach is to apply the query categorization techniques described in more detail below. In various embodiments, the preferences received at <b>1502</b> are stored in database <b>108</b>.</p>
<p id="p-0172" num="0171">At <b>1504</b>, a document is received. As one example, a document is received at <b>1504</b> when a news article is provided by an online news site to system <b>104</b> via an RSS feed or other notification provided by the publisher of the news article. Other techniques can also be used to receive a document at <b>1502</b>. For example, as posts are made via status update sites, such as twitter.com or facebook.com, they can be provided to system <b>104</b>, such as through an API, and are other examples of &#x201c;articles&#x201d; that can be selectively delivered to users in accordance with the techniques described herein.</p>
<p id="p-0173" num="0172">At <b>1506</b>, entity pairs are determined for the document, such as in accordance with the processing shown at portions <b>804</b>-<b>808</b> of the process shown in <figref idref="DRAWINGS">FIG. 8</figref>. At <b>1508</b>, the document is categorized, such by having engine <b>106</b> determine a document vector for the document. Finally, if the categorization of the received document corresponds to preferences specified by the user, the document is provided to the user and/or a notification is made available to the user alerting them to the existence of the document. As one example, Alice receives, via email, a daily &#x201c;newspaper&#x201d; of selected articles determined to be relevant to her preferences. As another example, plugin <b>132</b> can be configured to provide a real time news ticker of articles corresponding to Alice's preferences. In various embodiments, rules such as the number of articles to be provided to a user per day and the number of articles pertaining to a particular concept or particular vertical that should be provided to the user in a given amount of time are configurable.</p>
<p id="p-0174" num="0173">Profiling</p>
<p id="p-0175" num="0174">As mentioned above, one example of a document that can be classified according to the techniques described herein is a status update message, such as a post made via www.twitter.com. In various embodiments, multiple posts submitted by a particular individual user can be analyzed and their respective document vectors aggregated to profile the user.</p>
<p id="p-0176" num="0175">Clustering</p>
<p id="p-0177" num="0176">In various embodiments, system <b>104</b> is configured to cluster the news articles it receives (e.g., at portion <b>1504</b> of the process shown in <figref idref="DRAWINGS">FIG. 15</figref>). In a traditional news aggregation site, articles are clustered (e.g. on a front page) based on their sharing common key words. Accordingly, two articles about the same event may erroneously not be included in the same cluster if they use different words (e.g., feline vs. cat) to describe the same event. In contrast, engine <b>106</b> is configured to cluster documents based on their concepts.</p>
<heading id="h-0013" level="1">Example Embodiment</heading>
<heading id="h-0014" level="1">Generating a Summarization</heading>
<p id="p-0178" num="0177">As explained above, in various embodiments, system <b>104</b> is configured to generate a summarization of a document. One way to generate a summarization is to use scores associated with textual representations to score the sentences in which they appear. Information such as position information can also be used, so that textual representations appearing in commonly introductory/conclusory positions are weighted more heavily than those appearing in the center of the document. The top three (or other appropriate number) sentences having the highest scores are selected as being the summarization.</p>
<p id="p-0179" num="0178">The summarization process can also be biased toward certain concepts. As one example, suppose site <b>124</b> includes a lengthy biographical article discussing an athlete's life both on and off the field. Topics such as the athlete's upbringing, college career, and professional career are all discussed. A general summarization could include three sentences, one for each of the three aspects of the athlete's life.</p>
<p id="p-0180" num="0179">Suppose the athlete's professional career ended early due to an injury. If the scores of the textual representations are biased based on their relevance to a vertical (e.g., health), the sentences selected for summarization will reflect this bias. In the case of the athlete, sentences appearing in the section about the athlete's injury (which include more textual representations associated with health) will have higher scores than sentences that appear elsewhere.</p>
<p id="p-0181" num="0180">Creating a Hierarchy of Concepts from a Corpus of Documents</p>
<p id="p-0182" num="0181"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an embodiment of a system for creating a hierarchy of concepts from a corpus of documents. In the example shown, collection <b>1602</b> includes a group of World Wide Web pages <b>1608</b>, that are crawled, processed, and indexed by a crawler <b>1604</b> and stored, along with assorted scores and other information, in index <b>1606</b>.</p>
<p id="p-0183" num="0182">As described in more detail below, crawler <b>1604</b> performs tasks such as tagging the documents stored in index <b>1606</b> with subject type concepts and with information type concepts (also referred to herein as &#x201c;infotypes&#x201d;). Crawler <b>1604</b> also performs and stores the results of frequency and cooccurrence counts. Crawler <b>1604</b> may be a single device, or its functionality may be provided by multiple devices. For example, elements typically used in conjunction with a crawler to create an index, such as an indexer, are described herein as being provided by crawler <b>1604</b>, but may also be performed by separate devices or components and the techniques described herein adapted accordingly. For example, in some embodiments cooccurrence counts are performed by concept lighting engine <b>2804</b>.</p>
<p id="p-0184" num="0183">Documents in collection <b>1602</b> can include, but are not limited to text files, multimedia files, and other content. In some embodiments, collection <b>1602</b> includes documents found on an intranet. Also included in collection <b>1602</b> are a variety of concept data sources <b>1610</b>-<b>1614</b>. In the example shown, source <b>1610</b> is the set of web pages known collectively as Wikipedia (and available, e.g., at http://en.wikipedia.org). Source <b>1612</b> is a directory of automobile makes and models, and source <b>1614</b> is a taxonomy of pharmaceuticals. In some cases, such as with Wikipedia, the pages are used both as concept data sources, and are also included in group <b>1608</b> and are crawled accordingly. In other cases, such as with the directory of automobile makes and models, the information may be restricted or otherwise not available to crawler <b>1604</b>, and the concept data source will serve only as a concept data source and not be included in group <b>1608</b>.</p>
<p id="p-0185" num="0184">Concept data sources <b>1610</b>-<b>1614</b> each provide information that conveys some kind of relation between concepts and can be used as a source of concepts and also as a source of hierarchical relations between at least some of those concepts. For example, suppose a sample entry in automobile directory <b>1612</b> is: &#x201c;2008 Honda Civic Sedan XL.&#x201d; Using the techniques described herein it is possible to extract hierarchical information from the entry, for example that the &#x201c;2008 Sedan XL&#x201d; is a type of &#x201c;Honda Civic,&#x201d; and that a &#x201c;Honda Civic&#x201d; is manufactured by &#x201c;Honda.&#x201d; Pages within Wikipedia typically refer to their conceptual parents by link. For example, the Wikipedia page on the topic of &#x201c;Astronomy&#x201d; has a link to its parent (typically by labeling the parent as its &#x201c;category&#x201d;), the more general subject of &#x201c;Science.&#x201d; The Wikipedia page on the topic of &#x201c;India&#x201d; includes a link to &#x201c;South Asian Countries,&#x201d; which includes a link to &#x201c;Asian Countries&#x201d; which includes a link to &#x201c;Countries by Continent.&#x201d; The entries in the pharmaceutical taxonomy are likewise related to one another in a manner that can be harvested using the techniques described herein.</p>
<p id="p-0186" num="0185">For each of the concept data sources <b>1610</b>-<b>1614</b>, one or more arc generators <b>1616</b> are used to parse the respective concept data source, extract concepts and relations between concepts, and store the information in a common format (<b>1618</b>) that can be consumed by aggregator <b>1622</b>. For example, a Wikipedia arc generator is configured to obtain and parse Wikipedia data made available as a single XML file. From the XML file, pairs of concepts&#x2014;an article and a category to which it belongs&#x2014;are extracted. Another arc generator is configured to parse the automobile directory (e.g., provided as a spreadsheet) and generate arcs accordingly, such as by knowing that for each line of the spreadsheet, the first column (year) should be combined with the last column to form &#x201c;2008 Sedan XL,&#x201d; which has as its parent the second and third column (&#x201c;Honda Civic&#x201d;), which has as its parent just the second column (&#x201c;Honda&#x201d;). As used herein, an arc is a directional edge between two concepts. A concept is a word n-gram with meaning. One relation between concepts as used herein is an &#x201c;is a&#x201d; (&#x201c;containing&#x201d;) relation. For example, &#x201c;Physics:Science&#x201d; is an arc that means &#x201c;physics is a science&#x201d; (&#x201c;science contains physics&#x201d;). As described in more detail below, additional relations may also be employed, such as by homonym and synonym arcs. Other directed relations between arcs that convey meaning may also be employed, and the techniques described herein adapted as applicable. For example, case variants and tokenization can be handled through the use of flags.</p>
<p id="p-0187" num="0186">The respective content of concept data sources <b>1610</b>-<b>1614</b> may change at various times, and arc generators <b>1616</b> are configured to obtain and process fresh versions of data from their corresponding concept data sources as applicable so that files <b>1618</b> reflect the most currently known concepts and relations from those sources. For example, Wikipedia (<b>1610</b>) changes frequently, while the content of the pharmaceutical taxonomy <b>1614</b> may change very infrequently. As such, in various embodiments, arc generators <b>1616</b> periodically process their respective sources according to a schedule appropriate to the source (e.g., with the Wikipedia arc generator running weekly, and the pharmaceutical arc generator running monthly). Editorial list <b>1620</b> is a manually maintained list of arcs and relations used, for example, to designate a fixed set of top level concepts (also referred to herein as &#x201c;verticals&#x201d;) and to ensure that those top level concepts are not moved underneath one another or omitted.</p>
<p id="p-0188" num="0187">Aggregator <b>1622</b> aggregates the source-specific arc files <b>1618</b> extracted by their respective arc generators <b>1616</b> and the editorial list of arcs <b>1620</b> and creates as output arc list <b>1624</b> and vertex list <b>1626</b>. As described in more detail below, arc list <b>1624</b> is a list of edges and properties that will be used to construct a concept hierarchy <b>1628</b>. Each time aggregator <b>1622</b> runs, the newly constructed arc list <b>1624</b> replaces any previously constructed arc list. Vertex list <b>1626</b> is a persistent list of globally unique concepts that monotonically increases&#x2014;maintaining a set of stable concept identifiers over the iterations of aggregator <b>1622</b>'s processing, and growing only when a concept not previously seen is encountered by aggregator <b>1622</b>, which is then appended to the list.</p>
<p id="p-0189" num="0188">As described in more detail below, hierarchy builder <b>1630</b> constructs hierarchy <b>1628</b> using arc list <b>1624</b> and additional information such as a list of subtree preferences <b>1632</b> and information obtained from index <b>1606</b>. The subtree preferences list <b>1632</b> includes rules to be considered by hierarchy builder <b>1630</b> when evaluating arc list <b>1624</b>. In various embodiments hierarchy <b>1628</b> is stored as a list of pairs of concepts, a weight, and optionally other arc attributes such as homonym and synonym indicators. The weight is a rank indicating whether the arc is the primary arc between a concept and a parent (&#x201c;1&#x201d;) or whether the arc is an additional arc (e.g., &#x201c;2&#x201d; or &#x201c;3&#x201d;) that was inserted into the hierarchy after the primary arc was selected.</p>
<p id="p-0190" num="0189">In some embodiments hierarchy builder <b>1630</b> constructs hierarchy <b>1628</b> by building a directed graph based on the information it receives, and then extracting a directed minimum spanning tree (&#x201c;DMST&#x201d;) from that graph (in which every concept (also referred to herein as a &#x201c;node&#x201d;) present in the tree except the root has exactly one parent, and no cycles or orphans are present). A variety of techniques for finding a minimum spanning tree have been developed. One example is the Chu/Liu-Edmonds algorithm.</p>
<p id="p-0191" num="0190">Hierarchy builder <b>1630</b> optionally employs a DAG builder <b>1634</b>, which inserts additional nodes into the DMST to form a directed acyclic graph (&#x201c;DAG&#x201d;) of concepts. An optional interface allows an administrator to view why nodes are placed in the hierarchy where they are and to audit the effects of making changes to the rules used in constructing the hierarchy. For example, if certain nodes are not consistently being placed under appropriate parents, an administrator can make additions to the subtree preferences list <b>1632</b> or add entries to editorial arc list <b>1620</b> as applicable. For example, an administrator may use the interface to specify that when B has C as a parent and A has a choice of parent B or C, A should select B as its parent so that a deeper hierarchy is created. This property of A, B, and C is sometimes referred to as transitive reduction.</p>
<p id="p-0192" num="0191"><figref idref="DRAWINGS">FIG. 17A</figref> is a portion of an arc list according to one embodiment. In the example shown&#x2014;a portion of aggregated arc list <b>1624</b>&#x2014;lines <b>1702</b> and <b>1704</b> were provided by the Wikipedia arc list <b>1618</b>, lines <b>1706</b>-<b>1710</b> were provided by the automobile directory arc list <b>1618</b>, and line <b>1712</b> was provided by editorial arc list <b>1620</b>. As described in more detail below, one task performed by hierarchy builder <b>1630</b> is a determination of a &#x201c;best parent&#x201d; for a concept from among its candidate parents. In the example shown, &#x201c;Car Manufacturers&#x201d; has two candidate parents. The first is &#x201c;Transportation&#x201d; as suggested by Wikipedia (<b>1702</b>) and the second is &#x201c;Kosmix Autos&#x201d; as suggested by the editorial arc list (<b>1712</b>).</p>
<p id="p-0193" num="0192">One factor that can be considered in the determination of which candidate parent is the best, is what score is assigned (e.g., by an administrator) to each of the candidate parents' concept source (referred to herein as an &#x201c;arc rank&#x201d; score). Typically, the arcs provided by specialized concept sources (such as the automobile directory) are preferred over more general concept sources (such as Wikipedia). In the example shown in <figref idref="DRAWINGS">FIG. 17A</figref>, a lower arc rank score indicates a better (preferred) source. In some embodiments, arc rank generators <b>1616</b> are configured with what arc rank score should be assigned their respective arcs, and those scores are included in the source specific arc rank files <b>1618</b>. In other embodiments, aggregator <b>1622</b> is configured by an administrator with a list of sources and their respective scores.</p>
<p id="p-0194" num="0193">Wikipedia as a source has a score of 20, as indicated in region <b>1714</b>. The automobile directory is considered a &#x201c;better&#x201d; source of information than Wikipedia for its specialized information on automobiles, and therefore, each of the arcs that are contributed to arc list <b>1624</b> by its arc list <b>1618</b> receive a score of 10, as indicated in region <b>1716</b>. The editorial arc list is intended to override entries in arc list <b>1624</b> provided by source specific arc lists <b>1618</b> and has an even better (lower preference order) score as indicated in region <b>1718</b>. As described in more detail below, a graph constructed from the data shown in <figref idref="DRAWINGS">FIG. 17A</figref> would include a leaf &#x201c;Honda Civic RX&#x201d; which is a &#x201c;Honda Civic&#x201d; which is made by &#x201c;Honda&#x201d; which is a &#x201c;Car Manufacturer(s)&#x201d; which is contained by &#x201c;Kosmix Autos.&#x201d;</p>
<p id="p-0195" num="0194"><figref idref="DRAWINGS">FIG. 17B</figref> is a portion of a vertex list according to one embodiment. The vertex list <b>1626</b> represents a list of all known concepts and is used by crawler <b>1604</b> to perform document frequency counts as described in more detail below. In the example shown, the vertex list is maintained in the form of human readable concept (column <b>1</b>) and unique identifier (column <b>2</b>). For example, &#x201c;Kosmix Root,&#x201d; which serves as the root of the DMST produced by hierarchy builder <b>1630</b> has a unique ID of &#x201c;000000,&#x201d; while the concept &#x201c;rabbit&#x201d; has a unique ID of &#x201c;103817.&#x201d;</p>
<p id="p-0196" num="0195"><figref idref="DRAWINGS">FIG. 17C</figref> is a portion of an arc list according to one embodiment. Some word n-grams, such as &#x201c;jaguar,&#x201d; have ambiguous meanings absent additional context. For example, &#x201c;jaguar&#x201d; could refer to the automobile, the mammal, an operating system, etc. Wikipedia attempts to mitigate such ambiguity by presenting a &#x201c;disambiguation page&#x201d; in scenarios such as where a user types in the ambiguous term into a search box. A related problem is that of synonyms. For example, &#x201c;puma,&#x201d; &#x201c;mountain lion,&#x201d; &#x201c;panther,&#x201d; and &#x201c;cougar&#x201d; are all terms used to refer to the animal Felidae Puma <i>P. concolor</i>. Wikipedia attempts to mitigate the proliferation of entries by designating one of the terms as a &#x201c;main&#x201d; entry, and redirecting to the main entry any attempts to access information by using the synonymous term. For example, &#x201c;J_K_Rowling&#x201d; (a pen name) is the main entry for the author whose legal name is &#x201c;Joanne Murray.&#x201d; If a user of Wikipedia attempts to access an article on &#x201c;Joanne Murray,&#x201d; they are redirected to the entry titled &#x201c;J_K_Rowling.&#x201d; The homonym and synonym annotations are made available in hierarchy <b>1628</b> and can be used by a lighting system as described in more detail below.</p>
<p id="p-0197" num="0196">In the example shown in FIG. <b>17</b>C&#x2014;a portion of aggregated arc list <b>1624</b>&#x2014;each of the lines was provided by the Wikipedia arc list <b>1618</b>. The Wikipedia arc generator <b>1616</b> is configured to recognize disambiguation pages when parsing the Wikipedia source XML file and record as arcs the ambiguous term and each of the disambiguated options in the arc list <b>1618</b> as a pair, along with a &#x201c;hom&#x201d; (for homonym) flag. Each disambiguated word is given a separate entry in the vertex file, such as the &#x201c;Jaguar_animal&#x201d; line shown in <figref idref="DRAWINGS">FIG. 17B</figref>. The Wikipedia arc generator <b>1616</b> is also configured to recognize redirection pages when parsing the Wikipedia source XML file and records as arcs each of the synonyms and the main entry (&#x201c;cougar&#x201d;) in the arc list <b>1618</b> as a pair, along with a &#x201c;syn&#x201d; (for synonym) flag. In some embodiments different weights are given to homonyms and/or synonyms over normal arcs instead of or in addition to the use of flags.</p>
<p id="p-0198" num="0197">In some embodiments aggregator <b>1622</b> is configured to remove homonym arcs in which the ambiguous term and the disambiguated term do not begin with the same word, so that the over generation of homonym arcs is reduced. For example, since &#x201c;Mac OS Jaguar&#x201d; does not begin with &#x201c;Jaguar,&#x201d; it is removed (or omitted, as applicable) from arc list <b>1624</b>. As another example, Wikipedia offers &#x201c;Fiona Apple&#x201d; as a disambiguation of &#x201c;Apple.&#x201d; Such an arc would likewise be deleted or omitted from arc list <b>1624</b>.</p>
<p id="p-0199" num="0198"><figref idref="DRAWINGS">FIG. 17D</figref> is a portion of a subtree preferences list according to one embodiment. In the example shown, the first column is the name of a concept, the second column is a score, and the third column is a depth. When hierarchy builder <b>1630</b> determines a best parent for a concept from among its candidate parents, one factor that can be considered is whether there is relevant information in the subtree preferences list. A subtree preferences list can be used to reduce the likelihood that a bad parent (e.g., that does not maintain the &#x201c;is a&#x201d;/containing relationship) will be selected over a better parent (e.g., that does preserve the relation). For example, many famous people will have as a candidate parent the concept &#x201c;living people.&#x201d; There are over 300,000 such entries in Wikipedia. Entry <b>1782</b> in the subtree preferences list states that any arc in which a concept has as a candidate parent &#x201c;living people&#x201d; is to be disfavored. Concepts such as &#x201c;living people&#x201d; and &#x201c;things in 1900&#x201d; exist in Wikipedia but their inclusion in hierarchy <b>1628</b> is generally disfavored. While Stephen Hawking and Sting are both &#x201c;living people&#x201d; and contained by that Wikipedia category, a more meaningful hierarchy can be constructed if their respective parents are &#x201c;Scientists&#x201d; and &#x201c;Musicians.&#x201d; Virtually all people present in the living people category of Wikipedia have something to recommend about themselves beyond the fact that they are alive. Such arcs are disfavored rather than discarded in some embodiments to avoid creating orphan nodes.</p>
<p id="p-0200" num="0199">In contrast, entry <b>1780</b> states that any chain of arcs (with up to 3 levels distance) that includes a parent of &#x201c;countries by continent&#x201d; is to be preferred. In some embodiments entries in the subtree preferences list are applicable at all depths and the depth column is omitted. What entries should be included in the subtree preferences list (and what scores/depths should be assigned) is generally subjective, and can be refined over time, such as by evaluating logs. The subtree preferences provide a mechanism for an administrator to remove or favor a potentially large number of arcs without having to manually enter rules for each arc. For example, by preferring &#x201c;countries by continent,&#x201d; all countries listed in Wikipedia will tend to be grouped under countries by continent (possibly at varying depth levels), and an administrator need not specify a rule for each country.</p>
<p id="p-0201" num="0200"><figref idref="DRAWINGS">FIG. 18</figref> is a flow chart illustrating an embodiment of a process for creating a hierarchy of concepts from a corpus of documents. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 18</figref> is performed by hierarchy builder <b>1630</b>.</p>
<p id="p-0202" num="0201">The process begins at <b>1802</b> when a graph of arcs of concepts is received. In some embodiments the graph includes the XML representation of Wikipedia. In some embodiments the graph comprises an arc list such as arc list <b>1624</b>. Other sources of arcs of concepts, at least some of which can be connected to form a graph (irrespective of whether that graph contains some orphans or cycles) may also be used, as applicable. For example, in some embodiments a graph or portions thereof is received from a third party at <b>1802</b>.</p>
<p id="p-0203" num="0202">At <b>1804</b>, weights associated with the arcs in the graph are generated. As described in more detail below, a variety of techniques can be used, individually and in combination, to generate weights at <b>1804</b>. For example, arc rank scores, Boolean values, cooccurrence scores, mutual information, etc., can be used to form a single weight or a vector of weights at <b>1804</b>.</p>
<p id="p-0204" num="0203">At <b>1806</b>, a directed minimum spanning tree is extracted from the graph received at <b>1802</b>. In some embodiments preprocessing is performed, such as to remove orphan nodes which cannot be reached from the root, and the directed minimum spanning tree is extracted from the preprocessed graph rather than the graph as received at <b>1802</b>. One way of constructing a DMST is as follows. For each node in the graph, a single parent is selected, such as by using the vector of weights generated at <b>1804</b> to evaluate candidate parents. By biasing the selection of parents toward the best parent (e.g., the one with the lowest source score), an attempt is made to preserve the consistency of the &#x201c;is a&#x201d;/containing relationship up the DMST, such as that calculus is a form of mathematics. Next, any cycles in the graph are detected by hierarchy builder <b>1630</b>. An example of a cycle is an arc from &#x201c;ships&#x201d; to &#x201c;boats&#x201d; and another from &#x201c;boats&#x201d; to &#x201c;ships&#x201d; both being present in the graph. Sometimes cycles are created in Wikipedia data because two nodes are imputed to have a hierarchical relationship when they are in fact peers. For example a node &#x201c;Bert&#x201d; may have as a parent &#x201c;Ernie&#x201d; and vice versa. Hierarchy builder <b>1630</b> runs a process to reduce the number of cycles. The selection of a best parent, the detection of cycles, and the reduction of cycles continues iteratively until an acyclic tree is formed. As described in more detail below, optional post processing can be performed on the acyclic tree.</p>
<p id="p-0205" num="0204"><figref idref="DRAWINGS">FIG. 19</figref> illustrates an example of a vector of weights according to one embodiment. Suppose that two arcs for the concept &#x201c;Ronald Reagan&#x201d; (<b>1902</b>) are present in arc list <b>1624</b>. As mentioned previously, one portion of the process for constructing a DMST from a graph of directed arcs is to select one parent from among the candidate parents of a node. Generally if only one arc for a concept exists, that arc is used. If the candidate parent must be selected from multiple candidates, in some embodiments a pairwise lexicographical comparison is performed between the vectors of weights of those candidates. In the example shown in <figref idref="DRAWINGS">FIG. 19</figref>, the two candidate parents of &#x201c;Ronald Reagan&#x201d; are &#x201c;U.S. President&#x201d; and &#x201c;Actor&#x201d; (<b>1904</b>). Indeed, Ronald Reagan was both a U.S. President and an actor, so the selection of either candidate would result in the preservation of the &#x201c;is a&#x201d; meaning between the node in column <b>1902</b> and the node in column <b>1904</b>.</p>
<p id="p-0206" num="0205">In various embodiments, some values included in the vector of weights are read in from files, and others are provided by additional processes (e.g., plugins) which calculate and provide scores. The first portion of the vector of weights to compare between the two candidates is the &#x201c;variance&#x201d; score, indicated in column <b>1906</b>. The variance score indicates the number of internal links which point to the candidate parent. Both candidate parents have a score of three, meaning that the vectors are tied, so the next portion of the vector is evaluated.</p>
<p id="p-0207" num="0206">The next portion of the vector of weights to compare between the two candidates is the &#x201c;vertical correction&#x201d; score, indicated in column <b>1908</b>. In some embodiments the construction of a DMST is performed twice. The first time it is run, the vertical correction score is zero. The second time it is run, a vertical correction score is determined by a process that attempts to keep nodes that are peers grouped together under the same parent. For example, suppose that 95% of house plants are placed under &#x201c;botany,&#x201d; but 5% select as best parents &#x201c;health&#x201d; on the first run. The vertical correction process is configured to detect the discrepancy and will indicate that a &#x201c;botany&#x201d; parent should be selected by returning a nonzero score in column <b>1908</b> (such as a Boolean value) during the second run. In various embodiments, normalization and/or a threshold is applied so that in cases such as a 60/40 split, the vertical correction process does not attempt to group peers under the same parent. In the example shown, both candidates have a score of zero. The vectors are tied, so the next portion of the vector is evaluated.</p>
<p id="p-0208" num="0207">The next portion of the vector of weights to compare between the two candidates is the &#x201c;templates&#x201d; score, indicated in column <b>1910</b>. The value for the templates score is provided by a process that evaluates nodes against groups or lists of concepts and attempts to keep those groups together. If concepts are present in multiple groups, the process attempts to keep the most number of groups, or the most important groups together, etc., as applicable. The lists/groups may be provided by a third party and/or configured by an administrator or otherwise obtained. For example, Wikipedia provides set information for certain entries which can be scraped by crawler <b>1604</b>. Examples of groups include a list of the planets in the solar system, a list of human diseases, a list of the seven dwarves, British Commonwealth countries, etc. In the example shown, Ronald Reagan appears in a list of United States presidents. As such, a score of one is present in column <b>1910</b> for &#x201c;U.S. President&#x201d; but not for &#x201c;Actor.&#x201d; Since there is no longer a tie between the two vectors, &#x201c;U.S. President&#x201d; would be selected as the best parent for the concept &#x201c;Ronald Reagan.&#x201d; If both values in column <b>1910</b> were equal, however, the next portion of the vector would be evaluated, and so on, until the tie was broken. In the example shown, the remaining columns are as follows. Column <b>1912</b> reports whether a process evaluating the loaded subtree preferences list <b>1632</b> has determined that a positive or negative preference exists for the arc. If no such preference is found, column <b>1912</b> reports a zero. If a preference is found, it is indicated in some embodiments as a positive or negative value. Column <b>1914</b> is the arc rank score described previously.</p>
<p id="p-0209" num="0208">Columns <b>1916</b>, <b>1918</b>, and <b>1920</b> report various statistics about the presence of the concept and its candidate parent within the documents stored in index <b>1606</b>.</p>
<p id="p-0210" num="0209">The &#x201c;occ&#x201d; column (<b>1916</b>) includes a score that represents a frequency count for the concept. A frequency count indicates the frequency of the occurrence of the concept within the pages in index <b>1606</b>. The frequency count is determined in some embodiments by crawler <b>1604</b> using vertex list <b>1626</b> to scan through each of the documents in index <b>1606</b> and increment the &#x201c;occ&#x201d; for the concept for each page in the index that includes at least one occurrence of the concept. The &#x201c;pocc&#x201d; column similarly represents a frequency count for the candidate parent.</p>
<p id="p-0211" num="0210">The &#x201c;cooc&#x201d; column includes a score that represents the cooccurrence of the concept and candidate parent in the pages in index <b>1606</b>. Cooccurrence scores are determined in some embodiments by crawler <b>1604</b> evaluating the cooccurrence of concepts which are connected by an arc (e.g., are present in arc list <b>1624</b>). Techniques such as using a running window of words can also be employed to avoid quadratic blowup.</p>
<p id="p-0212" num="0211"><figref idref="DRAWINGS">FIG. 20</figref> is a flow chart illustrating an embodiment of a process for creating a hierarchy of concepts from a corpus of documents. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 20</figref> is performed by hierarchy builder <b>1630</b>.</p>
<p id="p-0213" num="0212">The process begins at <b>2002</b> when vertex list <b>1626</b> is loaded, allowing hierarchy builder <b>1630</b> to map concept names (e.g. human readable concept names) to concept IDs. At <b>2004</b>, a graph is built using arc list <b>1624</b>&#x2014;for example by connecting pairs of concepts together and storing any associated properties. If duplicate arcs are encountered, the properties of the duplicate arcs are merged. For example, if one line in arc list <b>1624</b> reads Physics:Science:20 and another line in arc list <b>1624</b> reads Physics:Science:10, the arcs are &#x201c;merged&#x201d; with the best weight being preserved (e.g., Physics:Science:10). If one source indicates that an arc is a homonym arc, and another source indicates that the arc is a synonym arc, the arcs are merged and both flags are set for the merged arc. At <b>2006</b> subtree preferences list <b>1632</b> is loaded, as are any applicable case variance or tokenization variance information.</p>
<p id="p-0214" num="0213">At <b>2008</b>, a DMST is constructed. First a best parent is selected for each node by performing a local decision comparing vectors of weights. Next, cycles are detected. One way of detecting cycles is to traverse the graph, marking each node as &#x201c;seen&#x201d; as it is visited. If a node is reached again during the traversal, a cycle has been located. For each cycle, an evaluation is made between the cost of removing an arc and the cost of adding an incident arc, and selecting the appropriate arcs whose addition/removal have the lowest associated cost. In some embodiments the comparison is a difference of vectors, and is computed by replacing the values in the vectors with minwise elements. As stated previously, the selection of a single parent, the detection of cycles, and the reduction of cycles continues until each node (except the root) has exactly one parent. In some embodiments post processing is performed, such as vertical correction.</p>
<p id="p-0215" num="0214">At <b>2010</b> the DMST is extended to a DAG using additional arcs. For example, at <b>2010</b> synonym arcs are inserted into the DMST, as are homonym arcs, so long as acyclicity is preserved. In some cases, additional concept arcs are included in the DAG where doing so would not result in the formation of a cycle. For example, including &#x201c;Actor&#x201d; as a second parent of &#x201c;Ronald Reagan&#x201d; will not result in a cycle and will preserve the &#x201c;is a&#x201d; relationship up the hierarchy. However, the insertion of other arcs (not previously shown) such as between &#x201c;Ronald Reagan&#x201d; and &#x201c;Hollywood Walk of Frame&#x201d; might be inappropriate, e.g. because the &#x201c;is a&#x201d;/containing relation would be skewed away (e.g. if the parent of &#x201c;Hollywood Walk of Frame&#x201d; is &#x201c;Landmarks&#x201d; &#x2014;Ronald Reagan is not a Landmark). One way of inserting additional arcs into the DMST is to first globally rank the omitted arcs. Rules can be used such as that additional arcs will be inserted into the DAG, in the globally ranked order, so long as the arc to be inserted is of a smaller depth than the existing single parent for the node, or that arcs can be inserted within the same vertical but only one additional arc may be added into a different vertical from the existing single parent, or that additional arcs must have a threshold cooccurrence score before they are placed into the DAG.</p>
<p id="p-0216" num="0215">In some embodiments at least some orphan nodes are placed back into the DMST at <b>2010</b>. One way of placing orphans is to perform a search using the orphan as an input to the query categorization techniques described in more detail below. If the results are sufficiently dense, the orphan can be placed in the appropriate place in the DAG. Similarly, the hierarchy of concepts can be expanded by crawling the documents <b>1608</b> for word n-grams and also attempting to place them into the DAG by using the word n-grams as an input to the query categorization techniques described in more detail below.</p>
<p id="p-0217" num="0216"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an example of a portion of a concept hierarchy. The example shown is an example of a portion of a DAG created using the process shown in <figref idref="DRAWINGS">FIG. 20</figref>. At the root of the hierarchy is a root node <b>2102</b>. Assorted verticals <b>2104</b>-<b>2108</b> have a containing relation to their respective children. For example, Kosmix Autos contains Car Manufacturers which contains the Jaguar automobile manufacturer. Homonym arcs <b>2110</b> and <b>2112</b> exist between the ambiguous term, Jaguar, to two of the disambiguated meanings of the concept. Synonym arcs <b>2114</b>-<b>2118</b> exist between the main instance of the concept &#x201c;Cougar&#x201d; and assorted synonyms for the concept.</p>
<p id="p-0218" num="0217">Tagging Documents with Concepts</p>
<p id="p-0219" num="0218"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an example of a hierarchy of information types according to some embodiments. Both the hierarchy of subject type concepts <b>1628</b> constructed by hierarchy builder <b>1630</b> (or received, for example from a third party such as by using the Open Directory) and a hierarchy of infotypes such as is shown in <figref idref="DRAWINGS">FIG. 22</figref> can be used to tag the documents stored in index <b>1606</b> using a variety of techniques.</p>
<p id="p-0220" num="0219">One way of tagging a document in index <b>1606</b> with subject type concepts is as follows. For each concept in vertex list <b>1626</b>, use the concept as a search query against the documents in index <b>1606</b>. Evaluate the results using standard text match and link scoring techniques (e.g., by examining the number of occurrences of the query on the page, the page title, the link text, metadata, whether the concept appears in bold, etc). Such techniques, which measure how well the text of a query matches a document are collectively referred to herein as &#x201c;text match scoring&#x201d; techniques producing &#x201c;text match scores&#x201d; although more than just the text of the document may be evaluated by such techniques.</p>
<p id="p-0221" num="0220">For any particular page, the concept (query) which results in the highest text match score for the page is that page's top concept. The concept which results in the second highest text match score for the page is that page's second concept, etc. Any given document may include thousands of concepts from vertex list <b>1626</b>. Thus in some embodiments a threshold is applied and the document is tagged with its resulting top n concepts, such as the top 30 concepts.</p>
<p id="p-0222" num="0221">Websites typically have common elements across the various pages that are included in that site. For example, a news website may include a left or right navigational section that includes the terms, &#x201c;Health,&#x201d; &#x201c;Finance,&#x201d; &#x201c;World News,&#x201d; etc. The site may also include a prominent logo on every page. In some embodiments such common elements are identified and ignored or stripped during indexing so that text match scores are not skewed by the prolific presence of those common elements. Identifying and ignoring or stripping common elements allows text match scores and infotype rules to be applied specifically to the distinct content of each document.</p>
<p id="p-0223" num="0222">One way of tagging a document in index <b>1606</b> with an infotype is to determine whether any rules associated with those infotypes is satisfied by the document. For example, documents hosted by a known image hosting service (e.g., stock-photo library), or having an image with a certain minimum pixel size may be indicative of an image type document (e.g., a document having one or more informative images), and be tagged as having an infotype &#x201c;images.&#x201d; Conversely, documents with discouraging ALT text (e.g., &#x201c;advertisement&#x201d;), a standard advertisement size or location, and generic filenames suggestive of being merely decorative or formatting elements (e.g., &#x201c;pixel.gif&#x201d;, &#x201c;footer.jpg&#x201d;) indicate that while including an image, the document is unlikely to be of interest to a user seeking images and are not tagged with the &#x201c;images&#x201d; infotype.</p>
<p id="p-0224" num="0223">Documents hosted by a known news site (e.g., www.wsj.com), having a title indicative of a news source (e.g., &#x201c;Breaking News&#x201d;), or including a copyright notice from a known news agency/newswire (e.g., &#x201c;Associated Press&#x201d;) are tagged as being of infotype news. Documents with a title that includes words such as &#x201c;event,&#x201d; &#x201c;calendar,&#x201d; &#x201c;upcoming,&#x201d; etc., are tagged with the &#x201c;events&#x201d; infotype. Documents that include terms specific to categories of local venues (e.g., amusement parks, toy stores, police stations, That restaurants, dentists) or including links to map services are tagged with the &#x201c;local&#x201d; infotype. Documents that include terms (e.g., appearing on a wordlist) such as &#x201c;add to cart,&#x201d; &#x201c;coupon,&#x201d; and &#x201c;checkout&#x201d; are tagged with a &#x201c;shopping&#x201d; infotype, etc.</p>
<p id="p-0225" num="0224">If multiple rules for different infotypes are satisfied by a document, the document is tagged with multiple infotypes as applicable. For example, a photojournalist's blog about current events might be tagged with both the &#x201c;images&#x201d; and the &#x201c;news&#x201d; infotypes.</p>
<p id="p-0226" num="0225">The top concepts for a document are stored in index <b>1606</b> and are used in a variety of ways, as described in more detail below.</p>
<p id="p-0227" num="0226">Lighting Concepts</p>
<p id="p-0228" num="0227"><figref idref="DRAWINGS">FIG. 23</figref> illustrates an example of a system for categorizing a query. In some embodiments index <b>2306</b> is index <b>1606</b>. Query categorizer <b>2302</b> receives queries as input. While only one query categorizer is shown in <figref idref="DRAWINGS">FIG. 23</figref>, in some embodiments multiple query categorizers may be included in the system (and operate on slices of the index) so that many queries can be received and processed simultaneously, such as when query categorizer <b>2302</b> is used in conjunction with a user-facing search engine, or when processing orphans received from hierarchy builder <b>1630</b>. As described in more detail below, query categorizer <b>2302</b> consults information stored in index <b>2306</b> to determine a list of one or more concepts associated with the received query. The output of query categorizer <b>2302</b> is used in some embodiments as an input to additional processing, also as described in more detail below.</p>
<p id="p-0229" num="0228"><figref idref="DRAWINGS">FIG. 24</figref> illustrates an example of a process for categorizing a query. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 24</figref> is performed by query categorizer <b>2302</b>. The process begins at <b>2402</b> when a query is received. At <b>2404</b>, a search of an index, such as index <b>2306</b> is performed, using the received query and text match scores that are received for the results. In some embodiments a PageRank score is computed as part of the text match score determination. Other scoring techniques may also be used.</p>
<p id="p-0230" num="0229">Suppose there are 20,000 documents stored in index <b>2306</b> and that the query received at <b>2402</b> is &#x201c;What kind of metal is the Eiffel Tower made out of?&#x201d; Of the 20,000 documents, suppose <b>350</b> results are found. The first result is the best match (e.g., one describing the history of the construction of the Eiffel Tower and containing many instances of the query) and the 350<sup>th </sup>result is the worst result (e.g., containing all of the words of the query, but with those words appearing in disjoint areas of the document instead of next to one another). Each of the 350 results corresponds with a document stored in index <b>2306</b>. If the documents stored in index <b>2306</b> have been tagged with concepts, such as by using the techniques described herein, then each of the 350 results also has an associated set of concepts.</p>
<p id="p-0231" num="0230">At <b>2406</b>, the query results and the concept information stored about the results in index <b>2306</b> are combined to determine a set of scores for concepts (a process referred to herein as &#x201c;voting&#x201d;). One technique for determining voting scores is as follows. First, examine each result and obtain a list of all of the top concepts reflected in the results. (E.g., take a union of all of the concepts tagged to all of the results.) Next, for each concept in the union (also referred to herein as the &#x201c;candidate concepts&#x201d; list), assign that concept a score equal to the sum of the text match scores of each of the documents in the results which includes the concept in its list of top concepts. In some embodiments the text match scores are normalized. Suppose, for example, that only the top 100 results are used (and the remaining 250 results are discarded). The best result is assigned a score of 1. Each of that result's top concepts (e.g., topics T<b>1</b>, T<b>5</b>, and T<b>20</b>) receives a score of 1 from the result. Suppose that the next best result is assigned a score of 0.99. Each of that result's top concepts (e.g., topics T<b>1</b>, T<b>2</b>, and T<b>3</b>) receives a score of 0.99 from that result, and so on. After evaluating the first two results, topic T<b>1</b> has a score of 1.99, topics T<b>2</b> and T<b>3</b> have a score of 0.99, and topics T<b>5</b> and T<b>20</b> have a score of 1. In some embodiments the voting scores are not weighted, but instead each concept receives one count for every result that listed that concept as one of its top concepts. Other voting techniques can also be used as applicable.</p>
<p id="p-0232" num="0231">At <b>2408</b>, for each concept (e.g., the candidate concepts) the expected number of documents that the query and the concept would occur in at random is determined. This is referred to as an &#x201c;expected cooccurrence&#x201d; and is computed as follows in some embodiments. The probability of the cooccurrence of the query and the concept is equal to the probability of the query occurring multiplied by the probability of the concept occurring. This can be expressed as:</p>
<p id="p-0233" num="0232">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>P</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mi>query</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>and</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>concept</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mfrac>
      <mi>QueryDF</mi>
      <mi>IndexSize</mi>
    </mfrac>
    <mo>&#xd7;</mo>
    <mrow>
      <mfrac>
        <mi>ConceptDF</mi>
        <mi>IndexSize</mi>
      </mfrac>
      <mo>.</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<br/>
The &#x201c;QueryDF&#x201d; is the number of documents in the index in which the query appears, and the &#x201c;ConceptDF&#x201d; is the number of documents in the index which are tagged with the concept. The expected cooccurrence is IndexSize&#xd7;P(query and concept). The expected cooccurrence is then compared to the observed cooccurrence. If the observed cooccurrence exceeds the expected cooccurrence by a threshold amount, the concept is referred to as having been &#x201c;lit&#x201d; &#x2014;the query is potentially related to the lit concept.
</p>
<p id="p-0234" num="0233">At <b>2410</b>, the various scores are combined into a combination score. In some embodiments at <b>2410</b>, logistic regression is used to determine how to combine, for a given concept, the text match scores, voting scores, expected cooccurrence scores, and the actual number of documents that the query was matched with and the concept occurred in (the &#x201c;observed cooccurrence&#x201d;). Other techniques may also be used to determine the best coefficients and/or to combine the scores. For example, coefficients can be added, some multiplied and others added, and powers can also be used.</p>
<p id="p-0235" num="0234">At <b>2412</b>, results, such as an ordered list of all of the candidate concepts is returned. In some embodiments additional processing is performed. For example, a threshold may be applied such that only the most highly scored n concepts are returned, or only the highest concept is returned. A confidence score may also be computed. For example, of all of the candidate concepts, their respective combination scores may be normalized, and the concepts may be assigned into buckets such as &#x201c;high confidence,&#x201d; &#x201c;medium confidence,&#x201d; and &#x201c;low confidence&#x201d; based on their normalized scores.</p>
<p id="p-0236" num="0235">The process shown in <figref idref="DRAWINGS">FIG. 24</figref> can be adapted to determine a list of infotype concepts in addition to or instead of a list of subject type concepts associated with the query. For example, at <b>2406</b>, in addition to voting for the subject type concepts, a document can also vote for the infotypes with which it is associated and the highest scoring infotypes can also be returned at <b>2412</b> as applicable.</p>
<p id="p-0237" num="0236"><figref idref="DRAWINGS">FIG. 25</figref> illustrates an example of scores determined as part of a process for associating a query with a concept. In some embodiments the scores shown in <figref idref="DRAWINGS">FIG. 25</figref> are computed as part of the process shown in <figref idref="DRAWINGS">FIG. 24</figref>. Suppose index <b>2306</b> includes 400 million documents, that a user has provided as a query the word &#x201c;jaguar,&#x201d; and that 34898 results are obtained (i.e., the QueryDF is 34898). Column <b>2502</b> lists assorted concepts with which documents in the index that are results of a &#x201c;jaguar&#x201d; query are tagged. The concepts are sorted according to their &#x201c;final score&#x201d; (<b>2504</b>). In the example shown, the final score is a combined score such as the one computed at <b>2410</b> in the process shown in <figref idref="DRAWINGS">FIG. 24</figref>. The combination function used in this example is:</p>
<p id="p-0238" num="0237">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <msub>
        <mi>c</mi>
        <mn>1</mn>
      </msub>
      <mo>&#xd7;</mo>
      <mrow>
        <mi>log</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>TextScore</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <msub>
        <mi>c</mi>
        <mn>2</mn>
      </msub>
      <mo>&#xd7;</mo>
      <mrow>
        <mi>log</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>ExpectedCoOccurrence</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <msub>
        <mi>c</mi>
        <mn>3</mn>
      </msub>
      <mo>&#xd7;</mo>
      <mrow>
        <mi>log</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>ObservedCoOccurrence</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <msub>
        <mi>c</mi>
        <mn>4</mn>
      </msub>
      <mo>&#xd7;</mo>
      <mrow>
        <mi>log</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mfrac>
            <mi>TextScore</mi>
            <mrow>
              <mi>MaxTextScore</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
            </mrow>
          </mfrac>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where the TextScore is an average of the text match scores given to the top 100 documents that matched the query, and where the MaxTextScore is the highest text score that any concept received for the query. The constraints c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, and c<sub>4 </sub>were selected by running logistic regression on a set of 100 queries and their matched concepts. The values used in the example shown are c<sub>1</sub>=2.0151, c<sub>2</sub>=&#x2212;1.2769, c<sub>3</sub>=1.1504, and c<sub>4</sub>=0.51. The constraints can be manually adjusted as applicable.
</p>
<p id="p-0239" num="0238">Column <b>2506</b> lists the TextScores of the respective concepts. Column <b>2508</b> lists the observed cooccurrence of the concept and the query, column <b>2510</b> lists the Concept DF, and column <b>2512</b> lists the expected cooccurrence of the concept and the query. Column <b>2514</b> is a confidence score, computed by using a hard threshold on the final score. In the example shown, a final score above 2300 is assigned a confidence of 10, a final score above 2200 is assigned a confidence of 9, a final score above 2100 is assigned a confidence of 8, etc. Concepts with final scores equivalent to a confidence of 0 (less than 1500) are automatically removed.</p>
<p id="p-0240" num="0239">In the example shown, the three top concepts for the query &#x201c;jaguar&#x201d; are the automobile (<b>2520</b>), the mammal (<b>2522</b>), and the sports team (<b>2524</b>). They each have a high confidence score. Other concepts, such as a specific model of automobile (<b>2526</b>), and a player on the sports team (<b>2528</b>) also have high confidence scores. As the confidence scores diminish, the corresponding concepts appear to be less directly relevant to a query of &#x201c;jaguar&#x201d; but remain clumped within one of the three main meanings. For example, concepts <b>2530</b>, <b>2538</b>, <b>2540</b>, <b>2546</b>, and <b>2562</b> are each related to the notion of &#x201c;jaguar&#x201d; being the sports team. Concepts <b>2532</b>, <b>2534</b>, <b>2536</b>, <b>2542</b>, <b>2544</b>, <b>2548</b>, <b>2550</b>, <b>2556</b>, <b>2558</b>, <b>2560</b>, and <b>2564</b> are each related to the notion of &#x201c;jaguar&#x201d; being the automobile. In some embodiments the related concepts are clumped within different meanings as follows. First a list of contexts is obtained, such as by using concepts which have high confidence and have homonym parents. Homonym parents are the different meanings of that concept. A list of the homonyms is a list of all possible meanings of the query. Each concept is then said to be in the context of the homonym nearest to it in the DAG.</p>
<p id="p-0241" num="0240"><figref idref="DRAWINGS">FIG. 26</figref> illustrates an example of a process for cleaning concepts. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 26</figref> is performed by query categorizer <b>2302</b>. The process begins at <b>2602</b> when a list of concepts and associated scores is received. In various embodiments the processing shown in <figref idref="DRAWINGS">FIG. 26</figref> is performed in conjunction with the processing shown in <figref idref="DRAWINGS">FIG. 24</figref>. For example, the processing of <figref idref="DRAWINGS">FIG. 24</figref> can be completed (resulting in a list of candidate concepts and their respective scores) and the output of that process used as input at <b>2602</b>. The processing shown in <figref idref="DRAWINGS">FIGS. 24 and 26</figref> can also be interleaved and redundant or unnecessary steps are omitted as applicable. For example, orphan removal may occur prior to the determination of a final score.</p>
<p id="p-0242" num="0241">At <b>2604</b>, any candidate concepts that are not also present in concept hierarchy <b>1628</b> are removed. This is known as orphan removal. At <b>2606</b>, synonyms are resolved to their canonical concepts. In the hierarchy shown in <figref idref="DRAWINGS">FIG. 21</figref>, &#x201c;cougar&#x201d; is the canonical concept for synonyms &#x201c;mountain lion,&#x201d; &#x201c;puma,&#x201d; and &#x201c;panther.&#x201d; The synonyms are replaced by their canonical concept and the canonical concept receives the highest score of any of its synonyms. For example, in <figref idref="DRAWINGS">FIG. 25</figref>, litre (<b>2542</b>) and liter (<b>2560</b>) are synonyms. During synonym resolution, these two concepts would be combined, taking on the final score of &#x201c;litre&#x201d; which is the highest. At <b>2608</b>, blacklist concepts are removed. Examples of blacklist concepts include spam, pornography, or other portions of the hierarchy that a person has manually blacklisted. At <b>2610</b>, additional concepts are removed based on their confidence levels and location in hierarchy <b>1628</b>. Concepts without a sufficient number of supporting concepts in the same area of the graph are removed. One way of removing these outlier concepts is as follows. Concepts with a confidence level of 10 are not removed. For concepts with a confidence level of 9, examine whether the ancestors of that concept (up to 9 levels away) have any children that are also candidate concepts. If not, the concept is removed. For concepts with a confidence level of 8, examine whether the ancestors (up to 8 levels away) have any children that are also candidate concepts. If not the concept is removed, and so on. In some embodiments additional processing is performed, such as by automatically resolving certain kinds of ambiguities and identifying ambiguous queries that cannot be automatically resolved, and by automatically grouping candidate concepts under their parents.</p>
<p id="p-0243" num="0242"><figref idref="DRAWINGS">FIG. 27</figref> illustrates an example of a concept hierarchy and scores associated with a query. In the example shown, the concept hierarchy includes 11 concepts. Nodes <b>2702</b>, <b>2704</b>, <b>2706</b>, and <b>2708</b> are leaf nodes&#x2014;they do not have any children and are represented by squares. In the example shown, the numbers inside each of the leaf node boxes is an &#x201c;affinity score&#x201d; &#x2014;a measure of how closely the concept matched the query. In some embodiments the affinity score is the normalized combination score as determined using the techniques described above. In the example shown, concepts <b>2702</b> and <b>2706</b> did not match the query (i.e., no documents tagged with concept <b>2702</b> or <b>2706</b> matched the query, or the matches were of very poor quality) and thus have no score. Concept <b>2704</b> received a score of 9 and concept <b>2708</b> received a score of 6.</p>
<p id="p-0244" num="0243">As described in more detail below, scores can be assigned to concepts which did not match the query in a variety of ways. For example, a relation can be determined between a summation of the affinity scores of the children under a parent, and the number of paths that can be taken from the parent to its children and used as a measure of how well the query matched that parent concept. A score determined in such a manner is referred to herein as a &#x201c;density score.&#x201d; A density function is any function that relates node scores and some kind of volume, such as the number of children (or leaf level concepts), under a parent. Affinity scores need not be combination scores. For example, in some embodiments the density function uses as a node score a &#x201c;1&#x201d; for any leaf node that was determined to have matched the query and a zero for all other leaf nodes.</p>
<p id="p-0245" num="0244">In the example shown, the density score of node <b>2712</b> is 3. Node <b>2708</b> contributes 6 points, while node <b>2706</b> does not contribute any. There are a total of two paths which can be taken from node <b>2712</b> to the leaf level. The density score of node <b>2710</b> is 9, like its child node <b>2704</b>. The density score of node <b>2716</b> is 5. The density score of node <b>2720</b> is also 5, because while it is one level higher in the hierarchy, it has only one child (and thus has the same number of paths available as that child). The scores of nodes <b>2714</b> and <b>2718</b> are undefined because the score of node <b>2702</b> is 0. The score of node <b>2722</b> is 3.75.</p>
<p id="p-0246" num="0245"><figref idref="DRAWINGS">FIG. 28</figref> illustrates an example of a system for categorizing a query. In some embodiments index <b>2806</b> is index <b>1606</b>, subject hierarchy <b>2828</b> is hierarchy <b>1628</b>, infotype hierarchy <b>2800</b> is infotype hierarchy <b>2200</b>, and query categorizer <b>2802</b> is query categorizer <b>2302</b>. In the example shown, query categorizer <b>2802</b> receives a query and determines a set of candidate concepts. Query categorizer <b>2802</b> provides the query and the candidate concepts to concept lighting engine <b>2804</b>. Concept lighting engine <b>2804</b> is configured to use a density function to evaluate the received candidate concepts and return as output the received query and a set of concepts that are associated with the query. In some embodiments the concepts output by concept lighting engine <b>2804</b> are returned in a hierarchy form&#x2014;a subportion of infotype hierarchy <b>2800</b> or subject hierarchy <b>2828</b> that includes only the candidate concepts selected by concept lighting engine <b>2804</b>.</p>
<p id="p-0247" num="0246"><figref idref="DRAWINGS">FIG. 29</figref> illustrates an example of a process for categorizing a query. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 29</figref> is performed by concept lighting engine <b>2804</b>. The process begins at <b>2902</b> when a query is received. For example, at <b>2902</b> a query is received from query categorizer <b>2802</b>. At <b>2904</b> candidate concepts and scores are received. In some embodiments the query, candidate concepts, and scores, are received simultaneously at <b>2902</b> and portion <b>2904</b> of the process is omitted. At <b>2906</b> a density function is used to evaluate the received candidate concepts. At <b>2908</b>, additional processing is optionally performed, as described in more detail below. At <b>2910</b> one or more final concepts are associated with the query. Using the information shown in <figref idref="DRAWINGS">FIG. 25</figref>, &#x201c;concept<b>1</b>=jaguar_car, concept<b>2</b>=jaguar_animal, concept_<b>3</b>=jacksonville_jaguars&#x201d; is an example of what might be returned at <b>2910</b>. In some embodiments the query and final concepts are provided to a system which automatically selects an appropriate page layout and page elements based on a query, which is described in more detail below.</p>
<p id="p-0248" num="0247"><figref idref="DRAWINGS">FIG. 30</figref> illustrates an example of a portion of a process for categorizing a query. Portions <b>3002</b>-<b>3006</b> are examples of optional processing that can be performed to further refine the categories associated with the received query. For example, at <b>3002</b> ambiguity is evaluated and an attempt is made to autodisambiguate any detected ambiguities. One form of ambiguity is vertical ambiguity. A vertical is a top level concept, such as &#x201c;Health&#x201d; or &#x201c;Travel&#x201d; that has as a direct parent the root concept. One way of determining vertical ambiguity is to determine the density scores concentrated under each vertical. If one vertical has a density score that is considerably higher than the other verticals, the query is not ambiguous at a vertical level. For example, a query of &#x201c;buy plane tickets&#x201d; is likely to have a high density score within the &#x201c;Travel&#x201d; vertical but have low density scores in the other verticals. If multiple verticals light, but one is considerably denser (i.e., the density scores of its nodes is higher) than the other verticals, in some embodiments the concepts in the less dense verticals are removed and only the most dense result is returned. This process is referred to herein as autodisambiguation.</p>
<p id="p-0249" num="0248">If multiple verticals have similar density scores, then the query is likely to be ambiguous at the vertical level and cannot be resolved without further input, such as from the user. For example, the query &#x201c;jaguar&#x201d; is likely to have comparable density scores under the &#x201c;Sports,&#x201d; &#x201c;Nature,&#x201d; and &#x201c;Transportation&#x201d; verticals. If the user provides a query such as &#x201c;lease a jaguar,&#x201d; the &#x201c;Transportation&#x201d; vertical is most likely the user's intent. In some embodiments the final concepts returned at <b>2910</b> include an indication of whether an ambiguity was detected and if so, what are each of the disambiguated meanings of the query.</p>
<p id="p-0250" num="0249">Lower ambiguity (within a vertical) can also be determined. One way of determining lower ambiguity is, for any node in the tree, to determine the density of its children. For example, suppose a node has ten children. The density scores of each of the ten children are compared. If the density scores of some children are considerably different from the density scores of other children, then the query can be said to be ambiguous at the level of the node being evaluated. In some embodiments if a threshold number of children (e.g., 90% as opposed to 50%) have similar scores, then the query is not considered to be ambiguous at the level of the node being evaluated.</p>
<p id="p-0251" num="0250">Another technique for determining ambiguity is as follows. A list of contexts is determined by taking all homonyms of all high confidence concepts. All nodes in the DAG are marked with their nearest context. For each context, a parent node is determined. In some embodiments this is done by taking the highest node that has, as descendents, only nodes from within this context. Only one such node will exist because the homonym which provides the context follows only one path upwards (the tree path). The density of these representative parent nodes are compared and if the densities are similar in more than one context the query is ambiguous in those contexts, else its non ambiguous and belongs in the context with the highest density.</p>
<p id="p-0252" num="0251">Typically, ambiguity that occurs across verticals or contexts indicates that the query has at least two different fundamental meanings, such as jaguar as a mammal and jaguar as an automobile. When ambiguity occurs within a vertical (e.g., a parent node has two dense children and several sparse children), one possible cause is that the query is not ambiguous, but only implicates certain children. For example, suppose a query lights &#x201c;India&#x201d; and &#x201c;France&#x201d; under a &#x201c;Countries&#x201d; parent, but does not light other countries under the &#x201c;Countries&#x201d; parent. One reason for this is that India and France are both valid &#x201c;answers,&#x201d; or matches to the query, while the other countries are not.</p>
<p id="p-0253" num="0252">In some cases, a concentration of lights (i.e., dense areas) of a hierarchy does not imply an ambiguity but instead implies a surprise. Suppose a famous baseball player, &#x201c;Johnny Stocks&#x201d; was recently involved in a scandal involving the use of steroids. If a query of &#x201c;Johnny Stocks&#x201d; is performed, concepts such as &#x201c;baseball,&#x201d; &#x201c;Johnny Stocks,&#x201d; and the team to which Johnny Stocks belongs might light, each under the &#x201c;Sports&#x201d; vertical. Another concept that might also light is a &#x201c;steroids&#x201d; concept, which is located under a parent of &#x201c;Pharmaceuticals&#x201d; which is in turn located under the &#x201c;Health&#x201d; vertical. In this example, the lighting of the &#x201c;steroids&#x201d; concept is referred to as a &#x201c;surprise.&#x201d; The steroids concept is consistent with the meaning of the other results (e.g., the concept of baseball) even though it is in a different vertical. One way of identifying surprises (e.g., at <b>3004</b>) is as follows. If a node has a low affinity score, it is likely to be a mistake and is removed from the list of candidate concepts. A surprise, in contrast, has a high affinity score. Any identified surprises are returned in some embodiments at <b>2910</b> along with any selected final concepts.</p>
<p id="p-0254" num="0253">At <b>3006</b>, concepts are grouped and named. One way of grouping and naming concepts is to determine how broad a parent node is. If the parent has mostly dense children, the parent is used to name a group that includes all of its children. For example, if 80% of the children under the node &#x201c;Actors&#x201d; light, in some embodiments the &#x201c;Actors&#x201d; node is selected as a concept to be associated with the query, e.g. at <b>2910</b> in the process shown in <figref idref="DRAWINGS">FIG. 29</figref>. If, in contrast, only a few children light, the parent will not be used to group the child nodes, and each is associated with the query.</p>
<p id="p-0255" num="0254">In some embodiments grouping is performed as follows. Starting with the level below root in the subtree that was lit up, the average entropy of the level is calculated as</p>
<p id="p-0256" num="0255">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>E</mi>
    <mo>=</mo>
    <mrow>
      <mo>&#x2211;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mrow>
          <mo>(</mo>
          <mrow>
            <msub>
              <mi>d</mi>
              <mi>i</mi>
            </msub>
            <mo>*</mo>
            <mrow>
              <mi>log</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>d</mi>
                  <mi>i</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
        <mi>N</mi>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where d<sub>i </sub>is the density of the i<sup>th </sup>node and N is the number of levels. A high entropy (e.g., above a threshold) implies that most nodes at this level have been equally lit up. For example, if most children of &#x201c;Actors&#x201d; light up equally, entropy will be high. This means these levels should be grouped together under the parent node. A low entropy (e.g., below a threshold) implies that only a few nodes have been lit up at this level and most others have not been lit. This indicates that those few nodes should be considered as candidates for grouping under. The average entropy of the children of these candidates is then computed. The candidates for which this entropy is high are used for grouping. If the entropy is low, the children in which the density was concentrated are added to the list of candidates.
</p>
<p id="p-0257" num="0256">Mashup of Dynamically Selected Components</p>
<p id="p-0258" num="0257"><figref idref="DRAWINGS">FIG. 31</figref> illustrates an example of a page that includes dynamically selected components, as rendered in a browser. In the example shown, a user has entered the phrase, &#x201c;buy a jaguar,&#x201d; into a search area (<b>3102</b>) of an interface to a search engine. As described in more detail below, the user's query is categorized, such as by the system shown in <figref idref="DRAWINGS">FIG. 28</figref> and components to be displayed to the user are selected based on the user's query and additional information (such as the concepts associated with the query). The components (also referred to herein as &#x201c;modules&#x201d; and &#x201c;widgets&#x201d;) to be displayed are selected from among a pool of components and are selected and laid out on the page in accordance with a template specified by an administrator. A module is an atomic unit of content and can be provided by a third party.</p>
<p id="p-0259" num="0258">The page template can be configured with query-agnostic formatting instructions, such as the number of columns to display, the relative width of those columns, and the percentage of the rendered page that is to be used for advertisements or other monetization-related modules. As described in more detail below, different templates can also be used based on factors such as the concepts with which the query is associated and whether a sponsor has requested that users be presented with a page that includes some kind of branding information. An administrator can use a template to govern whether any specific modules must be included in the rendered page (such as a section dedicated to traditional web results as provided by a particular search company), whether modules should be selected automatically from among a specific group of modules (e.g., that at least one calculator module be shown, but not more than two), whether modules should be selected automatically from the entire pool of available modules, and any additional constraints, such as that a logo must appear in a specific page location. A template can be used as a top-down filter that is used to control what is ultimately displayed on the page. Some additional examples of how modules can be selected and displayed include only showing a module if it has a quality greater than a particular threshold, showing a module in a specific location, etc. The page template can thus control the location, rank, whether to show or not to show a module, and can also customize the look of the module, such as its background color or title.</p>
<p id="p-0260" num="0259">In the example shown in <figref idref="DRAWINGS">FIG. 31</figref>, an administrator has created a single template that is to be used for all queries, irrespective of the concepts associated with those queries. The template requires that the layout be in three columns, and that the title of the page (shown in region <b>3120</b>) be taken from the query. Region <b>3104</b> of the page is a page block that is used to display advertisements. A page block is a portion of a page that includes rules governing the modules that can be placed within that block. A page block on a page can also specify a concept filter. A concept filter for a concept A indicates that only modules which have the concept A in their path to the root should be shown. Similar Boolean expressions can be used such as A and B or (C and D) where A, B, C, and D are concepts. Another example is the prohibition on more than two calculators could be implemented across the entire page, or the prohibition could only apply to a single page block. In the example shown, the administrator has specified that up to four advertisements may be displayed simultaneously in page block <b>3104</b>.</p>
<p id="p-0261" num="0260">The template specifies that a minimum of six modules and a maximum of ten modules be included in the page, but allows all of the modules to be chosen automatically using the techniques described herein and does not supply any additional constraints on the selection of those modules.</p>
<p id="p-0262" num="0261">Modules <b>3106</b>-<b>3118</b> were automatically selected based on the &#x201c;buy a jaguar query&#x201d; provided by the user. Module <b>3106</b> provides a snippet of the main Wikipedia entry for &#x201c;Jaguar Cars&#x201d; and allows a user to access more of the article by selecting expand tab <b>3122</b>. Module <b>3108</b> displays a list of local Jaguar dealers. If the user hovers a mouse over module <b>3108</b> a map is displayed of the location. If the user clicks on the address, the user is taken to the dealer's web page. In the example shown, &#x201c;Mountain View, Calif.&#x201d; was determined to be the location of the user based on the user's IP address. In various embodiments, the user supplies demographic information, such as by configuring a profile or storing cookies that provide interface <b>3100</b> with geolocation and other information.</p>
<p id="p-0263" num="0262">Module <b>3110</b> reports how many people have as a goal doing a particular task. In the example shown, the goal is &#x201c;own a Jaguar,&#x201d; something which 49 individuals would like to do. The information shown in module <b>3110</b> is provided by an external source (e.g., a third party website) that makes available an API. Module <b>3112</b> displays photographs and module <b>3116</b> displays videos. Some modules, such as module <b>3110</b>, receive as a parameter the query provided by the user in search box <b>3102</b>. Other modules, such as a calculator widget that allows the user to perform assorted computations related to fuel economy (<b>3114</b>) is not passed any information. Static elements may also be included. As described in more detail below, some modules, such as photo module <b>3112</b> and video module <b>3116</b> are passed a modified version of the query (e.g., &#x201c;jaguar car&#x201d; instead of &#x201c;buy a jaguar&#x201d;) so that the most relevant results can be presented to the user. Wikipedia module <b>3106</b> is passed a URL and a whole number. The URL specifies the Wikipedia page that the snippet is to be drawn from (e.g., &#x201c;en.wikipedia.org/wiki/Jaguar_(car)&#x201d;) and the whole number specifies how long the snippet should be (e.g., 7 lines).</p>
<p id="p-0264" num="0263">While the user's query, &#x201c;buy a jaguar,&#x201d; could be considered an ambiguous one, the most likely intent of the user is not to purchase a mammal (or sports team). In the example shown, the user's query has been automatically disambiguated using the techniques described herein (e.g., by noting that the inclusion of the word &#x201c;buy&#x201d; in the query makes the query considerably more likely to be associated with the car concept than any other meaning of &#x201c;jaguar&#x201d;). Module <b>3118</b> provides the user with the ability to explore other concepts which it has determined to be of possible interest to the user. For example, by selecting link <b>3126</b>, the user will be taken to an automatically generated page about the Jaguar XF. Thus, in addition to being generated in response to explicit user queries, a page such as is shown in <figref idref="DRAWINGS">FIG. 31</figref> can be generated as the result of navigating to a particular concept in a concept hierarchy (and in such cases, the concept can be used as a &#x201c;query&#x201d; for purposes of the processes described herein).</p>
<p id="p-0265" num="0264">Links to the homonyms of jaguar are also provided by module <b>3118</b> (e.g., in case the automatic disambiguation was incorrect). In some embodiments, whenever an ambiguous query is received, prior to being presented with any other modules, the user is first presented with module <b>3118</b> and asked to indicate which meaning of the ambiguous term is intended by the user. In other embodiments, a special disambiguation template is used in which each potential meaning of the query is dedicated a portion of the real estate on the page and the user may further refine his intent by, for example, selecting &#x201c;show more results like this&#x201d; or &#x201c;hide this&#x201d; links. In some embodiments the submission of ambiguous queries results in multiple pages, with a different page for each homonym opening in the user's browser.</p>
<p id="p-0266" num="0265">In some embodiments module <b>3118</b> also provides a way for a user to refine his query by &#x201c;and&#x201d;ing additional concepts shown in box <b>3118</b> with the original query. For example, suppose a user entered a query of &#x201c;insurance&#x201d; in region <b>3102</b>. One of the concepts shown in module <b>3118</b> might be &#x201c;travel.&#x201d; By selecting an &#x201c;and&#x201d; button displayed next to the word travel, a new query may be provided to system <b>3200</b>. Page <b>3100</b> would be updated so that the new page is configured to display modules relevant to &#x201c;travel insurance.&#x201d; In some embodiments this technique is performed using vertical scoping&#x2014;scoping which limits results to concepts below a certain parent.</p>
<p id="p-0267" num="0266">Region <b>3124</b> is an example of a caption, as described in more detail below.</p>
<p id="p-0268" num="0267"><figref idref="DRAWINGS">FIG. 32</figref> illustrates an example of a system for delivering a page that includes a plurality of modules. In the example shown, client <b>3210</b> provides a query to system <b>3200</b>, such as by using the interface shown in <figref idref="DRAWINGS">FIG. 31</figref>. Application tier <b>3202</b> provides the interface to client <b>3210</b> and forwards the query to mashup engine <b>3204</b>. Mashup engine <b>3204</b> receives the query, annotates the query, and provides it to lighting system <b>3208</b>. In the example shown, lighting system <b>3208</b> includes query categorizer <b>2802</b> and lighting engine <b>2804</b>. Lighting system <b>3208</b> receives the annotated query and provides back to mashup engine <b>3204</b> a list of concepts with which the query is associated, and a set of weights, using the classification techniques described herein. Mashup engine <b>3204</b> selects an appropriate page template from template database <b>3216</b>, consults module database <b>3206</b> for information about candidate modules, fetches information from module cache <b>3214</b> and external sources <b>3212</b> as applicable to a set of candidate modules, and makes a selection of which modules are to be presented to the user and how they are to be arranged. Mashup engine <b>3204</b> provides an XML page specification to application tier <b>3202</b> that describes how the page is to be rendered for the user.</p>
<p id="p-0269" num="0268">Template database <b>3216</b> stores a variety of page templates. In some embodiments another technique, such as the use of a single XML document, is used to store page templates. Any node in subject hierarchy <b>2828</b> can have associated with it one or more page templates. In some embodiments templates are managed by product managers who create templates that are appropriate for the verticals they oversee. For example, a template tagged to the health node might favor the inclusion of modules that provide &#x201c;definitions&#x201d; (e.g., a Wikipedia module, a physicians' desk reference module, etc.), while a template tagged to the travel vertical might favor the inclusion of more map modules. The root node of subject hierarchy <b>2828</b> has a default template that is used if no other template is selected. In various embodiments, page templates are contributed by community members, such as users who are interested in a particular topic. Other community editors can edit the page templates or provide their own page templates for concepts.</p>
<p id="p-0270" num="0269">In addition to the selection and layout of modules, page templates allow for the customization of such page features as background color, the use of cascading style sheets, etc. The templates stored in template database <b>3216</b> are tagged with one or more categories with which they are intended to be used. Instructions can also be included in a template with respect to the customization of specific modules. For example, the Wikipedia snippet module (<b>3106</b>) can be used by a variety of different page templates. Suppose the manager of a Health vertical wishes Wikipedia to return 10 lines of text, while the manager of a Transportation vertical only wishes Wikipedia to return 5 lines of text. A single implementation of the module can be used in both circumstances by having the respective page templates for those verticals provide different parameters to the Wikipedia snippet module (e.g., show 10 lines vs. show 5 lines; make the text blue vs. white; make the widget 100 pixels wide vs. 200 pixels wide; etc.).</p>
<p id="p-0271" num="0270">At runtime, mashup engine <b>3204</b> creates a reverse index that loads into memory a mapping between the page templates and the concepts to which they are mapped. A similar mapping is made between module specifications stored in module database <b>3206</b> and the concepts to which the modules are mapped. Many thousands of modules, or more, may be described by module specifications stored in module database <b>3206</b>. The modules are created by third parties and submitted for use with system <b>3200</b> by their creators or selected for inclusion by a curator of database <b>3206</b>. Modules can provide virtually any user experience about virtually any concept. RSS feeds, calculators, images, videos, sounds, interactive maps, and games are examples of types of modules.</p>
<p id="p-0272" num="0271">Each module specification includes a variety of information about the module, such as the name of the module; a description of the module; whether the module can accept any predefined parameters (such as query, zipcode, parsed concept, etc.); the maximum time that content for the module should be cached; a minimum and maximum width for the module if it is to be displayed on a page in overview mode; a minimum and maximum width for the module if it is to be displayed on a page in detail mode; the concepts to which the module is tagged (typically configured by an administrator when the module specification is first created); the module's preferred location within a column if selected; etc. In various embodiments, the concept is tagged with subject type concepts, infotypes, or both.</p>
<p id="p-0273" num="0272">The module specification can also include a group of user-defined tags that allow the modules to be arbitrarily grouped. For example, one administrator might tag certain modules as being &#x201c;yellow,&#x201d; &#x201c;horizontal,&#x201d; or provided by the &#x201c;Acme Corporation.&#x201d;</p>
<p id="p-0274" num="0273">A module specification can also specify a set of conditions that must be present for a module to be selected, such as that a location-specific module should only be shown if the location of the user is known, that a module only be shown at certain times of the day (e.g., during the operating hours of a business who maintains the module), or just before certain holidays or events, such as annual sporting events. Another example of a condition that a module may require is that the query appear in the name of the module. For example, suppose one of the widgets defined in module database <b>3206</b> provides a list of Irish Setters currently available for adoption from an Irish Setter dog rescue group. The module specification may require that a user's query include the term &#x201c;Irish Setter&#x201d; in order for the module to be shown, irrespective of the categories with which the query is associated.</p>
<p id="p-0275" num="0274">If the module requires information from an external source, the module specification also stores a description of how the information is to be fetched&#x2014;such as which protocols are to be used and how any strings are to be formatted. The module specification also stores whether results for the module should be cached (and if so for how long) or if they should be fetched anew each time the module is considered for inclusion on a page such as page <b>3100</b>. For example, a blog or news widget might have an expiry term of ten minutes. Generally, an attempt is made to cache external services to control the amount of traffic that is sent to those services&#x2014;both reducing the impact on the resources of the external source and also to improve efficiency. Additionally, if an external site is responding slowly to requests for information or if it becomes unavailable, it may nonetheless be possible to present modules that make use of the external site if sufficient information from the external site is available in the cache. Some modules are JavaScript code and are not rendered until runtime on client <b>3210</b>. In some embodiments the JavaScript code is cached in module cache <b>3214</b>.</p>
<p id="p-0276" num="0275">In some embodiments system <b>3200</b> is configured to communicate with an advertisement server (not shown). Page templates may specify page blocks that can include advertising modules, that 20-30% of the page's space should be dedicated to monetization, the specific advertisements/monetization widgets that should be selected by mashup engine <b>3204</b>, etc. Historical information such as the number of advertising clicks received when a particular module was displayed last time can be used to determine which monetization modules, if any, should be shown on page <b>3100</b>. In some embodiments if a shopping intent is detected (e.g., &#x201c;buy new shoes,&#x201d;), more space may be allocated to monetization units.</p>
<p id="p-0277" num="0276"><figref idref="DRAWINGS">FIG. 33</figref> is a flow chart illustrating an embodiment of a process for delivering a page that includes a plurality of modules. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 33</figref> is performed by system <b>3200</b>. In some embodiments, whenever system <b>3200</b> performs a task, either a single component or a subset of components or all components of system <b>3200</b> may cooperate to perform the task. Similarly, in some embodiments portions of system <b>3200</b> are provided by one or more third parties.</p>
<p id="p-0278" num="0277">The process begins at <b>3302</b> when a query is received. For example, at <b>3302</b> &#x201c;What color is an Irish setter&#x201d; is received by application tier <b>3202</b> from client <b>3210</b>. At <b>3304</b>, categories associated with the query are determined. For example, at <b>3304</b>, mashup engine <b>3204</b> provides the query to lighting system <b>3208</b> which determines that the main concept associated with the query is &#x201c;dog.&#x201d; Lighting system <b>3208</b> provides a portion of hierarchy <b>1628</b> that includes the node &#x201c;dog&#x201d; to mashup engine <b>3204</b>, along with a set of weights that describe how closely the query matched the portions of the hierarchy provided.</p>
<p id="p-0279" num="0278">At <b>3306</b>, candidate modules to be provided to the user are located. Suppose only one page template is present in template database <b>3216</b> and that it specifies, for any query, that somewhere between 6 and 10 modules be presented on the page and does not specify any additional constraints on the modules. At <b>3306</b>, the concept, &#x201c;dog&#x201d; as received from lighting system <b>3208</b> is used to locate modules in modules database <b>3206</b>. Suppose twenty modules have &#x201c;dog&#x201d; as a tag and several additional modules have as tags the parent concept &#x201c;pets.&#x201d; At <b>3308</b>, system <b>3200</b> determines which modules of those identified should be displayed to the user.</p>
<p id="p-0280" num="0279"><figref idref="DRAWINGS">FIG. 34</figref> is a flow chart illustrating an embodiment of a process for delivering a page that includes a plurality of modules. In some embodiments the process shown in <figref idref="DRAWINGS">FIG. 34</figref> is performed by system <b>3200</b>.</p>
<p id="p-0281" num="0280">The process begins at <b>3402</b> when a query is received. At <b>3404</b> the received query is optionally annotated. In some embodiments the query annotation is performed by mashup engine <b>3204</b> and is performed using word lists. Query annotation is typically used in the identification of a context of a query. For example, in the query &#x201c;I want pictures of a black dog,&#x201d; the phrase &#x201c;pictures of&#x201d; indicates an intent of the user (to find pictures) and &#x201c;black dog&#x201d; is the concept for which pictures are sought. Similarly, in the query &#x201c;where can I buy a new pair of shoes,&#x201d; the user's intent is found in the phrase &#x201c;where can I buy&#x201d; and the object of that intent is &#x201c;shoes.&#x201d; A query of &#x201c;what is a platypus&#x201d; reveals a definition intent (&#x201c;what is a&#x201d;) with a subject of &#x201c;platypus.&#x201d; Once any intents are identified, the annotated query (e.g., in which &#x201c;pictures of a spider bite&#x201d; becomes &#x201c;spider bite&#x201d;+images) is provided to lighting system <b>3208</b>.</p>
<p id="p-0282" num="0281">At <b>3406</b>, one or more concepts are received. For example, at <b>3406</b> lighting system <b>3208</b> provides mashup engine <b>3204</b> with any concepts and surprises associated with the query as determined using the techniques described herein, along with the scores associated with those concepts.</p>
<p id="p-0283" num="0282">At <b>3408</b> a page template is selected. One way of selecting a page template is to perform a bottom up search as follows. Locate the first received concept of the query (i.e., the main concept) in subject hierarchy <b>2828</b>. If there is a page template tagged to the concept, use that template. If not, locate the second received concept of the query (e.g., the first concept's parent) and determine whether that concept has a template. If so, the parent template is used. If not, the hierarchy is traversed higher and higher until a node with a template tagged to it is reached. Every query will have at least one available template because the root node has a page template whose requirements all relate to layout and do not relate to conditions for being selected. If a node has multiple templates available, the first template is evaluated to determine whether any conditions it may have are satisfied. If so, the template is selected. If not, the next template at that level is evaluated. If none of the templates at a level have their conditions satisfied, the templates at the node's parent are evaluated and so on.</p>
<p id="p-0284" num="0283">One reason that a concept may have multiple templates is that one template is a default and a second template is part of an advertising or other branding campaign. For example, suppose a news corporation has a partnership with the operator of system <b>3200</b>. Visitors who arrive on a landing page provided by system <b>3200</b> (e.g., a page generated for the concept of &#x201c;health&#x201d;) by selecting a link from a page on the news corporation's site are to be shown a page, such as is shown in <figref idref="DRAWINGS">FIG. 31</figref>, but with the logo of the news corporation in one corner, along with a link back to the news corporation's website. Such users are identified in some embodiments by a string such as &#x201c;partnerID=XYZ&#x201d; being provided by the referring site, where XYZ is the identity of the partner.</p>
<p id="p-0285" num="0284">Users of system <b>3200</b> who do not arrive from news corporation site will not have a partnerID string equal to XYZ and will be presented with a page constructed from the default health template instead. Other factors which can also be used to determine which template will be used for a user are the user's location (such as can be approximated from the user's IP address) and a probability, such as that 90% of users receive a first template and 10% of users receive a second template during A/B testing. In some embodiments, a page defined in template database <b>3216</b> has multiple modes&#x2014;such as an overview version and a detail version. Different templates may also be selected at the same node based on the user's platform. A mobile user who submits a query may receive a page with fewer modules or with mobile-phone friendly modules than a PC-based user who submits the same query.</p>
<p id="p-0286" num="0285">Other techniques for selecting a page template can also be used at <b>3408</b> and can be used in combination with the technique described above. For example, a query white list can be constructed so that when a query containing a certain term is received, a custom template is used. One example of this is a sponsored product page. Suppose a query of &#x201c;ibuprofen&#x201d; is received. If &#x201c;ibuprofen&#x201d; is present on a whitelist, instead of using a &#x201c;Drugs&#x201d; template or a &#x201c;Health&#x201d; template, a template that describes a page branded with the logo of a particular manufacturer of ibuprofen may be selected instead.</p>
<p id="p-0287" num="0286">If both overview and detail versions of a page template exist, in some embodiments one of the determinations made at <b>3408</b> is whether the intent of the query implicates one or the other of the versions. For example, a query of &#x201c;spider bite pictures&#x201d; indicates that a user is likely to want to view many pictures and the detailed version of page may be automatically selected over the overview page.</p>
<p id="p-0288" num="0287">At <b>3410</b>, mashup engine <b>3204</b> determines an initial list of candidate modules to be considered for inclusion in page <b>3100</b>. This process is also referred to herein as &#x201c;module lighting.&#x201d; In some embodiments the candidate list of modules is selected by determining a location in subject hierarchy <b>2828</b> associated with the query and examining whether any modules are tagged at the same level of the hierarchy. If so, they are added to the candidate list of modules. Additional modules can be added to the candidate list of modules by traversing up or down levels in the hierarchy. Typically, the lower in the tree a module is tagged, the more narrow or specific that module will be. For example, a &#x201c;dog breed selector&#x201d; widget that shows various images of dogs and provides information about their temperaments and size is an example of a widget that is likely to be tagged to the concept dog. If the query received at <b>3402</b> relates to a specific kind of dog, the dog breed selector widget is likely to be of more relevance to the user than a much more general &#x201c;animal viewer&#x201d; widget that is tagged at the animal level.</p>
<p id="p-0289" num="0288">Some modules may be generic to the category structure. For example, a web results module or news module is a generic module that is applicable to virtually any topic. (E.g., health news, news about airplanes, news about Ronald Reagan, etc.) Assorted techniques can be used to light such modules, such as by performing an offline precomputation of the recall of the module with respect to all concepts and using the results to determine whether to show the generic module or not.</p>
<p id="p-0290" num="0289">Modules can also be tagged with recall information and that information can be used to determine whether the query received from client <b>3210</b> should be passed to the module or whether the query should be transformed first. For example, an image module is likely to have very poor recall for certain kinds of queries, such as tail queries, which contain several infrequently used words. Based on the recall information, assorted query transformations can be used, as explained in more detail below. Other examples of categories of queries for which recall information may be stored by a module include navigational queries (e.g., as determined by a white list), broad queries, and ambiguous queries (e.g., as identified by lighting system <b>3208</b>).</p>
<p id="p-0291" num="0290">Infotypes can also be used when determining whether to light generic modules. For example, if the query is about a celebrity, the query may be determined to be &#x201c;image worthy.&#x201d; If a query lights the image infotype, then modules tagged with the image infotype may be lit, or have their lighting scores increased as a result. The concept &#x201c;honesty,&#x201d; however, is not an image-worthy quote and as such a general image module would not be considered.</p>
<p id="p-0292" num="0291">As mentioned previously, modules may have associated constraints that are taken into consideration at <b>3410</b>. For example, a stock ticker module may require that a user provide a query that includes the word, &#x201c;stock&#x201d; for it to be shown. Modules can also have an &#x201c;and&#x201d; requirement that requires two different concepts to both be implicated in the query. For example, a travel insurance calculator may require that both &#x201c;travel&#x201d; and &#x201c;insurance&#x201d; be returned at <b>3406</b> in order for it to be shown. A module may also have as a constraint that it only be selected if another specific module is selected or that if another specific module is selected, it not be selected. A module can have multiple sizes associated with it or can take a size in which it must be rendered. Modules can be dropped or moved if they don't fit the layout for the page. Hence an additional constraint is that the module should fit the layout of the page.</p>
<p id="p-0293" num="0292">In some embodiments a threshold is applied during module lighting to remove modules that light up due to low scoring concepts. For example, there may exist concepts that are lit but which have very low affinity with the query. In such cases these modules attached to such low scoring concepts would not be relevant to the query and are dropped from the list of candidate modules. As an example, suppose the received query is &#x201c;Seinfeld.&#x201d; Many concepts are lit, of which &#x201c;American media&#x201d; is an example of a low scoring concept, having a query to text affinity score of 0.4 and density score of 0. In this case the &#x201c;American media&#x201d; concept will get dropped because the threshold is set to 1.</p>
<p id="p-0294" num="0293">Module to concept affinity is a weight specified when the module is first added to the module database. The weight is used to rank the module against the other modules tagged to the same concept. One example of how the score can be computed is: module worthiness score=module to concept affinity*(query to concept affinity+density score). Suppose there exist two modules, called bmicalc<b>1</b> and bmicalc<b>2</b>, respectively, which are both tagged to the same concept. The module to concept affinity score will help select one over the other. And, if the module worthiness score is very low (e.g., less than 0.61), the module is removed from the candidate list. A variant to the score function is score=module to concept affinity*(w<b>1</b>*query to concept affinity+w<b>2</b>*density score) to indicate a weighted average and where w<b>1</b> and w<b>2</b> are the weights. Another variant to the score function takes into consideration past information such as module performance (turn-around-time), user feedback (e.g. click through rate). Score=module to concept affinity*(w<b>1</b>*query to concept affinity+w<b>2</b>*density score+w<b>3</b>*performance_score+w<b>4</b>*click_through_rate).</p>
<p id="p-0295" num="0294">The above variants are scoring functions that are used for un-cached modules and/or for modules where data is not yet available, and is also referred to as a pre-scoring function. For a cached module this scoring function is not run because the score is retrieved from the cache. The pre-scoring function assists in selecting modules for which external calls are made to get data. Modules' scores are adjusted after data is made available for them. As described in more detail below, a post-scoring function is used at <b>3420</b> to combine the quality score (if any) with the pre-score, and any other scores. This score is then used to finally rank modules before returning them back for rendering.</p>
<p id="p-0296" num="0295">At <b>3412</b>, an intersection is determined between the candidate modules selected at <b>3410</b> and any requirements on modules specified by the page template. Typically, if a module requested by a page template is not also selected as a candidate module at <b>3410</b>, that module will not be included in the page. However, an administrator may specify, e.g., using a &#x201c;force&#x201d; option, that a particular module must be included in the page, irrespective of any scores it receives during module lighting.</p>
<p id="p-0297" num="0296">At <b>3414</b>, optional preprocessing is performed as described in more detail below. One example of preprocessing that can be performed at <b>3414</b> is a determination of the best inputs to send to a candidate module that accepts input. For example, instead of sending a query of &#x201c;my twelve year old child has diabetes,&#x201d; a query of &#x201c;juvenile diabetes,&#x201d; or just &#x201c;diabetes&#x201d; may be sent to some modules. Another example of preprocessing that can be performed at <b>3414</b> is the offline computation of the recall of the module with respect to all concepts.</p>
<p id="p-0298" num="0297">At <b>3416</b>, the query is forwarded to each of the candidate modules that is configured to receive as input a query. In some cases, module results may be present in a cache. If so, the module cache is queried. If results for the module are not present in the cache, in some embodiments an external call is made and the results may be cached for later use, as applicable.</p>
<p id="p-0299" num="0298">At <b>3418</b>, postprocessing is performed. Two different types of post processing can be performed at <b>3418</b>. One form of post processing is an evaluation of the results obtained from modules (either via the module cache or via the external query) at <b>3416</b>. This form of post processing is also referred to herein as evaluating the quality of the results provided by the module and is described in more detail below.</p>
<p id="p-0300" num="0299">The other form of postprocessing that can be performed at <b>3418</b> is content transformation. Suppose a module chooses to render itself with a white background. At <b>3418</b>, one of the post processing actions that can be taken is to search for the existence of &#x201c;bg=white&#x201d; or &#x201c;bg=0xFFF,&#x201d; and then replace the detected string with &#x201c;bg=red&#x201d; or &#x201c;bg=0xF00&#x201d; as applicable, switching the background of the module from white to red. Caption text can be similarly modified, such as by substituting one company name with another, by removing captions, or by adding captions, such as the caption shown at <b>3124</b> in <figref idref="DRAWINGS">FIG. 31</figref>.</p>
<p id="p-0301" num="0300">Content reduction can also be performed at <b>3418</b>. For example, a module may provide more information than a product manager chooses to have rendered on a page. At <b>3418</b> instructions in the page template can be used to remove unwanted portions of the module as applicable.</p>
<p id="p-0302" num="0301">At <b>3420</b>, the remaining candidate modules are ranked and sorted. A variety of techniques can be used to score/rank the modules. In addition to density, text affinity, module to concept affinity and other pre-scores, one factor that can be considered is the response time of the module. A module that provides results quickly may be ranked higher than one that provides results slowly, even if the slower module is otherwise a better match with the query. In some embodiments, each time a module is queried, a response time is stored in a log. The log can be evaluated periodically to determine an average response time, or a running average response time, etc. Another factor that can be considered is feedback. One measure of how useful a module is to a user is whether the user interacts with the module, and if so, for how long. Such information can be collected and stored in a log for use at <b>3420</b>. For example, implicit feedback (e.g., clickthrough rates) can be collected. Explicit feedback can be collected by allowing the user to select &#x201c;don't show this again&#x201d; or &#x201c;this is helpful&#x201d; buttons under each module, by performing polls, A/B testing, etc. Another factor that can be considered is the timeliness of the module. For example, an April 15 countdown timer widget may be of little interest to a user in September, even if the query indicates a strong interest in tax information. In March, however, the widget may receive a considerably higher score. Another factor that can be considered is whether the module is maintained by an individual (e.g., a hobbyist or amateur developer) or whether the module is supplied by a professional organization.</p>
<p id="p-0303" num="0302">In some embodiments system <b>3200</b> maintains information about specific users, such as through the use of cookies. In that case, one of the factors that can be considered at <b>3420</b> is whether the user has previously seen a module, whether the user previously indicated that the module was useful or not, etc. Other usage information can also be considered, such as past queries. For example, suppose a user consistently queries for natural remedies-type health information and then performs a query of &#x201c;headache&#x201d; &#x2014;the results page may be skewed toward natural remedies for a headache, while another user (or a new user for whom no historical data is known) may be shown a page that is more weighted to over-the-counter remedies for headaches. In some embodiments a plugin is used to capture information about the user and to provide the information to system <b>3200</b>.</p>
<p id="p-0304" num="0303">Monetization considerations can also be made at <b>3420</b>. Some page templates reserve a portion of the page's real estate for things that generate money, such as advertisements. Within that space, different kinds of monetization modules compete for space. Examples of monetization modules include CPC modules (e.g. Google/Yahoo ads), TPM modules (visual ads), CPA modules (e.g. flight booking widgets/where a company performs an action on the backend). Based on the query and what lights up, different monetization modules compete for the monetization real estate in the same way that content modules compete for content real estate. In some embodiments monetization modules are confined to a particular region of the page (e.g., banner area, right side), in some embodiments monetization modules may appear anywhere on the page but may not take up more than a fixed number of slots (e.g., 3) or total amount of space (e.g., 30%), etc.</p>
<p id="p-0305" num="0304">Techniques such as A/B testing can be used to keep track of which layout and module selections generate more revenue, such as whether a banner region and no skyscraper should be shown, or whether both should be shown, and whether an advertisement should be shown at the bottom of the screen. Each combination can be tried and compared against other combinations. As another example, suppose that lighting system <b>3208</b> is aware that a query is related to the concept &#x201c;herbs.&#x201d; An advertising analysis engine (not shown) can be configured to keep track of different concepts and which modules monetize best for those queries. For example, it may be the case that for an &#x201c;herbs&#x201d; query, advertisements provided by one advertising entity do not monetize as well as advertisements provided by another.</p>
<p id="p-0306" num="0305">In some embodiments the percentage of the page dedicated to monetization may also change and can be dynamically returned based on the query. If the query has commercial intent (&#x201c;buy cheap tickets&#x201d;) then there will be more monetization as the user is indicating they are looking for advertisements&#x2014;they want to buy tickets.</p>
<p id="p-0307" num="0306">At <b>3422</b>, layout optimization is performed so that the page ultimately provided to the user is free of excessive gaps of space. For example, suppose a total of ten modules are ultimately selected to be returned to a user on page <b>3100</b>. At <b>3422</b>, the arrangement of those ten modules is determined.</p>
<p id="p-0308" num="0307"><figref idref="DRAWINGS">FIG. 35A</figref> illustrates an example of a page layout. In the example shown, the columns are uneven&#x2014;there are four modules in the first and third columns, but only two modules in the second column. One reason that the columns might be uneven is that a product manager may have incorrectly configured the page template. Since modules are picked dynamically, it can be difficult to predict at the time the page template is created what an attractive layout will be. In some embodiments mashup system <b>3200</b> is configured to override a template if it would result in a gap such as the one shown in <figref idref="DRAWINGS">FIG. 35A</figref>.</p>
<p id="p-0309" num="0308">One technique for improving the layout of the page shown in <figref idref="DRAWINGS">FIG. 35A</figref> is to perform the following process. First, determine the total number of modules to be presented on the page and divide by the number of columns. This gives an indication of an equal distribution. Next, determine how much the proposed layout deviates from the equal distribution. This deviation is referred to herein as a layout quality score. If the layout quality score exceeds a threshold (i.e., the layout is not considered optimal) a fixing process is performed. One example of a fixing function is to identify the column with the highest number of modules and move the bottom module from that column to the column with the lowest number of modules. The layout quality is reevaluated and if necessary the fixing function is applied again, iteratively, until any additional movements are not possible&#x2014;either due to page template constraints (e.g., against moving certain modules, such as advertisements) or due to any additional movements having no improvement effect.</p>
<p id="p-0310" num="0309"><figref idref="DRAWINGS">FIG. 35B</figref> illustrates an example of a page layout. In the example shown, the bottom module in the first column has been moved to the top of column two. No additional movements can be made to further optimize the layout shown in <figref idref="DRAWINGS">FIG. 35B</figref>. The final page layout is passed, e.g., as XML, to application tier <b>3202</b> so that a fully rendered version can be provided to client <b>3210</b>.</p>
<p id="p-0311" num="0310"><figref idref="DRAWINGS">FIG. 35C</figref> illustrates an example of a page layout. In the example shown, a gap is present in column two that cannot be fixed by using the process described in conjunction with <figref idref="DRAWINGS">FIG. 35A</figref>. In some embodiments one way of improving the layout in such a situation is to expand module <b>3</b> so that it spans the first two columns. Another way of improving the layout is to extend the length of module <b>5</b> so that it occupies more of the empty space below it. Some modules may have included in their respective module specifications that they should not be expanded. Other modules may support expansion. Such information can be taken into account when selecting/ranking modules as well.</p>
<p id="p-0312" num="0311"><figref idref="DRAWINGS">FIG. 35D</figref> illustrates an example of a page layout. In the example shown, the gap present in the layout shown in <figref idref="DRAWINGS">FIG. 35C</figref> has been removed by expanding module <b>3</b> across the first two columns.</p>
<p id="p-0313" num="0312">Providing Information to Modules</p>
<p id="p-0314" num="0313"><figref idref="DRAWINGS">FIG. 36</figref> illustrates an embodiment of a process for providing information to a module. In some embodiments portion <b>3602</b> of the process shown in <figref idref="DRAWINGS">FIG. 36</figref> is performed at <b>3414</b> in the process shown in <figref idref="DRAWINGS">FIG. 34</figref>, and portion <b>3606</b> is performed at <b>3418</b> in the process shown in <figref idref="DRAWINGS">FIG. 34</figref>. In various embodiments the process shown in <figref idref="DRAWINGS">FIG. 36</figref> is performed by a standalone device that is not part of system <b>3200</b>.</p>
<p id="p-0315" num="0314">The process begins at <b>3602</b> when a determination is made of what query to send to a module. For many modules, such as modules that provide traditional text based web results, the originally-supplied query (e.g., as received from client <b>3210</b>) is provided to the module. As mentioned previously, many modules do not accept queries or other input parameters and the processing at <b>3600</b> is not performed. However, some queries, when sent to some modules, will not result in the best user experience.</p>
<p id="p-0316" num="0315">One example of a query that can result in poor results from a module is where a &#x201c;tail query&#x201d; (e.g. one that is very specific and has many non-stop words) is sent to a photo or video hosting site through a module that provides a frontend to the site. A query of &#x201c;my son Fred is six and he has diabetes&#x201d; is very unlikely to match any videos hosted by the site. In such circumstances, a query transformation can be performed so that more relevant (or in some cases, any reasonable) results are returned.</p>
<p id="p-0317" num="0316">A query can be transformed in a variety of ways. One way of transforming a query is to send a shorter portion of the query. In the Fred example, one example transformation is to send just the word &#x201c;diabetes.&#x201d; The word &#x201c;diabetes&#x201d; is selected by picking the word n-gram in the query that contributed the most to the selection of the query's main concept. Another way of transforming a query is to send the top concept associated with the query instead of the query itself. Again using the Fred example, a top concept for the query might be &#x201c;juvenile diabetes.&#x201d; Yet another way of transforming a query is to send one or more synonyms for terms in the query. For example, if the query received from client <b>3210</b> is &#x201c;feline,&#x201d; in some embodiments a synonym (e.g., &#x201c;cat&#x201d;) is selected from a list of synonyms and sent as a query instead. As another example, suppose a user submits a query of &#x201c;rooster comb injection.&#x201d; Rooster comb, given as an injection, is a treatment that some individuals use for arthritis. The tissue of a rooster comb includes hyaluronic acid&#x2014;a synonym. Thus in some embodiments a query of &#x201c;buy some rooster comb for an injection&#x201d; might be transformed into &#x201c;buy some hyaluronic acid&#x201d; at <b>3600</b>.</p>
<p id="p-0318" num="0317">Another example of a query that can result in poor results from a module is as follows. One meaning of the string, &#x201c;JSON,&#x201d; is &#x201c;JavaScript Object Notation.&#x201d; JSON is also a frequent misspelling of the name &#x201c;Jason.&#x201d; Suppose a user is interested in finding information having to do with JavaScript and provides as a query &#x201c;JSON.&#x201d; If the query is passed, as is, to a video module, it is likely that many of the videos returned will be about people named Jason and not about JavaScript. One way of addressing this problem is through the use of query augmentation. The video site with which the video module communicates has its own hierarchy into which videos can be classified and accepts as command line &#x201c;hints,&#x201d; a category that should be searched. By sending the appropriate category along with the query, more appropriate results can be obtained. In some embodiments a mapping is maintained between at least some of the concepts in subject hierarchy <b>2828</b> and the concepts in the external video site. For example, while JSON may have as its main concept &#x201c;JavaScript&#x201d; in hierarchy <b>2828</b>, a hierarchy maintained by a video site is likely to be much smaller. A mapping between JavaScript (in hierarchy <b>2828</b>) and Technology (in the video taxonomy) may be used so that the query provided to the video module is &#x201c;JSON:Technology.&#x201d;</p>
<p id="p-0319" num="0318">In some embodiments a ConceptDF is precomputed for every concept with respect to a module. The information can be used to determine a query transformation. For example, suppose a user is seeking &#x201c;funny quotes by Kosmo Kramer.&#x201d; A module is described in module database <b>3206</b> that takes as input the name of a television show or movie and provides as output quotes from the show/movie. Sending the module the query, or even a shortened version of the query (i.e., the concept, &#x201c;Kosmo Kramer&#x201d;) will not provide any results because Kosmo Kramer is not the name of a show/movie. By examining the ConceptDF for the concept's parent, however, it is determined that the concept &#x201c;Seinfeld&#x201d; when passed to the module does provide results. Thus in some embodiments the ConceptDF is considered when transforming a query (and/or when determining what parameters to send to a module). Similarly, suppose another module in module database <b>3206</b> provides current information on assorted financial indices. Sending the module a query of &#x201c;Johnny Stocks&#x201d; (the baseball player) is likely to result in a fairly high recall. However, since the top concepts for Johnny Stocks are &#x201c;baseball&#x201d; and &#x201c;athlete&#x201d; the query will not be sent because those concepts have no recall or extremely low recall for the module.</p>
<p id="p-0320" num="0319">At <b>3604</b>, the query determined at <b>3602</b> is sent to the module.</p>
<p id="p-0321" num="0320">At <b>3606</b>, results returned by the module are evaluated, for example, to determine whether the query provided at <b>3602</b> yielded better results than the one originally received; to determine whether the received results are of sufficiently high quality to merit including the module in page <b>3100</b>; etc. In various embodiments, the processing performed at <b>3606</b> is performed for all queries, irrespective of whether the originally received query is transformed or not.</p>
<p id="p-0322" num="0321">A variety of techniques can be used to evaluate the results at <b>3606</b>. One example is to use a recall ratio. A recall ratio is a ratio between the number of results for a module (for example, images) and the number of web results in our index. If the recall ratio of a module is small, then the module does not likely produce good results. If the recall ratio is high, then the module likely produces good results.</p>
<p id="p-0323" num="0322">Another example is to use text scoring on the results. For any module, the number of times the given query has occurred in the results is determined. If that number is small, then the module likely does not produce good results. If the number is large, then the module likely produces good results.</p>
<p id="p-0324" num="0323">A combination function can also be employed so that results with extremely high recall ratios are not penalized for having low text scores and vice versa.</p>
<p id="p-0325" num="0324">Yet another example is to use pattern matching on the results. The occurrence of certain patterns, such as &#x201c;403 error&#x201d; and &#x201c;no result&#x201d; in the results received from a module indicate that the quality of results returned by that module may be low.</p>
<p id="p-0326" num="0325">Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08626491-20140107-M00001.NB">
<img id="EMI-M00001" he="6.35mm" wi="76.20mm" file="US08626491-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08626491-20140107-M00002.NB">
<img id="EMI-M00002" he="9.57mm" wi="76.20mm" file="US08626491-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08626491-20140107-M00003.NB">
<img id="EMI-M00003" he="6.01mm" wi="76.20mm" file="US08626491-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US08626491-20140107-M00004.NB">
<img id="EMI-M00004" he="10.58mm" wi="76.20mm" file="US08626491-20140107-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US08626491-20140107-M00005.NB">
<img id="EMI-M00005" he="6.01mm" wi="76.20mm" file="US08626491-20140107-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for document characterization, the method comprising:
<claim-text>identifying, by a computer system, a plurality of candidate textual representations in a document;</claim-text>
<claim-text>identifying, by a computer system, unambiguous textual representations from among the plurality of candidate textual representations, each unambiguous textual representation having a single concept associated therewith;</claim-text>
<claim-text>identifying, by a computer system, ambiguous textual representations from among the plurality of candidate textual representations, each ambiguous textual representation having a plurality of concepts associated therewith;</claim-text>
<claim-text>for each ambiguous textual representation:
<claim-text>determining, by the computer system, that one of the plurality of concepts associated with the ambiguous textual representation is also associated with an unambiguous textual representation; and</claim-text>
<claim-text>in response to determining that one of the plurality of concepts associated with the ambiguous representation is also associated with the unambiguous textual representation, pruning, by the computer system, concepts of the plurality of concepts other than the concept to which an unambiguous textual representation is mapped; and</claim-text>
</claim-text>
<claim-text>outputting a modified version of the document having a portion of the candidate textual representations corresponding to at least a portion of the list of concepts following pruning hyperlinked to supplemental materials relating to the at least a portion of the list of concepts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising pruning the list of concepts according to a blacklist.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising for remaining concepts of the plurality of concepts associated with an ambiguous textual representation:
<claim-text>identifying if a concept of the remaining concepts is listed in a whitelist; and</claim-text>
<claim-text>if so, pruning concepts of the remaining concepts other than the concept listed in the whitelist.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>calculating, for each concept of at least a portion of the concepts in the list of concepts, a score; and</claim-text>
<claim-text>pruning the list of concepts according to the scores for the at least a portion of the concepts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on an inverse document frequency for the concept according to a corpus of documents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on a number of homonyms associated with the concept.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on linkworthiness of the concept according to a corpus of documents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the linkworthiness of a concept is calculated as a number of times the concept is linked in the corpus of documents divided by the total number of times the concept is included in the corpus of documents.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on current references to the concept in social media content.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on one or more locations in the document of one or more textual representations associated with the concept.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein calculating the score for each concept of at least a portion of the concepts in the list of concepts further comprises:
<claim-text>calculating the score at least in part based on a comparison of a category vector for the concept to a document vector, the category vector including concepts adjacent the concept in a taxonomy and the document vector including a combination of category vectors for at least a portion of the concepts of the list of concepts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A system for document characterization, the system comprising one or more processors and one or more memory devices operably coupled to the one or more processors, the one or more memory devices storing executable data effective to cause the one or more processors to:
<claim-text>identify a plurality of candidate textual representations in a document;</claim-text>
<claim-text>identify unambiguous textual representations from among the plurality of candidate textual representations, each unambiguous textual representation having a single concept associated therewith;</claim-text>
<claim-text>identify ambiguous textual representations from among the plurality of candidate textual representations, each ambiguous textual representation having a plurality of concepts associated therewith;</claim-text>
<claim-text>for each ambiguous textual representation:
<claim-text>determine that one of the plurality of concepts associated with the ambiguous textual representation is also associated with an unambiguous textual representation; and</claim-text>
<claim-text>in response to determining that one of the plurality of concepts associated with the ambiguous representation is also associated with the unambiguous textual representation, prune concepts of the plurality of concepts other than the concept to which an unambiguous textual representation is mapped; and</claim-text>
<claim-text>output a modified version of the document having a portion of the candidate textual representations corresponding to at least a portion of the list of concepts following pruning hyperlinked to supplemental materials relating to the at least a portion of the list of concept and without any additional hyperlinks to the one of the pruned concepts of the plurality of concepts.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the executable data is further effective to cause the one or more processors to prune the list of concepts according to a blacklist.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the executable data is further effective to cause the one or more processors to, for remaining concepts of the plurality of concepts associated with an ambiguous textual representation:
<claim-text>identify if a concept of the remaining concepts is listed in a whitelist; and</claim-text>
<claim-text>if so, prune concepts of the remaining concepts other than the concept listed in the whitelist.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the executable data is further effective to cause the one or more processors to:
<claim-text>calculate, for each concept of at least a portion of the concepts in the list of concepts, a score; and</claim-text>
<claim-text>prune the list of concepts according to the scores for the at least a portion of the concepts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on an inverse document frequency for the concept according to a corpus of documents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on a number of homonyms associated with the concept.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on linkworthiness of the concept according to a corpus of documents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the linkworthiness of a concept is calculated as a number of times the concept is linked in the corpus of documents divided by the total number of times the concept is included in the corpus of documents.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on current references to the concept in social media content.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on one or more locations in the document of one or more textual representations associated with the concept.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the executable data is further effective to cause the one or more processors to calculate the score for each concept of at least a portion of the concepts in the list of concepts by:
<claim-text>calculating the score at least in part based on a comparison of a category vector for the concept to a document vector, the category vector including concepts adjacent the concept in a taxonomy and the document vector including a combination of category vectors for at least a portion of the concepts of the list of concepts. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
