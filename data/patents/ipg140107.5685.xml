<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626786-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626786</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13361506</doc-number>
<date>20120130</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707765</main-classification>
<further-classification>707769</further-classification>
</classification-national>
<invention-title id="d2e51">Dynamic language checking</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5678053</doc-number>
<kind>A</kind>
<name>Anderson</name>
<date>19971000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5892919</doc-number>
<kind>A</kind>
<name>Nielson</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5907680</doc-number>
<kind>A</kind>
<name>Nielsen</name>
<date>19990500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6005860</doc-number>
<kind>A</kind>
<name>Anderson et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370352</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6012075</doc-number>
<kind>A</kind>
<name>Fein et al.</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6041324</doc-number>
<kind>A</kind>
<name>Earl et al.</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6088707</doc-number>
<kind>A</kind>
<name>Bates et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715235</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6092100</doc-number>
<kind>A</kind>
<name>Berstis et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6349295</doc-number>
<kind>B1</kind>
<name>Tedesco et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6434548</doc-number>
<kind>B1</kind>
<name>Emens et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6804682</doc-number>
<kind>B1</kind>
<name>Kemper et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7149970</doc-number>
<kind>B1</kind>
<name>Pratley et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715257</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>8131746</doc-number>
<kind>B2</kind>
<name>Halcrow et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2002/0116411</doc-number>
<kind>A1</kind>
<name>Peters et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2004/0128309</doc-number>
<kind>A1</kind>
<name>Gurney et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2004/0205672</doc-number>
<kind>A1</kind>
<name>Bates et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2004/0249795</doc-number>
<kind>A1</kind>
<name>Brockway et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2005/0235031</doc-number>
<kind>A1</kind>
<name>Schneider et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2006/0023945</doc-number>
<kind>A1</kind>
<name>King et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382173</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2006/0112066</doc-number>
<kind>A1</kind>
<name>Hamzy</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2006/0294067</doc-number>
<kind>A1</kind>
<name>Halcrow et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>GB</country>
<doc-number>2345771</doc-number>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>&#x201c;U.S. Appl. No. 10/996,321 Final Office Action&#x201d;, Apr. 17, 2008 , 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>&#x201c;U.S. Appl. No. 10/996,321 Final Office Action&#x201d;, Jun. 19, 2007 , 12 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>U.S. Appl. No. 10/996,321 Final Office Action, Apr. 17, 2008 , 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>&#x201c;U.S. Appl. No. 10/996,321 Office Action&#x201d;, Feb. 28, 2007 , 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>&#x201c;U.S. Appl. No. 10/996,321 Office Action&#x201d;, Oct. 30, 2007 , 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>&#x201c;U.S. Appl. No. 11/165,448 Final Office Action&#x201d;, Oct. 14, 2008 , 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>&#x201c;U.S. Appl. No. 11/165,448 Office Action&#x201d;, May 30, 2008 , 12 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>&#x201c;U.S. Appl. No. 11/165,448 Office Action&#x201d;, Sep. 13, 2007 , 8 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>&#x201c;U.S. Appl. No. 11/771,638 Final Office Action&#x201d;, Jun. 11, 2010 , 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>&#x201c;U.S. Appl. No. 11/771,638 Final Office Action&#x201d;, Oct. 24, 2011 , 15 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>&#x201c;U.S. Appl. No. 11/771,638 Office Action&#x201d;, Apr. 14, 2011 , 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>&#x201c;U.S. Appl. No. 11/771,638 Office Action&#x201d;, Jan. 8, 2010 , 22 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707769</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707765</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715257</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11165448</doc-number>
<date>20050623</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8131746</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13361506</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120130977</doc-number>
<kind>A1</kind>
<date>20120524</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Halcrow</last-name>
<first-name>Michael A.</first-name>
<address>
<city>Pflugerville</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kirkland</last-name>
<first-name>Dustin</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Halcrow</last-name>
<first-name>Michael A.</first-name>
<address>
<city>Pflugerville</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Kirkland</last-name>
<first-name>Dustin</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>DeLizio Gilliam, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hwa</last-name>
<first-name>Shyue Jiunn</first-name>
<department>2163</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Dynamic language checking includes identifying questionable language usage; creating a query in dependence upon the questionable language usage; querying a search engine with the query; receiving from the search engine search result statistics describing the search results for the query; and determining, in dependence upon search results statistics returned by the search engine, whether the questionable language usage is proper language usage.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="236.05mm" wi="187.20mm" file="US08626786-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.03mm" wi="181.86mm" file="US08626786-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="248.67mm" wi="186.69mm" file="US08626786-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="260.52mm" wi="188.98mm" file="US08626786-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="256.79mm" wi="179.83mm" file="US08626786-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="261.62mm" wi="188.04mm" file="US08626786-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This patent applications is a continuation application that claims benefit under 35 U.S.C. &#xa7;120 of U.S. patent application Ser. No. 11/165,448, which was filed on Jun. 23, 2005.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Embodiments of the inventive subject matter generally relate to data processing, or, more specifically, evaluating language usage in an application that supports language checking</p>
<p id="p-0004" num="0003">Many conventional applications support language usage checking of the content of documents created with the application. Such language checking includes spell checking and grammar checking Examples of applications that support language checking include word processing applications, spreadsheet applications, email applications, and many others as will occur to those of skill in the art. Despite the fact that the language usage being checked by these applications is evolving, the language checking functions are static. The quality of the language checking of an application is dependent upon the frequency with which the language checking function of the application functions is updated. If a properly-used-newly-coined word or phrase is not found in a spell checker's vocabulary or a grammar checker's phrase bank, the word or phrase is typically flagged as being misused. There is an ongoing need for improvement in language checking in applications which is not constrained by the dynamic evolution of language usage.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">Embodiments of the inventive subject matter include a computer program product for dynamic language checking. The computer program product comprises a computer readable storage medium having computer usable program code embodied therewith. The computer usable program code comprises a computer usable program code configured to identify a questionable language usage. The computer usable program code is configured to create a query in dependence upon the questionable language usage including identifying suggested language usage in dependence upon the questionable language usage and substituting at least one word of the questionable language usage with at least one word of the suggested language usage. The computer usable program code is configured to query a search engine with the query. The computer usable program code is configured to receive from the search engine search result statistics describing search results for the query. The computer usable program code is configured to determine, in dependence upon search results statistics returned by the search engine, whether the questionable language usage is proper language usage.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005">The present embodiments may be better understood, and numerous objects, features, and advantages made apparent to those skilled in the art by referencing the accompanying drawings.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> sets forth a network diagram illustrating an exemplary system of computers each of which may have installed upon it an application modified to support dynamic language checking according to embodiments of the present invention.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> sets forth a block diagram of automated computing machinery comprising an exemplary computer useful in language checking according to embodiments of the present invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> sets forth a flow chart illustrating an exemplary computer implemented method for dynamic language checking.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> sets forth a flow chart illustrating another exemplary method of dynamic language checking</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> sets forth a flow chart illustrating an exemplary method for creating one of a plurality queries in dependence upon the questionable language usage.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF EMBODIMENT(S)</heading>
<p id="p-0012" num="0011">The description that follows includes exemplary systems, methods, techniques, instruction sequences and computer program products that embody techniques of the present inventive subject matter. However, it is understood that the described embodiments may be practiced without these specific details. In other instances, well-known instruction instances, protocols, structures and techniques have not been shown in detail in order not to obfuscate the description.</p>
<p id="h-0006" num="0000">Introduction</p>
<p id="p-0013" num="0012">The present invention is described to a large extent in this specification in terms of methods for language checking Persons skilled in the art, however, will recognize that any computer system that includes suitable programming means for operating in accordance with the disclosed methods also falls well within the scope of the present invention. Suitable programming means include any means for directing a computer system to execute the steps of the method of the invention, including for example, systems comprised of processing units and arithmetic-logic circuits coupled to computer memory, which systems have the capability of storing in computer memory, which computer memory includes electronic circuits configured to store data and program instructions, programmed steps of the method of the invention for execution by a processing unit.</p>
<p id="p-0014" num="0013">The invention also may be embodied in a computer program product, such as a diskette or other recording medium, for use with any suitable data processing system. Embodiments of a computer program product may be implemented by use of any recording medium for machine-readable information, including magnetic media, optical media, or other suitable media. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although most of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.</p>
<p id="p-0015" num="0014">Dynamic Language Checking</p>
<p id="p-0016" num="0015">Exemplary methods, systems, and products for language checking are described with reference to the accompanying drawings, beginning with <figref idref="DRAWINGS">FIG. 1</figref>. <figref idref="DRAWINGS">FIG. 1</figref> sets forth a network diagram illustrating an exemplary system of computers each of which may have installed upon it an application modified to support dynamic language checking according to embodiments of the present invention. Examples of applications that currently support language checking and may be modified to support dynamic language checking include word processing applications, spreadsheet applications, email applications, and many others as will occur to those of skill in the art.</p>
<p id="p-0017" num="0016">The data processing system of <figref idref="DRAWINGS">FIG. 1</figref> includes wide area network (&#x201c;WAN&#x201d;). The network connection aspect of the architecture of <figref idref="DRAWINGS">FIG. 1</figref> is only for explanation, not for limitation. In fact, systems for language checking may be connected as LANs, WANs, intranets, internets, the Internet, webs, the World Wide Web itself, or other connections as will occur to those of skill in the art. Such networks are media that may be used to provide data communications connections between various devices and computers connected together within an overall data processing system.</p>
<p id="p-0018" num="0017">In the example of <figref idref="DRAWINGS">FIG. 1</figref>, several exemplary devices including a PDA (<b>112</b>), a computer workstation (<b>104</b>), a mobile phone (<b>110</b>), a laptop (<b>126</b>), a server supporting a search engine (<b>106</b>) and personal computer (<b>108</b>) are connected to the WAN (<b>101</b>). Network-enabled mobile phone (<b>110</b>) connects to the WAN (<b>101</b>) through a wireless link (<b>116</b>), the laptop (<b>126</b>) connects to the WAN (<b>101</b>) through a wireless link (<b>118</b>), and the PDA (<b>112</b>) connects to the network (<b>101</b>) through a wireless link (<b>114</b>). In the example of <figref idref="DRAWINGS">FIG. 1</figref>, the personal computer (<b>108</b>) connects to the WAN (<b>101</b>) through a wireline connection (<b>120</b>), the computer workstation (<b>104</b>) connects to the WAN (<b>101</b>) through a wireline connection (<b>122</b>), and the server supporting a search engine (<b>106</b>) connects to the WAN (<b>101</b>) through a wireline (<b>128</b>) connection.</p>
<p id="p-0019" num="0018">In the system of <figref idref="DRAWINGS">FIG. 1</figref>, the exemplary devices (<b>108</b>, <b>112</b>, <b>104</b>, <b>110</b>, and <b>126</b>) have installed upon them an application modified to support dynamic language checking according to embodiments of the present invention. Conventional applications supporting language checking may be modified through for example a plug-in designed to extend the language checking capabilities of the application according to embodiments of the present invention. Applications so modified are capable of identifying questionable language usage; creating a query in dependence upon the questionable language usage; querying a search engine (<b>106</b>) with the query; receiving from the search engine (<b>106</b>) search result statistics describing the search results for the query; and determining, in dependence upon search results statistics returned by the search engine (<b>106</b>), whether the questionable language usage is proper usage.</p>
<p id="p-0020" num="0019">Search result statistics are data that describe the results returned from a particular search query. The search result statistics are not the search results themselves but statistics describing the search results. A common example of search result statistics is a raw number of pages returned by the search engine for a particular query. Often such search results statistics are provided in a predetermined location in the results page returned by a search engine.</p>
<p id="p-0021" num="0020">In one straightforward example of dynamic language checking, the questionable language is used as a query without modification. In such an example, if search result statistics returned from the search engine demonstrate that the questionable language is found in at least a predetermined number of web pages, and therefore sufficiently used, then the questionable language is determined to be proper language usage. If search result statistics returned from the search engine, demonstrate that the questionable language is not found in at least a predetermined number of web pages, and therefore not sufficiently used, then the questionable language is determined to be improper language usage. Such a straightforward example of dynamic language checking confirms or denies the use of questionable language by relying on language usage in web pages to demonstrate proper usage. Dynamic language checking takes advantage of the fact that newly coined words and phrases often appear in web pages already indexed by search engines well before being incorporated in the vocabularies of conventional spell checkers or the phrase banks of conventional grammar checkers.</p>
<p id="p-0022" num="0021">The arrangement of servers and other devices making up the exemplary system illustrated in <figref idref="DRAWINGS">FIG. 1</figref> are for explanation, not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers, routers, other devices, and peer-to-peer architectures, not shown in <figref idref="DRAWINGS">FIG. 1</figref>, as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols, including for example TCP/IP, HTTP, WAP, HDTP, and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0023" num="0022">Language checking in accordance with the present invention is generally implemented with computers, that is, with automated computing machinery. In the system of <figref idref="DRAWINGS">FIG. 1</figref>, for example, all the nodes, servers, and communications devices are implemented to some extent at least as computers. For further explanation, therefore, <figref idref="DRAWINGS">FIG. 2</figref> sets forth a block diagram of automated computing machinery comprising an exemplary computer (<b>152</b>) useful in language checking according to embodiments of the present invention. The computer (<b>152</b>) of <figref idref="DRAWINGS">FIG. 2</figref> includes at least one computer processor (<b>156</b>) or &#x2018;CPU&#x2019; as well as random access memory (<b>168</b>) (&#x201c;RAM&#x201d;) which is connected through a system bus (<b>160</b>) to processor (<b>156</b>) and to other components of the computer.</p>
<p id="p-0024" num="0023">Stored in RAM (<b>168</b>) is an application that supports language checking Examples of applications that support language checking include word processing applications, spreadsheet applications, email applications and many others as will occur to those of skill in the art. The exemplary application (<b>232</b>) includes a language checker (<b>240</b>) that in turn includes a grammar checker (<b>208</b>) and a spell checker (<b>210</b>). The grammar checker (<b>208</b>) identifies questionable language usage by comparing the language usage in a document with a phrase bank (<b>242</b>). If the phrase is not found in the phrase bank, the grammar checker flags the language usage as questionable. Often grammar checkers (<b>208</b>) also employ language models to more accurately evaluate grammar. The exemplary spell checker (<b>210</b>) of <figref idref="DRAWINGS">FIG. 1</figref> identifies questionable language usage in a document by comparing the words of the usage to a vocabulary (<b>244</b>). The spell checker (<b>210</b>) then flags as questionable any word not contained in the vocabulary (<b>244</b>).</p>
<p id="p-0025" num="0024">The exemplary application (<b>232</b>) of <figref idref="DRAWINGS">FIG. 2</figref> has been modified by the installation of a dynamic language checking plug-in (<b>206</b>). The dynamic language checking plug-in operates generally by identifying questionable language usage; creating a query in dependence upon the questionable language usage; querying a search engine with the query; receiving from the search engine search result statistics describing the search results for the query; and determining, in dependence upon search results statistics returned by the search engine, whether the questionable language usage is proper usage.</p>
<p id="p-0026" num="0025">Also stored in RAM (<b>168</b>) is an operating system (<b>154</b>). Operating systems useful in computers according to embodiments of the present invention include UNIX&#x2122;, Linux&#x2122;, Microsoft Windows NT&#x2122;, AIX&#x2122;, IBM's i5/OS&#x2122;, and others as will occur to those of skill in the art. Operating system (<b>54</b>), application (<b>232</b>), and dynamic language checking plug-in (<b>206</b>) in the example of <figref idref="DRAWINGS">FIG. 2</figref> are shown in RAM (<b>168</b>), but many components of such software typically are stored in non-volatile memory (<b>166</b>) also.</p>
<p id="p-0027" num="0026">Computer (<b>152</b>) of <figref idref="DRAWINGS">FIG. 2</figref> includes non-volatile computer memory (<b>166</b>) coupled through a system bus (<b>160</b>) to processor (<b>156</b>) and to other components of the computer (<b>152</b>). Non-volatile computer memory (<b>166</b>) may be implemented as a hard disk drive (<b>170</b>), optical disk drive (<b>172</b>), electrically erasable programmable read-only memory space (so-called &#x2018;EEPROM&#x2019; or &#x2018;Flash&#x2019; memory) (<b>174</b>), RAM drives (not shown), or as any other kind of computer memory as will occur to those of skill in the art.</p>
<p id="p-0028" num="0027">The example computer of <figref idref="DRAWINGS">FIG. 2</figref> includes one or more input/output interface adapters (<b>178</b>). Input/output interface adapters in computers implement user-oriented input/output through, for example, software drivers and computer hardware for controlling output to display devices (<b>180</b>) such as computer display screens, as well as user input from user input devices (<b>181</b>) such as keyboards and mice.</p>
<p id="p-0029" num="0028">The exemplary computer (<b>152</b>) of <figref idref="DRAWINGS">FIG. 2</figref> includes a communications adapter (<b>167</b>) for implementing data communications (<b>184</b>) with other computers (<b>182</b>). Such data communications may be carried out through serially through RS-232 connections, through external buses such as USB, through data communications networks such as IP networks, and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer, directly or through a network. Examples of communications adapters useful for language checking according to embodiments of the present invention include modems for wired dial-up communications, Ethernet (IEEE 802.3) adapters for wired network communications, and 802.11b adapters for wireless network communications.</p>
<p id="p-0030" num="0029">For further explanation, <figref idref="DRAWINGS">FIG. 3</figref> sets forth a flow chart illustrating an exemplary computer implemented method for dynamic language checking As discussed above, many applications currently support language checking, such as word processing applications, spreadsheet applications, email applications and so on as will occur to those of skill in the art. All such applications are capable of modification, through for example a plug-in, to include the capability of dynamic language checking according to embodiments of the present invention.</p>
<p id="p-0031" num="0030">The method of <figref idref="DRAWINGS">FIG. 3</figref> includes identifying (<b>306</b>) questionable language usage (<b>308</b>). In the method of <figref idref="DRAWINGS">FIG. 3</figref> identifying (<b>306</b>) questionable language usage (<b>308</b>) is carried out by a language checker such as a spelling checker or a grammar checker. As discussed above, grammar checkers typically identify questionable language usage by comparing the text (<b>304</b>) of the language usage with a phrase bank. If the phrase is not found in the phrase bank, the grammar checker identifies the language usage as questionable. Often grammar checkers also employ language models to more accurately evaluate phrases. Spell checkers often identify questionable language usage by comparing the text of the language to a vocabulary. If a word is not found in the vocabulary, then the spell checker identifies the word as questionable language usage (<b>308</b>).</p>
<p id="p-0032" num="0031">The method of <figref idref="DRAWINGS">FIG. 3</figref> also includes creating (<b>310</b>) a search engine query (<b>314</b>) in dependence upon the questionable language usage (<b>308</b>) and querying (<b>316</b>) a search engine (<b>106</b>) with the query (<b>314</b>). One straightforward way of creating a query in dependence upon the questionable language usage is carried out by using the identified questionable language usage as a query without further modification.</p>
<p id="p-0033" num="0032">Querying a search engine may be carried out through the use of URL encoded data passed to a search engine through, for example, an HTTP GET or HTTP POST function. URL encoded data is data packaged in a URL for data communications, in this case, passing a query to a search engine. In the case of HTTP communications, the HTTP GET and POST functions are often used to transmit URL encoded data. In this context, it is useful to remember that URLs do more than merely request file transfers. URLs identify resources on servers. Such resources may be files having filenames, but the resources identified by URLs also include, for example, queries to databases. Results of such queries do not necessarily reside in files, but they are nevertheless data resources identified by URLs and identified by a search engine and query data that produce such resources. An example of URL encoded data is:</p>
<p id="p-0034" num="0033">http://www.example.com/search?field1=value1&#x26;field2=value2</p>
<p id="p-0035" num="0034">This example of URL encoded data representing a query that is submitted over the web to a search engine. More specifically, the example above is a URL bearing encoded data representing a query to a search engine and the query is the string &#x201c;field1=value1&#x26;field2=value2.&#x201d; The exemplary encoding method is to string field names and field values separated by &#x2018;&#x26;&#x2019; and &#x201c;=&#x201d; and designate the encoding as a query by including &#x201c;search&#x201d; in the URL. The exemplary URL encoded search query is for explanation and not for limitation. In fact, different search engines may use different syntax in representing a query in a data encoded URL and therefore the particular syntax of the data encoding may vary according to the particular search engine queried.</p>
<p id="p-0036" num="0035">The method of <figref idref="DRAWINGS">FIG. 3</figref> also includes returning (<b>320</b>), by the search engine (<b>106</b>) search result statistics. Search result statistics are data that describe the results returned from a particular search query. The search result statistics are not the search results themselves but statistics describing the search results. A common example of search result statistics is a raw number of pages returned by the search engine for the query. Often such search results statistics are provided in a predetermined location in the results page returned by a search engine.</p>
<p id="p-0037" num="0036">The method of <figref idref="DRAWINGS">FIG. 3</figref> also includes receiving (<b>321</b>) from the search engine (<b>106</b>) search result statistics (<b>322</b>) describing the search results for the query (<b>314</b>) and determining (<b>326</b>), in dependence upon search results statistics (<b>322</b>) returned by the search engine (<b>106</b>), whether the questionable language usage is proper usage. In the example of <figref idref="DRAWINGS">FIG. 3</figref>, determining (<b>326</b>) whether the questionable language usage is proper is carried out in dependence upon statistics evaluation rules. Statistics evaluation rules (<b>324</b>) are rules designed to identify proper language usage in dependence upon search result statistics for one or more queries created in dependence upon questionable language. One simple statistics evaluation rule is a predetermined threshold of web pages that must contain the questionable language usage to confirm that the questionable usage is in fact proper usage. Consider the following statistics evaluation rule. TABLE-US-00001 IF query=questionable language; AND results statistics include over 1,000,000 web pages; THEN proper language usage=questionable language.</p>
<p id="p-0038" num="0037">In the example above, if a query including the questionable language submitted in unmodified form to a search engine returns over 1,000,000 web pages then the questionable language is determined to be properly used. The fact that the questionable language usage has been found in over 1,000,000 web pages provides enough basis to conclude that the questionable language has been used properly.</p>
<p id="p-0039" num="0038">Consider the following exemplary use case. An application supporting dynamic language checking according to embodiments of the present invention identifies the phrase &#x201c;in that vein&#x201d; as questionable language and queries a search engine with the phrase. The search result statistics returned by the search engine demonstrate that the phrase is found in 49,100 web pages. A statistics evaluation rule dictates that phrases found in over 25,000 web pages are determined to be properly used. An application supporting dynamic language checking therefore determines that the questionable phrase &#x201c;in that vein&#x201d; is properly used. Similarly, when the same application identifies the phrase &#x201c;in that vain&#x201d; as questionable language and queries a search engine with the phrase. The search result statistics returned by the search engine demonstrate that the phrase is found in only 1,520 web pages. Using the same statistics evaluation rule, an application supporting dynamic language checking determines that the questionable phrase &#x201c;in that vain&#x201d; is improperly used.</p>
<p id="p-0040" num="0039">The example of <figref idref="DRAWINGS">FIG. 3</figref> confirms whether the questionable language is properly used or determines that the questionable language is not properly used (<b>327</b>). Dynamic language checking according to embodiments of the present invention may also use search result statistics to perform more analysis on questionable language usage to determine proper language usage in dependence upon the identified questionable language usage. For further explanation, <figref idref="DRAWINGS">FIG. 4</figref> sets forth a flow chart illustrating an exemplary method of dynamic language checking that includes identifying (<b>306</b>) questionable language usage (<b>308</b>). As discussed above, grammar checkers typically identify questionable language usage by comparing the text (<b>304</b>) of the language usage with a phrase bank. If the phrase is not found in the phrase bank, the grammar checker identifies the language usage as questionable. Often grammar checkers also employ language models to more accurately evaluate grammar. Spell checkers often identify questionable language usage by comparing the text of the language to a vocabulary. If a word is not found in the vocabulary, then the spell checker identifies the word as questionable language usage (<b>308</b>).</p>
<p id="p-0041" num="0040">The method of <figref idref="DRAWINGS">FIG. 4</figref> also includes creating (<b>450</b>) a plurality of a queries (<b>314</b>) in dependence upon the questionable language usage (<b>308</b>). For further explanation, <figref idref="DRAWINGS">FIG. 5</figref> sets forth a flow chart illustrating an exemplary method for creating (<b>310</b>) one of a plurality queries (<b>314</b>) in dependence upon the questionable language usage (<b>308</b>). The example of <figref idref="DRAWINGS">FIG. 5</figref> includes identifying (<b>306</b>) questionable language and identifying (<b>406</b>) suggested language usage (<b>404</b>) in dependence upon the questionable language usage (<b>306</b>). Conventional language checkers also often provide suggested language usage in response to identifying questionable language usage. In the example of <figref idref="DRAWINGS">FIG. 5</figref>, identifying (<b>406</b>) suggested language usage (<b>404</b>) is carried out by a language checker (<b>302</b>) and provided to a dynamic language checking plug-in (<b>206</b>) operating according to embodiments of the present invention.</p>
<p id="p-0042" num="0041">The method of <figref idref="DRAWINGS">FIG. 5</figref> includes creating (<b>408</b>) a query (<b>314</b>) in dependence upon the suggested language usage (<b>404</b>) according to query creation rules (<b>312</b>). Query creation rules (<b>312</b>) are rules governing a query creation in dependence upon a suggested language usage. One way of creating (<b>408</b>) a query (<b>314</b>) in dependence upon the suggested language usage (<b>404</b>) in dependence upon query creation rules (<b>312</b>) includes substituting (<b>502</b>) at least one word of the questionable language usage (<b>308</b>) with at least one word of the suggested language usage (<b>404</b>). Consider the following example. An application supporting dynamic language checking identifies the word &#x201c;Linux&#x201d; as questionable in the sentence &#x201c;I like the Linux operating system.&#x201d; Suggested language identified by a language checker for the word &#x201c;Linux&#x201d; include &#x201c;Line,&#x201d; &#x201c;Linea,&#x201d; &#x201c;Lined,&#x201d; &#x201c;Linen.&#x201d; Substituting at least one word of the questionable language usage (<b>308</b>) with at least one word of the suggested language usage (<b>404</b>) yields the following possible queries: &#x201c;I like the Line operating system,&#x201d; &#x201c;I like the Linea operating system,&#x201d; &#x201c;I like the Lined operating system,&#x201d; and &#x201c;I like the Linen operating system.&#x201d;</p>
<p id="p-0043" num="0042">Creating (<b>408</b>) a query (<b>314</b>) in dependence upon the suggested language usage (<b>404</b>) by substituting (<b>502</b>) at least one word of the questionable language usage (<b>308</b>) with at least one word of the suggested language usage (<b>404</b>) according to query creation rules may also include rules determining which words before or after questionable language to use in the query. Continuing with the same example, a dynamic language checking plug-in creates for the suggested word &#x201c;line&#x201d; three queries from the questionable language usage &#x201c;I like the Linux operating system.&#x201d; In a first query Linux is substituted with Line and two words after Linux are maintained in the query yielding &#x201c;Line operating system.&#x201d; In a second query Linux is substituted with Line and two words before Linux are maintained in the query yielding &#x201c;like the Line.&#x201d; In a third query Linux is substituted with Line and one word before Linux and one word after Linux are maintained in the query yielding &#x201c;Line operating system.&#x201d;</p>
<p id="p-0044" num="0043">The example queries discussed above are for explanation and not for limitation. Query creation rules (<b>312</b>) provide a vehicle to create queries in dependence upon suggested language usage in many ways and all such ways are well within the scope of the present invention.</p>
<p id="p-0045" num="0044">Again with reference to <figref idref="DRAWINGS">FIG. 4</figref>: After identifying (<b>306</b>) questionable language usage (<b>308</b>) and creating (<b>450</b>) a plurality of a queries (<b>314</b>) in dependence upon the questionable language usage (<b>308</b>). The method of <figref idref="DRAWINGS">FIG. 4</figref> includes querying (<b>452</b>) a search engine (<b>106</b>) with the queries (<b>314</b>) and receiving (<b>456</b>) from the search engine search result statistics (<b>322</b>) returned by the search engine describing the search results for each of the queries (<b>314</b>).</p>
<p id="p-0046" num="0045">The method of <figref idref="DRAWINGS">FIG. 4</figref> also includes determining (<b>458</b>), in dependence upon search results statistics (<b>322</b>) returned by the search engine (<b>106</b>), proper language usage (<b>328</b>). One way of determining (<b>458</b>), in dependence upon search results statistics (<b>322</b>) returned by the search engine (<b>106</b>), proper language usage (<b>328</b>) is carried out by identifying (<b>327</b>) one query as the proper language usage. Typically, the query found in the most web pages is identified as proper language usage.</p>
<p id="p-0047" num="0046">For further explanation consider the following use case. An application supporting dynamic language checking identifies the word &#x201c;Linux&#x201d; as questionable in the sentence &#x201c;I like the Linux operating system.&#x201d; Suggested language identified by a language checker for the word &#x201c;Linux&#x201d; include &#x201c;Line,&#x201d; &#x201c;Linea,&#x201d; &#x201c;Lined,&#x201d; &#x201c;Linen.&#x201d; Three queries are created for each suggested word by substituted Linux with the suggested word and maintaining two other words in each the query; two before Linux, two after Linux, and one before Linux and one after Linux. Three additional queries are also created without substituting Linux, yet maintaining two other words in each the query; two before Linux, two after Linux, and one before Linux and one after Linux. All the queries are then submitted to a search engine and the search result statistics for each query are used to determine the proper language usage. The search result statistics returned for each query are: TABLE-US-00002 &#x201c;Line operating system&#x201d; (941 web pages) &#x201c;the Line operating&#x201d; (1,010 web pages) &#x201c;like the Line&#x201d; (16,700 web pages) &#x201c;Linea operating system&#x201d; (2 web pages) &#x201c;the Linea operating&#x201d; (1 web pages) &#x201c;like the Linea&#x201d; (7 web pages) &#x201c;Lined operating system&#x201d; (2 web pages) &#x201c;the Lined operating&#x201d; (2 web pages) &#x201c;like the Lined&#x201d; (206 web pages) &#x201c;Linen operating system&#x201d; (1 web pages) &#x201c;the Linen operating&#x201d; (0 web pages) &#x201c;like the Linen&#x201d; (451 web pages) &#x201c;Linux operating system&#x201d; (635,000 web pages) &#x201c;the Linux operating&#x201d; (287,000 web pages) &#x201c;like the Linux&#x201d; (11,800 web pages)</p>
<p id="p-0048" num="0047">In this example proper language usage is identified by selecting the word whose usage among a plurality of queries is the greatest. The results of the three are added giving a total number of web pages containing the word in the queries yielding. [0048] Linux (933,800) [0049] Line (18,651) [0050] Linea (10) [0051] Lined (210) [0052] Linen (452)</p>
<p id="p-0049" num="0048">In this example, the search result statistic indicate that the word &#x201c;Linux&#x201d; in context was found in the most web pages and is therefore determined to be proper language usage. In this example, the questionable language usage is determined to be proper usage.</p>
<p id="p-0050" num="0049">Because questionable language usage may be properly used, the method of <figref idref="DRAWINGS">FIG. 4</figref> includes determining (<b>330</b>) whether the proper language usage (<b>328</b>) is the same as the questionable language usage (<b>306</b>). If the proper language usage (<b>328</b>) is the same as the questionable language usage (<b>306</b>), then the method of <figref idref="DRAWINGS">FIG. 4</figref> does not notify the user of the questionable language. When the questionable language is in fact proper, the method of <figref idref="DRAWINGS">FIG. 4</figref> operates transparently to a user. If the proper language usage (<b>328</b>) is the same as the questionable language usage (<b>306</b>), the method of <figref idref="DRAWINGS">FIG. 4</figref> includes suggesting (<b>332</b>) the proper language usage (<b>328</b>) to a user if the proper language usage is not the same as the questionable language usage.</p>
<p id="p-0051" num="0050">After determining proper language usage according to the method of <figref idref="DRAWINGS">FIG. 4</figref>, an application supporting dynamic language checking may save the proper language usage in a vocabulary or phrase bank available to a language checker. Saving the proper language usage prevents repeated checking of the same phrases.</p>
<p id="p-0052" num="0051">As will be appreciated by one skilled in the art, aspects of the present inventive subject matter may be embodied as a system, method or computer program product. Accordingly, aspects of the present inventive subject matter may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, aspects of the present inventive subject matter may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.</p>
<p id="p-0053" num="0052">Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0054" num="0053">A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0055" num="0054">Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.</p>
<p id="p-0056" num="0055">Computer program code for carrying out operations for aspects of the present inventive subject matter may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).</p>
<p id="p-0057" num="0056">Aspects of the present inventive subject matter are described with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the inventive subject matter. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0058" num="0057">These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0059" num="0058">The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0060" num="0059">While the embodiments are described with reference to various implementations and exploitations, it will be understood that these embodiments are illustrative and that the scope of the inventive subject matter is not limited to them. In general, techniques for language checking as described herein may be implemented with facilities consistent with any hardware system or hardware systems. Many variations, modifications, additions, and improvements are possible.</p>
<p id="p-0061" num="0060">Plural instances may be provided for components, operations or structures described herein as a single instance. Finally, boundaries between various components, operations and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the inventive subject matter. In general, structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements may fall within the scope of the inventive subject matter.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer program product for dynamic language checking, the computer program product comprising:
<claim-text>a computer readable storage medium having computer usable program code embodied therewith, the computer usable program code comprising a computer usable program code configured to:</claim-text>
<claim-text>identify a questionable language usage;</claim-text>
<claim-text>create a query in dependence upon the questionable language usage including identifying suggested language usage in dependence upon the questionable language usage and substituting at least one word of the questionable language usage with at least one word of the suggested language usage;</claim-text>
<claim-text>query a search engine with the query;</claim-text>
<claim-text>receive from the search engine search result statistics describing search results for the query; and</claim-text>
<claim-text>determine, in dependence upon search results statistics returned by the search engine, whether the questionable language usage is proper language usage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer usable program code configured to create a query in dependence upon the questionable language usage comprises the computer usable program code configured to use the identified questionable language usage as a query.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer usable program code configured to determine, in dependence upon search result statistics returned by the search engine, whether the questionable language usage is proper language usage comprises the computer usable program code configured to:
<claim-text>receive a plurality of search result statistics for a plurality of queries created in dependence upon the questionable language usage; and</claim-text>
<claim-text>identify one of the plurality of queries as the proper language usage in dependence upon the search result statistics and statistics evaluation rules.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer program product of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the computer usable program code is further configured to:
<claim-text>determine whether the proper language usage is the same as the questionable language usage; and</claim-text>
<claim-text>suggest the proper language usage to a user when the proper language usage is not the same as the questionable language usage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. An apparatus comprising:
<claim-text>a system bus;</claim-text>
<claim-text>a processor coupled with the system bus;</claim-text>
<claim-text>a communications adapter coupled with the system bus; and</claim-text>
<claim-text>a computer readable storage medium having computer usable program code embodied therewith, the computer usable program code comprising a computer usable program code configured to:</claim-text>
<claim-text>identify a questionable language usage;</claim-text>
<claim-text>create a query in dependence upon the questionable language usage including identifying suggested language usage in dependence upon the questionable language usage and substituting at least one word of the questionable language usage with at least one word of the suggested language usage;</claim-text>
<claim-text>query a search engine with the query;</claim-text>
<claim-text>receive from the search engine search result statistics describing search results for the query; and</claim-text>
<claim-text>determine, in dependence upon search results statistics returned by the search engine, whether the questionable language usage is proper language usage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the computer usable program code configured to create a query in dependence upon the questionable language usage comprises the computer usable program code configured to use the identified questionable language usage as a query.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the computer usable program code configured to determine, in dependence upon search result statistics returned by the search engine, whether the questionable language usage is proper language usage comprises the computer usable program code configured to:
<claim-text>receive a plurality of search result statistics for a plurality of queries created in dependence upon the questionable language usage; and</claim-text>
<claim-text>identify one of the plurality of queries as the proper language usage in dependence upon the search result statistics and statistics evaluation rules.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the computer usable program code is further configured to:
<claim-text>determine whether the proper language usage is the same as the questionable language usage; and</claim-text>
<claim-text>suggest the proper language usage to a user when the proper language usage is not the same as the questionable language usage. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
