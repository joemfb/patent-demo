<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627424-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627424</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12827045</doc-number>
<date>20100630</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>288</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726  6</main-classification>
<further-classification>726  9</further-classification>
<further-classification>713158</further-classification>
<further-classification>370254</further-classification>
</classification-national>
<invention-title id="d2e53">Device bound OTP generation</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2010/0199104</doc-number>
<kind>A1</kind>
<name>Van Rijnswou</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2010/0325429</doc-number>
<kind>A1</kind>
<name>Saha et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713158</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>WO</country>
<doc-number>WO 2006044717</doc-number>
<kind>A2</kind>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>16</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713168-174</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713182-186</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713202</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709225</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709229</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  2-  8</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>O'Malley</last-name>
<first-name>Michael J.</first-name>
<address>
<city>Lowell</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Philpott</last-name>
<first-name>Robert S.</first-name>
<address>
<city>Andover</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>O'Malley</last-name>
<first-name>Michael J.</first-name>
<address>
<city>Lowell</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Philpott</last-name>
<first-name>Robert S.</first-name>
<address>
<city>Andover</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Gupta</last-name>
<first-name>Krishnendu</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>D'Angelo</last-name>
<first-name>Joseph</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>EMC Corporation</orgname>
<role>02</role>
<address>
<city>Hopkinton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Desrosiers</last-name>
<first-name>Evans</first-name>
<department>2491</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method, system, and computer product for use in generating one time passcodes (OTPs) in security environment, the security environment comprising an OTP generator and an OTP validator, the method comprising generating, at the OTP generator, an OTP according to a function, wherein the function includes as an input a device id, validating the OTP at the OTP validator, whereby the validation comprises generating, at the OTP validator, a second OTP according to the function, and determining whether the OTP is valid based on a comparison of the OTP with the second OTP generated at the OTP validator.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="119.38mm" wi="199.90mm" file="US08627424-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="237.57mm" wi="151.21mm" orientation="landscape" file="US08627424-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="219.12mm" wi="157.82mm" orientation="landscape" file="US08627424-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="249.43mm" wi="158.16mm" orientation="landscape" file="US08627424-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="251.38mm" wi="167.39mm" orientation="landscape" file="US08627424-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="252.05mm" wi="168.40mm" orientation="landscape" file="US08627424-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="202.95mm" wi="138.35mm" orientation="landscape" file="US08627424-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="114.98mm" wi="105.07mm" file="US08627424-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0002" num="0001">A portion of the disclosure of this patent document may contain command formats and other computer language listings, all of which are subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.</p>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Computer networks, and in particular Wide Area Networks (WANs) such as the Internet, provide opportunities for the misuse and abuse of communications traveling thereover. For example, two users (e.g., a human user and an enterprise server) communicating via the WAN may have their communications intercepted and/or altered. Also, it is possible for one user to misrepresent his, her, or its identity to another user.</p>
<p id="p-0004" num="0003">Thus, there is a need for both privacy and authentication between users of the network communicating with one another. In other words, users should be able to rely on the fact that their transmissions will not be intercepted or altered, and that transmissions from someone purporting to be a particular user do in fact originate from that user.</p>
<p id="p-0005" num="0004">In many secure communication applications, a key is required in order to perform certain cryptographic operations such as encryption, decryption, authentication, etc. The key may comprise, by way of example, a symmetric key or other secret shared by two or more entities.</p>
<p id="p-0006" num="0005">One such application is in authentication tokens, such as the RSA SecurID&#xae; authentication token commercially available from RSA Security Inc. of Bedford, Mass., U.S.A. The RSA SecurID&#xae; authentication token is used to provide two-factor authentication. Authorized users are issued individually-registered tokens that generate single-use one time pass-codes (OTPs), which change based on a time code algorithm. For example, a different OTP may be generated every 60 seconds. In a given two-factor authentication session, the user is required to enter a personal identification number (PIN) plus the current OTP from his or her authentication token. This information is supplied to an authentication entity. The authentication entity may be a server or other processing device equipped with RSA ACE/Server&#xae; software, available from RSA Security Inc. The PIN and current OTP may be transmitted to the authentication entity via an encryption agent equipped with RSA ACE/Agent&#xae; software, also available from RSA Security Inc. If the PIN and current OTP are determined to be valid, the user is granted access appropriate to his or her authorization level. Thus, the OTPs are like temporary passwords that cannot be guessed by an attacker, with other than a negligible probability.</p>
<p id="p-0007" num="0006">A given RSA SecurID&#xae; token typically contains one or more keys that are utilized in computing OTPs. The authentication entity performing the verification of the OTPs requires access to one or more keys associated with the token in question. Typically, such authentication entities have access to the same key or set of keys that the token uses to generate its output.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">A method, system, and computer product for use in generating one time passcodes (OTPs) in a security environment, the security environment comprising an OTP generator and an OTP validator, the method comprising generating, at the OTP generator, an OTP according to a function, wherein the function includes as an input a device id, validating the OTP at the OTP validator, whereby the validation comprises generating, at the OTP validator, a second OTP according to the function, and determining whether the OTP is valid based on a comparison of the OTP with the second OTP generated at the OTP validator.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> is an embodiment of the current techniques illustrating file based provisioning with device binding;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2</figref> is an embodiment of the current techniques illustrating file based provisioning;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3</figref> is an embodiment of the current techniques illustrating CT-KIP based provisioning;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4</figref> is an embodiment of the current techniques illustrating CT-KIP based provisioning with device binding;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 5</figref> is an embodiment of the current techniques illustrating mobile application authentication on a mobile phone mobile;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 6</figref> shows an embodiment of the current invention as loaded on a computer; and</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 7</figref> shows an embodiment of a method of the current invention embodied as program code or a program product.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0016" num="0015">An authentication token may be used to provide two-factor authentication where a user may be issued an individually-registered token, which generates single-use one time passcodes (OTPs), which change based on the algorithm implementation. For example, a different OTP may be generated every 60 seconds for an implementation that is based on time. The generation of the OTP may be driven by an internal clock of the token generator.</p>
<p id="p-0017" num="0016">The OTP, in isolation or in combination with a user pin, may be supplied to an authentication entity. Herein, an OTP in isolation or in combination with a personal identification code (PIN) may be referred to as a OTP. The authentication entity may be a server or other processing device which may determine if the supplied information is valid, and may grant access appropriate to his or her authorization level. The authentication entity may as an example also have an internal clock to index the supplied token by a given time T for an algorithm implementation that is based on time.</p>
<p id="p-0018" num="0017">An OTP generator may be a software program resident on a hardware device, a hardware device, or a combination of software and hardware. Conventionally, an OTP generator includes a set of inputs, such as a key, an identifier for the particular key, and a value that changes monotonically (e.g., time, or a counter value). Both the OTP generator and the authentication entity must have access to this information to enable the validation of OTP values. Typically, OTP generators are provisioned or passed a key. Conventionally, the key in token products is often stored in a file on the host operating system or in memory on a hardware device.</p>
<p id="p-0019" num="0018">Typically, the key may be stored or available on the hardware and may be protected via some form of encryption. Conventionally, if the key is decrypted or obtained, it may be passed to the OTP generator to generate valid OTPs. Currently, this may make it easier to use a stolen key as the OTP generation may have no binding to the device for which it was intended. Typically, this may enable replication of the OTP if someone were able to gain access to the serial number, key, and OTP algorithm.</p>
<p id="p-0020" num="0019">In an aspect of the current techniques, the function used to generate the OTP may be altered to include additional inputs. In an embodiment of the current techniques, an OTP generation algorithm used to generate the OTP may include any number of inputs. In a further embodiment of the current techniques, the number and type of inputs for the OTP generation function may include information particular to the device on which the OTP generator is located. In general, most devices have a unique hardware identifier. In a further aspect of the current techniques, a key may be generated from a cryptographic operation over a user password, which may bind a password to a specific device. Herein, the term device ID may be used to refer to an unique identifier. The unique identifier may include, for example, a hardware ID, a communication session ID, an ID of a virtual device, and an ID of a virtual session.</p>
<p id="p-0021" num="0020">In a particular embodiment of the current techniques, an OTP generator algorithm may use as an input a particular hardware code located on the hardware device on which the OTP generator algorithm resides. In at least some embodiments, the particular hardware code is a unique hardware code. In a further embodiment, this may enable an OTP generator to be tied to a particular piece of hardware such as a cell phone or a computer.</p>
<p id="p-0022" num="0021">In a further embodiment of the current techniques, an OTP generator algorithm may use as an input a particular identifier provided by a virtual environment software running on a device on which the OTP generator algorithm resides. This identifier may represent a hardware identifier as passed between the device and the virtual environment, an identifier for the virtual environment, limiting the use of the key beyond the boundary of the virtual machine, or an identifier representing the availability of some other network system that must be present to provide an identifier for the algorithm.</p>
<p id="p-0023" num="0022">In a further embodiment of the current techniques, if the input characteristics and OTP algorithm were replicated on another hardware device, the OTP algorithm may not function correctly as it may lack the hardware identifier. In an embodiment of the current techniques, a hardware specific identifier may be used as an input to the OTP generation algorithm. In other embodiments, the OTPs generated may also have a binding to the specific hardware on which the OTP generation code is running.</p>
<p id="p-0024" num="0023">In at least one embodiment of the current techniques, the authentication entity may be made aware of the hardware device ID. In certain embodiments, the authentication entity may be made aware of the hardware specific device ID during the key provisioning process. In other embodiments, the authentication entity may be made aware of the hardware specific device ID in another manner, such as during out of band communication. In further embodiments, a system administrator may record the hardware specific device ID before giving the device to a user, where the system administrator may provide the authenticator with the device ID.</p>
<p id="p-0025" num="0024">In alternative embodiments of the current techniques, the user may contact the administrator and provide the device specific ID, where the system administrator provides the ID to the OTP validator. In some embodiments, the user may contact the administrator by phone. In other embodiments, the user may contact the administrator by e-mail. In further embodiments, the device ID may be directly communicated to the authentication server during the key provisioning process. In at least one embodiment, the device ID may be communicated via the availability of a network system or by an available network system.</p>
<p id="p-0026" num="0025">In a further embodiment of the current techniques, binding the OTP to a device may require a modification of the OTP generating algorithm to include a device ID in the calculation. In certain embodiments, as the device ID may be obtained directly by the algorithm and may not be passed to the device, this may make it harder for an attacker to gain access to the device ID. In further embodiments, an attacker may be able to intercept a key passed to a token device during provisioning, but may have to capture the device to get the device ID or know the device ID in advance, in addition to the key to generate OTPs. In at least some embodiments, for an attacker to re-create an OTP, the attacker would also need to re-implement the OTP algorithm to generate codes on the intended device.</p>
<p id="p-0027" num="0026">In certain embodiments, by using a hardware specific characteristic, or a hash of a number of these characteristics, it may be able to create a device specific identifier. This may create an environment where only the device can generate the OTP.</p>
<p id="p-0028" num="0027">In at least one embodiment, the device ID may be used as an input for the OTP generation algorithm. In further embodiments, when the key is provisioned the server can use the device ID as an input to the generation of the OTP. In certain embodiments, the client device may use CT-KIP to identify hardware characteristics of the device. CT-KIP may be a client-server protocol for the secure initialization (and configuration) of cryptographic tokens. Conventionally, CT-KIP may require neither private-key capabilities in the cryptographic tokens, nor an established public-key infrastructure. Typically, successful execution of the CT-KIP may result in the generation of the same shared secret on both the server as well as the token. In further embodiments, the key may be provisioned using a different type of network-based provisioning protocol.</p>
<p id="p-0029" num="0028">In some embodiments of the current techniques, the addition of the hardware specific device ID may add a level of protection. In certain embodiments, the additional level of protection may be because the attacker may need to know the key as well as possess an implementation of the OTP generating algorithm, and the hardware specific ID to generate OTP values. In alternative embodiments, the OTP generating algorithm may include obtaining the device characteristics from the hardware. In further embodiments, this may require an attacker to re-implement the algorithm, gain the device ID, and gain the key in order to obtain the correct code. In even further embodiments, this may require the attacker to gain access to the device and query the device for the hardware specific characteristics.</p>
<p id="p-0030" num="0029">In an alternate embodiment of the current techniques the device ID is combined with a session specific ID for the server. In one such embodiment, the server identifier may be created from a cryptographic hash of the server's SSL certificate. The OTP validator may use the SSL certificate, or something derived from the SSL certificate that uniquely identifies the certificate, as an additional input to the generation algorithm. The resulting code may be passed to the webserver during normal authentication. The webserver may provide the certificate to the authentication server in order to validate the code. The authentication server may use the provided SSL certificate to derive a similar session identifier and along with the other inputs to the algorithm verify the code supplied. The resulting authentication may verify that the user is in possession of a known device, and is communicating to a known server which possesses the keys necessary to complete a SSL network connection. In some embodiments, the verification case may include both the device ID and session ID, or any combination thereof.</p>
<p id="p-0031" num="0030">Provisioning:</p>
<p id="p-0032" num="0031">Consider the embodiments of <figref idref="DRAWINGS">FIG. 1</figref><i>a </i>and <figref idref="DRAWINGS">FIG. 1</figref><i>b </i>which represents token based file provisioning with device binding. In this embodiment, a user <b>115</b> may obtain a device ID <b>114</b> from Device <b>112</b> (step <b>110</b>). The end user <b>115</b> may send the device ID <b>114</b> to an Administrator <b>125</b> (step <b>120</b>). The administrator <b>125</b> may receive the Device ID <b>114</b> from the end user <b>115</b> (step <b>130</b>). The administrator <b>125</b> may provision a token file (step <b>140</b>). The Validation Service <b>155</b> may issue a token file (step <b>150</b>). The Validation Service <b>155</b> may return the token to the administrator <b>125</b> (step <b>160</b>). The administrator <b>125</b> may send the token file to the user <b>115</b> (step <b>170</b>). The user <b>115</b> may obtain the file (step <b>180</b>). The user <b>115</b> may import the file (step <b>190</b>). The user may then have a provisioned token application.</p>
<p id="p-0033" num="0032">Consider the embodiment of <figref idref="DRAWINGS">FIG. 2</figref>. The embodiment of <figref idref="DRAWINGS">FIG. 2</figref> illustrates token based file provisioning without hardware binding. The administrator <b>225</b> may Provision Token File with Device ID (step <b>210</b>). The Validation Service <b>255</b> may issue Token File Bound to Device ID (step <b>220</b>). The token file may be returned to the administrator <b>225</b> (step <b>230</b>). The administrator <b>225</b> may send the token file to the user (step <b>240</b>). The user <b>215</b> may obtain the token file (step <b>250</b>) and import the token file into the application (step <b>260</b>). This embodiment has provision a token which is not bound to the particular hardware device.</p>
<p id="p-0034" num="0033">Consider now the embodiment of <figref idref="DRAWINGS">FIG. 3</figref>, which illustrates provisioning of a token via CT-KIP without hardware binding. An administrator <b>325</b> may prepare a token to be provisioned for CT-KIP. The Validation Service <b>365</b> may get a URL and identification code. The URL and identification code may be returned to the administrator <b>325</b>. The administrator <b>325</b> may send the code to the user. The user <b>315</b> may receive the URL and activation code. The user <b>315</b> may initiate CT-KIP. The user <b>315</b> may send the activation code and device ID to the Validation Service. The Validation Service <b>365</b> may generate a token and store the device ID. The Validation Service <b>365</b> may send the token back to the user. The user <b>315</b> may store the token for use with the token generator.</p>
<p id="p-0035" num="0034">The embodiment of <figref idref="DRAWINGS">FIG. 3</figref> may be modified so that there is hardware binding. In certain embodiments, the user may send the device ID to the administrator via e-mail. In other embodiments, the user may call the administrator. In further embodiments, the administrator may have recorded the device ID before it is given to the user. When provisioning the token for CT-KIP, the administrator may also pass the device ID to the Validation Service. The Validation Service may create a token bound to the device ID. In this manner, when the user communicates with the Validation Service via CT-KIP, the user may receive a token which is bound to the particular device. In an alternative embodiment, the user may supply the Validation Service with the device ID during CT-KIP, which may allow the administrator to create a token bound to the device.</p>
<p id="p-0036" num="0035">Refer now to the embodiment of <figref idref="DRAWINGS">FIG. 4</figref> illustrating provisioning of a software token via CT-KIP with binding. In this embodiment a user <b>415</b> obtains a device id from a device (step <b>402</b>). A token application <b>435</b> may facilitate obtaining the device ID. The user <b>415</b> may send the device ID to an administrator <b>435</b> (step <b>404</b>). The user may send the device ID to the administrator in a number of ways including using an e-mail server <b>445</b>. The Administrator <b>425</b> may receive the device ID. The administrator <b>425</b> may provision a token for CT-KIP with device binding by communicating with the Validation Service <b>455</b> (step <b>410</b>). The Validation Service <b>455</b> may get a URL and activation code of the CT-KIP server <b>465</b> (step <b>420</b>). The Validation Service <b>455</b> may return the URL and activation code to the administrator <b>425</b> (step <b>430</b>). The administrator <b>425</b> may send the URL and activation code to the user <b>415</b> via an e-mail server <b>445</b> (step <b>440</b>). In alternative embodiments, the administrator <b>455</b> may communicate the URL and Activation code to the user in another method i.e. phone or personal contact. The user <b>415</b> may receive the URL and activation code (step <b>450</b>). The User <b>415</b> may initiate CT-KIP using the activation code and device ID. The CT-KIP Server <b>465</b> may generate a token bound to the device ID (step <b>470</b>). The CT-KIP <b>465</b> server may store the token as bound to the device ID (step <b>480</b>). CT-KIP may finish and the token metadata may be returned to the application <b>435</b> (step <b>490</b>). The application <b>435</b> may store the token (step <b>492</b>).</p>
<p id="h-0005" num="0000">OTP Generation</p>
<p id="p-0037" num="0036">In an embodiment of the current technique, the OTP generation function may be expressed as with a set of inputs. In some embodiments the inputs may include a device ID which may be a unique hardware ID. When a device generates an OTP, it may include a monotonic value, key, key identifier, and device ID as inputs. In at least one embodiment, the use of the device ID creates a different OTP than if the device ID were not used. This adds a layer of complexity to the algorithm as an attacker with the other input values may not be able to re-create OTPs as the attacker does not have the device ID and may not know that it is to be used in the OTP generation. Or the attacker may not have source code for the algorithm implementation that would permit varying the device ID value.</p>
<p id="h-0006" num="0000">OTP Validation</p>
<p id="p-0038" num="0037">In at least some embodiments, an OTP generator may generate an OTP with the device ID as an input. The OTP generator may then send the OTP for validation to an authentication entity. The authentication entity may generate a similar OTP also using the device ID as an input. The authentication entity may decide whether or not to authenticate based on a comparison of the supplied OTP with the internally generated OTP.</p>
<p id="p-0039" num="0038">Refer now to the embodiment of <figref idref="DRAWINGS">FIG. 5</figref> which illustrates an example of authentication using a OTP generator which has been hardware bound based on a device ID. In this embodiment, a user <b>515</b> may be using a mobile device <b>525</b> to access banking information via a banking application <b>535</b>. The banking application may prompt the mobile device <b>525</b>, and hence the user <b>515</b>, for login information (step <b>502</b>). The user <b>515</b> may enter and the mobile device <b>525</b> may send the user ID and password to the banking application <b>535</b> (step <b>506</b>). The banking application <b>535</b> may get an OTP from an OTP Generator Component <b>545</b> (step <b>510</b>). The OTP Generator Component <b>545</b> may also get the Device ID (step <b>512</b>). The banking application provides the SSL certificate used in communicating with the website <b>555</b> to the OTP Generator Component <b>545</b>. The OTP Generator Component <b>545</b> may calculate a one time passcode (OTP) with device ID and the hash of the SSL certificate (step <b>516</b>). The OTP Generator Component <b>545</b> may return the OTP to the banking application <b>535</b> (step <b>518</b>). The banking application <b>535</b> may login to a website <b>555</b> with the username, password and OTP (step <b>522</b>). The website <b>555</b> may validate the user ID and password (step <b>526</b>). The website <b>555</b> may communicate with an OTP Validation Service <b>565</b> to validate the OTP (step <b>530</b>). The OTP Validation Service <b>565</b> may get the device ID from storage (step <b>536</b>). The website <b>555</b> communicates the SSL certificate in use to the Validation Service <b>565</b> during the request to validate OTP <b>530</b>. The OTP Validation Service <b>565</b> may calculate the OTP with the device ID and a hash of the SSL certificate (step <b>542</b>). The OTP Validation Service <b>565</b> may determine whether to validate the OTP (step <b>544</b>).</p>
<p id="p-0040" num="0039">In a further embodiment, consider a case where the user has lost their hardware token. In this embodiment, the user may be given software to run on the user's phone. The software may accept an OTP or a temporary password and the device ID may only be known to the OTP generator software and the validation service. In this embodiment, the person in possession the device can generate the final OTP for use to log in. The end user may enter the password or OTP provided by the admin to the OTP generator software, and the software may produce a new OTP bound to the device. This new OTP may be the one used at the validation service. This embodiment may enable emergency access. In alternative embodiments, the set of inputs may include a password.</p>
<p id="p-0041" num="0040">Consider further embodiments where a device communicates with a remote device, such as a cell tower. In one embodiment, a mobile device could use a cell tower as a source of an identifier. In this embodiment, the OTP algorithm may use the cell tower id as one of the set of inputs for the authentication. In this manner, the ability to generate valid OTPs may be limited to a geographic area. This may be because once the device communicates with a different cell tower, it may use the device ID of the second cell tower, which may be different than the device ID of the first cell tower.</p>
<p id="p-0042" num="0041">One or more tokens, OTP validators, and authenticators may be included in, or include, by way of example and without limitation, a computer, a mobile telephone, a personal digital assistant (PDA), a smart card, an authentication token, a server, and/or various portions or combinations of these and other processing devices. One or more of tokens and authenticators may thus be implemented as otherwise conventional processing devices programmed by software and/or firmware to perform portions of the technique as described herein. Conventional aspects of such equipment are well known to those skilled in the art, and are therefore not described in detail herein.</p>
<p id="p-0043" num="0042">In an example implementation, the token comprises or is otherwise associated with an authentication token, such as an RSA SecurID&#xae; authentication token. However, the technique is adaptable in a straightforward manner to a wide variety of other cryptographic processing devices.</p>
<p id="p-0044" num="0043">A token may communicate with an authenticator directly over respective links, or may communicate via one or more intermediary processing devices. For example, if the token comprises an authentication token, it may communicate with authenticator over an internet link or may using an intermediary device such a desktop or portable personal computer, mobile telephone or PDA to allow user entry of the passcode. A token may be viewed as comprising, for example, a combination of an authentication token and an associated computer or other intermediary device physical or virtual. As indicated above, the term &#x201c;processing device&#x201d; as used herein is intended to encompass such combinations of devices.</p>
<p id="p-0045" num="0044">Details regarding certain conventional cryptographic techniques suitable for use in conjunction with the present invention may be found in, e.g., A. J. Menezes et al., Handbook of Applied Cryptography, CRC Press, 1997, which is incorporated by reference herein.</p>
<p id="p-0046" num="0045">It should again be emphasized that the technique implementations described above are provided by way of illustration, and should not be construed as limiting the present invention to any specific embodiment or group of embodiments. For example, the invention can be implemented in other types of systems, using different arrangements of processing devices and processing operations. Also, message formats and communication protocols utilized may be varied in alternative embodiments. Moreover, various simplifying assumptions made above in the course of describing the illustrative embodiments should also be viewed as exemplary rather than as requirements or limitations of the invention. Numerous alternative embodiments within the scope of the appended claims will be readily apparent to those skilled in the art.</p>
<p id="p-0047" num="0046">The methods and apparatus of this invention may take the form, at least partially, of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, random access or read only-memory, or any other machine-readable storage medium. When the program code is loaded into and executed by a machine, such as the computer of <figref idref="DRAWINGS">FIG. 6</figref>, the machine becomes an apparatus for practicing the invention. When implemented on one or more general-purpose processors, the program code combines with such a processor to provide a unique apparatus that operates analogously to specific logic circuits. As such a general purpose digital machine can be transformed into a special purpose digital machine. <figref idref="DRAWINGS">FIG. 7</figref> shows Program Logic <b>710</b> embodied on a computer-readable medium <b>730</b> as shown, and wherein the Logic is encoded in computer-executable code configured for carrying out the reservation service process of this invention and thereby forming a Computer Program Product <b>700</b>.</p>
<p id="p-0048" num="0047">The logic for carrying out the method may be embodied as part of the aforementioned system, which is useful for carrying out a method described with reference to embodiments shown in, for example, <figref idref="DRAWINGS">FIG. 1</figref> and <figref idref="DRAWINGS">FIG. 2</figref>. For purposes of illustrating the present invention, the invention is described as embodied in a specific configuration and using special logical arrangements, but one skilled in the art will appreciate that the device is not limited to the specific configuration but rather only by the claims included with this specification.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for use in generating one time passcodes (OTPs) in a security environment, the security environment comprising an OTP generator and an OTP validator, the method comprising:
<claim-text>generating, at the OTP generator, an OTP according to a function, wherein the function includes as an input a device id;</claim-text>
<claim-text>validating the OTP at the OTP validator, whereby the validation comprises:</claim-text>
<claim-text>generating, at the OTP validator, a second OTP according to the function; and determining whether the OTP is valid based on a comparison of the OTP with the second OTP generated at the OTP validator; wherein the device identifier is obtained from a virtual software environment; wherein the OTP generator operates in the virtual software environment; and wherein the virtual software environment provides the device identifier, wherein the device identifier binds a token to the virtual software environment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method as in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the function includes as an input a session identifier.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A method as in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is obtained from a network component resident in the security environment of the OTP validator and the OTP generator.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method as in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is obtained from a virtual software environment, wherein the OTP generator operates in the virtual software environment, and wherein the virtual software environment interacts with a physical device on which the virtual software environment is resident to obtain a device identifier.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the function further includes as an input a password.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the device is a virtual device operating in a virtual environment for the OTP Generator.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A system for use in generating one time passcodes (OTPs) in security environment, the system comprising:
<claim-text>an OTP generator;</claim-text>
<claim-text>and an OTP validator, and
<claim-text>computer executable code, the computer executable code configured to be executed on one or more processors to enable a computer to perform:</claim-text>
</claim-text>
<claim-text>generating, at the OTP generator, an OTP according to a function, wherein the function includes as an input a device id;</claim-text>
<claim-text>validating the OTP at the OTP validator, whereby the validation comprises:</claim-text>
<claim-text>generating, at the OTP validator, a second OTP according to the function; and determining whether the OTP is valid based on a comparison of the OTP with the second OTP generated at the OTP validator; wherein the device identifier is obtained from a virtual software environment; wherein the OTP generator operates in the virtual software environment; and wherein the virtual software environment provides the device identifier, wherein the device identifier binds a token to the virtual software environment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system as in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the function includes as input a session identifier.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A system as in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the device identifier is obtained from a network component resident in the security environment of the OTP validator and the OTP generator.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system as in <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the device identifier is obtained from a virtual software environment, wherein the OTP generator operates in the virtual software environment, and wherein the virtual software environment interacts with a physical device on which the virtual software environment is resident to obtain a device identifier.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system as in <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the function further includes as an input a password.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A program product stored on a tangible non-transitory computer readable medium for use in generating one time passcodes (OTPs) in security environment, the security environment comprising an OTP generator and an OTP validator, the program product containing computer executable code configured to enable a processor to execute the steps of:
<claim-text>generating, at the OTP generator, an OTP according to a function, wherein the function includes as an input a device id;</claim-text>
<claim-text>validating the OTP at the OTP validator, whereby the validation comprises:</claim-text>
<claim-text>generating, at the OTP validator, a second OTP according to the function; and determining whether the OTP is valid based on a comparison of the OTP with the second OTP generated at the OTP validator; wherein the device identifier is obtained from a virtual software environment; wherein the OTP generator operates in the virtual software environment; and wherein the virtual software environment provides the device identifier, wherein the device identifier binds a token to the virtual software environment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A program product as in <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the function includes as an input a session identifier.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A program product as in <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein device identifier is obtained from a network component resident in the security environment of the OTP validator and the OTP generator.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A program product as in <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the device identifier is obtained from a virtual software environment, wherein the OTP generator operates in the virtual software environment, and wherein the virtual software environment interacts with a physical device on which the virtual software environment is resident to obtain a device identifier.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A program product as in <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the function further includes as an input a password. </claim-text>
</claim>
</claims>
</us-patent-grant>
